# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.cpp"
# 1 "main_test_cu.cu"
# 61 "/usr/local/cuda-5.0//include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda-5.0//include/builtin_types.h" 1 3
# 56 "/usr/local/cuda-5.0//include/builtin_types.h" 3
# 1 "/usr/local/cuda-5.0//include/device_types.h" 1 3
# 53 "/usr/local/cuda-5.0//include/device_types.h" 3
# 1 "/usr/local/cuda-5.0//include/host_defines.h" 1 3
# 54 "/usr/local/cuda-5.0//include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/driver_types.h" 1 3
# 123 "/usr/local/cuda-5.0//include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 158 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 167 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 177 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 186 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 201 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 282 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 291 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 300 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 309 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 358 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 393 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 455 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 481 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 606 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorSyncDepthExceeded = 68,
# 618 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};





struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};





struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};





struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 938 "/usr/local/cuda-5.0//include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
};
# 1265 "/usr/local/cuda-5.0//include/driver_types.h" 3
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1287 "/usr/local/cuda-5.0//include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 58 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/surface_types.h" 1 3
# 84 "/usr/local/cuda-5.0//include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 59 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/texture_types.h" 1 3
# 84 "/usr/local/cuda-5.0//include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/vector_types.h" 1 3
# 59 "/usr/local/cuda-5.0//include/vector_types.h" 3
# 1 "/usr/local/cuda-5.0//include/builtin_types.h" 1 3
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 3
# 1 "/usr/local/cuda-5.0//include/vector_types.h" 1 3
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 60 "/usr/local/cuda-5.0//include/vector_types.h" 2 3
# 94 "/usr/local/cuda-5.0//include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};

struct __attribute__((aligned(8))) float2 { float x; float y; };

struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 338 "/usr/local/cuda-5.0//include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 70 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda-5.0//include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h" 2 3
# 123 "/usr/local/cuda-5.0//include/driver_types.h"
# 648 "/usr/local/cuda-5.0//include/driver_types.h"
# 659 "/usr/local/cuda-5.0//include/driver_types.h"
# 671 "/usr/local/cuda-5.0//include/driver_types.h"
typedef struct cudaArray *cudaArray_t;
# 676 "/usr/local/cuda-5.0//include/driver_types.h"
typedef const cudaArray *cudaArray_const_t;
# 678 "/usr/local/cuda-5.0//include/driver_types.h"
struct cudaArray;
# 683 "/usr/local/cuda-5.0//include/driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 688 "/usr/local/cuda-5.0//include/driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 690 "/usr/local/cuda-5.0//include/driver_types.h"
struct cudaMipmappedArray;
# 695 "/usr/local/cuda-5.0//include/driver_types.h"
# 704 "/usr/local/cuda-5.0//include/driver_types.h"
# 717 "/usr/local/cuda-5.0//include/driver_types.h"
# 729 "/usr/local/cuda-5.0//include/driver_types.h"
# 740 "/usr/local/cuda-5.0//include/driver_types.h"
# 750 "/usr/local/cuda-5.0//include/driver_types.h"
# 767 "/usr/local/cuda-5.0//include/driver_types.h"
# 785 "/usr/local/cuda-5.0//include/driver_types.h"
struct cudaGraphicsResource;
# 790 "/usr/local/cuda-5.0//include/driver_types.h"
# 802 "/usr/local/cuda-5.0//include/driver_types.h"
# 812 "/usr/local/cuda-5.0//include/driver_types.h"
# 825 "/usr/local/cuda-5.0//include/driver_types.h"
# 836 "/usr/local/cuda-5.0//include/driver_types.h"
# 878 "/usr/local/cuda-5.0//include/driver_types.h"
# 906 "/usr/local/cuda-5.0//include/driver_types.h"
# 921 "/usr/local/cuda-5.0//include/driver_types.h"
# 956 "/usr/local/cuda-5.0//include/driver_types.h"
# 1006 "/usr/local/cuda-5.0//include/driver_types.h"
# 1018 "/usr/local/cuda-5.0//include/driver_types.h"
# 1028 "/usr/local/cuda-5.0//include/driver_types.h"
# 1039 "/usr/local/cuda-5.0//include/driver_types.h"
# 1051 "/usr/local/cuda-5.0//include/driver_types.h"
# 1060 "/usr/local/cuda-5.0//include/driver_types.h"
# 1143 "/usr/local/cuda-5.0//include/driver_types.h"
# 1268 "/usr/local/cuda-5.0//include/driver_types.h"
# 1276 "/usr/local/cuda-5.0//include/driver_types.h"
# 1287 "/usr/local/cuda-5.0//include/driver_types.h"
# 1292 "/usr/local/cuda-5.0//include/driver_types.h"
# 1297 "/usr/local/cuda-5.0//include/driver_types.h"
# 1302 "/usr/local/cuda-5.0//include/driver_types.h"
# 1307 "/usr/local/cuda-5.0//include/driver_types.h"
# 1312 "/usr/local/cuda-5.0//include/driver_types.h"
# 84 "/usr/local/cuda-5.0//include/surface_types.h"
# 94 "/usr/local/cuda-5.0//include/surface_types.h"
# 103 "/usr/local/cuda-5.0//include/surface_types.h"
# 114 "/usr/local/cuda-5.0//include/surface_types.h"
# 84 "/usr/local/cuda-5.0//include/texture_types.h"
# 95 "/usr/local/cuda-5.0//include/texture_types.h"
# 104 "/usr/local/cuda-5.0//include/texture_types.h"
# 113 "/usr/local/cuda-5.0//include/texture_types.h"
# 161 "/usr/local/cuda-5.0//include/texture_types.h"
# 208 "/usr/local/cuda-5.0//include/texture_types.h"
# 94 "/usr/local/cuda-5.0//include/vector_types.h"
# 99 "/usr/local/cuda-5.0//include/vector_types.h"
# 105 "/usr/local/cuda-5.0//include/vector_types.h"
# 110 "/usr/local/cuda-5.0//include/vector_types.h"
# 115 "/usr/local/cuda-5.0//include/vector_types.h"
# 120 "/usr/local/cuda-5.0//include/vector_types.h"
# 125 "/usr/local/cuda-5.0//include/vector_types.h"
# 130 "/usr/local/cuda-5.0//include/vector_types.h"
# 135 "/usr/local/cuda-5.0//include/vector_types.h"
# 140 "/usr/local/cuda-5.0//include/vector_types.h"
# 145 "/usr/local/cuda-5.0//include/vector_types.h"
# 150 "/usr/local/cuda-5.0//include/vector_types.h"
# 155 "/usr/local/cuda-5.0//include/vector_types.h"
# 160 "/usr/local/cuda-5.0//include/vector_types.h"
# 165 "/usr/local/cuda-5.0//include/vector_types.h"
# 166 "/usr/local/cuda-5.0//include/vector_types.h"
# 168 "/usr/local/cuda-5.0//include/vector_types.h"
# 173 "/usr/local/cuda-5.0//include/vector_types.h"
# 178 "/usr/local/cuda-5.0//include/vector_types.h"
# 179 "/usr/local/cuda-5.0//include/vector_types.h"
# 181 "/usr/local/cuda-5.0//include/vector_types.h"
# 186 "/usr/local/cuda-5.0//include/vector_types.h"
# 191 "/usr/local/cuda-5.0//include/vector_types.h"
# 196 "/usr/local/cuda-5.0//include/vector_types.h"
# 201 "/usr/local/cuda-5.0//include/vector_types.h"
# 206 "/usr/local/cuda-5.0//include/vector_types.h"
# 216 "/usr/local/cuda-5.0//include/vector_types.h"
# 221 "/usr/local/cuda-5.0//include/vector_types.h"
# 228 "/usr/local/cuda-5.0//include/vector_types.h"
# 233 "/usr/local/cuda-5.0//include/vector_types.h"
# 238 "/usr/local/cuda-5.0//include/vector_types.h"
# 243 "/usr/local/cuda-5.0//include/vector_types.h"
# 248 "/usr/local/cuda-5.0//include/vector_types.h"
# 253 "/usr/local/cuda-5.0//include/vector_types.h"
# 255 "/usr/local/cuda-5.0//include/vector_types.h"
# 260 "/usr/local/cuda-5.0//include/vector_types.h"
# 265 "/usr/local/cuda-5.0//include/vector_types.h"
# 270 "/usr/local/cuda-5.0//include/vector_types.h"
# 275 "/usr/local/cuda-5.0//include/vector_types.h"
# 280 "/usr/local/cuda-5.0//include/vector_types.h"
# 285 "/usr/local/cuda-5.0//include/vector_types.h"
# 290 "/usr/local/cuda-5.0//include/vector_types.h"
# 295 "/usr/local/cuda-5.0//include/vector_types.h"
# 300 "/usr/local/cuda-5.0//include/vector_types.h"
# 305 "/usr/local/cuda-5.0//include/vector_types.h"
# 310 "/usr/local/cuda-5.0//include/vector_types.h"
# 315 "/usr/local/cuda-5.0//include/vector_types.h"
# 320 "/usr/local/cuda-5.0//include/vector_types.h"
# 338 "/usr/local/cuda-5.0//include/vector_types.h"
# 339 "/usr/local/cuda-5.0//include/vector_types.h"
# 340 "/usr/local/cuda-5.0//include/vector_types.h"
# 341 "/usr/local/cuda-5.0//include/vector_types.h"
# 342 "/usr/local/cuda-5.0//include/vector_types.h"
# 343 "/usr/local/cuda-5.0//include/vector_types.h"
# 344 "/usr/local/cuda-5.0//include/vector_types.h"
# 345 "/usr/local/cuda-5.0//include/vector_types.h"
# 346 "/usr/local/cuda-5.0//include/vector_types.h"
# 347 "/usr/local/cuda-5.0//include/vector_types.h"
# 348 "/usr/local/cuda-5.0//include/vector_types.h"
# 349 "/usr/local/cuda-5.0//include/vector_types.h"
# 350 "/usr/local/cuda-5.0//include/vector_types.h"
# 351 "/usr/local/cuda-5.0//include/vector_types.h"
# 352 "/usr/local/cuda-5.0//include/vector_types.h"
# 353 "/usr/local/cuda-5.0//include/vector_types.h"
# 354 "/usr/local/cuda-5.0//include/vector_types.h"
# 355 "/usr/local/cuda-5.0//include/vector_types.h"
# 356 "/usr/local/cuda-5.0//include/vector_types.h"
# 357 "/usr/local/cuda-5.0//include/vector_types.h"
# 358 "/usr/local/cuda-5.0//include/vector_types.h"
# 359 "/usr/local/cuda-5.0//include/vector_types.h"
# 360 "/usr/local/cuda-5.0//include/vector_types.h"
# 361 "/usr/local/cuda-5.0//include/vector_types.h"
# 362 "/usr/local/cuda-5.0//include/vector_types.h"
# 363 "/usr/local/cuda-5.0//include/vector_types.h"
# 364 "/usr/local/cuda-5.0//include/vector_types.h"
# 365 "/usr/local/cuda-5.0//include/vector_types.h"
# 366 "/usr/local/cuda-5.0//include/vector_types.h"
# 367 "/usr/local/cuda-5.0//include/vector_types.h"
# 368 "/usr/local/cuda-5.0//include/vector_types.h"
# 369 "/usr/local/cuda-5.0//include/vector_types.h"
# 370 "/usr/local/cuda-5.0//include/vector_types.h"
# 371 "/usr/local/cuda-5.0//include/vector_types.h"
# 372 "/usr/local/cuda-5.0//include/vector_types.h"
# 373 "/usr/local/cuda-5.0//include/vector_types.h"
# 374 "/usr/local/cuda-5.0//include/vector_types.h"
# 375 "/usr/local/cuda-5.0//include/vector_types.h"
# 376 "/usr/local/cuda-5.0//include/vector_types.h"
# 377 "/usr/local/cuda-5.0//include/vector_types.h"
# 378 "/usr/local/cuda-5.0//include/vector_types.h"
# 379 "/usr/local/cuda-5.0//include/vector_types.h"
# 380 "/usr/local/cuda-5.0//include/vector_types.h"
# 381 "/usr/local/cuda-5.0//include/vector_types.h"
# 382 "/usr/local/cuda-5.0//include/vector_types.h"
# 383 "/usr/local/cuda-5.0//include/vector_types.h"
# 384 "/usr/local/cuda-5.0//include/vector_types.h"
# 385 "/usr/local/cuda-5.0//include/vector_types.h"
# 393 "/usr/local/cuda-5.0//include/vector_types.h"
# 403 "/usr/local/cuda-5.0//include/vector_types.h"
# 89 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetAttribute(int * , cudaDeviceAttr , int );
# 90 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 91 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 92 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * );
# 93 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 94 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 95 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 96 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 97 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 98 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 99 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaStreamCreateWithFlags(cudaStream_t * , unsigned );
# 100 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 101 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 102 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 103 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t );
# 104 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 105 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const void * );
# 106 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 107 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 108 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t );
# 109 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t );
# 110 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t );
# 111 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t );
# 112 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t );
# 113 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t );
# 114 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 116 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" { __attribute__((unused)) extern void *cudaGetParameterBuffer(size_t , size_t ); }
# 117 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" { __attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * , void * , dim3 , dim3 , unsigned , cudaStream_t ); }
# 119 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
template< class T> inline cudaError_t cudaMalloc(T ** , size_t );
# 120 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
template< class T> inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , T * );
# 193 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceReset();
# 210 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 295 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit , size_t );
# 324 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 354 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 395 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache );
# 424 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * );
# 466 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig );
# 489 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * , char * );
# 516 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * , int , int );
# 558 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t );
# 593 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t );
# 631 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * );
# 678 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t , unsigned );
# 708 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcCloseMemHandle(void * );
# 744 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 768 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 827 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit , size_t );
# 858 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t * , cudaLimit );
# 893 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * );
# 939 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache );
# 989 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 1030 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 1044 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 1074 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 1283 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * , int );
# 1428 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetAttribute(int * , cudaDeviceAttr , int );
# 1447 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int * , const cudaDeviceProp * );
# 1480 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int );
# 1497 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 1526 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int * , int );
# 1586 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned );
# 1612 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * );
# 1634 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreateWithFlags(cudaStream_t * , unsigned );
# 1655 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 1691 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 1705 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" { typedef void (*cudaStreamCallback_t)(cudaStream_t , cudaError_t , void * ); }
# 1743 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamAddCallback(cudaStream_t , cudaStreamCallback_t , void * , unsigned );
# 1763 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t );
# 1781 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t );
# 1813 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * );
# 1847 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 1880 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t = 0);
# 1909 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t );
# 1941 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t );
# 1966 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 2007 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t );
# 2049 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3 , dim3 , size_t = (0), cudaStream_t = 0);
# 2076 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void * , size_t , size_t );
# 2122 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const void * , cudaFuncCache );
# 2173 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetSharedMemConfig(const void * , cudaSharedMemConfig );
# 2208 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const void * );
# 2241 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const void * );
# 2263 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double * );
# 2285 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double * );
# 2320 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 2349 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void ** , size_t );
# 2388 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void ** , size_t * , size_t , size_t );
# 2430 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray_t * , const cudaChannelFormatDesc * , size_t , size_t = (0), unsigned = (0));
# 2454 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 2474 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void * );
# 2496 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray_t );
# 2518 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t );
# 2577 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void ** , size_t , unsigned );
# 2630 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostRegister(void * , size_t , unsigned );
# 2649 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostUnregister(void * );
# 2676 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void ** , void * , unsigned );
# 2695 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned * , void * );
# 2730 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * , cudaExtent );
# 2830 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray_t * , const cudaChannelFormatDesc * , cudaExtent , unsigned = (0));
# 2922 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * , const cudaChannelFormatDesc * , cudaExtent , unsigned , unsigned = (0));
# 2948 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * , cudaMipmappedArray_const_t , unsigned );
# 3045 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * );
# 3073 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * );
# 3177 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t = 0);
# 3199 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t = 0);
# 3218 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t * , size_t * );
# 3239 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * , cudaExtent * , unsigned * , cudaArray_t );
# 3274 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind );
# 3306 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeer(void * , int , const void * , int , size_t );
# 3340 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray_t , size_t , size_t , const void * , size_t , cudaMemcpyKind );
# 3374 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void * , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind );
# 3409 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray_t , size_t , size_t , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind = (cudaMemcpyDeviceToDevice));
# 3451 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3493 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray_t , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3535 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void * , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind );
# 3575 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t , size_t , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind = (cudaMemcpyDeviceToDevice));
# 3610 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const void * , const void * , size_t , size_t = (0), cudaMemcpyKind = (cudaMemcpyHostToDevice));
# 3645 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void * , const void * , size_t , size_t = (0), cudaMemcpyKind = (cudaMemcpyDeviceToHost));
# 3687 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3718 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t = 0);
# 3759 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray_t , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3800 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3851 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3901 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3950 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3992 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const void * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 4034 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 4060 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void * , int , size_t );
# 4090 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void * , size_t , int , size_t , size_t );
# 4133 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr , int , cudaExtent );
# 4161 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t = 0);
# 4194 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t = 0);
# 4240 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t = 0);
# 4263 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void ** , const void * );
# 4285 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t * , const void * );
# 4429 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * , const void * );
# 4463 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * , int , int );
# 4500 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int , unsigned );
# 4519 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int );
# 4573 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t );
# 4605 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned );
# 4640 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4671 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4700 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t );
# 4734 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * , cudaGraphicsResource_t , unsigned , unsigned );
# 4759 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * , cudaGraphicsResource_t );
# 4795 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * , cudaArray_const_t );
# 4830 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind );
# 4877 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t = (((2147483647) * 2U) + 1U));
# 4928 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t );
# 4956 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * , cudaArray_const_t , const cudaChannelFormatDesc * );
# 4984 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToMipmappedArray(const textureReference * , cudaMipmappedArray_const_t , const cudaChannelFormatDesc * );
# 5005 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference * );
# 5030 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * , const textureReference * );
# 5055 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** , const void * );
# 5091 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * , cudaArray_const_t , const cudaChannelFormatDesc * );
# 5110 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** , const void * );
# 5321 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaCreateTextureObject(cudaTextureObject_t * , const cudaResourceDesc * , const cudaTextureDesc * , const cudaResourceViewDesc * );
# 5336 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDestroyTextureObject(cudaTextureObject_t );
# 5352 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * , cudaTextureObject_t );
# 5368 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * , cudaTextureObject_t );
# 5385 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * , cudaTextureObject_t );
# 5418 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * , const cudaResourceDesc * );
# 5433 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t );
# 5448 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * , cudaSurfaceObject_t );
# 5475 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int * );
# 5492 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 5497 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void ** , const cudaUUID_t * );
# 107 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 109 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 112 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 114 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 119 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 121 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 126 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 128 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 133 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 135 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 140 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 142 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 151 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 153 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 158 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 160 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 165 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 167 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 172 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 174 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 179 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 181 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 186 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 188 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 193 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 195 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 200 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 202 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 207 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 209 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 214 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 216 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 221 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 223 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 228 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 230 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 235 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 237 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 242 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 244 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 249 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 251 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 256 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 258 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 263 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 265 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 270 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 272 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 277 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 279 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 284 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 286 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 291 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 293 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 298 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 300 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 305 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 307 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 312 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 314 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 379 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 381 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 386 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 388 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 393 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 395 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 400 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 402 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 79 "/usr/local/cuda-5.0//include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda-5.0//include/driver_functions.h"
{
# 81 "/usr/local/cuda-5.0//include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda-5.0//include/driver_functions.h"
return s;
# 89 "/usr/local/cuda-5.0//include/driver_functions.h"
}
# 106 "/usr/local/cuda-5.0//include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda-5.0//include/driver_functions.h"
{
# 108 "/usr/local/cuda-5.0//include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda-5.0//include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda-5.0//include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda-5.0//include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda-5.0//include/driver_functions.h"
return p;
# 115 "/usr/local/cuda-5.0//include/driver_functions.h"
}
# 132 "/usr/local/cuda-5.0//include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda-5.0//include/driver_functions.h"
{
# 134 "/usr/local/cuda-5.0//include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda-5.0//include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda-5.0//include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda-5.0//include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda-5.0//include/driver_functions.h"
return e;
# 141 "/usr/local/cuda-5.0//include/driver_functions.h"
}
# 69 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 70 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 71 "/usr/local/cuda-5.0//include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 72 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 74 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 75 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 76 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 77 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 79 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 80 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 81 "/usr/local/cuda-5.0//include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 82 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 84 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 85 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 86 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 87 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 89 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 90 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 91 "/usr/local/cuda-5.0//include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 92 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 94 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 95 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 96 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 97 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 99 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 100 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 101 "/usr/local/cuda-5.0//include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 102 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 104 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 105 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 106 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 107 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 109 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short1 make_short1(short x)
# 110 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 111 "/usr/local/cuda-5.0//include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 112 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 114 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 115 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 116 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 117 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 119 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 120 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 121 "/usr/local/cuda-5.0//include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 122 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 124 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 125 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 126 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 127 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 129 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 130 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 131 "/usr/local/cuda-5.0//include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 132 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 134 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 135 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 136 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 137 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 139 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 140 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 141 "/usr/local/cuda-5.0//include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 142 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 144 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 145 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 146 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 147 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 149 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int1 make_int1(int x)
# 150 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 151 "/usr/local/cuda-5.0//include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 152 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 154 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 155 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 156 "/usr/local/cuda-5.0//include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 157 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 159 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 160 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 161 "/usr/local/cuda-5.0//include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 162 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 164 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 165 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 166 "/usr/local/cuda-5.0//include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 167 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 169 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 170 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 171 "/usr/local/cuda-5.0//include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 172 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 174 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 175 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 176 "/usr/local/cuda-5.0//include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 177 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 179 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 180 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 181 "/usr/local/cuda-5.0//include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 182 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 184 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 185 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 186 "/usr/local/cuda-5.0//include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 187 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 189 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long1 make_long1(long x)
# 190 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 191 "/usr/local/cuda-5.0//include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 192 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 194 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 195 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 196 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 197 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 199 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 200 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 201 "/usr/local/cuda-5.0//include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 202 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 204 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 205 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 206 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 207 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 209 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 210 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 211 "/usr/local/cuda-5.0//include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 212 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 214 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 215 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 216 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 217 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 219 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 220 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 221 "/usr/local/cuda-5.0//include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 222 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 224 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 225 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 226 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 227 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 229 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float1 make_float1(float x)
# 230 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 231 "/usr/local/cuda-5.0//include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 232 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 234 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 235 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 236 "/usr/local/cuda-5.0//include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 237 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 239 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 240 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 241 "/usr/local/cuda-5.0//include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 242 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 244 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 245 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 246 "/usr/local/cuda-5.0//include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 247 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 249 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 250 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 251 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 252 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 254 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 255 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 256 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 257 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 259 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 260 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 261 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 262 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 264 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 265 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 266 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 267 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 269 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 270 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 271 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 272 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 274 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 275 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 276 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 277 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 279 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 280 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 281 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 282 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 284 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 285 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 286 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 287 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 289 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double1 make_double1(double x)
# 290 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 291 "/usr/local/cuda-5.0//include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 292 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 294 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 295 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 296 "/usr/local/cuda-5.0//include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 297 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 299 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 300 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 301 "/usr/local/cuda-5.0//include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 302 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 304 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 305 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 306 "/usr/local/cuda-5.0//include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 307 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 43 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *memcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 44 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 47 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *memmove(void * , const void * , size_t ) throw()
# 48 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 54 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ , const void *__restrict__ , int , size_t ) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 61 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *memset(void * , int , size_t ) throw() __attribute((__nonnull__(1))); }
# 64 "/usr/include/string.h" 3
extern "C" int memcmp(const void * , const void * , size_t ) throw()
# 65 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 71 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memchr(void * , int , size_t ) throw() __asm__("memchr")
# 72 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 73 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const void *memchr(const void * , int , size_t ) throw() __asm__("memchr")
# 74 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 77 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline void *
# 78 "/usr/include/string.h" 3
memchr(void *__s, int __c, size_t __n) throw()
# 79 "/usr/include/string.h" 3
{
# 80 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 81 "/usr/include/string.h" 3
}
# 83 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const void *
# 84 "/usr/include/string.h" 3
memchr(const void *__s, int __c, size_t __n) throw()
# 85 "/usr/include/string.h" 3
{
# 86 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 87 "/usr/include/string.h" 3
}
# 99 "/usr/include/string.h" 3
void *rawmemchr(void * , int ) throw() __asm__("rawmemchr")
# 100 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 101 "/usr/include/string.h" 3
const void *rawmemchr(const void * , int ) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 110 "/usr/include/string.h" 3
void *memrchr(void * , int , size_t ) throw() __asm__("memrchr")
# 111 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
const void *memrchr(const void * , int , size_t ) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 122 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 123 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 125 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 127 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 130 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strcat(char *__restrict__ , const char *__restrict__ ) throw()
# 131 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 133 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strncat(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 137 "/usr/include/string.h" 3
extern "C" int strcmp(const char * , const char * ) throw()
# 138 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern "C" int strncmp(const char * , const char * , size_t ) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 144 "/usr/include/string.h" 3
extern "C" int strcoll(const char * , const char * ) throw()
# 145 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 149 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
extern "C" { struct __locale_struct {
# 31 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
struct __locale_data *__locales[13];
# 34 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const char *__names[13];
# 40 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
}; }
# 42 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
extern "C" { typedef __locale_struct *__locale_t; }
# 24 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3
extern "C" { typedef __locale_t locale_t; }
# 156 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * , const char * , locale_t ) throw()
# 157 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 160 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * , const char * , size_t , locale_t ) throw()
# 161 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 167 "/usr/include/string.h" 3
extern "C" char *strdup(const char * ) throw()
# 168 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 175 "/usr/include/string.h" 3
extern "C" char *strndup(const char * , size_t ) throw()
# 176 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 206 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strchr(char * , int ) throw() __asm__("strchr")
# 207 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 208 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strchr(const char * , int ) throw() __asm__("strchr")
# 209 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 212 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 213 "/usr/include/string.h" 3
strchr(char *__s, int __c) throw()
# 214 "/usr/include/string.h" 3
{
# 215 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 216 "/usr/include/string.h" 3
}
# 218 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 219 "/usr/include/string.h" 3
strchr(const char *__s, int __c) throw()
# 220 "/usr/include/string.h" 3
{
# 221 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 222 "/usr/include/string.h" 3
}
# 233 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strrchr(char * , int ) throw() __asm__("strrchr")
# 234 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 235 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strrchr(const char * , int ) throw() __asm__("strrchr")
# 236 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 239 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 240 "/usr/include/string.h" 3
strrchr(char *__s, int __c) throw()
# 241 "/usr/include/string.h" 3
{
# 242 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 243 "/usr/include/string.h" 3
}
# 245 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 246 "/usr/include/string.h" 3
strrchr(const char *__s, int __c) throw()
# 247 "/usr/include/string.h" 3
{
# 248 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 249 "/usr/include/string.h" 3
}
# 261 "/usr/include/string.h" 3
char *strchrnul(char * , int ) throw() __asm__("strchrnul")
# 262 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 263 "/usr/include/string.h" 3
const char *strchrnul(const char * , int ) throw() __asm__("strchrnul")
# 264 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 273 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * , const char * ) throw()
# 274 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 277 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * , const char * ) throw()
# 278 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 283 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strpbrk(char * , const char * ) throw() __asm__("strpbrk")
# 284 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 285 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strpbrk(const char * , const char * ) throw() __asm__("strpbrk")
# 286 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 289 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 290 "/usr/include/string.h" 3
strpbrk(char *__s, const char *__accept) throw()
# 291 "/usr/include/string.h" 3
{
# 292 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 293 "/usr/include/string.h" 3
}
# 295 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 296 "/usr/include/string.h" 3
strpbrk(const char *__s, const char *__accept) throw()
# 297 "/usr/include/string.h" 3
{
# 298 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 299 "/usr/include/string.h" 3
}
# 310 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strstr(char * , const char * ) throw() __asm__("strstr")
# 311 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 312 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strstr(const char * , const char * ) throw() __asm__("strstr")
# 313 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 316 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 317 "/usr/include/string.h" 3
strstr(char *__haystack, const char *__needle) throw()
# 318 "/usr/include/string.h" 3
{
# 319 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 320 "/usr/include/string.h" 3
}
# 322 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 323 "/usr/include/string.h" 3
strstr(const char *__haystack, const char *__needle) throw()
# 324 "/usr/include/string.h" 3
{
# 325 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 326 "/usr/include/string.h" 3
}
# 336 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ , const char *__restrict__ ) throw()
# 337 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 341 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 344 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 346 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 348 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 354 "/usr/include/string.h" 3
char *strcasestr(char * , const char * ) throw() __asm__("strcasestr")
# 355 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 356 "/usr/include/string.h" 3
const char *strcasestr(const char * , const char * ) throw() __asm__("strcasestr")
# 358 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 369 "/usr/include/string.h" 3
extern "C" void *memmem(const void * , size_t , const void * , size_t ) throw()
# 371 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 375 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 377 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 378 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 380 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 385 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * ) throw()
# 386 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 391 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * , size_t ) throw()
# 392 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 397 "/usr/include/string.h" 3
extern "C" char *strerror(int ) throw();
# 421 "/usr/include/string.h" 3
extern "C" char *strerror_r(int , char * , size_t ) throw()
# 422 "/usr/include/string.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 428 "/usr/include/string.h" 3
extern "C" char *strerror_l(int , locale_t ) throw();
# 34 "/usr/include/strings.h" 3
extern "C" int bcmp(const void * , const void * , size_t ) throw()
# 35 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 38 "/usr/include/strings.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void bcopy(const void * , void * , size_t ) throw()
# 39 "/usr/include/strings.h" 3
 __attribute((__nonnull__(1, 2))); }
# 42 "/usr/include/strings.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void bzero(void * , size_t ) throw() __attribute((__nonnull__(1))); }
# 48 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline char *index(char * , int ) throw() __asm__("index")
# 49 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 50 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline const char *index(const char * , int ) throw() __asm__("index")
# 51 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 54 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 55 "/usr/include/strings.h" 3
index(char *__s, int __c) throw()
# 56 "/usr/include/strings.h" 3
{
# 57 "/usr/include/strings.h" 3
return __builtin_index(__s, __c);
# 58 "/usr/include/strings.h" 3
}
# 60 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 61 "/usr/include/strings.h" 3
index(const char *__s, int __c) throw()
# 62 "/usr/include/strings.h" 3
{
# 63 "/usr/include/strings.h" 3
return __builtin_index(__s, __c);
# 64 "/usr/include/strings.h" 3
}
# 76 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline char *rindex(char * , int ) throw() __asm__("rindex")
# 77 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 78 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline const char *rindex(const char * , int ) throw() __asm__("rindex")
# 79 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 82 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 83 "/usr/include/strings.h" 3
rindex(char *__s, int __c) throw()
# 84 "/usr/include/strings.h" 3
{
# 85 "/usr/include/strings.h" 3
return __builtin_rindex(__s, __c);
# 86 "/usr/include/strings.h" 3
}
# 88 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 89 "/usr/include/strings.h" 3
rindex(const char *__s, int __c) throw()
# 90 "/usr/include/strings.h" 3
{
# 91 "/usr/include/strings.h" 3
return __builtin_rindex(__s, __c);
# 92 "/usr/include/strings.h" 3
}
# 104 "/usr/include/strings.h" 3
extern "C" int ffs(int ) throw() __attribute((const));
# 110 "/usr/include/strings.h" 3
extern "C" int ffsl(long ) throw() __attribute((const));
# 111 "/usr/include/strings.h" 3
__extension__ extern "C" int ffsll(long long ) throw()
# 112 "/usr/include/strings.h" 3
 __attribute((const));
# 116 "/usr/include/strings.h" 3
extern "C" int strcasecmp(const char * , const char * ) throw()
# 117 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 120 "/usr/include/strings.h" 3
extern "C" int strncasecmp(const char * , const char * , size_t ) throw()
# 121 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/strings.h" 3
extern "C" int strcasecmp_l(const char * , const char * , locale_t ) throw()
# 129 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 133 "/usr/include/strings.h" 3
extern "C" int strncasecmp_l(const char * , const char * , size_t , locale_t ) throw()
# 135 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 23 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
extern "C" {
# 22 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 23 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
bcopy(const void *__src, void *__dest, size_t __len) throw()
# 24 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
{
# 25 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
(void)__builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 26 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
} }
# 29 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
extern "C" {
# 28 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 29 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
bzero(void *__dest, size_t __len) throw()
# 30 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
{
# 31 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
(void)__builtin___memset_chk(__dest, '\000', __len, __builtin_object_size(__dest, 0));
# 32 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
} }
# 436 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void explicit_bzero(void * , size_t ) throw() __attribute((__nonnull__(1))); }
# 440 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ , const char *__restrict__ ) throw()
# 442 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/string.h" 3
extern "C" char *strsignal(int ) throw();
# 450 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 451 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 452 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 453 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 457 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 459 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 460 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 462 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 467 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * , const char * ) throw()
# 468 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 471 "/usr/include/string.h" 3
extern "C" char *strfry(char * ) throw() __attribute((__nonnull__(1)));
# 474 "/usr/include/string.h" 3
extern "C" void *memfrob(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 482 "/usr/include/string.h" 3
char *basename(char * ) throw() __asm__("basename")
# 483 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 484 "/usr/include/string.h" 3
const char *basename(const char * ) throw() __asm__("basename")
# 485 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 26 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" void __warn_memset_zero_len() __attribute((__warning__("memset used with constant zero length parameter; this could be due to transposed parameters")));
# 31 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 30 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 31 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __len) throw()
# 33 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 34 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___memcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 35 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 38 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 37 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 38 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
memmove(void *__dest, const void *__src, size_t __len) throw()
# 39 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 40 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 41 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 45 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 44 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 45 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __len) throw()
# 47 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 48 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___mempcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 49 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 59 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 58 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 59 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
memset(void *__dest, int __ch, size_t __len) throw()
# 60 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 64 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
if (((0) && (__len == (0))) && ((!(0)) || (__ch != 0)))
# 66 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 67 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__warn_memset_zero_len();
# 68 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __dest;
# 69 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
}
# 71 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___memset_chk(__dest, __ch, __len, __builtin_object_size(__dest, 0));
# 72 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 77 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" void __explicit_bzero_chk(void * , size_t , size_t ) throw()
# 78 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
 __attribute((__nonnull__(1)));
# 81 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 80 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 81 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
explicit_bzero(void *__dest, size_t __len) throw()
# 82 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 83 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__explicit_bzero_chk(__dest, __len, __builtin_object_size(__dest, 0));
# 84 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 88 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 87 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 88 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 89 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 90 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 91 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 95 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 94 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 95 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 96 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 97 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___stpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 98 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 103 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 102 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 103 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __len) throw()
# 105 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 106 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strncpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 107 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 110 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" char *__stpncpy_chk(char * , const char * , size_t , size_t ) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" char *__stpncpy_alias(char * , const char * , size_t ) throw() __asm__("stpncpy");
# 116 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 115 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 116 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
stpncpy(char *__dest, const char *__src, size_t __n) throw()
# 117 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 118 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
if ((__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) && ((!(0)) || (__n > __builtin_object_size(__dest, 2 > 1)))) {
# 120 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __stpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1)); }
# 121 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __stpncpy_alias(__dest, __src, __n);
# 122 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 126 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 125 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 126 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 127 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 128 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strcat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 129 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 133 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 132 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 133 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __len) throw()
# 135 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 136 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strncat_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 137 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 34 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 42 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int8_t __int_least8_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint8_t __uint_least8_t;
# 54 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int16_t __int_least16_t;
# 55 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint16_t __uint_least16_t;
# 56 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int32_t __int_least32_t;
# 57 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint32_t __uint_least32_t;
# 58 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int64_t __int_least64_t;
# 59 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint64_t __uint_least64_t;
# 63 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 64 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 72 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intmax_t;
# 73 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uintmax_t;
# 145 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 146 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 148 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 149 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 151 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 152 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 154 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 155 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 156 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 157 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 160 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 161 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 164 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 165 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 168 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 171 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 174 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 179 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 180 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 183 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 184 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 187 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 188 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 191 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 193 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 196 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 198 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 202 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 203 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 206 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 209 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 214 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __sig_atomic_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
struct timeval {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__time_t tv_sec;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__suseconds_t tv_usec;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
};
# 26 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 46 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 48 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 54 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 78 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" int clock_adjtime(__clockid_t , timex * ) throw();
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 3
typedef __clock_t clock_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3
typedef __time_t time_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
struct tm {
# 9 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_sec;
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_min;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_hour;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mday;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mon;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_year;
# 15 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_wday;
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_yday;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_isdst;
# 20 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
long tm_gmtoff;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
const char *tm_zone;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
};
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
struct timespec {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__time_t tv_sec;
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__syscall_slong_t tv_nsec;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
};
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 3
typedef __clockid_t clockid_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 3
typedef __timer_t timer_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
struct itimerspec {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_interval;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_value;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
};
# 49 "/usr/include/time.h" 3
struct sigevent;
# 54 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 72 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 75 "/usr/include/time.h" 3
extern "C" time_t time(time_t * ) throw();
# 78 "/usr/include/time.h" 3
extern "C" double difftime(time_t , time_t ) throw()
# 79 "/usr/include/time.h" 3
 __attribute((const));
# 82 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * ) throw();
# 88 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ ) throw();
# 95 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ , const char *__restrict__ , tm * ) throw();
# 104 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ , locale_t ) throw();
# 111 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ , const char *__restrict__ , tm * , locale_t ) throw();
# 119 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * ) throw();
# 123 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * ) throw();
# 128 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 133 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 139 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * ) throw();
# 142 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * ) throw();
# 149 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ , char *__restrict__ ) throw();
# 153 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ , char *__restrict__ ) throw();
# 159 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 160 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 161 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 166 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 170 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 174 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 175 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 190 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * ) throw();
# 193 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * ) throw();
# 196 "/usr/include/time.h" 3
extern "C" int dysize(int ) throw() __attribute((const));
# 205 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * , timespec * );
# 210 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t , timespec * ) throw();
# 213 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t , timespec * ) throw();
# 216 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t , const timespec * ) throw();
# 224 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t , int , const timespec * , timespec * );
# 229 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t , clockid_t * ) throw();
# 234 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t , sigevent *__restrict__ , timer_t *__restrict__ ) throw();
# 239 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t ) throw();
# 242 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t , int , const itimerspec *__restrict__ , itimerspec *__restrict__ ) throw();
# 247 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t , itimerspec * ) throw();
# 251 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t ) throw();
# 257 "/usr/include/time.h" 3
extern "C" int timespec_get(timespec * , int ) throw()
# 258 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 274 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 283 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * );
# 297 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ , tm *__restrict__ );
# 69 "/usr/local/cuda-5.0//include/common_functions.h"
extern "C" clock_t clock() throw();
# 70 "/usr/local/cuda-5.0//include/common_functions.h"
extern "C" { extern __attribute((gnu_inline)) inline void *memset(void *, int, size_t) throw(); }
# 71 "/usr/local/cuda-5.0//include/common_functions.h"
extern "C" { extern __attribute((gnu_inline)) inline void *memcpy(void *, const void *, size_t) throw(); }
# 136 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int abs(int) throw();
# 137 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long labs(long) throw();
# 138 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llabs(long long) throw();
# 180 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fabs(double ) throw();
# 221 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fabsf(float ) throw();
# 222 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int min(int, int);
# 223 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned umin(unsigned, unsigned);
# 224 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llmin(long long, long long);
# 225 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned long long ullmin(unsigned long long, unsigned long long);
# 241 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fminf(float , float ) throw();
# 257 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fmin(double , double ) throw();
# 258 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int max(int, int);
# 259 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned umax(unsigned, unsigned);
# 260 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llmax(long long, long long);
# 261 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned long long ullmax(unsigned long long, unsigned long long);
# 277 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fmaxf(float , float ) throw();
# 293 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fmax(double, double) throw();
# 334 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sin(double ) throw();
# 367 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cos(double ) throw();
# 382 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincos(double , double * , double * ) throw();
# 398 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincosf(float , float * , float * ) throw();
# 439 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double tan(double ) throw();
# 508 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sqrt(double ) throw();
# 577 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double rsqrt(double );
# 646 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float rsqrtf(float );
# 697 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log2(double ) throw();
# 718 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double exp2(double ) throw();
# 739 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float exp2f(float ) throw();
# 760 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double exp10(double ) throw();
# 782 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float exp10f(float ) throw();
# 823 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double expm1(double ) throw();
# 864 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float expm1f(float ) throw();
# 915 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float log2f(float ) throw();
# 966 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log10(double ) throw();
# 1037 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log(double ) throw();
# 1130 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log1p(double ) throw();
# 1223 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float log1pf(float ) throw();
# 1295 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double floor(double ) throw();
# 1334 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double exp(double ) throw();
# 1365 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cosh(double ) throw();
# 1395 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sinh(double ) throw();
# 1425 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double tanh(double ) throw();
# 1459 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double acosh(double ) throw();
# 1493 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float acoshf(float ) throw();
# 1505 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double asinh(double ) throw();
# 1517 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float asinhf(float ) throw();
# 1567 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double atanh(double ) throw();
# 1617 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float atanhf(float ) throw();
# 1673 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double ldexp(double , int ) throw();
# 1729 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float ldexpf(float , int ) throw();
# 1780 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double logb(double ) throw();
# 1831 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float logbf(float ) throw();
# 1857 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int ilogb(double ) throw();
# 1883 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int ilogbf(float ) throw();
# 1955 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double scalbn(double , int ) throw();
# 2027 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float scalbnf(float , int ) throw();
# 2099 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double scalbln(double , long ) throw();
# 2171 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float scalblnf(float , long ) throw();
# 2246 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double frexp(double , int * ) throw();
# 2321 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float frexpf(float , int * ) throw();
# 2334 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double round(double ) throw();
# 2347 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float roundf(float ) throw();
# 2361 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lround(double ) throw();
# 2375 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lroundf(float ) throw();
# 2389 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llround(double ) throw();
# 2403 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llroundf(float ) throw();
# 2414 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double rint(double ) throw();
# 2425 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float rintf(float ) throw();
# 2437 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lrint(double ) throw();
# 2449 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lrintf(float ) throw();
# 2461 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llrint(double ) throw();
# 2473 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llrintf(float ) throw();
# 2522 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double nearbyint(double ) throw();
# 2571 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float nearbyintf(float ) throw();
# 2630 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double ceil(double ) throw();
# 2641 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double trunc(double ) throw();
# 2652 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float truncf(float ) throw();
# 2674 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fdim(double , double ) throw();
# 2696 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fdimf(float , float ) throw();
# 2729 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double atan2(double , double ) throw();
# 2760 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double atan(double ) throw();
# 2783 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double acos(double ) throw();
# 2815 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double asin(double ) throw();
# 2855 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double hypot(double , double ) throw();
# 2898 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float hypotf(float , float ) throw();
# 2983 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cbrt(double ) throw();
# 3065 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float cbrtf(float ) throw();
# 3114 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double rcbrt(double );
# 3163 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float rcbrtf(float );
# 3223 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sinpi(double );
# 3283 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sinpif(float );
# 3335 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cospi(double );
# 3387 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float cospif(float );
# 3417 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincospi(double , double * , double * );
# 3447 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincospif(float , float * , float * );
# 3755 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double pow(double , double ) throw();
# 3811 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double modf(double , double * ) throw();
# 3870 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fmod(double , double ) throw();
# 3955 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double remainder(double , double ) throw();
# 4041 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float remainderf(float , float ) throw();
# 4091 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double remquo(double , double , int * ) throw();
# 4141 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float remquof(float , float , int * ) throw();
# 4179 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double j0(double ) throw();
# 4217 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float j0f(float ) throw();
# 4274 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double j1(double ) throw();
# 4331 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float j1f(float ) throw();
# 4370 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double jn(int , double ) throw();
# 4409 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float jnf(int , float ) throw();
# 4457 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double y0(double ) throw();
# 4505 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float y0f(float ) throw();
# 4553 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double y1(double ) throw();
# 4601 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float y1f(float ) throw();
# 4650 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double yn(int , double ) throw();
# 4699 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float ynf(int , float ) throw();
# 4777 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erf(double ) throw();
# 4855 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erff(float ) throw();
# 4912 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfinv(double );
# 4969 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfinvf(float );
# 5003 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfc(double ) throw();
# 5037 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfcf(float ) throw();
# 5161 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double lgamma(double ) throw();
# 5217 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfcinv(double );
# 5273 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfcinvf(float );
# 5331 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double normcdfinv(double );
# 5389 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float normcdfinvf(float );
# 5432 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double normcdf(double );
# 5475 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float normcdff(float );
# 5550 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfcx(double );
# 5625 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfcxf(float );
# 5754 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float lgammaf(float ) throw();
# 5859 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double tgamma(double ) throw();
# 5964 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float tgammaf(float ) throw();
# 5973 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double copysign(double , double ) throw();
# 5982 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float copysignf(float , float ) throw();
# 6015 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double nextafter(double , double ) throw();
# 6048 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float nextafterf(float , float ) throw();
# 6060 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double nan(const char * ) throw();
# 6072 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float nanf(const char * ) throw();
# 6073 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isinff(float) throw();
# 6074 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isnanf(float) throw();
# 6083 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __finite(double) throw();
# 6084 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __finitef(float) throw();
# 6085 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __signbit(double) throw();
# 6086 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isnan(double) throw();
# 6087 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isinf(double) throw();
# 6090 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __signbitf(float) throw();
# 6244 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fma(double , double , double ) throw();
# 6398 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fmaf(float , float , float ) throw();
# 6403 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __signbitl(long double) throw();
# 6409 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __finitel(long double) throw();
# 6410 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isinfl(long double) throw();
# 6411 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isnanl(long double) throw();
# 6458 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float acosf(float ) throw();
# 6498 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float asinf(float ) throw();
# 6538 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float atanf(float ) throw();
# 6571 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float atan2f(float , float ) throw();
# 6595 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float cosf(float ) throw();
# 6637 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sinf(float ) throw();
# 6679 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float tanf(float ) throw();
# 6703 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float coshf(float ) throw();
# 6744 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sinhf(float ) throw();
# 6774 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float tanhf(float ) throw();
# 6825 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float logf(float ) throw();
# 6875 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float expf(float ) throw();
# 6926 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float log10f(float ) throw();
# 6981 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float modff(float , float * ) throw();
# 7289 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float powf(float , float ) throw();
# 7358 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sqrtf(float ) throw();
# 7417 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float ceilf(float ) throw();
# 7489 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float floorf(float ) throw();
# 7548 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fmodf(float , float ) throw();
# 214 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef float _Float32; }
# 251 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef double _Float64; }
# 268 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef double _Float32x; }
# 285 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef long double _Float64x; }
# 149 "/usr/include/math.h" 3
extern "C" { typedef float float_t; }
# 150 "/usr/include/math.h" 3
extern "C" { typedef double double_t; }
# 238 "/usr/include/math.h" 3
enum {
# 239 "/usr/include/math.h" 3
FP_INT_UPWARD,
# 242 "/usr/include/math.h" 3
FP_INT_DOWNWARD,
# 245 "/usr/include/math.h" 3
FP_INT_TOWARDZERO,
# 248 "/usr/include/math.h" 3
FP_INT_TONEARESTFROMZERO,
# 251 "/usr/include/math.h" 3
FP_INT_TONEAREST
# 254 "/usr/include/math.h" 3
};
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __fpclassify(double ) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __signbit(double ) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isinf(double ) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __finite(double ) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isnan(double ) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __iseqsig(double , double ) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __issignaling(double ) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double acos(double ) throw(); extern "C" double __acos(double ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double asin(double ) throw(); extern "C" double __asin(double ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atan(double ) throw(); extern "C" double __atan(double ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atan2(double , double ) throw(); extern "C" double __atan2(double , double ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cos(double ) throw(); extern "C" double __cos(double ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sin(double ) throw(); extern "C" double __sin(double ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tan(double ) throw(); extern "C" double __tan(double ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cosh(double ) throw(); extern "C" double __cosh(double ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sinh(double ) throw(); extern "C" double __sinh(double ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tanh(double ) throw(); extern "C" double __tanh(double ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincos(double , double * , double * ) throw(); extern "C" void __sincos(double , double * , double * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double acosh(double ) throw(); extern "C" double __acosh(double ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double asinh(double ) throw(); extern "C" double __asinh(double ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atanh(double ) throw(); extern "C" double __atanh(double ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp(double ) throw(); extern "C" double __exp(double ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double frexp(double , int * ) throw(); extern "C" double __frexp(double , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double ldexp(double , int ) throw(); extern "C" double __ldexp(double , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log(double ) throw(); extern "C" double __log(double ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log10(double ) throw(); extern "C" double __log10(double ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double modf(double , double * ) throw(); extern "C" double __modf(double , double * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp10(double ) throw(); extern "C" double __exp10(double ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double expm1(double ) throw(); extern "C" double __expm1(double ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log1p(double ) throw(); extern "C" double __log1p(double ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double logb(double ) throw(); extern "C" double __logb(double ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp2(double ) throw(); extern "C" double __exp2(double ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log2(double ) throw(); extern "C" double __log2(double ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double pow(double , double ) throw(); extern "C" double __pow(double , double ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sqrt(double ) throw(); extern "C" double __sqrt(double ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double hypot(double , double ) throw(); extern "C" double __hypot(double , double ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cbrt(double ) throw(); extern "C" double __cbrt(double ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double ceil(double ) throw() __attribute((const)); extern "C" double __ceil(double ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fabs(double ) throw() __attribute((const)); extern "C" double __fabs(double ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double floor(double ) throw() __attribute((const)); extern "C" double __floor(double ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmod(double , double ) throw(); extern "C" double __fmod(double , double ) throw();
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinf(double ) throw() __attribute((const));
# 182 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finite(double ) throw() __attribute((const));
# 185 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double drem(double , double ) throw(); extern "C" double __drem(double , double ) throw();
# 189 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double significand(double ) throw(); extern "C" double __significand(double ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double copysign(double , double ) throw() __attribute((const)); extern "C" double __copysign(double , double ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nan(const char * ) throw(); extern "C" double __nan(const char * ) throw();
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnan(double ) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * ) throw(); extern "C" double __lgamma_r(double, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double rint(double ) throw(); extern "C" double __rint(double ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextafter(double , double ) throw(); extern "C" double __nextafter(double , double ) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nexttoward(double , long double ) throw(); extern "C" double __nexttoward(double , long double ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextdown(double ) throw(); extern "C" double __nextdown(double ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextup(double ) throw(); extern "C" double __nextup(double ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double remainder(double , double ) throw(); extern "C" double __remainder(double , double ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalbn(double , int ) throw(); extern "C" double __scalbn(double , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogb(double ) throw(); extern "C" int __ilogb(double ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogb(double ) throw(); extern "C" long __llogb(double ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalbln(double , long ) throw(); extern "C" double __scalbln(double , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nearbyint(double ) throw(); extern "C" double __nearbyint(double ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double round(double ) throw() __attribute((const)); extern "C" double __round(double ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double trunc(double ) throw() __attribute((const)); extern "C" double __trunc(double ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double remquo(double , double , int * ) throw(); extern "C" double __remquo(double , double , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrint(double ) throw(); extern "C" long __lrint(double ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrint(double ) throw(); extern "C" long long __llrint(double ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lround(double ) throw(); extern "C" long __lround(double ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llround(double ) throw(); extern "C" long long __llround(double ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fdim(double , double ) throw(); extern "C" double __fdim(double , double ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmax(double , double ) throw() __attribute((const)); extern "C" double __fmax(double , double ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmin(double , double ) throw() __attribute((const)); extern "C" double __fmin(double , double ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fma(double , double , double ) throw(); extern "C" double __fma(double , double , double ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double roundeven(double ) throw() __attribute((const)); extern "C" double __roundeven(double ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfp(double , int , unsigned ) throw(); extern "C" __intmax_t __fromfp(double , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfp(double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfp(double , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpx(double , int , unsigned ) throw(); extern "C" __intmax_t __fromfpx(double , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpx(double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpx(double , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmaxmag(double , double ) throw() __attribute((const)); extern "C" double __fmaxmag(double , double ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fminmag(double , double ) throw() __attribute((const)); extern "C" double __fminmag(double , double ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalize(double * , const double * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorder(const double * , const double * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermag(const double * , const double * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double getpayload(const double * ) throw(); extern "C" double __getpayload(const double * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayload(double * , double ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsig(double * , double ) throw();
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalb(double , double ) throw(); extern "C" double __scalb(double , double ) throw();
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __fpclassifyf(float ) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __signbitf(float ) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isinff(float ) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __finitef(float ) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isnanf(float ) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __iseqsigf(float , float ) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __issignalingf(float ) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float acosf(float ) throw(); extern "C" float __acosf(float ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float asinf(float ) throw(); extern "C" float __asinf(float ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atanf(float ) throw(); extern "C" float __atanf(float ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atan2f(float , float ) throw(); extern "C" float __atan2f(float , float ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float cosf(float ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sinf(float ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tanf(float ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float coshf(float ) throw(); extern "C" float __coshf(float ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sinhf(float ) throw(); extern "C" float __sinhf(float ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tanhf(float ) throw(); extern "C" float __tanhf(float ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf(float , float * , float * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float acoshf(float ) throw(); extern "C" float __acoshf(float ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float asinhf(float ) throw(); extern "C" float __asinhf(float ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atanhf(float ) throw(); extern "C" float __atanhf(float ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float expf(float ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float frexpf(float , int * ) throw(); extern "C" float __frexpf(float , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ldexpf(float , int ) throw(); extern "C" float __ldexpf(float , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float logf(float ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log10f(float ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float modff(float , float * ) throw(); extern "C" float __modff(float , float * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float exp10f(float ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float expm1f(float ) throw(); extern "C" float __expm1f(float ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log1pf(float ) throw(); extern "C" float __log1pf(float ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float logbf(float ) throw(); extern "C" float __logbf(float ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float exp2f(float ) throw(); extern "C" float __exp2f(float ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log2f(float ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float powf(float , float ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sqrtf(float ) throw(); extern "C" float __sqrtf(float ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float hypotf(float , float ) throw(); extern "C" float __hypotf(float , float ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float cbrtf(float ) throw(); extern "C" float __cbrtf(float ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ceilf(float ) throw() __attribute((const)); extern "C" float __ceilf(float ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fabsf(float ) throw() __attribute((const)); extern "C" float __fabsf(float ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float floorf(float ) throw() __attribute((const)); extern "C" float __floorf(float ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmodf(float , float ) throw(); extern "C" float __fmodf(float , float ) throw();
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinff(float ) throw() __attribute((const));
# 182 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finitef(float ) throw() __attribute((const));
# 185 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float dremf(float , float ) throw(); extern "C" float __dremf(float , float ) throw();
# 189 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float significandf(float ) throw(); extern "C" float __significandf(float ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float copysignf(float , float ) throw() __attribute((const)); extern "C" float __copysignf(float , float ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nanf(const char * ) throw(); extern "C" float __nanf(const char * ) throw();
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnanf(float ) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * ) throw(); extern "C" float __lgammaf_r(float, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float rintf(float ) throw(); extern "C" float __rintf(float ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextafterf(float , float ) throw(); extern "C" float __nextafterf(float , float ) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nexttowardf(float , long double ) throw(); extern "C" float __nexttowardf(float , long double ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextdownf(float ) throw(); extern "C" float __nextdownf(float ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextupf(float ) throw(); extern "C" float __nextupf(float ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float remainderf(float , float ) throw(); extern "C" float __remainderf(float , float ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalbnf(float , int ) throw(); extern "C" float __scalbnf(float , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf(float ) throw(); extern "C" int __ilogbf(float ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf(float ) throw(); extern "C" long __llogbf(float ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalblnf(float , long ) throw(); extern "C" float __scalblnf(float , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nearbyintf(float ) throw(); extern "C" float __nearbyintf(float ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float roundf(float ) throw() __attribute((const)); extern "C" float __roundf(float ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float truncf(float ) throw() __attribute((const)); extern "C" float __truncf(float ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float remquof(float , float , int * ) throw(); extern "C" float __remquof(float , float , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf(float ) throw(); extern "C" long __lrintf(float ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf(float ) throw(); extern "C" long long __llrintf(float ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf(float ) throw(); extern "C" long __lroundf(float ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf(float ) throw(); extern "C" long long __llroundf(float ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fdimf(float , float ) throw(); extern "C" float __fdimf(float , float ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaxf(float , float ) throw() __attribute((const)); extern "C" float __fmaxf(float , float ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fminf(float , float ) throw() __attribute((const)); extern "C" float __fminf(float , float ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaf(float , float , float ) throw(); extern "C" float __fmaf(float , float , float ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float roundevenf(float ) throw() __attribute((const)); extern "C" float __roundevenf(float ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf(float , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf(float , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf(float , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf(float , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf(float , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf(float , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf(float , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf(float , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaxmagf(float , float ) throw() __attribute((const)); extern "C" float __fmaxmagf(float , float ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fminmagf(float , float ) throw() __attribute((const)); extern "C" float __fminmagf(float , float ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef(float * , const float * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf(const float * , const float * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf(const float * , const float * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float getpayloadf(const float * ) throw(); extern "C" float __getpayloadf(const float * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf(float * , float ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf(float * , float ) throw();
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalbf(float , float ) throw(); extern "C" float __scalbf(float , float ) throw();
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __fpclassifyl(long double ) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __signbitl(long double ) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isinfl(long double ) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __finitel(long double ) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isnanl(long double ) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __iseqsigl(long double , long double ) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __issignalingl(long double ) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double acosl(long double ) throw(); extern "C" long double __acosl(long double ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double asinl(long double ) throw(); extern "C" long double __asinl(long double ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atanl(long double ) throw(); extern "C" long double __atanl(long double ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atan2l(long double , long double ) throw(); extern "C" long double __atan2l(long double , long double ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double cosl(long double ) throw(); extern "C" long double __cosl(long double ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sinl(long double ) throw(); extern "C" long double __sinl(long double ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tanl(long double ) throw(); extern "C" long double __tanl(long double ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double coshl(long double ) throw(); extern "C" long double __coshl(long double ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sinhl(long double ) throw(); extern "C" long double __sinhl(long double ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tanhl(long double ) throw(); extern "C" long double __tanhl(long double ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosl(long double , long double * , long double * ) throw(); extern "C" void __sincosl(long double , long double * , long double * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double acoshl(long double ) throw(); extern "C" long double __acoshl(long double ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double asinhl(long double ) throw(); extern "C" long double __asinhl(long double ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atanhl(long double ) throw(); extern "C" long double __atanhl(long double ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double expl(long double ) throw(); extern "C" long double __expl(long double ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double frexpl(long double , int * ) throw(); extern "C" long double __frexpl(long double , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double , int ) throw(); extern "C" long double __ldexpl(long double , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double logl(long double ) throw(); extern "C" long double __logl(long double ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log10l(long double ) throw(); extern "C" long double __log10l(long double ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double modfl(long double , long double * ) throw(); extern "C" long double __modfl(long double , long double * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double exp10l(long double ) throw(); extern "C" long double __exp10l(long double ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double expm1l(long double ) throw(); extern "C" long double __expm1l(long double ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log1pl(long double ) throw(); extern "C" long double __log1pl(long double ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double logbl(long double ) throw(); extern "C" long double __logbl(long double ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double exp2l(long double ) throw(); extern "C" long double __exp2l(long double ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log2l(long double ) throw(); extern "C" long double __log2l(long double ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double powl(long double , long double ) throw(); extern "C" long double __powl(long double , long double ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double ) throw(); extern "C" long double __sqrtl(long double ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double hypotl(long double , long double ) throw(); extern "C" long double __hypotl(long double , long double ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double ) throw(); extern "C" long double __cbrtl(long double ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ceill(long double ) throw() __attribute((const)); extern "C" long double __ceill(long double ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fabsl(long double ) throw() __attribute((const)); extern "C" long double __fabsl(long double ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double floorl(long double ) throw() __attribute((const)); extern "C" long double __floorl(long double ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmodl(long double , long double ) throw(); extern "C" long double __fmodl(long double , long double ) throw();
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinfl(long double ) throw() __attribute((const));
# 182 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finitel(long double ) throw() __attribute((const));
# 185 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double dreml(long double , long double ) throw(); extern "C" long double __dreml(long double , long double ) throw();
# 189 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double significandl(long double ) throw(); extern "C" long double __significandl(long double ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double copysignl(long double , long double ) throw() __attribute((const)); extern "C" long double __copysignl(long double , long double ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nanl(const char * ) throw(); extern "C" long double __nanl(const char * ) throw();
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnanl(long double ) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * ) throw(); extern "C" long double __lgammal_r(long double, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double rintl(long double ) throw(); extern "C" long double __rintl(long double ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double , long double ) throw(); extern "C" long double __nextafterl(long double , long double ) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double , long double ) throw(); extern "C" long double __nexttowardl(long double , long double ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextdownl(long double ) throw(); extern "C" long double __nextdownl(long double ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextupl(long double ) throw(); extern "C" long double __nextupl(long double ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double remainderl(long double , long double ) throw(); extern "C" long double __remainderl(long double , long double ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double , int ) throw(); extern "C" long double __scalbnl(long double , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbl(long double ) throw(); extern "C" int __ilogbl(long double ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbl(long double ) throw(); extern "C" long __llogbl(long double ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double , long ) throw(); extern "C" long double __scalblnl(long double , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double ) throw(); extern "C" long double __nearbyintl(long double ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double roundl(long double ) throw() __attribute((const)); extern "C" long double __roundl(long double ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double truncl(long double ) throw() __attribute((const)); extern "C" long double __truncl(long double ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double remquol(long double , long double , int * ) throw(); extern "C" long double __remquol(long double , long double , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintl(long double ) throw(); extern "C" long __lrintl(long double ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintl(long double ) throw(); extern "C" long long __llrintl(long double ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundl(long double ) throw(); extern "C" long __lroundl(long double ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundl(long double ) throw(); extern "C" long long __llroundl(long double ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fdiml(long double , long double ) throw(); extern "C" long double __fdiml(long double , long double ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double , long double ) throw() __attribute((const)); extern "C" long double __fmaxl(long double , long double ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fminl(long double , long double ) throw() __attribute((const)); extern "C" long double __fminl(long double , long double ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmal(long double , long double , long double ) throw(); extern "C" long double __fmal(long double , long double , long double ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double roundevenl(long double ) throw() __attribute((const)); extern "C" long double __roundevenl(long double ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpl(long double , int , unsigned ) throw(); extern "C" __intmax_t __fromfpl(long double , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpl(long double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpl(long double , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxl(long double , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxl(long double , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxl(long double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxl(long double , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmaxmagl(long double , long double ) throw() __attribute((const)); extern "C" long double __fmaxmagl(long double , long double ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fminmagl(long double , long double ) throw() __attribute((const)); extern "C" long double __fminmagl(long double , long double ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizel(long double * , const long double * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderl(const long double * , const long double * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagl(const long double * , const long double * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double getpayloadl(const long double * ) throw(); extern "C" long double __getpayloadl(const long double * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadl(long double * , long double ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigl(long double * , long double ) throw();
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalbl(long double , long double ) throw(); extern "C" long double __scalbl(long double , long double ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 acosf32(_Float32 ) throw(); extern "C" _Float32 __acosf32(_Float32 ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 asinf32(_Float32 ) throw(); extern "C" _Float32 __asinf32(_Float32 ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 atanf32(_Float32 ) throw(); extern "C" _Float32 __atanf32(_Float32 ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 atan2f32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __atan2f32(_Float32 , _Float32 ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 cosf32(_Float32 ) throw(); extern "C" _Float32 __cosf32(_Float32 ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 sinf32(_Float32 ) throw(); extern "C" _Float32 __sinf32(_Float32 ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 tanf32(_Float32 ) throw(); extern "C" _Float32 __tanf32(_Float32 ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 coshf32(_Float32 ) throw(); extern "C" _Float32 __coshf32(_Float32 ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 sinhf32(_Float32 ) throw(); extern "C" _Float32 __sinhf32(_Float32 ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 tanhf32(_Float32 ) throw(); extern "C" _Float32 __tanhf32(_Float32 ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf32(_Float32 , _Float32 * , _Float32 * ) throw(); extern "C" void __sincosf32(_Float32 , _Float32 * , _Float32 * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 acoshf32(_Float32 ) throw(); extern "C" _Float32 __acoshf32(_Float32 ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 asinhf32(_Float32 ) throw(); extern "C" _Float32 __asinhf32(_Float32 ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 atanhf32(_Float32 ) throw(); extern "C" _Float32 __atanhf32(_Float32 ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 expf32(_Float32 ) throw(); extern "C" _Float32 __expf32(_Float32 ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 frexpf32(_Float32 , int * ) throw(); extern "C" _Float32 __frexpf32(_Float32 , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 ldexpf32(_Float32 , int ) throw(); extern "C" _Float32 __ldexpf32(_Float32 , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 logf32(_Float32 ) throw(); extern "C" _Float32 __logf32(_Float32 ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 log10f32(_Float32 ) throw(); extern "C" _Float32 __log10f32(_Float32 ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 modff32(_Float32 , _Float32 * ) throw(); extern "C" _Float32 __modff32(_Float32 , _Float32 * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 exp10f32(_Float32 ) throw(); extern "C" _Float32 __exp10f32(_Float32 ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 expm1f32(_Float32 ) throw(); extern "C" _Float32 __expm1f32(_Float32 ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 log1pf32(_Float32 ) throw(); extern "C" _Float32 __log1pf32(_Float32 ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 logbf32(_Float32 ) throw(); extern "C" _Float32 __logbf32(_Float32 ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 exp2f32(_Float32 ) throw(); extern "C" _Float32 __exp2f32(_Float32 ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 log2f32(_Float32 ) throw(); extern "C" _Float32 __log2f32(_Float32 ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 powf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __powf32(_Float32 , _Float32 ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 sqrtf32(_Float32 ) throw(); extern "C" _Float32 __sqrtf32(_Float32 ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 hypotf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __hypotf32(_Float32 , _Float32 ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 cbrtf32(_Float32 ) throw(); extern "C" _Float32 __cbrtf32(_Float32 ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 ceilf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __ceilf32(_Float32 ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fabsf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __fabsf32(_Float32 ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 floorf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __floorf32(_Float32 ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmodf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __fmodf32(_Float32 , _Float32 ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 copysignf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __copysignf32(_Float32 , _Float32 ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nanf32(const char * ) throw(); extern "C" _Float32 __nanf32(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 j0f32(_Float32) throw(); extern "C" _Float32 __j0f32(_Float32) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 j1f32(_Float32) throw(); extern "C" _Float32 __j1f32(_Float32) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 jnf32(int, _Float32) throw(); extern "C" _Float32 __jnf32(int, _Float32) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 y0f32(_Float32) throw(); extern "C" _Float32 __y0f32(_Float32) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 y1f32(_Float32) throw(); extern "C" _Float32 __y1f32(_Float32) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 ynf32(int, _Float32) throw(); extern "C" _Float32 __ynf32(int, _Float32) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 erff32(_Float32) throw(); extern "C" _Float32 __erff32(_Float32) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 erfcf32(_Float32) throw(); extern "C" _Float32 __erfcf32(_Float32) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 lgammaf32(_Float32) throw(); extern "C" _Float32 __lgammaf32(_Float32) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 tgammaf32(_Float32) throw(); extern "C" _Float32 __tgammaf32(_Float32) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 lgammaf32_r(_Float32, int * ) throw(); extern "C" _Float32 __lgammaf32_r(_Float32, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 rintf32(_Float32 ) throw(); extern "C" _Float32 __rintf32(_Float32 ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nextafterf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __nextafterf32(_Float32 , _Float32 ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nextdownf32(_Float32 ) throw(); extern "C" _Float32 __nextdownf32(_Float32 ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nextupf32(_Float32 ) throw(); extern "C" _Float32 __nextupf32(_Float32 ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 remainderf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __remainderf32(_Float32 , _Float32 ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 scalbnf32(_Float32 , int ) throw(); extern "C" _Float32 __scalbnf32(_Float32 , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf32(_Float32 ) throw(); extern "C" int __ilogbf32(_Float32 ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf32(_Float32 ) throw(); extern "C" long __llogbf32(_Float32 ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 scalblnf32(_Float32 , long ) throw(); extern "C" _Float32 __scalblnf32(_Float32 , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nearbyintf32(_Float32 ) throw(); extern "C" _Float32 __nearbyintf32(_Float32 ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 roundf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __roundf32(_Float32 ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 truncf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __truncf32(_Float32 ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 remquof32(_Float32 , _Float32 , int * ) throw(); extern "C" _Float32 __remquof32(_Float32 , _Float32 , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf32(_Float32 ) throw(); extern "C" long __lrintf32(_Float32 ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf32(_Float32 ) throw(); extern "C" long long __llrintf32(_Float32 ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf32(_Float32 ) throw(); extern "C" long __lroundf32(_Float32 ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf32(_Float32 ) throw(); extern "C" long long __llroundf32(_Float32 ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fdimf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __fdimf32(_Float32 , _Float32 ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmaxf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fmaxf32(_Float32 , _Float32 ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fminf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fminf32(_Float32 , _Float32 ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmaf32(_Float32 , _Float32 , _Float32 ) throw(); extern "C" _Float32 __fmaf32(_Float32 , _Float32 , _Float32 ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 roundevenf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __roundevenf32(_Float32 ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf32(_Float32 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf32(_Float32 , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf32(_Float32 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf32(_Float32 , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf32(_Float32 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf32(_Float32 , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf32(_Float32 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf32(_Float32 , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmaxmagf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fmaxmagf32(_Float32 , _Float32 ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fminmagf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fminmagf32(_Float32 , _Float32 ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef32(_Float32 * , const _Float32 * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf32(const _Float32 * , const _Float32 * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf32(const _Float32 * , const _Float32 * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 getpayloadf32(const _Float32 * ) throw(); extern "C" _Float32 __getpayloadf32(const _Float32 * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf32(_Float32 * , _Float32 ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf32(_Float32 * , _Float32 ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 acosf64(_Float64 ) throw(); extern "C" _Float64 __acosf64(_Float64 ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 asinf64(_Float64 ) throw(); extern "C" _Float64 __asinf64(_Float64 ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 atanf64(_Float64 ) throw(); extern "C" _Float64 __atanf64(_Float64 ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 atan2f64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __atan2f64(_Float64 , _Float64 ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 cosf64(_Float64 ) throw(); extern "C" _Float64 __cosf64(_Float64 ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 sinf64(_Float64 ) throw(); extern "C" _Float64 __sinf64(_Float64 ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 tanf64(_Float64 ) throw(); extern "C" _Float64 __tanf64(_Float64 ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 coshf64(_Float64 ) throw(); extern "C" _Float64 __coshf64(_Float64 ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 sinhf64(_Float64 ) throw(); extern "C" _Float64 __sinhf64(_Float64 ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 tanhf64(_Float64 ) throw(); extern "C" _Float64 __tanhf64(_Float64 ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf64(_Float64 , _Float64 * , _Float64 * ) throw(); extern "C" void __sincosf64(_Float64 , _Float64 * , _Float64 * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 acoshf64(_Float64 ) throw(); extern "C" _Float64 __acoshf64(_Float64 ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 asinhf64(_Float64 ) throw(); extern "C" _Float64 __asinhf64(_Float64 ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 atanhf64(_Float64 ) throw(); extern "C" _Float64 __atanhf64(_Float64 ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 expf64(_Float64 ) throw(); extern "C" _Float64 __expf64(_Float64 ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 frexpf64(_Float64 , int * ) throw(); extern "C" _Float64 __frexpf64(_Float64 , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 ldexpf64(_Float64 , int ) throw(); extern "C" _Float64 __ldexpf64(_Float64 , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 logf64(_Float64 ) throw(); extern "C" _Float64 __logf64(_Float64 ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 log10f64(_Float64 ) throw(); extern "C" _Float64 __log10f64(_Float64 ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 modff64(_Float64 , _Float64 * ) throw(); extern "C" _Float64 __modff64(_Float64 , _Float64 * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 exp10f64(_Float64 ) throw(); extern "C" _Float64 __exp10f64(_Float64 ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 expm1f64(_Float64 ) throw(); extern "C" _Float64 __expm1f64(_Float64 ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 log1pf64(_Float64 ) throw(); extern "C" _Float64 __log1pf64(_Float64 ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 logbf64(_Float64 ) throw(); extern "C" _Float64 __logbf64(_Float64 ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 exp2f64(_Float64 ) throw(); extern "C" _Float64 __exp2f64(_Float64 ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 log2f64(_Float64 ) throw(); extern "C" _Float64 __log2f64(_Float64 ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 powf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __powf64(_Float64 , _Float64 ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 sqrtf64(_Float64 ) throw(); extern "C" _Float64 __sqrtf64(_Float64 ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 hypotf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __hypotf64(_Float64 , _Float64 ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 cbrtf64(_Float64 ) throw(); extern "C" _Float64 __cbrtf64(_Float64 ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 ceilf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __ceilf64(_Float64 ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fabsf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __fabsf64(_Float64 ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 floorf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __floorf64(_Float64 ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmodf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __fmodf64(_Float64 , _Float64 ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 copysignf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __copysignf64(_Float64 , _Float64 ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nanf64(const char * ) throw(); extern "C" _Float64 __nanf64(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 j0f64(_Float64) throw(); extern "C" _Float64 __j0f64(_Float64) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 j1f64(_Float64) throw(); extern "C" _Float64 __j1f64(_Float64) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 jnf64(int, _Float64) throw(); extern "C" _Float64 __jnf64(int, _Float64) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 y0f64(_Float64) throw(); extern "C" _Float64 __y0f64(_Float64) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 y1f64(_Float64) throw(); extern "C" _Float64 __y1f64(_Float64) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 ynf64(int, _Float64) throw(); extern "C" _Float64 __ynf64(int, _Float64) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 erff64(_Float64) throw(); extern "C" _Float64 __erff64(_Float64) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 erfcf64(_Float64) throw(); extern "C" _Float64 __erfcf64(_Float64) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 lgammaf64(_Float64) throw(); extern "C" _Float64 __lgammaf64(_Float64) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 tgammaf64(_Float64) throw(); extern "C" _Float64 __tgammaf64(_Float64) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 lgammaf64_r(_Float64, int * ) throw(); extern "C" _Float64 __lgammaf64_r(_Float64, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 rintf64(_Float64 ) throw(); extern "C" _Float64 __rintf64(_Float64 ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nextafterf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __nextafterf64(_Float64 , _Float64 ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nextdownf64(_Float64 ) throw(); extern "C" _Float64 __nextdownf64(_Float64 ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nextupf64(_Float64 ) throw(); extern "C" _Float64 __nextupf64(_Float64 ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 remainderf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __remainderf64(_Float64 , _Float64 ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 scalbnf64(_Float64 , int ) throw(); extern "C" _Float64 __scalbnf64(_Float64 , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf64(_Float64 ) throw(); extern "C" int __ilogbf64(_Float64 ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf64(_Float64 ) throw(); extern "C" long __llogbf64(_Float64 ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 scalblnf64(_Float64 , long ) throw(); extern "C" _Float64 __scalblnf64(_Float64 , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nearbyintf64(_Float64 ) throw(); extern "C" _Float64 __nearbyintf64(_Float64 ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 roundf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __roundf64(_Float64 ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 truncf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __truncf64(_Float64 ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 remquof64(_Float64 , _Float64 , int * ) throw(); extern "C" _Float64 __remquof64(_Float64 , _Float64 , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf64(_Float64 ) throw(); extern "C" long __lrintf64(_Float64 ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf64(_Float64 ) throw(); extern "C" long long __llrintf64(_Float64 ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf64(_Float64 ) throw(); extern "C" long __lroundf64(_Float64 ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf64(_Float64 ) throw(); extern "C" long long __llroundf64(_Float64 ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fdimf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __fdimf64(_Float64 , _Float64 ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmaxf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fmaxf64(_Float64 , _Float64 ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fminf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fminf64(_Float64 , _Float64 ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmaf64(_Float64 , _Float64 , _Float64 ) throw(); extern "C" _Float64 __fmaf64(_Float64 , _Float64 , _Float64 ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 roundevenf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __roundevenf64(_Float64 ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf64(_Float64 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf64(_Float64 , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf64(_Float64 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf64(_Float64 , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf64(_Float64 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf64(_Float64 , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf64(_Float64 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf64(_Float64 , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmaxmagf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fmaxmagf64(_Float64 , _Float64 ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fminmagf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fminmagf64(_Float64 , _Float64 ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef64(_Float64 * , const _Float64 * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf64(const _Float64 * , const _Float64 * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf64(const _Float64 * , const _Float64 * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 getpayloadf64(const _Float64 * ) throw(); extern "C" _Float64 __getpayloadf64(const _Float64 * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf64(_Float64 * , _Float64 ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf64(_Float64 * , _Float64 ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x acosf32x(_Float32x ) throw(); extern "C" _Float32x __acosf32x(_Float32x ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x asinf32x(_Float32x ) throw(); extern "C" _Float32x __asinf32x(_Float32x ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x atanf32x(_Float32x ) throw(); extern "C" _Float32x __atanf32x(_Float32x ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x atan2f32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __atan2f32x(_Float32x , _Float32x ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x cosf32x(_Float32x ) throw(); extern "C" _Float32x __cosf32x(_Float32x ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x sinf32x(_Float32x ) throw(); extern "C" _Float32x __sinf32x(_Float32x ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x tanf32x(_Float32x ) throw(); extern "C" _Float32x __tanf32x(_Float32x ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x coshf32x(_Float32x ) throw(); extern "C" _Float32x __coshf32x(_Float32x ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x sinhf32x(_Float32x ) throw(); extern "C" _Float32x __sinhf32x(_Float32x ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x tanhf32x(_Float32x ) throw(); extern "C" _Float32x __tanhf32x(_Float32x ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf32x(_Float32x , _Float32x * , _Float32x * ) throw(); extern "C" void __sincosf32x(_Float32x , _Float32x * , _Float32x * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x acoshf32x(_Float32x ) throw(); extern "C" _Float32x __acoshf32x(_Float32x ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x asinhf32x(_Float32x ) throw(); extern "C" _Float32x __asinhf32x(_Float32x ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x atanhf32x(_Float32x ) throw(); extern "C" _Float32x __atanhf32x(_Float32x ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x expf32x(_Float32x ) throw(); extern "C" _Float32x __expf32x(_Float32x ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x frexpf32x(_Float32x , int * ) throw(); extern "C" _Float32x __frexpf32x(_Float32x , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x ldexpf32x(_Float32x , int ) throw(); extern "C" _Float32x __ldexpf32x(_Float32x , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x logf32x(_Float32x ) throw(); extern "C" _Float32x __logf32x(_Float32x ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x log10f32x(_Float32x ) throw(); extern "C" _Float32x __log10f32x(_Float32x ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x modff32x(_Float32x , _Float32x * ) throw(); extern "C" _Float32x __modff32x(_Float32x , _Float32x * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x exp10f32x(_Float32x ) throw(); extern "C" _Float32x __exp10f32x(_Float32x ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x expm1f32x(_Float32x ) throw(); extern "C" _Float32x __expm1f32x(_Float32x ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x log1pf32x(_Float32x ) throw(); extern "C" _Float32x __log1pf32x(_Float32x ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x logbf32x(_Float32x ) throw(); extern "C" _Float32x __logbf32x(_Float32x ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x exp2f32x(_Float32x ) throw(); extern "C" _Float32x __exp2f32x(_Float32x ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x log2f32x(_Float32x ) throw(); extern "C" _Float32x __log2f32x(_Float32x ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x powf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __powf32x(_Float32x , _Float32x ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x sqrtf32x(_Float32x ) throw(); extern "C" _Float32x __sqrtf32x(_Float32x ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x hypotf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __hypotf32x(_Float32x , _Float32x ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x cbrtf32x(_Float32x ) throw(); extern "C" _Float32x __cbrtf32x(_Float32x ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x ceilf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __ceilf32x(_Float32x ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fabsf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __fabsf32x(_Float32x ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x floorf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __floorf32x(_Float32x ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmodf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __fmodf32x(_Float32x , _Float32x ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x copysignf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __copysignf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nanf32x(const char * ) throw(); extern "C" _Float32x __nanf32x(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x j0f32x(_Float32x) throw(); extern "C" _Float32x __j0f32x(_Float32x) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x j1f32x(_Float32x) throw(); extern "C" _Float32x __j1f32x(_Float32x) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x jnf32x(int, _Float32x) throw(); extern "C" _Float32x __jnf32x(int, _Float32x) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x y0f32x(_Float32x) throw(); extern "C" _Float32x __y0f32x(_Float32x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x y1f32x(_Float32x) throw(); extern "C" _Float32x __y1f32x(_Float32x) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x ynf32x(int, _Float32x) throw(); extern "C" _Float32x __ynf32x(int, _Float32x) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x erff32x(_Float32x) throw(); extern "C" _Float32x __erff32x(_Float32x) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x erfcf32x(_Float32x) throw(); extern "C" _Float32x __erfcf32x(_Float32x) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x lgammaf32x(_Float32x) throw(); extern "C" _Float32x __lgammaf32x(_Float32x) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x tgammaf32x(_Float32x) throw(); extern "C" _Float32x __tgammaf32x(_Float32x) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x lgammaf32x_r(_Float32x, int * ) throw(); extern "C" _Float32x __lgammaf32x_r(_Float32x, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x rintf32x(_Float32x ) throw(); extern "C" _Float32x __rintf32x(_Float32x ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nextafterf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __nextafterf32x(_Float32x , _Float32x ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nextdownf32x(_Float32x ) throw(); extern "C" _Float32x __nextdownf32x(_Float32x ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nextupf32x(_Float32x ) throw(); extern "C" _Float32x __nextupf32x(_Float32x ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x remainderf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __remainderf32x(_Float32x , _Float32x ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x scalbnf32x(_Float32x , int ) throw(); extern "C" _Float32x __scalbnf32x(_Float32x , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf32x(_Float32x ) throw(); extern "C" int __ilogbf32x(_Float32x ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf32x(_Float32x ) throw(); extern "C" long __llogbf32x(_Float32x ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x scalblnf32x(_Float32x , long ) throw(); extern "C" _Float32x __scalblnf32x(_Float32x , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nearbyintf32x(_Float32x ) throw(); extern "C" _Float32x __nearbyintf32x(_Float32x ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x roundf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __roundf32x(_Float32x ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x truncf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __truncf32x(_Float32x ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x remquof32x(_Float32x , _Float32x , int * ) throw(); extern "C" _Float32x __remquof32x(_Float32x , _Float32x , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf32x(_Float32x ) throw(); extern "C" long __lrintf32x(_Float32x ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf32x(_Float32x ) throw(); extern "C" long long __llrintf32x(_Float32x ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf32x(_Float32x ) throw(); extern "C" long __lroundf32x(_Float32x ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf32x(_Float32x ) throw(); extern "C" long long __llroundf32x(_Float32x ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fdimf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __fdimf32x(_Float32x , _Float32x ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmaxf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fmaxf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fminf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fminf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmaf32x(_Float32x , _Float32x , _Float32x ) throw(); extern "C" _Float32x __fmaf32x(_Float32x , _Float32x , _Float32x ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x roundevenf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __roundevenf32x(_Float32x ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf32x(_Float32x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf32x(_Float32x , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf32x(_Float32x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf32x(_Float32x , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf32x(_Float32x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf32x(_Float32x , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf32x(_Float32x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf32x(_Float32x , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmaxmagf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fmaxmagf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fminmagf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fminmagf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef32x(_Float32x * , const _Float32x * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf32x(const _Float32x * , const _Float32x * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf32x(const _Float32x * , const _Float32x * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x getpayloadf32x(const _Float32x * ) throw(); extern "C" _Float32x __getpayloadf32x(const _Float32x * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf32x(_Float32x * , _Float32x ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf32x(_Float32x * , _Float32x ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x acosf64x(_Float64x ) throw(); extern "C" _Float64x __acosf64x(_Float64x ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x asinf64x(_Float64x ) throw(); extern "C" _Float64x __asinf64x(_Float64x ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x atanf64x(_Float64x ) throw(); extern "C" _Float64x __atanf64x(_Float64x ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x atan2f64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __atan2f64x(_Float64x , _Float64x ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x cosf64x(_Float64x ) throw(); extern "C" _Float64x __cosf64x(_Float64x ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x sinf64x(_Float64x ) throw(); extern "C" _Float64x __sinf64x(_Float64x ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x tanf64x(_Float64x ) throw(); extern "C" _Float64x __tanf64x(_Float64x ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x coshf64x(_Float64x ) throw(); extern "C" _Float64x __coshf64x(_Float64x ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x sinhf64x(_Float64x ) throw(); extern "C" _Float64x __sinhf64x(_Float64x ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x tanhf64x(_Float64x ) throw(); extern "C" _Float64x __tanhf64x(_Float64x ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf64x(_Float64x , _Float64x * , _Float64x * ) throw(); extern "C" void __sincosf64x(_Float64x , _Float64x * , _Float64x * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x acoshf64x(_Float64x ) throw(); extern "C" _Float64x __acoshf64x(_Float64x ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x asinhf64x(_Float64x ) throw(); extern "C" _Float64x __asinhf64x(_Float64x ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x atanhf64x(_Float64x ) throw(); extern "C" _Float64x __atanhf64x(_Float64x ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x expf64x(_Float64x ) throw(); extern "C" _Float64x __expf64x(_Float64x ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x frexpf64x(_Float64x , int * ) throw(); extern "C" _Float64x __frexpf64x(_Float64x , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x ldexpf64x(_Float64x , int ) throw(); extern "C" _Float64x __ldexpf64x(_Float64x , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x logf64x(_Float64x ) throw(); extern "C" _Float64x __logf64x(_Float64x ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x log10f64x(_Float64x ) throw(); extern "C" _Float64x __log10f64x(_Float64x ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x modff64x(_Float64x , _Float64x * ) throw(); extern "C" _Float64x __modff64x(_Float64x , _Float64x * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x exp10f64x(_Float64x ) throw(); extern "C" _Float64x __exp10f64x(_Float64x ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x expm1f64x(_Float64x ) throw(); extern "C" _Float64x __expm1f64x(_Float64x ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x log1pf64x(_Float64x ) throw(); extern "C" _Float64x __log1pf64x(_Float64x ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x logbf64x(_Float64x ) throw(); extern "C" _Float64x __logbf64x(_Float64x ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x exp2f64x(_Float64x ) throw(); extern "C" _Float64x __exp2f64x(_Float64x ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x log2f64x(_Float64x ) throw(); extern "C" _Float64x __log2f64x(_Float64x ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x powf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __powf64x(_Float64x , _Float64x ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x sqrtf64x(_Float64x ) throw(); extern "C" _Float64x __sqrtf64x(_Float64x ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x hypotf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __hypotf64x(_Float64x , _Float64x ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x cbrtf64x(_Float64x ) throw(); extern "C" _Float64x __cbrtf64x(_Float64x ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x ceilf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __ceilf64x(_Float64x ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fabsf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __fabsf64x(_Float64x ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x floorf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __floorf64x(_Float64x ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmodf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __fmodf64x(_Float64x , _Float64x ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x copysignf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __copysignf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nanf64x(const char * ) throw(); extern "C" _Float64x __nanf64x(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x j0f64x(_Float64x) throw(); extern "C" _Float64x __j0f64x(_Float64x) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x j1f64x(_Float64x) throw(); extern "C" _Float64x __j1f64x(_Float64x) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x jnf64x(int, _Float64x) throw(); extern "C" _Float64x __jnf64x(int, _Float64x) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x y0f64x(_Float64x) throw(); extern "C" _Float64x __y0f64x(_Float64x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x y1f64x(_Float64x) throw(); extern "C" _Float64x __y1f64x(_Float64x) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x ynf64x(int, _Float64x) throw(); extern "C" _Float64x __ynf64x(int, _Float64x) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x erff64x(_Float64x) throw(); extern "C" _Float64x __erff64x(_Float64x) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x erfcf64x(_Float64x) throw(); extern "C" _Float64x __erfcf64x(_Float64x) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x lgammaf64x(_Float64x) throw(); extern "C" _Float64x __lgammaf64x(_Float64x) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x tgammaf64x(_Float64x) throw(); extern "C" _Float64x __tgammaf64x(_Float64x) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x lgammaf64x_r(_Float64x, int * ) throw(); extern "C" _Float64x __lgammaf64x_r(_Float64x, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x rintf64x(_Float64x ) throw(); extern "C" _Float64x __rintf64x(_Float64x ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nextafterf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __nextafterf64x(_Float64x , _Float64x ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nextdownf64x(_Float64x ) throw(); extern "C" _Float64x __nextdownf64x(_Float64x ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nextupf64x(_Float64x ) throw(); extern "C" _Float64x __nextupf64x(_Float64x ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x remainderf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __remainderf64x(_Float64x , _Float64x ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x scalbnf64x(_Float64x , int ) throw(); extern "C" _Float64x __scalbnf64x(_Float64x , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf64x(_Float64x ) throw(); extern "C" int __ilogbf64x(_Float64x ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf64x(_Float64x ) throw(); extern "C" long __llogbf64x(_Float64x ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x scalblnf64x(_Float64x , long ) throw(); extern "C" _Float64x __scalblnf64x(_Float64x , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nearbyintf64x(_Float64x ) throw(); extern "C" _Float64x __nearbyintf64x(_Float64x ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x roundf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __roundf64x(_Float64x ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x truncf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __truncf64x(_Float64x ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x remquof64x(_Float64x , _Float64x , int * ) throw(); extern "C" _Float64x __remquof64x(_Float64x , _Float64x , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf64x(_Float64x ) throw(); extern "C" long __lrintf64x(_Float64x ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf64x(_Float64x ) throw(); extern "C" long long __llrintf64x(_Float64x ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf64x(_Float64x ) throw(); extern "C" long __lroundf64x(_Float64x ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf64x(_Float64x ) throw(); extern "C" long long __llroundf64x(_Float64x ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fdimf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __fdimf64x(_Float64x , _Float64x ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmaxf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fmaxf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fminf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fminf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmaf64x(_Float64x , _Float64x , _Float64x ) throw(); extern "C" _Float64x __fmaf64x(_Float64x , _Float64x , _Float64x ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x roundevenf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __roundevenf64x(_Float64x ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf64x(_Float64x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf64x(_Float64x , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf64x(_Float64x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf64x(_Float64x , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf64x(_Float64x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf64x(_Float64x , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf64x(_Float64x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf64x(_Float64x , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmaxmagf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fmaxmagf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fminmagf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fminmagf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef64x(_Float64x * , const _Float64x * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf64x(const _Float64x * , const _Float64x * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf64x(const _Float64x * , const _Float64x * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x getpayloadf64x(const _Float64x * ) throw(); extern "C" _Float64x __getpayloadf64x(const _Float64x * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf64x(_Float64x * , _Float64x ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf64x(_Float64x * , _Float64x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fadd(double , double ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fdiv(double , double ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fmul(double , double ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fsub(double , double ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float faddl(long double , long double ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fdivl(long double , long double ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fmull(long double , long double ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fsubl(long double , long double ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double daddl(long double , long double ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double ddivl(long double , long double ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double dmull(long double , long double ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double dsubl(long double , long double ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32addf32x(_Float32x , _Float32x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32divf32x(_Float32x , _Float32x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32mulf32x(_Float32x , _Float32x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32subf32x(_Float32x , _Float32x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32addf64(_Float64 , _Float64 ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32divf64(_Float64 , _Float64 ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32mulf64(_Float64 , _Float64 ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32subf64(_Float64 , _Float64 ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32addf64x(_Float64x , _Float64x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32divf64x(_Float64x , _Float64x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32mulf64x(_Float64x , _Float64x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32subf64x(_Float64x , _Float64x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xaddf64(_Float64 , _Float64 ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xdivf64(_Float64 , _Float64 ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xmulf64(_Float64 , _Float64 ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xsubf64(_Float64 , _Float64 ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xaddf64x(_Float64x , _Float64x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xdivf64x(_Float64x , _Float64x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xmulf64x(_Float64x , _Float64x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xsubf64x(_Float64x , _Float64x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64addf64x(_Float64x , _Float64x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64divf64x(_Float64x , _Float64x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64mulf64x(_Float64x , _Float64x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64subf64x(_Float64x , _Float64x ) throw();
# 773 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 854 "/usr/include/math.h" 3
enum {
# 855 "/usr/include/math.h" 3
FP_NAN,
# 858 "/usr/include/math.h" 3
FP_INFINITE,
# 861 "/usr/include/math.h" 3
FP_ZERO,
# 864 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 867 "/usr/include/math.h" 3
FP_NORMAL
# 870 "/usr/include/math.h" 3
};
# 23 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
extern "C" int __iscanonicall(long double ) throw()
# 24 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
 __attribute((const));
# 47 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(float __val) { return ((void)((__typeof__(__val))__val)), 1; }
# 48 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(double __val) { return ((void)((__typeof__(__val))__val)), 1; }
# 49 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(long double __val) { return __iscanonicall(__val); }
# 986 "/usr/include/math.h" 3
inline int issignaling(float __val) { return __issignalingf(__val); }
# 987 "/usr/include/math.h" 3
inline int issignaling(double __val) { return __issignaling(__val); }
# 989 "/usr/include/math.h" 3
inline int issignaling(long double __val)
# 990 "/usr/include/math.h" 3
{
# 994 "/usr/include/math.h" 3
return __issignalingl(__val);
# 996 "/usr/include/math.h" 3
}
# 1047 "/usr/include/math.h" 3
template < class __T > inline bool
iszero ( __T __val )
{
  return __val == 0;
}
# 1279 "/usr/include/math.h" 3
template< class > struct __iseqsig_type;
# 1281 "/usr/include/math.h" 3
template<> struct __iseqsig_type< float> {
# 1283 "/usr/include/math.h" 3
static int __call(float __x, float __y) throw()
# 1284 "/usr/include/math.h" 3
{
# 1285 "/usr/include/math.h" 3
return __iseqsigf(__x, __y);
# 1286 "/usr/include/math.h" 3
}
# 1287 "/usr/include/math.h" 3
};
# 1289 "/usr/include/math.h" 3
template<> struct __iseqsig_type< double> {
# 1291 "/usr/include/math.h" 3
static int __call(double __x, double __y) throw()
# 1292 "/usr/include/math.h" 3
{
# 1293 "/usr/include/math.h" 3
return __iseqsig(__x, __y);
# 1294 "/usr/include/math.h" 3
}
# 1295 "/usr/include/math.h" 3
};
# 1297 "/usr/include/math.h" 3
template<> struct __iseqsig_type< long double> {
# 1299 "/usr/include/math.h" 3
static int __call(long double __x, long double __y) throw()
# 1300 "/usr/include/math.h" 3
{
# 1302 "/usr/include/math.h" 3
return __iseqsigl(__x, __y);
# 1306 "/usr/include/math.h" 3
}
# 1307 "/usr/include/math.h" 3
};
# 1321 "/usr/include/math.h" 3
template < typename _T1, typename _T2 >
inline int
iseqsig ( _T1 __x, _T2 __y ) throw ( )
{



  typedef __typeof__ ( ( ( __x ) + ( __y ) + (0.0F) ) ) _T3;

  return __iseqsig_type < _T3 > :: __call ( __x, __y );
}
# 57 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
extern "C" { typedef
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 56 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 57 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t; }
# 62 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 59 "/usr/include/stdlib.h" 3
struct {
# 60 "/usr/include/stdlib.h" 3
int quot;
# 61 "/usr/include/stdlib.h" 3
int rem;
# 62 "/usr/include/stdlib.h" 3
} div_t; }
# 70 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 67 "/usr/include/stdlib.h" 3
struct {
# 68 "/usr/include/stdlib.h" 3
long quot;
# 69 "/usr/include/stdlib.h" 3
long rem;
# 70 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 80 "/usr/include/stdlib.h" 3
__extension__ extern "C" { typedef
# 77 "/usr/include/stdlib.h" 3
struct {
# 78 "/usr/include/stdlib.h" 3
long long quot;
# 79 "/usr/include/stdlib.h" 3
long long rem;
# 80 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 97 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw() __attribute((__warn_unused_result__));
# 101 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline double atof(const char * ) throw()
# 102 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 104 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int atoi(const char * ) throw()
# 105 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 107 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline long atol(const char * ) throw()
# 108 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 112 "/usr/include/stdlib.h" 3
__extension__ extern "C" { extern __attribute((gnu_inline)) inline long long atoll(const char * ) throw()
# 113 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 117 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ , char **__restrict__ ) throw()
# 119 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 123 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ , char **__restrict__ ) throw()
# 124 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 126 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ , char **__restrict__ ) throw()
# 128 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 140 "/usr/include/stdlib.h" 3
extern "C" _Float32 strtof32(const char *__restrict__ , char **__restrict__ ) throw()
# 142 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 146 "/usr/include/stdlib.h" 3
extern "C" _Float64 strtof64(const char *__restrict__ , char **__restrict__ ) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" _Float32x strtof32x(const char *__restrict__ , char **__restrict__ ) throw()
# 160 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 164 "/usr/include/stdlib.h" 3
extern "C" _Float64x strtof64x(const char *__restrict__ , char **__restrict__ ) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ , char **__restrict__ , int ) throw()
# 178 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 180 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ , char **__restrict__ , int ) throw()
# 182 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 192 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtouq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 194 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoll(const char *__restrict__ , char **__restrict__ , int ) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 205 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtoull(const char *__restrict__ , char **__restrict__ , int ) throw()
# 207 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 212 "/usr/include/stdlib.h" 3
extern "C" int strfromd(char * , size_t , const char * , double ) throw()
# 214 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 216 "/usr/include/stdlib.h" 3
extern "C" int strfromf(char * , size_t , const char * , float ) throw()
# 218 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 220 "/usr/include/stdlib.h" 3
extern "C" int strfroml(char * , size_t , const char * , long double ) throw()
# 222 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 232 "/usr/include/stdlib.h" 3
extern "C" int strfromf32(char * , size_t , const char * , _Float32 ) throw()
# 234 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 238 "/usr/include/stdlib.h" 3
extern "C" int strfromf64(char * , size_t , const char * , _Float64 ) throw()
# 240 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 250 "/usr/include/stdlib.h" 3
extern "C" int strfromf32x(char * , size_t , const char * , _Float32x ) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 256 "/usr/include/stdlib.h" 3
extern "C" int strfromf64x(char * , size_t , const char * , _Float64x ) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 274 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 276 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 278 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 281 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 284 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoll_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 287 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 290 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtoull_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 293 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 295 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 297 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 299 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 301 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 303 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 306 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 316 "/usr/include/stdlib.h" 3
extern "C" _Float32 strtof32_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 319 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 323 "/usr/include/stdlib.h" 3
extern "C" _Float64 strtof64_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 326 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 337 "/usr/include/stdlib.h" 3
extern "C" _Float32x strtof32x_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 340 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 344 "/usr/include/stdlib.h" 3
extern "C" _Float64x strtof64x_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 347 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 361 "/usr/include/stdlib.h" 3
extern "C" {
# 360 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline int
# 361 "/usr/include/stdlib.h" 3
atoi(const char *__nptr) throw()
# 362 "/usr/include/stdlib.h" 3
{
# 363 "/usr/include/stdlib.h" 3
return (int)strtol(__nptr, (char **)__null, 10);
# 364 "/usr/include/stdlib.h" 3
} }
# 366 "/usr/include/stdlib.h" 3
extern "C" {
# 365 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long
# 366 "/usr/include/stdlib.h" 3
atol(const char *__nptr) throw()
# 367 "/usr/include/stdlib.h" 3
{
# 368 "/usr/include/stdlib.h" 3
return strtol(__nptr, (char **)__null, 10);
# 369 "/usr/include/stdlib.h" 3
} }
# 373 "/usr/include/stdlib.h" 3
__extension__ extern "C" {
# 372 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long long
# 373 "/usr/include/stdlib.h" 3
atoll(const char *__nptr) throw()
# 374 "/usr/include/stdlib.h" 3
{
# 375 "/usr/include/stdlib.h" 3
return strtoll(__nptr, (char **)__null, 10);
# 376 "/usr/include/stdlib.h" 3
} }
# 385 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long ) throw() __attribute((__warn_unused_result__));
# 388 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * ) throw()
# 389 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 42 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 47 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 54 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 64 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 69 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 74 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 79 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 85 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 92 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 103 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 108 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 114 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 121 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 134 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 138 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 148 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 149 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int8_t int8_t; }
# 25 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int16_t int16_t; }
# 26 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int32_t int32_t; }
# 27 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int64_t int64_t; }
# 158 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint8_t u_int8_t; }
# 159 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint16_t u_int16_t; }
# 160 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint32_t u_int32_t; }
# 161 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint64_t u_int64_t; }
# 164 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 34 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
extern "C" { static inline __uint16_t __bswap_16(__uint16_t __bsx)
# 35 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 39 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return (__uint16_t)(((__bsx >> 8) & 255) | ((__bsx & 255) << 8));
# 41 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 49 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
extern "C" { static inline __uint32_t __bswap_32(__uint32_t __bsx)
# 50 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 52 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 56 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 70 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
__extension__ extern "C" { static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 71 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 73 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 77 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 33 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
extern "C" { static inline __uint16_t __uint16_identity(__uint16_t __x)
# 34 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 35 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 36 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
} }
# 39 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
extern "C" { static inline __uint32_t __uint32_identity(__uint32_t __x)
# 40 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 41 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 42 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
} }
# 45 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
extern "C" { static inline __uint64_t __uint64_identity(__uint64_t __x)
# 46 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 48 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
} }
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
extern "C" { typedef
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
struct {
# 7 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
} __sigset_t; }
# 7 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 49 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef
# 60 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 64 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set; }
# 77 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" int select(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , timeval *__restrict__ );
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" int pselect(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , const timespec *__restrict__ , const __sigset_t *__restrict__ );
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern "C" long __fdelt_chk(long );
# 25 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern "C" long __fdelt_warn(long )
# 26 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
 __attribute((__warning__("bit outside of fd_set selected")));
# 185 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 192 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 220 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 221 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 53 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
extern "C" { typedef
# 49 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_list {
# 51 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__prev;
# 52 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__next;
# 53 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_list_t; }
# 58 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
extern "C" { typedef
# 55 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_slist {
# 57 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_slist *__next;
# 58 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_slist_t; }
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
extern "C" { struct __pthread_mutex_s {
# 24 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __lock;
# 25 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
unsigned __count;
# 26 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __owner;
# 28 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
unsigned __nusers;
# 32 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __kind;
# 34 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
short __spins;
# 35 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
short __elision;
# 36 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
__pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
}; }
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
extern "C" { struct __pthread_rwlock_arch_t {
# 25 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __readers;
# 26 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __writers;
# 27 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __wrphase_futex;
# 28 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __writers_futex;
# 29 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __pad3;
# 30 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __pad4;
# 32 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
int __cur_writer;
# 33 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
int __shared;
# 34 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
signed char __rwelision;
# 39 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned char __pad1[7];
# 42 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned long __pad2;
# 45 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
}; }
# 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
extern "C" { struct __pthread_cond_s {
# 95 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
union {
# 96 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__extension__ unsigned long long __wseq;
# 98 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 99 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __low;
# 100 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __high;
# 101 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __wseq32;
# 102 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 104 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
union {
# 105 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__extension__ unsigned long long __g1_start;
# 107 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 108 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __low;
# 109 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __high;
# 110 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __g1_start32;
# 111 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 112 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_refs[2];
# 113 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_size[2];
# 114 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g1_orig_size;
# 115 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __wrefs;
# 116 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_signals[2];
# 117 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
}; }
# 27 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 33 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 34 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 35 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 42 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 43 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 44 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 49 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 53 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 56 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { union pthread_attr_t {
# 58 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 59 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
}; }
# 62 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef pthread_attr_t pthread_attr_t; }
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 68 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_mutex_s __data;
# 70 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 71 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 76 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_cond_s __data;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 87 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 88 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_rwlock_arch_t __data;
# 89 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 90 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 103 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 109 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 110 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 111 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 115 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 116 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 117 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 401 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 404 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned ) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned , char * , size_t ) throw()
# 411 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 415 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * ) throw() __attribute((__nonnull__(1)));
# 423 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 425 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 426 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 427 "/usr/include/stdlib.h" 3
int32_t *state;
# 428 "/usr/include/stdlib.h" 3
int rand_type;
# 429 "/usr/include/stdlib.h" 3
int rand_deg;
# 430 "/usr/include/stdlib.h" 3
int rand_sep;
# 431 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 432 "/usr/include/stdlib.h" 3
}; }
# 434 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ , int32_t *__restrict__ ) throw()
# 435 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 437 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned , random_data * ) throw()
# 438 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 440 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned , char *__restrict__ , size_t , random_data *__restrict__ ) throw()
# 443 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 445 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ , random_data *__restrict__ ) throw()
# 447 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 455 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned ) throw();
# 459 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * ) throw();
# 467 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 468 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute((__nonnull__(1)));
# 471 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 472 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw()
# 473 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 476 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 477 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw()
# 478 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 481 "/usr/include/stdlib.h" 3
extern "C" void srand48(long ) throw();
# 482 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw()
# 483 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 484 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute((__nonnull__(1)));
# 490 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 492 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 493 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 494 "/usr/include/stdlib.h" 3
unsigned short __c;
# 495 "/usr/include/stdlib.h" 3
unsigned short __init;
# 496 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 498 "/usr/include/stdlib.h" 3
}; }
# 501 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ , double *__restrict__ ) throw()
# 502 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 503 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__ , double *__restrict__ ) throw()
# 505 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 508 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 510 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 511 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 514 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 517 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 519 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 520 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 523 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 526 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long , drand48_data * ) throw()
# 527 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 529 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data * ) throw()
# 530 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 532 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data * ) throw()
# 534 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 539 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__))
# 540 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(1))) __attribute((__warn_unused_result__));
# 542 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 543 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(1, 2))) __attribute((__warn_unused_result__));
# 550 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 551 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__)) __attribute((__alloc_size__(2)));
# 559 "/usr/include/stdlib.h" 3
extern "C" void *reallocarray(void * , size_t , size_t ) throw()
# 560 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__))
# 561 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(2, 3)));
# 565 "/usr/include/stdlib.h" 3
extern "C" void free(void * ) throw();
# 32 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t ) throw();
# 574 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__))
# 575 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(1))) __attribute((__warn_unused_result__));
# 580 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** , size_t , size_t ) throw()
# 581 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 586 "/usr/include/stdlib.h" 3
extern "C" void *aligned_alloc(size_t , size_t ) throw()
# 587 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2))) __attribute((__warn_unused_result__));
# 591 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 595 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* )(void)) throw() __attribute((__nonnull__(1)));
# 600 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* )(void)) throw() __asm__("at_quick_exit")
# 601 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 610 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* )(int , void * ), void * ) throw()
# 611 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 617 "/usr/include/stdlib.h" 3
extern "C" void exit(int ) throw() __attribute((__noreturn__));
# 623 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int ) throw() __attribute((__noreturn__));
# 629 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int ) throw() __attribute((__noreturn__));
# 634 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 639 "/usr/include/stdlib.h" 3
extern "C" char *secure_getenv(const char * ) throw()
# 640 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 647 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * ) throw() __attribute((__nonnull__(1)));
# 653 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * , const char * , int ) throw()
# 654 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 657 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * ) throw() __attribute((__nonnull__(1)));
# 664 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 675 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * ) throw() __attribute((__nonnull__(1)));
# 688 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 698 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 710 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * , int ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 720 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * , int )
# 721 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 731 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 742 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * , int ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 752 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * , int ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 762 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * , int , int )
# 763 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 774 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * , int , int )
# 775 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 784 "/usr/include/stdlib.h" 3
extern "C" int system(const char * ) __attribute((__warn_unused_result__));
# 790 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * ) throw()
# 791 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 800 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *realpath(const char *__restrict__ , char *__restrict__ ) throw()
# 801 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__)); }
# 808 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 811 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 815 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 820 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *bsearch(const void * , const void * , size_t , size_t , __compar_fn_t )
# 822 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5))) __attribute((__warn_unused_result__)); }
# 20 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
extern "C" {
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__attribute((__gnu_inline__)) extern inline void *
# 20 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t
# 21 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__compar)
# 22 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
size_t __l, __u, __idx;
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
const void *__p;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
int __comparison;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (0);
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __nmemb;
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
while (__l < __u)
# 30 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 31 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__idx = ((__l + __u) / (2));
# 32 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__p = ((void *)(((const char *)__base) + (__idx * __size)));
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__comparison = (*__compar)(__key, __p);
# 34 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison < 0) {
# 35 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __idx; } else {
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison > 0) {
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (__idx + (1)); } else {
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return (void *)__p; } }
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
}
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return __null;
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
} }
# 830 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * , size_t , size_t , __compar_fn_t )
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 833 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * , size_t , size_t , __compar_d_fn_t , void * )
# 835 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 840 "/usr/include/stdlib.h" 3
extern "C" int abs(int ) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 841 "/usr/include/stdlib.h" 3
extern "C" long labs(long ) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 844 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long llabs(long long ) throw()
# 845 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 852 "/usr/include/stdlib.h" 3
extern "C" div_t div(int , int ) throw()
# 853 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 854 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long , long ) throw()
# 855 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 858 "/usr/include/stdlib.h" 3
__extension__ extern "C" lldiv_t lldiv(long long , long long ) throw()
# 860 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 872 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 873 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 878 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 879 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 884 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double , int , char * ) throw()
# 885 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 890 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 892 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 893 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 895 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 896 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double , int , char * ) throw()
# 897 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 902 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 904 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 905 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 907 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 909 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 912 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 913 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 916 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 922 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * , size_t ) throw();
# 925 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 929 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int wctomb(char * , wchar_t ) throw(); }
# 933 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbstowcs(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw(); }
# 936 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcstombs(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 946 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 957 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ , char *const *__restrict__ , char **__restrict__ ) throw()
# 960 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3))) __attribute((__warn_unused_result__));
# 968 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int ) __attribute((__warn_unused_result__));
# 976 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int ) throw();
# 980 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int ) throw();
# 985 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int ) throw() __attribute((__warn_unused_result__));
# 992 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int ptsname_r(int , char * , size_t ) throw()
# 993 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2))); }
# 996 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 1003 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int ) throw()
# 1004 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
extern "C" {
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
__attribute((__gnu_inline__)) extern inline double
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
atof(const char *__nptr) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
{
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
return strtod(__nptr, (char **)__null);
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
} }
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" char *__realpath_chk(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" char *__realpath_alias(const char *__restrict__ , char *__restrict__ ) throw() __asm__("realpath") __attribute((__warn_unused_result__));
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" char *__realpath_chk_warn(const char *__restrict__ , char *__restrict__ , size_t ) throw() __asm__("__realpath_chk") __attribute((__warn_unused_result__))
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("second argument of realpath must be either NULL or at least PATH_MAX bytes long buffer")));
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw()
# 38 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) != ((size_t)(-1)))
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) < (4096)) {
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk_warn(__name, __resolved, __builtin_object_size(__resolved, 2 > 1)); }
# 45 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk(__name, __resolved, __builtin_object_size(__resolved, 2 > 1));
# 46 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 48 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_alias(__name, __resolved);
# 49 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 52 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __ptsname_r_chk(int , char * , size_t , size_t ) throw()
# 53 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 54 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __ptsname_r_alias(int , char * , size_t ) throw() __asm__("ptsname_r")
# 56 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 57 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __ptsname_r_chk_warn(int , char * , size_t , size_t ) throw() __asm__("__ptsname_r_chk")
# 60 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2))) __attribute((__warning__("ptsname_r called with buflen bigger than size of buf")));
# 64 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 63 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 64 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
ptsname_r(int __fd, char *__buf, size_t __buflen) throw()
# 65 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 66 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 67 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 68 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 69 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 70 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 71 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk_warn(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 72 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_alias(__fd, __buf, __buflen);
# 74 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 77 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __wctomb_chk(char * , wchar_t , size_t ) throw()
# 78 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 79 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __wctomb_alias(char * , wchar_t ) throw() __asm__("wctomb") __attribute((__warn_unused_result__));
# 83 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 82 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline int
# 83 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
wctomb(char *__s, wchar_t __wchar) throw()
# 84 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 92 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 93 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_chk(__s, __wchar, __builtin_object_size(__s, 2 > 1)); }
# 94 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_alias(__s, __wchar);
# 95 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 98 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __mbstowcs_chk(wchar_t *__restrict__ , const char *__restrict__ , size_t , size_t ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __mbstowcs_alias(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw() __asm__("mbstowcs");
# 105 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __mbstowcs_chk_warn(wchar_t *__restrict__ , const char *__restrict__ , size_t , size_t ) throw() __asm__("__mbstowcs_chk")
# 109 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("mbstowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 113 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 112 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 113 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
mbstowcs(wchar_t *__restrict__ __dst, const char *__restrict__ __src, size_t __len) throw()
# 115 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 116 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 117 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 118 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 119 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 122 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 123 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 125 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 126 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_alias(__dst, __src, __len);
# 127 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 130 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __wcstombs_chk(char *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __wcstombs_alias(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcstombs");
# 137 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __wcstombs_chk_warn(char *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wcstombs_chk")
# 141 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("wcstombs called with dst buffer smaller than len")));
# 144 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 143 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 144 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
wcstombs(char *__restrict__ __dst, const wchar_t *__restrict__ __src, size_t __len) throw()
# 146 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 147 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 148 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 149 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 150 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 151 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 152 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 153 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 154 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_alias(__dst, __src, __len);
# 155 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 69 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator;
# 74 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 95 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.4/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp> ::__type __type1;
# 171 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up> ::__type __type2;
# 174 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp> ::__type __type1;
# 182 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up> ::__type __type2;
# 183 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp> ::__type __type3;
# 186 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp> ::__type __type1;
# 194 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up> ::__type __type2;
# 195 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp> ::__type __type3;
# 196 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Wp> ::__type __type4;
# 199 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.4/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.4/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.4/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.4/cmath" 3
using ::acos;
# 108 "/usr/include/c++/4.4/cmath" 3
inline float acos(float __x)
# 109 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosf(__x); }
# 112 "/usr/include/c++/4.4/cmath" 3
inline long double acos(long double __x)
# 113 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosl(__x); }
# 115 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 121 "/usr/include/c++/4.4/cmath" 3
using ::asin;
# 124 "/usr/include/c++/4.4/cmath" 3
inline float asin(float __x)
# 125 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinf(__x); }
# 128 "/usr/include/c++/4.4/cmath" 3
inline long double asin(long double __x)
# 129 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinl(__x); }
# 131 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 137 "/usr/include/c++/4.4/cmath" 3
using ::atan;
# 140 "/usr/include/c++/4.4/cmath" 3
inline float atan(float __x)
# 141 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanf(__x); }
# 144 "/usr/include/c++/4.4/cmath" 3
inline long double atan(long double __x)
# 145 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanl(__x); }
# 147 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 153 "/usr/include/c++/4.4/cmath" 3
using ::atan2;
# 156 "/usr/include/c++/4.4/cmath" 3
inline float atan2(float __y, float __x)
# 157 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 160 "/usr/include/c++/4.4/cmath" 3
inline long double atan2(long double __y, long double __x)
# 161 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 163 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 175 "/usr/include/c++/4.4/cmath" 3
using ::ceil;
# 178 "/usr/include/c++/4.4/cmath" 3
inline float ceil(float __x)
# 179 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceilf(__x); }
# 182 "/usr/include/c++/4.4/cmath" 3
inline long double ceil(long double __x)
# 183 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceill(__x); }
# 185 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 191 "/usr/include/c++/4.4/cmath" 3
using ::cos;
# 194 "/usr/include/c++/4.4/cmath" 3
inline float cos(float __x)
# 195 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosf(__x); }
# 198 "/usr/include/c++/4.4/cmath" 3
inline long double cos(long double __x)
# 199 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosl(__x); }
# 201 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 207 "/usr/include/c++/4.4/cmath" 3
using ::cosh;
# 210 "/usr/include/c++/4.4/cmath" 3
inline float cosh(float __x)
# 211 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshf(__x); }
# 214 "/usr/include/c++/4.4/cmath" 3
inline long double cosh(long double __x)
# 215 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshl(__x); }
# 217 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 223 "/usr/include/c++/4.4/cmath" 3
using ::exp;
# 226 "/usr/include/c++/4.4/cmath" 3
inline float exp(float __x)
# 227 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expf(__x); }
# 230 "/usr/include/c++/4.4/cmath" 3
inline long double exp(long double __x)
# 231 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expl(__x); }
# 233 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 239 "/usr/include/c++/4.4/cmath" 3
using ::fabs;
# 242 "/usr/include/c++/4.4/cmath" 3
inline float fabs(float __x)
# 243 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 246 "/usr/include/c++/4.4/cmath" 3
inline long double fabs(long double __x)
# 247 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 255 "/usr/include/c++/4.4/cmath" 3
using ::floor;
# 258 "/usr/include/c++/4.4/cmath" 3
inline float floor(float __x)
# 259 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorf(__x); }
# 262 "/usr/include/c++/4.4/cmath" 3
inline long double floor(long double __x)
# 263 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorl(__x); }
# 265 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 271 "/usr/include/c++/4.4/cmath" 3
using ::fmod;
# 274 "/usr/include/c++/4.4/cmath" 3
inline float fmod(float __x, float __y)
# 275 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 278 "/usr/include/c++/4.4/cmath" 3
inline long double fmod(long double __x, long double __y)
# 279 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 281 "/usr/include/c++/4.4/cmath" 3
using ::frexp;
# 284 "/usr/include/c++/4.4/cmath" 3
inline float frexp(float __x, int *__exp)
# 285 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 288 "/usr/include/c++/4.4/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 289 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 291 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 297 "/usr/include/c++/4.4/cmath" 3
using ::ldexp;
# 300 "/usr/include/c++/4.4/cmath" 3
inline float ldexp(float __x, int __exp)
# 301 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 304 "/usr/include/c++/4.4/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 305 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 307 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 313 "/usr/include/c++/4.4/cmath" 3
using ::log;
# 316 "/usr/include/c++/4.4/cmath" 3
inline float log(float __x)
# 317 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logf(__x); }
# 320 "/usr/include/c++/4.4/cmath" 3
inline long double log(long double __x)
# 321 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logl(__x); }
# 323 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 329 "/usr/include/c++/4.4/cmath" 3
using ::log10;
# 332 "/usr/include/c++/4.4/cmath" 3
inline float log10(float __x)
# 333 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10f(__x); }
# 336 "/usr/include/c++/4.4/cmath" 3
inline long double log10(long double __x)
# 337 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10l(__x); }
# 339 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 345 "/usr/include/c++/4.4/cmath" 3
using ::modf;
# 348 "/usr/include/c++/4.4/cmath" 3
inline float modf(float __x, float *__iptr)
# 349 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 352 "/usr/include/c++/4.4/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 353 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 355 "/usr/include/c++/4.4/cmath" 3
using ::pow;
# 358 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, float __y)
# 359 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powf(__x, __y); }
# 362 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, long double __y)
# 363 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powl(__x, __y); }
# 369 "/usr/include/c++/4.4/cmath" 3
inline double pow(double __x, int __i)
# 370 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powi(__x, __i); }
# 373 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, int __n)
# 374 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powif(__x, __n); }
# 377 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, int __n)
# 378 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powil(__x, __n); }
# 381 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 393 "/usr/include/c++/4.4/cmath" 3
using ::sin;
# 396 "/usr/include/c++/4.4/cmath" 3
inline float sin(float __x)
# 397 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinf(__x); }
# 400 "/usr/include/c++/4.4/cmath" 3
inline long double sin(long double __x)
# 401 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinl(__x); }
# 403 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 409 "/usr/include/c++/4.4/cmath" 3
using ::sinh;
# 412 "/usr/include/c++/4.4/cmath" 3
inline float sinh(float __x)
# 413 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhf(__x); }
# 416 "/usr/include/c++/4.4/cmath" 3
inline long double sinh(long double __x)
# 417 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhl(__x); }
# 419 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 425 "/usr/include/c++/4.4/cmath" 3
using ::sqrt;
# 428 "/usr/include/c++/4.4/cmath" 3
inline float sqrt(float __x)
# 429 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtf(__x); }
# 432 "/usr/include/c++/4.4/cmath" 3
inline long double sqrt(long double __x)
# 433 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtl(__x); }
# 435 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 441 "/usr/include/c++/4.4/cmath" 3
using ::tan;
# 444 "/usr/include/c++/4.4/cmath" 3
inline float tan(float __x)
# 445 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanf(__x); }
# 448 "/usr/include/c++/4.4/cmath" 3
inline long double tan(long double __x)
# 449 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanl(__x); }
# 451 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 457 "/usr/include/c++/4.4/cmath" 3
using ::tanh;
# 460 "/usr/include/c++/4.4/cmath" 3
inline float tanh(float __x)
# 461 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhf(__x); }
# 464 "/usr/include/c++/4.4/cmath" 3
inline long double tanh(long double __x)
# 465 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhl(__x); }
# 467 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 473 "/usr/include/c++/4.4/cmath" 3
}
# 492 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 494 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( 0, 1, 4,
      3, 2, __type ( __f ) );
    }
# 504 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 513 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 522 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 531 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 540 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 549 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 558 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 567 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 576 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 585 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 594 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 603 "/usr/include/c++/4.4/cmath" 3
}
# 35 "/usr/include/c++/4.4/bits/cmath.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 37 "/usr/include/c++/4.4/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.4/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.4/cstddef" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.4/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.4/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.4/cstddef" 3
}
# 100 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 102 "/usr/include/c++/4.4/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.4/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.4/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.4/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.4/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.4/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.4/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.4/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.4/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.4/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.4/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.4/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.4/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.4/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.4/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.4/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.4/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.4/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.4/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.4/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.4/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.4/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.4/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.4/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.4/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.4/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.4/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.4/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.4/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.4/cstdlib" 3
}
# 157 "/usr/include/c++/4.4/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 160 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.4/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.4/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.4/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.4/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.4/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.4/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.4/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.4/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.4/cstdlib" 3
}
# 199 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 202 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.4/cstdlib" 3
}
# 7604 "/usr/local/cuda-5.0//include/math_functions.h"
namespace __gnu_cxx {
# 7606 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline long long abs(long long);
# 7607 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7609 "/usr/local/cuda-5.0//include/math_functions.h"
namespace std {
# 7611 "/usr/local/cuda-5.0//include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 7612 "/usr/local/cuda-5.0//include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 7613 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7615 "/usr/local/cuda-5.0//include/math_functions.h"
using std::abs;
# 7616 "/usr/local/cuda-5.0//include/math_functions.h"
using std::fabs;
# 7617 "/usr/local/cuda-5.0//include/math_functions.h"
using std::ceil;
# 7618 "/usr/local/cuda-5.0//include/math_functions.h"
using std::floor;
# 7619 "/usr/local/cuda-5.0//include/math_functions.h"
using std::sqrt;
# 7620 "/usr/local/cuda-5.0//include/math_functions.h"
using std::pow;
# 7621 "/usr/local/cuda-5.0//include/math_functions.h"
using std::log;
# 7622 "/usr/local/cuda-5.0//include/math_functions.h"
using std::log10;
# 7623 "/usr/local/cuda-5.0//include/math_functions.h"
using std::fmod;
# 7624 "/usr/local/cuda-5.0//include/math_functions.h"
using std::modf;
# 7625 "/usr/local/cuda-5.0//include/math_functions.h"
using std::exp;
# 7626 "/usr/local/cuda-5.0//include/math_functions.h"
using std::frexp;
# 7627 "/usr/local/cuda-5.0//include/math_functions.h"
using std::ldexp;
# 7628 "/usr/local/cuda-5.0//include/math_functions.h"
using std::asin;
# 7629 "/usr/local/cuda-5.0//include/math_functions.h"
using std::sin;
# 7630 "/usr/local/cuda-5.0//include/math_functions.h"
using std::sinh;
# 7631 "/usr/local/cuda-5.0//include/math_functions.h"
using std::acos;
# 7632 "/usr/local/cuda-5.0//include/math_functions.h"
using std::cos;
# 7633 "/usr/local/cuda-5.0//include/math_functions.h"
using std::cosh;
# 7634 "/usr/local/cuda-5.0//include/math_functions.h"
using std::atan;
# 7635 "/usr/local/cuda-5.0//include/math_functions.h"
using std::atan2;
# 7636 "/usr/local/cuda-5.0//include/math_functions.h"
using std::tan;
# 7637 "/usr/local/cuda-5.0//include/math_functions.h"
using std::tanh;
# 7807 "/usr/local/cuda-5.0//include/math_functions.h"
namespace std {
# 7810 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline long abs(long);
# 7811 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float abs(float);
# 7812 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline double abs(double);
# 7813 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float fabs(float);
# 7814 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float ceil(float);
# 7815 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float floor(float);
# 7816 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float sqrt(float);
# 7817 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float pow(float, float);
# 7818 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float pow(float, int);
# 7819 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline double pow(double, int);
# 7820 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float log(float);
# 7821 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float log10(float);
# 7822 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float fmod(float, float);
# 7823 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float modf(float, float *);
# 7824 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float exp(float);
# 7825 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float frexp(float, int *);
# 7826 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float ldexp(float, int);
# 7827 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float asin(float);
# 7828 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float sin(float);
# 7829 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float sinh(float);
# 7830 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float acos(float);
# 7831 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float cos(float);
# 7832 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float cosh(float);
# 7833 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float atan(float);
# 7834 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float atan2(float, float);
# 7835 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float tan(float);
# 7836 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float tanh(float);
# 7839 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7842 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float logb(float a)
# 7843 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7844 "/usr/local/cuda-5.0//include/math_functions.h"
return logbf(a);
# 7845 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7847 "/usr/local/cuda-5.0//include/math_functions.h"
static inline int ilogb(float a)
# 7848 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7849 "/usr/local/cuda-5.0//include/math_functions.h"
return ilogbf(a);
# 7850 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7852 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float scalbn(float a, int b)
# 7853 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7854 "/usr/local/cuda-5.0//include/math_functions.h"
return scalbnf(a, b);
# 7855 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7857 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float scalbln(float a, long b)
# 7858 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7859 "/usr/local/cuda-5.0//include/math_functions.h"
return scalblnf(a, b);
# 7860 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7862 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float exp2(float a)
# 7863 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7864 "/usr/local/cuda-5.0//include/math_functions.h"
return exp2f(a);
# 7865 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7867 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float exp10(float a)
# 7868 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7869 "/usr/local/cuda-5.0//include/math_functions.h"
return exp10f(a);
# 7870 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7872 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float expm1(float a)
# 7873 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7874 "/usr/local/cuda-5.0//include/math_functions.h"
return expm1f(a);
# 7875 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7877 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float log2(float a)
# 7878 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7879 "/usr/local/cuda-5.0//include/math_functions.h"
return log2f(a);
# 7880 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7882 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float log1p(float a)
# 7883 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7884 "/usr/local/cuda-5.0//include/math_functions.h"
return log1pf(a);
# 7885 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7887 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float rsqrt(float a)
# 7888 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7889 "/usr/local/cuda-5.0//include/math_functions.h"
return rsqrtf(a);
# 7890 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7892 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float acosh(float a)
# 7893 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7894 "/usr/local/cuda-5.0//include/math_functions.h"
return acoshf(a);
# 7895 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7897 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float asinh(float a)
# 7898 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7899 "/usr/local/cuda-5.0//include/math_functions.h"
return asinhf(a);
# 7900 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7902 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float atanh(float a)
# 7903 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7904 "/usr/local/cuda-5.0//include/math_functions.h"
return atanhf(a);
# 7905 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7907 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float hypot(float a, float b)
# 7908 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7909 "/usr/local/cuda-5.0//include/math_functions.h"
return hypotf(a, b);
# 7910 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7912 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float cbrt(float a)
# 7913 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7914 "/usr/local/cuda-5.0//include/math_functions.h"
return cbrtf(a);
# 7915 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7917 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float rcbrt(float a)
# 7918 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7919 "/usr/local/cuda-5.0//include/math_functions.h"
return rcbrtf(a);
# 7920 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7922 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float sinpi(float a)
# 7923 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7924 "/usr/local/cuda-5.0//include/math_functions.h"
return sinpif(a);
# 7925 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7927 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float cospi(float a)
# 7928 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7929 "/usr/local/cuda-5.0//include/math_functions.h"
return cospif(a);
# 7930 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7932 "/usr/local/cuda-5.0//include/math_functions.h"
static inline void sincospi(float a, float *sptr, float *cptr)
# 7933 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7934 "/usr/local/cuda-5.0//include/math_functions.h"
sincospif(a, sptr, cptr);
# 7935 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7937 "/usr/local/cuda-5.0//include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 7938 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7939 "/usr/local/cuda-5.0//include/math_functions.h"
sincosf(a, sptr, cptr);
# 7940 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7942 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float j0(float a)
# 7943 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7944 "/usr/local/cuda-5.0//include/math_functions.h"
return j0f(a);
# 7945 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7947 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float j1(float a)
# 7948 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7949 "/usr/local/cuda-5.0//include/math_functions.h"
return j1f(a);
# 7950 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7952 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float jn(int n, float a)
# 7953 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7954 "/usr/local/cuda-5.0//include/math_functions.h"
return jnf(n, a);
# 7955 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7957 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float y0(float a)
# 7958 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7959 "/usr/local/cuda-5.0//include/math_functions.h"
return y0f(a);
# 7960 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7962 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float y1(float a)
# 7963 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7964 "/usr/local/cuda-5.0//include/math_functions.h"
return y1f(a);
# 7965 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7967 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float yn(int n, float a)
# 7968 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7969 "/usr/local/cuda-5.0//include/math_functions.h"
return ynf(n, a);
# 7970 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7972 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erf(float a)
# 7973 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7974 "/usr/local/cuda-5.0//include/math_functions.h"
return erff(a);
# 7975 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7977 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfinv(float a)
# 7978 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7979 "/usr/local/cuda-5.0//include/math_functions.h"
return erfinvf(a);
# 7980 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7982 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfc(float a)
# 7983 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7984 "/usr/local/cuda-5.0//include/math_functions.h"
return erfcf(a);
# 7985 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7987 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfcinv(float a)
# 7988 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7989 "/usr/local/cuda-5.0//include/math_functions.h"
return erfcinvf(a);
# 7990 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7992 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float normcdfinv(float a)
# 7993 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7994 "/usr/local/cuda-5.0//include/math_functions.h"
return normcdfinvf(a);
# 7995 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7997 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float normcdf(float a)
# 7998 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7999 "/usr/local/cuda-5.0//include/math_functions.h"
return normcdff(a);
# 8000 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8002 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfcx(float a)
# 8003 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8004 "/usr/local/cuda-5.0//include/math_functions.h"
return erfcxf(a);
# 8005 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8007 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float lgamma(float a)
# 8008 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8009 "/usr/local/cuda-5.0//include/math_functions.h"
return lgammaf(a);
# 8010 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8012 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float tgamma(float a)
# 8013 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8014 "/usr/local/cuda-5.0//include/math_functions.h"
return tgammaf(a);
# 8015 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8017 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float copysign(float a, float b)
# 8018 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8019 "/usr/local/cuda-5.0//include/math_functions.h"
return copysignf(a, b);
# 8020 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8022 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double copysign(double a, float b)
# 8023 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8024 "/usr/local/cuda-5.0//include/math_functions.h"
return copysign(a, (double)b);
# 8025 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8027 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float copysign(float a, double b)
# 8028 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8029 "/usr/local/cuda-5.0//include/math_functions.h"
return copysignf(a, (float)b);
# 8030 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8032 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float nextafter(float a, float b)
# 8033 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8034 "/usr/local/cuda-5.0//include/math_functions.h"
return nextafterf(a, b);
# 8035 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8037 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float remainder(float a, float b)
# 8038 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8039 "/usr/local/cuda-5.0//include/math_functions.h"
return remainderf(a, b);
# 8040 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8042 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 8043 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8044 "/usr/local/cuda-5.0//include/math_functions.h"
return remquof(a, b, quo);
# 8045 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8047 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float round(float a)
# 8048 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8049 "/usr/local/cuda-5.0//include/math_functions.h"
return roundf(a);
# 8050 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8052 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long lround(float a)
# 8053 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8054 "/usr/local/cuda-5.0//include/math_functions.h"
return lroundf(a);
# 8055 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8057 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long llround(float a)
# 8058 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8059 "/usr/local/cuda-5.0//include/math_functions.h"
return llroundf(a);
# 8060 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8062 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float trunc(float a)
# 8063 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8064 "/usr/local/cuda-5.0//include/math_functions.h"
return truncf(a);
# 8065 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8067 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float rint(float a)
# 8068 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8069 "/usr/local/cuda-5.0//include/math_functions.h"
return rintf(a);
# 8070 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8072 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long lrint(float a)
# 8073 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8074 "/usr/local/cuda-5.0//include/math_functions.h"
return lrintf(a);
# 8075 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8077 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long llrint(float a)
# 8078 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8079 "/usr/local/cuda-5.0//include/math_functions.h"
return llrintf(a);
# 8080 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8082 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float nearbyint(float a)
# 8083 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8084 "/usr/local/cuda-5.0//include/math_functions.h"
return nearbyintf(a);
# 8085 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8087 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fdim(float a, float b)
# 8088 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8089 "/usr/local/cuda-5.0//include/math_functions.h"
return fdimf(a, b);
# 8090 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8092 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fma(float a, float b, float c)
# 8093 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8094 "/usr/local/cuda-5.0//include/math_functions.h"
return fmaf(a, b, c);
# 8095 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8097 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fmax(float a, float b)
# 8098 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8099 "/usr/local/cuda-5.0//include/math_functions.h"
return fmaxf(a, b);
# 8100 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8102 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fmin(float a, float b)
# 8103 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8104 "/usr/local/cuda-5.0//include/math_functions.h"
return fminf(a, b);
# 8105 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8107 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 8108 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8109 "/usr/local/cuda-5.0//include/math_functions.h"
return umin(a, b);
# 8110 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8112 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 8113 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8114 "/usr/local/cuda-5.0//include/math_functions.h"
return umin((unsigned)a, b);
# 8115 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8117 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 8118 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8119 "/usr/local/cuda-5.0//include/math_functions.h"
return umin(a, (unsigned)b);
# 8120 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8122 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long min(long long a, long long b)
# 8123 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8124 "/usr/local/cuda-5.0//include/math_functions.h"
return llmin(a, b);
# 8125 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8127 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 8128 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8129 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmin(a, b);
# 8130 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8132 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 8133 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8134 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 8135 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8137 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 8138 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8139 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 8140 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8142 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float min(float a, float b)
# 8143 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8144 "/usr/local/cuda-5.0//include/math_functions.h"
return fminf(a, b);
# 8145 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8147 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double min(double a, double b)
# 8148 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8149 "/usr/local/cuda-5.0//include/math_functions.h"
return fmin(a, b);
# 8150 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8152 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double min(float a, double b)
# 8153 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8154 "/usr/local/cuda-5.0//include/math_functions.h"
return fmin((double)a, b);
# 8155 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8157 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double min(double a, float b)
# 8158 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8159 "/usr/local/cuda-5.0//include/math_functions.h"
return fmin(a, (double)b);
# 8160 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8162 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 8163 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8164 "/usr/local/cuda-5.0//include/math_functions.h"
return umax(a, b);
# 8165 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8167 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 8168 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8169 "/usr/local/cuda-5.0//include/math_functions.h"
return umax((unsigned)a, b);
# 8170 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8172 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 8173 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8174 "/usr/local/cuda-5.0//include/math_functions.h"
return umax(a, (unsigned)b);
# 8175 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8177 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long max(long long a, long long b)
# 8178 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8179 "/usr/local/cuda-5.0//include/math_functions.h"
return llmax(a, b);
# 8180 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8182 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 8183 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8184 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmax(a, b);
# 8185 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8187 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 8188 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8189 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 8190 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8192 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 8193 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8194 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 8195 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8197 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float max(float a, float b)
# 8198 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8199 "/usr/local/cuda-5.0//include/math_functions.h"
return fmaxf(a, b);
# 8200 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8202 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double max(double a, double b)
# 8203 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8204 "/usr/local/cuda-5.0//include/math_functions.h"
return fmax(a, b);
# 8205 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8207 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double max(float a, double b)
# 8208 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8209 "/usr/local/cuda-5.0//include/math_functions.h"
return fmax((double)a, b);
# 8210 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8212 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double max(double a, float b)
# 8213 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8214 "/usr/local/cuda-5.0//include/math_functions.h"
return fmax(a, (double)b);
# 8215 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 73 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
template< class T, int dim = 1>
# 74 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 76 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
surface()
# 77 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
{
# 78 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 79 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
}
# 81 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 82 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
(channelDesc) = desc;
# 84 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
}
# 85 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
};
# 87 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
template< int dim>
# 88 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 90 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
surface()
# 91 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
{
# 92 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 93 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
}
# 94 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
};
# 73 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 74 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
struct texture : public textureReference {
# 76 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
texture(int norm = (0), cudaTextureFilterMode
# 77 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
fMode = (cudaFilterModePoint), cudaTextureAddressMode
# 78 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
aMode = (cudaAddressModeClamp))
# 79 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 86 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(sRGB) = 0;
# 87 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
}
# 89 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 90 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 91 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 92 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
desc)
# 93 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
{
# 94 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(normalized) = norm;
# 95 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(filterMode) = fMode;
# 96 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 97 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 98 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 99 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(channelDesc) = desc;
# 100 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(sRGB) = 0;
# 101 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
}
# 102 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
};
# 2191 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 2192 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2194 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2196 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 2197 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2199 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2201 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 2202 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2204 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2206 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 2207 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2209 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2211 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 2212 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2214 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2216 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 2217 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2219 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2221 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 2222 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2224 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2226 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 2227 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2229 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2231 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 2232 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 2234 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2236 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 2237 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 2239 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2241 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 2242 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 2244 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2246 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 2247 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2249 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2251 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 2252 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2254 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2256 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 2257 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;
# 2259 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2262 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c = (0))
# 2263 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)c;
# 2265 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2267 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 2268 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;
# 2270 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2272 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 2273 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)e;
# 2290 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2292 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = (true))
# 2293 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)global;
# 2295 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2297 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = (cudaRoundZero))
# 2298 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2303 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2305 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = (cudaRoundZero))
# 2306 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2311 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2313 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = (cudaRoundNearest))
# 2314 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2319 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2321 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = (cudaRoundNearest))
# 2322 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2327 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 96 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 97 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 99 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 101 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 102 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 104 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 106 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 107 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 109 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 111 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 112 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 114 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 116 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 117 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 119 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 121 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 122 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 124 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 126 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 127 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 129 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 131 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 132 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 134 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 136 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 137 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 139 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 141 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 142 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 144 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 146 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 147 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 149 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 151 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 152 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 154 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 156 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 157 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 159 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 161 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 162 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 164 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 166 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 167 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 169 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 172 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 174 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 176 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 177 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 179 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 181 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 182 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 184 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 186 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 187 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 189 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 191 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 192 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 194 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 196 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 197 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 199 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 81 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 82 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 84 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 86 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 87 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 89 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 91 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 92 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 94 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 96 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 97 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 99 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 101 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 102 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 104 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 1085 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 1086 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 1091 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1093 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = (cudaRoundNearest))
# 1094 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 1099 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1101 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = (cudaRoundNearest))
# 1102 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 1107 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1109 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = (cudaRoundZero))
# 1110 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1115 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1117 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = (cudaRoundZero))
# 1118 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1123 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1125 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = (cudaRoundZero))
# 1126 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1131 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1133 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = (cudaRoundZero))
# 1134 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1139 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1141 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = (cudaRoundNearest))
# 1142 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1147 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1149 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = (cudaRoundNearest))
# 1150 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1155 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1157 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = (cudaRoundNearest))
# 1158 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1160 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1162 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = (cudaRoundNearest))
# 1163 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1165 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1167 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = (cudaRoundNearest))
# 1168 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1170 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 77 "/usr/local/cuda-5.0//include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 78 "/usr/local/cuda-5.0//include/sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 80 "/usr/local/cuda-5.0//include/sm_20_atomic_functions.h"
::exit(___);}
# 83 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val)
# 84 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 86 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 88 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val)
# 89 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 91 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 93 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val)
# 94 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 96 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 98 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val)
# 99 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 101 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 103 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val)
# 104 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 106 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 108 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val)
# 109 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 111 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 113 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val)
# 114 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 116 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 407 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 408 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 410 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 412 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 413 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 415 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 417 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 418 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 420 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 422 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 423 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 425 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 430 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr)
# 431 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)ptr;
# 444 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 93 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = (32)) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 98 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 100 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 105 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 107 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 112 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 114 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = (32)) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 119 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 121 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = (32)) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 127 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 129 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 135 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 137 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 143 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 145 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = (32)) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 151 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 91 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 102 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 104 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift)
# 119 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 123 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 124 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift)
# 125 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 129 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 132 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift)
# 133 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 137 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 138 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift)
# 139 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 143 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 99 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 100 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 101 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 108 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 110 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 112 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 118 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 120 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 121 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 122 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 124 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 127 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 127 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 128 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 133 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 133 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 134 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 136 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 139 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 139 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 142 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 145 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 145 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 146 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 148 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 151 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 151 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 152 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 154 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 157 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 157 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 158 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 162 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 165 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 165 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 166 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 168 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 171 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 172 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 176 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 179 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 179 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 182 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 185 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 185 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 186 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 188 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 191 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 191 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 192 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 194 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 197 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 197 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 198 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 200 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 203 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 203 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 204 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 206 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 209 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 209 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 214 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 217 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 217 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 218 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 220 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 223 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 223 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 224 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 228 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 231 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 231 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 232 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 234 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 237 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 237 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 238 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 240 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 243 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 243 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 244 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 246 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 249 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 249 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 250 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 252 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 255 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 255 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 256 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 258 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 261 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 261 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 262 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 266 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 269 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 269 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 270 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 272 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 275 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 275 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 276 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 280 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 283 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 283 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 284 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 286 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 289 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 289 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 290 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 292 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 295 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 295 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 296 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 298 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 301 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 301 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 302 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 304 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 307 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 307 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 308 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 310 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 313 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 313 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 314 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 318 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 321 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 321 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 322 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 324 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 387 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 387 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 388 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 390 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 393 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 393 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 394 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 396 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 399 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 399 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 400 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 404 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 407 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 407 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 408 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 412 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 447 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 448 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 449 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 456 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 458 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 460 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 466 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 468 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 469 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 470 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 472 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 475 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 475 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 476 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 478 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 481 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 481 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 487 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 487 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 488 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 490 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 493 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 493 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 494 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 496 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 499 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 499 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 500 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 502 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 505 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 505 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 506 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 510 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 513 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 513 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 514 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 516 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 519 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 519 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 520 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 524 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 527 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 527 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 528 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 530 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 533 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 533 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 534 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 536 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 539 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 539 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 540 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 542 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 545 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 545 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 551 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 551 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 552 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 554 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 557 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 557 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 558 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 562 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 565 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 565 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 566 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 568 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 571 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 571 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 572 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 576 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 579 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 579 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 580 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 582 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 585 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 585 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 586 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 588 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 591 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 591 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 592 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 594 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 597 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 597 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 598 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 600 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 603 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 603 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 604 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 606 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 609 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 609 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 610 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 614 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 617 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 617 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 618 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 620 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 623 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 623 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 624 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 628 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 631 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 631 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 632 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 634 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 637 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 637 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 638 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 640 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 643 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 643 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 644 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 646 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 649 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 649 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 650 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 652 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 655 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 655 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 656 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 658 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 661 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 661 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 662 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 666 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 669 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 669 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 670 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 672 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 735 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 735 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 738 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 741 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 741 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 742 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 744 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 747 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 747 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 748 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 752 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 755 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 755 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 756 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 760 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 795 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 796 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 797 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 804 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 806 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 808 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 814 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 816 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 817 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 818 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 820 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 823 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 823 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 824 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 826 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 829 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 829 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 830 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 832 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 835 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 835 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 836 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 838 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 841 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 841 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 842 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 844 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 847 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 847 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 848 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 850 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 853 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 853 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 854 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 858 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 861 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 861 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 864 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 867 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 867 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 868 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 872 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 875 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 875 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 876 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 878 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 881 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 881 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 884 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 887 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 887 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 888 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 890 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 893 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 893 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 894 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 896 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 899 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 899 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 900 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 902 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 905 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 905 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 906 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 910 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 913 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 913 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 914 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 916 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 919 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 919 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 920 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 924 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 927 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 927 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 928 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 930 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 933 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 933 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 934 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 936 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 939 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 939 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 940 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 942 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 945 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 945 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 946 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 948 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 951 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 951 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 954 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 957 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 957 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 958 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 962 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 965 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 965 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 966 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 968 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 971 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 971 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 976 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 979 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 979 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 980 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 982 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 985 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 985 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 986 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 988 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 991 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 991 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 994 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 997 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 997 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 998 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1000 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1003 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1003 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1004 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1006 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1009 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1009 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1010 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1014 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1017 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1017 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1018 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1020 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1083 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1083 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1084 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1086 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1089 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1089 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1090 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1092 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1095 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1095 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1096 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1100 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1103 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1103 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1104 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1108 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1143 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1144 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1145 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1152 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1154 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1156 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1162 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1164 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1165 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1166 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1168 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1171 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1171 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1172 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1174 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1177 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1177 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1180 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1183 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1183 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1184 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1186 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1189 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1189 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1192 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1195 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1195 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1196 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1198 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1201 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1201 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1202 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1206 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1209 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1209 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1212 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1215 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1215 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1216 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1220 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1223 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1223 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1224 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1226 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1229 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1229 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1232 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1235 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1235 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1236 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1238 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1241 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1241 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1242 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1244 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1247 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1247 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1248 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1250 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1253 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1253 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1254 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1258 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1261 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1261 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1264 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1267 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1267 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1268 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1272 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1275 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1275 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1276 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1278 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1281 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1281 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1282 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1284 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1287 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1287 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1288 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1290 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1293 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1293 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1294 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1296 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1299 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1299 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1300 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1302 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1305 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1305 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1310 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1313 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1313 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1314 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1316 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1319 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1319 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1320 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1324 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1327 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1327 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1328 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1330 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1333 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1333 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1334 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1336 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1339 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1339 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1340 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1342 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1345 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1345 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1348 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1351 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1351 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1352 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1354 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1357 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1357 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1358 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1362 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1365 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1365 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1368 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1431 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1431 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1432 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1434 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1437 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1437 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1438 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1440 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1443 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1443 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1444 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1448 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1451 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1451 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1452 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1456 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1491 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1492 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1493 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1500 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1504 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1510 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1512 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1513 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1514 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1516 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1519 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1519 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1522 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1525 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1525 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1526 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1528 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1531 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1531 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1532 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1537 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1537 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1538 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1543 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1543 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1549 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1549 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1554 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1557 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1557 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1558 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1560 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1563 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1563 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1568 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1571 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1571 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1572 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1574 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1577 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1577 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1578 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1580 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1583 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1583 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1586 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1589 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1589 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1590 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1595 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1595 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1601 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1601 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1606 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1609 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1609 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1610 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1612 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1615 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1615 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1616 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1620 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1623 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1623 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1626 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1629 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1629 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1630 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1632 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1635 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1635 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1636 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1638 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1641 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1641 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1642 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1647 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1647 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1653 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1653 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1658 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1661 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1661 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1662 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1664 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1667 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1667 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1668 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1672 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1675 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1675 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1676 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1678 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1681 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1681 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1682 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1684 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1687 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1687 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1688 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1690 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1693 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1693 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1699 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1699 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1705 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1705 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1710 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1713 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1713 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1714 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1716 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1779 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1779 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1780 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1782 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1785 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1785 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1786 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1788 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1791 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1791 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1792 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1796 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1799 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1799 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1800 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1804 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1839 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1840 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1841 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1848 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1850 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1852 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1858 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1860 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1861 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1862 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1864 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1867 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1867 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1868 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1873 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1873 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1874 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1879 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1879 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1885 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1885 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1891 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1891 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1897 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1897 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1902 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1905 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1905 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1906 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1908 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1911 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1911 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1912 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1916 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1919 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1919 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1920 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1922 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1925 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1925 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1926 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1931 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1931 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1937 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1937 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1943 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1943 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1949 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1949 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1954 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1957 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1957 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1958 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1960 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1963 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1963 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1964 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1968 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1971 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1971 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1972 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1974 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1977 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1977 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1978 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1983 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1983 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1989 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1989 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1995 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1995 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2001 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2001 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2006 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2009 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2009 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2010 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2012 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2015 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2015 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2016 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2020 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2023 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2023 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2024 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2026 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2029 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2029 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2030 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2035 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2035 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2041 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2041 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2047 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2047 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2053 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2053 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2058 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2061 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2061 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2062 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2064 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2127 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2127 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2128 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2130 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2133 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2133 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2134 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2136 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2139 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2139 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2144 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2147 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2147 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2148 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2152 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2188 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2189 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2190 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2199 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2201 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2209 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2210 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2211 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2216 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2216 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2222 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2222 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2228 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2228 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2234 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2234 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2240 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2240 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2246 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2246 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2254 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2254 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2260 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2260 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2268 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2268 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2274 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2274 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2280 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2280 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2286 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2286 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2292 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2292 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2298 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2298 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2306 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2306 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2312 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2312 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2320 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2320 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2326 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2326 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2332 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2332 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2338 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2338 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2344 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2344 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2350 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2350 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2358 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2358 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2364 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2364 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2372 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2372 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2378 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2378 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2384 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2384 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2390 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2390 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2396 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2396 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2402 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2402 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2410 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2410 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2476 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2476 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2482 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2482 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2488 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2488 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2496 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2496 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2537 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2538 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2539 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2559 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2560 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2561 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2566 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2567 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2569 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2571 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2572 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2574 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2576 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2577 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2579 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2581 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2582 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2584 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2586 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2587 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2589 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2591 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2592 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2594 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2596 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2597 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2599 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2601 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2602 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2604 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2606 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2607 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2609 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2611 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2612 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2614 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2616 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2617 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2619 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2621 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2622 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2624 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2626 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2627 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2629 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2631 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2632 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2634 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2636 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2637 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2639 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2641 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2642 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2644 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2646 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2647 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2649 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2651 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2652 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2654 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2656 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2657 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2659 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2661 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2662 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2664 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2666 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2667 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2669 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2671 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2672 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2674 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2676 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2677 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2679 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2681 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2682 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2684 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2686 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2687 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2689 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2691 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2692 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2694 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2696 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2697 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2699 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2701 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2702 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2704 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2706 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2707 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2709 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2711 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2712 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2714 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2716 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2717 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2719 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2765 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2766 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2768 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2770 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2771 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2773 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2775 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2776 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2778 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2780 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2781 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2783 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2819 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2820 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2821 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2839 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2841 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2842 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2843 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2845 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2848 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2849 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2851 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2853 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2854 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2856 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2858 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2859 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2861 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2863 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2864 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2866 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2868 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2869 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2871 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2873 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2874 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2876 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2878 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2879 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2881 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2883 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2884 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2886 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2888 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2889 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2891 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2893 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2894 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2896 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2898 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2899 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2901 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2903 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2904 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2906 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2908 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2909 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2911 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2913 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2914 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2916 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2918 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2919 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2921 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2923 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2924 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2926 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2928 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2929 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2931 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2933 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2934 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2936 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2938 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2939 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2941 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2943 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2944 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2946 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2948 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2949 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2951 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2953 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2954 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2956 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2958 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2959 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2961 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2963 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2964 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2966 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2968 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2969 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2971 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2973 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2974 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2976 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2978 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2979 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2981 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2983 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2984 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2986 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2988 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2989 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2991 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2993 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2994 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2996 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2998 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2999 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3001 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3047 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3048 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3050 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3052 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3053 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3055 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3057 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3058 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3060 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3062 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3063 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3065 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3101 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3102 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3103 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 3121 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3123 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3124 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3125 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3127 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3130 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3131 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3133 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3135 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3136 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3138 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3140 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3141 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3143 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3145 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3146 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3148 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3150 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3151 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3153 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3156 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3158 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3160 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3161 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3163 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3165 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3166 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3168 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3170 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3171 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3173 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3175 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3176 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3178 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3180 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3181 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3183 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3185 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3186 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3188 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3190 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3191 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3193 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3195 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3196 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3198 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3201 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3203 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3205 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3206 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3208 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3210 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3211 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3213 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3215 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3216 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3218 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3220 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3221 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3223 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3225 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3226 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3228 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3230 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3231 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3233 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3235 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3236 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3238 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3240 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3241 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3243 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3245 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3246 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3248 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3250 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3251 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3253 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3255 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3256 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3258 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3260 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3261 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3263 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3265 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3266 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3268 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3270 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3271 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3273 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3275 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3276 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3278 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3280 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3281 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3283 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3329 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3330 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3332 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3334 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3335 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3337 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3339 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3340 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3342 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3344 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3345 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3347 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3383 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3384 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3385 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3403 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3405 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3406 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3407 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3409 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3412 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3413 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3415 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3417 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3418 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3420 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3422 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3423 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3425 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3427 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3428 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3430 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3432 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3433 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3435 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3437 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3438 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3440 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3442 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3443 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3445 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3447 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3448 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3450 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3452 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3453 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3455 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3457 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3458 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3460 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3462 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3463 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3465 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3467 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3468 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3470 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3472 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3473 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3475 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3477 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3478 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3480 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3482 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3483 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3485 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3487 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3488 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3490 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3492 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3493 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3495 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3497 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3498 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3500 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3502 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3503 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3505 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3507 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3508 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3510 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3512 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3513 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3515 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3517 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3518 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3520 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3522 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3523 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3525 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3527 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3528 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3530 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3532 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3533 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3535 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3537 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3538 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3540 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3542 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3543 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3545 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3547 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3548 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3550 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3552 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3553 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3555 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3557 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3558 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3560 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3562 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3563 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3565 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3611 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3612 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3614 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3616 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3617 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3619 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3621 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3622 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3624 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3626 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3627 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3629 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3665 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3666 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3667 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3685 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3687 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3688 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3689 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3691 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3694 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3695 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3697 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3699 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3700 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3702 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3704 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3705 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3707 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3709 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3710 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3712 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3714 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3715 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3717 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3719 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3720 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3722 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3724 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3725 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3727 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3729 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3730 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3732 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3734 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3735 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3737 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3739 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3740 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3742 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3744 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3745 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3747 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3749 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3750 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3752 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3754 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3755 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3757 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3759 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3760 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3762 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3764 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3765 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3767 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3769 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3770 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3772 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3774 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3775 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3777 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3779 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3780 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3782 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3784 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3785 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3787 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3789 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3790 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3792 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3794 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3795 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3797 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3799 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3800 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3802 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3804 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3805 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3807 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3809 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3810 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3812 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3814 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3815 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3817 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3819 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3820 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3822 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3824 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3825 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3827 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3829 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3830 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3832 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3834 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3835 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3837 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3839 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3840 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3842 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3844 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3845 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3847 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3893 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3894 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3896 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3898 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3899 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3901 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3903 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3904 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3906 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3908 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3909 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3911 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3947 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3948 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3949 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3967 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3969 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3970 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3971 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3973 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3976 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3977 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3979 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3981 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3982 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3984 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3986 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3987 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3989 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3991 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3992 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3994 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3996 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3997 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3999 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4001 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4002 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4004 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4006 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4007 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4009 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4011 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4012 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4014 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4016 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4017 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4019 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4021 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4022 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4024 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4026 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4027 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4029 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4031 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4032 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4034 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4036 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4037 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4039 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4041 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4042 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4044 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4046 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4047 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4049 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4051 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4052 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4054 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4056 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4057 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4059 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4061 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4062 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4064 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4066 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4067 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4069 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4071 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4072 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4074 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4076 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4077 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4079 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4081 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4082 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4084 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4086 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4087 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4089 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4091 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4092 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4094 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4096 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4097 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4099 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4101 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4102 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4104 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4106 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4107 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4109 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4112 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4114 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4116 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4117 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4119 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4121 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4122 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4124 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4126 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4127 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4129 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4175 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4176 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4178 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4180 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4181 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4183 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4185 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4186 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4188 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4190 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4191 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4193 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4229 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 4230 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4231 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 4249 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4251 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 4252 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4253 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4255 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4258 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4259 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4261 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4263 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4264 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4266 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4268 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4269 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4271 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4273 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4274 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4276 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4278 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4279 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4281 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4283 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4284 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4286 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4288 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4289 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4291 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4293 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4294 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4296 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4298 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4299 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4301 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4303 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4304 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4306 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4308 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4309 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4311 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4313 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4314 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4316 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4318 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4319 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4321 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4323 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4324 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4326 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4328 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4329 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4331 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4333 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4334 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4336 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4338 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4339 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4341 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4343 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4344 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4346 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4348 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4349 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4351 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4353 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4354 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4356 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4358 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4359 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4361 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4363 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4364 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4366 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4368 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4369 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4371 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4373 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4374 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4376 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4378 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4379 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4381 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4383 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4384 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4386 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4388 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4389 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4391 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4393 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4394 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4396 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4398 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4399 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4401 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4403 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4404 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4406 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4408 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4409 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4411 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4457 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4458 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4460 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4462 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4463 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4465 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4467 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4468 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4470 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4472 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4473 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4475 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 96 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 97 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 105 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 107 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 112 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 114 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 119 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 126 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 128 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 169 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 174 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 176 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 181 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 183 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 188 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 190 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 195 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 202 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 209 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 238 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 250 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 252 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 253 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 266 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 274 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 280 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 364 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 371 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 373 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 374 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 378 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 381 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 413 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 454 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 459 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 475 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 491 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 499 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 507 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 537 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 545 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 546 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 554 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 556 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 561 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 563 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 568 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 570 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 575 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 577 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 582 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 589 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 591 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 598 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 599 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 603 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 606 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 623 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 630 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 637 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 639 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 647 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 651 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 658 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 661 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 665 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 668 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 687 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 695 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 701 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 702 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 708 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 709 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 713 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 716 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 720 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 723 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 727 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 729 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 730 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 734 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 821 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 822 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 826 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 829 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 848 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 860 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 892 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 900 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 908 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 914 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 917 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 922 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 946 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 954 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 962 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 970 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 979 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 984 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 986 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 987 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 1001 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1009 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 1012 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1016 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1019 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1023 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1026 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1030 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1032 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1033 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1044 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1058 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1065 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1078 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1081 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1088 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1120 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1270 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1275 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1282 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1289 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1297 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1309 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1317 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1333 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1341 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1349 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1357 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1363 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1371 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1379 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1395 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1403 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1411 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1433 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1436 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1441 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1450 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1458 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1465 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1468 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1472 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1475 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1479 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1481 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1482 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1486 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1493 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1507 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1514 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1527 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1530 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1536 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1537 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1541 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1544 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1548 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1569 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1589 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1591 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1598 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1599 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1603 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1606 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1617 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1627 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1631 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1713 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1717 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1719 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1720 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1724 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1727 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1731 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1734 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1738 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1746 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1758 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1782 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1790 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1798 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1806 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1807 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1820 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1844 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1852 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1860 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1899 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1907 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1914 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1917 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1921 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1924 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1928 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1935 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1949 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1956 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1976 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1979 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1986 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1990 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1993 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1997 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2033 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2038 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2041 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2048 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2052 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2055 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2066 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2068 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2076 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2162 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2166 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2169 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2173 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2176 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2180 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2183 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2187 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2195 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2207 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2247 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2255 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2256 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2261 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2269 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2293 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2301 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2309 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2317 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2331 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2333 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2348 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2356 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2363 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2370 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2372 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2373 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2377 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2379 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2384 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2386 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2391 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2420 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2425 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2432 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2434 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2439 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2441 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2442 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2446 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2482 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2487 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2490 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2494 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2497 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2501 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2504 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2525 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2536 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2611 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2615 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2617 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2622 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2629 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2631 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2636 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2656 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2696 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2704 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2705 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2710 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2713 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2718 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2734 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2742 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2750 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2758 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2780 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2782 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2788 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2796 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2797 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2805 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2807 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2821 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2822 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2826 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2829 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2854 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2869 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2874 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2881 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2883 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2891 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2895 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2919 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2936 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2939 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2943 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2946 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2950 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2953 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2957 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2964 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2974 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2981 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3064 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3066 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3071 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3078 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3081 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3093 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3105 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3145 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3153 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3159 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3162 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3167 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3183 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3199 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3207 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3229 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3254 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3256 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3261 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3270 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3275 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3282 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3289 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3296 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3303 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3319 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3323 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3330 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3332 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3333 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3337 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3340 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3344 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3368 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3372 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3381 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3388 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3392 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3395 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3399 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3402 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3406 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3409 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3413 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3420 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3423 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3434 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3513 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3520 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3527 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3530 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3554 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3570 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3586 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3594 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3603 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3608 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3611 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3616 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3648 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3656 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3686 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3807 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3813 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3817 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3818 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3820 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3822 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3823 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3825 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3827 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3830 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3832 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3837 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3838 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3845 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3848 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3852 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3853 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3855 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3860 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3862 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3865 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3867 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3872 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3873 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3875 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3880 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3883 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3887 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3892 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3893 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3895 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3900 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3903 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3907 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3908 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3915 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3917 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3920 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3922 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3925 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3927 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3928 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3933 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3935 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3940 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3943 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3947 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3948 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3950 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3953 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3955 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3957 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3962 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3965 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3968 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3970 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3975 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3977 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3982 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3994 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 3995 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3997 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4002 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4005 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4009 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4010 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4012 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4015 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4017 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4019 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4022 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4024 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4027 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4029 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4030 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4032 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4035 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4042 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4044 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4049 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4050 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4052 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4055 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4057 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4064 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4065 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4070 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4072 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4077 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4079 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4084 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4089 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4090 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4097 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4124 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLod(texture< char, 1, cudaReadModeElementType> t, float x, float level)
# 4125 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4133 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType> t, float x, float level)
# 4136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float level)
# 4143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType> t, float x, float level)
# 4150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType> t, float x, float level)
# 4157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType> t, float x, float level)
# 4164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType> t, float x, float level)
# 4171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType> t, float x, float level)
# 4178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType> t, float x, float level)
# 4185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLod(texture< short, 1, cudaReadModeElementType> t, float x, float level)
# 4198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4202 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float level)
# 4205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4209 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType> t, float x, float level)
# 4212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType> t, float x, float level)
# 4219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType> t, float x, float level)
# 4226 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4230 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType> t, float x, float level)
# 4233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType> t, float x, float level)
# 4240 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType> t, float x, float level)
# 4247 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLod(texture< int, 1, cudaReadModeElementType> t, float x, float level)
# 4260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4266 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType> t, float x, float level)
# 4267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType> t, float x, float level)
# 4274 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4280 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType> t, float x, float level)
# 4281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4287 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType> t, float x, float level)
# 4288 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4294 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType> t, float x, float level)
# 4295 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4301 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType> t, float x, float level)
# 4302 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4308 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType> t, float x, float level)
# 4309 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< float, 1, cudaReadModeElementType> t, float x, float level)
# 4394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType> t, float x, float level)
# 4401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType> t, float x, float level)
# 4408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType> t, float x, float level)
# 4415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4439 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4447 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4464 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4471 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4472 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4477 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4479 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4480 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4485 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4487 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4493 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4501 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4525 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4526 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4533 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4539 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4541 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4547 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4549 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4563 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4566 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4579 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLod(texture< char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4580 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4588 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4590 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4591 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4595 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4598 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4609 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4611 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4616 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4623 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4630 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4637 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4639 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLod(texture< short, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4671 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4674 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4687 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4695 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4701 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4702 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLod(texture< int, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4719 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4721 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4728 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4729 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4735 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4736 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4742 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4743 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4749 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4750 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4757 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4763 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4764 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4768 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< float, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4854 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4864 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4886 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4889 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4894 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4896 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4920 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4921 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4926 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4928 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4929 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4934 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4936 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4950 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4964 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4974 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4975 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4982 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4988 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4990 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4991 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4996 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4998 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 5004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 5007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 5012 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 5015 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 5020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5028 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5029 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5044 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5058 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5065 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5068 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5072 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5079 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5081 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5086 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5088 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5089 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5093 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5120 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5130 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5134 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5141 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5144 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5148 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5151 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5155 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5192 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5199 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5206 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5213 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5217 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5296 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5303 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5312 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5317 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5337 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5338 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5343 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5345 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5369 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5370 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5375 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5377 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5378 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5383 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5386 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5391 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5399 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5413 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5423 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5424 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5431 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5432 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5439 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5447 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5464 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5477 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5478 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5486 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5493 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5507 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5514 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5521 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5528 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5530 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5535 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5537 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5538 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5569 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5579 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5583 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5586 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5590 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5593 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5599 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5600 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5617 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5627 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5631 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5641 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5647 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5648 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5655 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5661 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5662 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5741 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5745 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5748 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5752 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5755 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5762 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5784 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5786 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5787 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5792 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5794 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5795 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5800 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5802 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5803 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5811 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5818 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5824 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5826 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5827 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5832 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5834 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5848 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5862 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5864 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5865 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5872 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5873 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5880 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5881 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5886 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5889 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5894 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5896 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5926 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DLod(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5927 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5935 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5949 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5956 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5965 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5970 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5977 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5979 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5984 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5986 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5987 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5991 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DLod(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6027 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6028 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6032 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6035 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6041 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6042 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6048 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6049 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DLod(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6066 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6068 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6076 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6089 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6090 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6096 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6097 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6103 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6104 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6110 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6111 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6190 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6194 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6201 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6235 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6241 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6249 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6252 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6275 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6276 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6283 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6289 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6297 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6311 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6314 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6319 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6321 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6322 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6327 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6329 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6330 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6337 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6338 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6343 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6345 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6375 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLod(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6376 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6384 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6386 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6391 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6426 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6433 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6436 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLod(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6476 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6477 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6481 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6484 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6490 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6491 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6497 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6498 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLod(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6525 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6536 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6538 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6539 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6545 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6546 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6552 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6553 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6559 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6560 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6639 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6643 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6650 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6682 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6684 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6690 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6693 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6698 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6700 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6701 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6708 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6709 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6716 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6717 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6724 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6725 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6730 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6732 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6738 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6741 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6746 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6755 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6760 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6762 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6763 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6768 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6770 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6771 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6776 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6778 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6779 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6784 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6786 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6787 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6792 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6794 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6795 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6800 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6802 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6803 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6811 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6824 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6825 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6854 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6864 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6871 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6875 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6889 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6919 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6925 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6926 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6933 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6939 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6940 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6946 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6947 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6964 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6974 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6981 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6987 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6988 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6994 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6995 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7001 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7002 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7008 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7009 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7088 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7131 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7133 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7134 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7139 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7141 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7155 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7158 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7165 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7166 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7173 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7174 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7179 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7181 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7187 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7190 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7195 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7209 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7217 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7220 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7227 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7228 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7235 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7241 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7249 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7252 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DGrad(texture< char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7282 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7290 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7293 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7297 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7300 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7304 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7311 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7314 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7320 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7321 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7327 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7328 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7332 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7341 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7342 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DGrad(texture< short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7355 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7368 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7369 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7373 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7375 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7376 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7382 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7383 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7389 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7390 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7396 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7397 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7403 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7404 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DGrad(texture< int, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7417 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7423 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7424 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7431 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7438 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7442 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7444 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7451 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7452 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7458 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7459 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7465 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7466 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< float, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7569 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7594 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7621 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7628 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7629 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7636 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7637 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7642 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7650 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7658 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7674 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7675 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7682 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7683 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7690 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7691 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7696 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7698 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7704 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7707 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7720 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7723 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7728 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7736 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DGrad(texture< char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7737 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7745 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7748 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7752 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7755 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7762 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7768 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7769 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7773 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7776 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7780 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7782 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7787 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7789 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7790 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7794 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7796 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7797 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7801 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7809 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DGrad(texture< short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7817 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7821 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7823 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7824 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7830 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7831 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7837 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7838 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7844 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7845 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7851 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7852 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7859 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7871 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DGrad(texture< int, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7872 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7879 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7883 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7886 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7892 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7893 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7899 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7900 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7906 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7907 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7914 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7920 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7921 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7925 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< float, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8033 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8043 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8070 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8077 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8078 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8086 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8091 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8093 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8107 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8124 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8131 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8132 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8139 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8145 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8148 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8153 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8155 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8169 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8172 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8186 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8194 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8201 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8217 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8222 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8229 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8238 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8250 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8258 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8266 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8270 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8272 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8279 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8280 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8286 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8287 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8293 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8294 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8300 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8301 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8308 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8312 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8320 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8321 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8327 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8328 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8332 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8341 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8342 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8348 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8349 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8355 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8356 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8363 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8369 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8370 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8374 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8482 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8492 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8494 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8519 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8526 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8527 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8535 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8540 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8548 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8556 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8570 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8573 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8580 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8581 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8586 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8588 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8589 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8594 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8621 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8635 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8643 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8650 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8671 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8674 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8687 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8695 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8707 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8708 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8719 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8721 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8728 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8729 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8735 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8736 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8742 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8743 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8749 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8750 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8757 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8769 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8770 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8776 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8777 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8781 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8784 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8788 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8790 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8791 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8795 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8797 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8798 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8802 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8804 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8805 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8809 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8811 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8818 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8823 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8919 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8941 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8943 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8949 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8957 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8965 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8968 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8975 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8976 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8981 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8984 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8989 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8991 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8997 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9005 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9019 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9022 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9027 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9029 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9030 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9035 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9038 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9043 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9070 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DGrad(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9084 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9120 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9130 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9134 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9141 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9144 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9148 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DGrad(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9192 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9199 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9206 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DGrad(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9226 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9230 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9240 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9247 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9253 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9254 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9258 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9261 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9272 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9368 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9372 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9381 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9390 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9392 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9406 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9409 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9417 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9424 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9425 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9432 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9433 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9438 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9441 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9446 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9454 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9468 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9471 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9476 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9478 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9479 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9484 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9486 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9487 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9492 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9494 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9519 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 70 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x)
# 71 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 80 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 81 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x)
# 82 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 86 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 88 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x)
# 89 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 93 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 95 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x)
# 96 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 102 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x)
# 103 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 109 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x)
# 110 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 116 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x)
# 117 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 123 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x)
# 124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 128 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 130 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x)
# 131 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 135 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 143 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x)
# 144 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 148 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 150 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x)
# 151 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 155 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 157 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x)
# 158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 162 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x)
# 165 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x)
# 172 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x)
# 179 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x)
# 186 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 192 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x)
# 193 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 197 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 205 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x)
# 206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 210 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 212 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x)
# 213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 217 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 219 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x)
# 220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 224 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 226 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x)
# 227 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 231 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 233 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x)
# 234 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x)
# 241 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 245 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 247 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x)
# 248 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 252 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x)
# 255 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 259 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x)
# 335 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 339 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x)
# 342 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 346 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x)
# 349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 353 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x)
# 356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 360 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 368 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1Dfetch(cudaTextureObject_t texObject, int x)
# 370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 374 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char *retVal, cudaTextureObject_t texObject, float x)
# 383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 392 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 393 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x)
# 394 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 398 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 400 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x)
# 401 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 405 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 407 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x)
# 408 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 414 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x)
# 415 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 421 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x)
# 422 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 428 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x)
# 429 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 435 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x)
# 436 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 442 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x)
# 443 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 455 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short *retVal, cudaTextureObject_t texObject, float x)
# 456 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 462 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x)
# 463 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 467 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 469 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x)
# 470 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 474 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x)
# 477 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x)
# 484 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x)
# 491 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x)
# 498 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 504 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x)
# 505 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 509 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 517 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int *retVal, cudaTextureObject_t texObject, float x)
# 518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 522 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 524 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x)
# 525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 529 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 531 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x)
# 532 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 536 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 538 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x)
# 539 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 543 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x)
# 546 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 550 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x)
# 553 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 557 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x)
# 560 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 564 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x)
# 567 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 571 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float *retVal, cudaTextureObject_t texObject, float x)
# 647 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 651 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 653 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x)
# 654 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 658 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x)
# 661 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 665 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x)
# 668 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 672 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 680 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1D(cudaTextureObject_t texObject, float x)
# 682 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 686 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y)
# 695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 704 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 705 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y)
# 706 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 712 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 713 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 717 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 719 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 720 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 726 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 727 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 733 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y)
# 734 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 740 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 741 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 747 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 748 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 754 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 755 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 767 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y)
# 768 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 774 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 775 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 779 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 781 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 782 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y)
# 796 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 803 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 810 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 816 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 817 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 821 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 829 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y)
# 830 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 834 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 836 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 837 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 841 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 843 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 844 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 848 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 850 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 851 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 855 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y)
# 858 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 862 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 865 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 869 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 872 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 879 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 883 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y)
# 959 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 963 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 965 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 966 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 970 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 973 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 977 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 980 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 984 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2D(cudaTextureObject_t texObject, float x, float y)
# 994 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 998 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1016 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1017 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1018 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1022 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1024 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1025 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1029 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1031 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1032 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1038 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1039 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1045 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1046 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1052 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1053 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1059 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1060 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1064 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1066 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1067 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1079 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1080 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1086 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1087 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1091 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1093 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1094 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1098 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1101 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1105 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1108 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1112 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1115 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1119 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1122 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1126 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1128 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1129 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1133 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1141 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1142 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1146 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1148 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1149 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1153 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1155 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1156 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1160 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1162 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1163 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1167 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1170 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1174 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1177 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1181 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1184 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1188 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1191 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1195 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1271 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1275 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1278 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1282 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1284 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1285 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1289 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1291 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1292 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1296 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1304 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 1305 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 1306 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 1310 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1318 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1319 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1328 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1329 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1330 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1336 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1337 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1343 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1344 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1350 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1351 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1357 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1358 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1364 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1365 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1371 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1372 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1376 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1378 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1379 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1391 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1392 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1398 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1399 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1403 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1405 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1406 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1410 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1413 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1417 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1420 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1424 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1427 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1431 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1434 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1438 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1441 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1445 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1453 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1454 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1458 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1465 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1467 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1468 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1472 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1474 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1475 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1479 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1482 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1486 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1489 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1493 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1496 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1500 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1503 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1507 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1583 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1587 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1589 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1590 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1594 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1596 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1597 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1601 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1603 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1604 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1608 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1616 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 1617 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 1618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 1622 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1630 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1631 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1640 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1641 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1642 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1648 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1649 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1653 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1655 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1656 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1662 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1663 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1669 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1670 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1676 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1677 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1683 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1684 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1688 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1690 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1691 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1703 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1704 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1711 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1715 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1717 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1718 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1722 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1725 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1729 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1732 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1736 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1739 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1743 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1746 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1750 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1753 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1757 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1765 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1766 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1770 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1777 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1779 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1780 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1784 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1787 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1791 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1794 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1798 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1801 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1805 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1808 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1812 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1815 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1819 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1894 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1895 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1899 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1901 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1902 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1906 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1908 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1909 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1913 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1915 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1916 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1920 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1928 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 1929 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 1930 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 1934 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1942 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1943 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1952 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1953 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1960 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1961 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1965 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1967 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1968 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1974 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1975 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1981 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1982 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1986 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1988 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1989 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1995 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1996 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2000 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2002 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2003 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2015 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2016 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2020 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2022 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2023 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2027 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2029 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2030 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2034 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2037 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2041 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2044 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2048 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2051 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2055 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2058 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2062 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2064 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2065 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2069 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2077 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2078 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2082 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2085 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2089 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2091 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2092 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2096 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2098 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2099 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2103 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2105 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2106 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2110 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2112 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2113 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2117 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2119 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2120 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2126 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2127 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2131 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2207 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2211 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2214 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2218 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2221 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2225 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2227 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2228 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2232 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 2241 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 2242 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 2246 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2255 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2264 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2265 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2266 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2272 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2273 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2279 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2280 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2284 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2286 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2287 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2291 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2293 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2294 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2298 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2300 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2301 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2305 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2307 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2308 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2312 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2314 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2315 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2319 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2327 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2328 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2332 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2335 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2339 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2342 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2346 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2353 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2360 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2363 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2367 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2374 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2376 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2377 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2381 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2389 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2390 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2394 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2397 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2401 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2403 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2404 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2408 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2410 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2411 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2415 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2417 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2418 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2422 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2424 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2425 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2429 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2431 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2432 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2436 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2438 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2439 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2443 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2519 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2523 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2526 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2530 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2532 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2533 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2537 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2539 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2544 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 2553 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2558 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2567 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2584 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2585 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2600 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2602 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2603 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2620 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2621 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2636 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2638 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2639 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2654 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2656 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2657 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2672 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2675 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2690 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2692 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2693 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2711 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2726 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2734 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2735 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2750 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2753 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2768 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2770 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2771 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2804 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2806 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2822 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2824 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2825 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2840 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2842 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2843 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2858 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2860 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2861 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2884 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2885 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2900 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2902 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2903 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2918 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2920 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2921 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2936 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2938 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2939 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2956 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2957 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2974 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2975 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2990 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3008 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3010 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3011 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3026 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3034 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3035 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3052 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3053 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3068 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3070 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3086 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3088 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3089 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3104 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3106 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3122 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3125 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3140 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3142 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3143 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3160 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3161 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3184 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3200 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3202 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3203 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3218 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3221 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3236 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3239 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3262 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 3263 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = (0))
# 3264 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 3268 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3276 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3286 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3287 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3288 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3292 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3294 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3295 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3299 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3301 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3302 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3306 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3308 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3309 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3313 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3315 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3316 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3320 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3322 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3323 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3327 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3329 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3330 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3336 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3337 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level)
# 3350 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3354 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3357 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3361 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3363 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3364 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3368 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3371 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3375 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3377 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level)
# 3378 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3384 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3385 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3389 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3391 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3392 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3398 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3399 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3403 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3411 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level)
# 3412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3416 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3418 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3423 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3425 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3430 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3432 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3437 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3439 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level)
# 3440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3444 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3446 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3451 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3453 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3454 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3458 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3465 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level)
# 3541 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3547 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3548 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3555 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3561 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3562 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3574 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 3575 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 3576 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 3580 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3588 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3589 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3598 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3599 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3600 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3604 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3606 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3607 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3611 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3613 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3614 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3620 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3621 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3625 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3627 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3628 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3632 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3634 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3635 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3639 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3641 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3642 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3648 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3649 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3653 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3661 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3662 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3666 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3668 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3669 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3673 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3675 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3676 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3680 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3682 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3683 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3687 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3689 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3690 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3696 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3697 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3701 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3703 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3704 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3711 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3715 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3723 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3728 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3730 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3735 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3737 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3742 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3744 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3749 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3751 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3756 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3758 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3763 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3765 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3766 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3770 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3777 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3852 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3853 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3859 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3860 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3866 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3867 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3873 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3874 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3886 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 3887 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 3888 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 3892 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3900 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3901 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3910 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3911 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3912 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3916 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3918 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3919 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3923 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3925 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3926 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3930 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3932 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3933 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3937 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3939 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3940 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3944 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3946 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3947 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3951 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3953 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3960 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3961 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3965 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3973 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3974 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3978 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3980 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3981 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3985 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3987 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3988 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3994 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3995 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3999 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4001 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4002 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4008 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4009 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4013 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4015 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4016 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4020 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4022 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4023 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4027 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4035 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4040 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4042 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4047 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4049 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4054 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4056 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4061 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4063 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4064 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4068 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4070 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4075 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4077 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4078 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4082 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4085 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4089 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4165 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4172 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4179 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4186 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4198 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 4199 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4200 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4204 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4212 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4222 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4223 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4224 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4228 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4230 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4231 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4235 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4237 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4242 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4244 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4245 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4249 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4251 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4252 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4256 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4258 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4259 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4263 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4265 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4266 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4272 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4273 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4285 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4286 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4290 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4292 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4293 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4297 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4299 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4300 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4304 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4306 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4307 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4311 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4313 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4314 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4318 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4320 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4321 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4325 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4327 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4328 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4332 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4335 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4339 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4347 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4352 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4354 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4359 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4361 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4366 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4368 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4373 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4375 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4376 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4380 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4387 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4389 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4390 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4394 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4397 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4401 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4477 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4484 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4491 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4498 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4510 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 4511 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 4512 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 4516 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4524 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4534 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4535 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4536 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4542 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4543 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4547 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4549 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4550 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4556 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4557 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4561 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4563 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4564 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4568 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4570 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4571 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4575 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4577 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4578 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4584 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4585 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4589 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4597 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4598 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4602 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4604 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4605 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4609 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4611 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4612 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4616 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4619 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4623 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4625 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4626 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4630 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4632 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4633 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4637 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4639 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4640 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4644 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4647 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4651 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4659 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4664 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4666 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4671 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4673 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4678 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4680 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4685 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4687 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4688 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4692 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4699 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4701 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4702 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4706 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4709 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4713 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4796 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4803 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4810 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4822 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 4823 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4824 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4828 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4836 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4837 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4846 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4847 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4848 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4852 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4854 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4855 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4859 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4861 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4862 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4866 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4868 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4869 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4873 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4875 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4880 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4882 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4883 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4887 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4889 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4890 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4894 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4896 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4897 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4901 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4909 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4910 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4914 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4916 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4917 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4921 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4923 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4924 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4928 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4930 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4931 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4935 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4937 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4938 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4942 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4944 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4945 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4949 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4951 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4952 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4956 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4959 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4963 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4971 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4976 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4978 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4983 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4985 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4986 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4990 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4997 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4999 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5000 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5004 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5011 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5013 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5014 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5018 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5020 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5021 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5025 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5101 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5105 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5108 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5112 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5115 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5119 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5122 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5126 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5134 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 5135 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5136 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5140 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5148 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5149 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5159 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5160 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5166 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5167 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5173 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5174 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5180 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5181 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5187 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5188 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5192 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5194 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5195 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5199 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5201 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5202 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5208 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5209 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5221 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5222 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5226 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5228 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5229 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5233 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5235 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5236 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5242 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5243 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5247 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5249 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5250 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5256 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5257 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5261 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5263 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5264 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5268 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5271 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5275 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5283 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5284 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5288 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5290 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5291 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5295 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5297 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5298 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5302 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5304 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5305 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5309 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5311 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5312 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5316 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5318 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5319 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5323 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5325 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5326 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5330 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5332 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5333 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5337 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5413 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5417 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5420 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5424 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5427 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5431 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5434 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5438 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5446 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 5447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5448 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5452 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5470 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5471 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5472 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5478 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5479 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5485 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5486 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5492 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5493 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5499 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5500 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5504 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5506 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5507 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5511 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5513 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5514 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5520 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5521 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5533 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5534 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5538 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5541 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5547 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5548 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5555 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5561 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5562 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5568 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5569 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5573 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5575 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5576 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5580 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5583 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5587 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5595 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5596 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5600 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5602 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5603 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5607 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5609 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5610 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5614 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5616 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5617 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5621 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5623 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5624 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5628 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5630 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5631 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5635 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5637 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5638 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5642 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5644 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5645 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5649 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5725 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5729 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5732 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5736 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5739 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5743 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5746 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5750 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5758 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 5759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5760 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5764 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5782 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5783 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5784 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5790 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5791 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5797 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5798 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5804 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5805 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5811 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5812 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5816 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5818 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5819 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5823 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5825 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5826 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5830 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5832 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5833 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5837 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5845 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5846 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5850 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5852 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5853 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5859 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5860 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5866 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5867 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5873 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5874 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5880 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5881 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5885 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5887 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5888 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5892 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5894 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5895 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5899 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5907 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5908 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5912 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5914 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5915 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5919 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5921 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5922 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5926 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5928 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5929 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5933 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5935 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5936 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5940 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5942 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5943 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5947 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5949 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5950 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5956 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5957 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5961 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6037 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6041 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6044 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6048 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6051 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6055 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6058 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6062 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6070 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 6071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6072 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6076 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6085 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6094 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6095 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6096 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6102 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6103 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6109 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6110 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6116 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6117 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6123 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6128 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6130 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6131 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6135 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6137 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6138 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6142 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6144 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6145 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6149 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6157 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6162 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6165 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6172 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6179 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6186 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6192 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6193 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6197 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6199 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6200 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6204 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6207 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6211 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6219 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6224 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6226 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6227 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6231 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6233 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6234 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6241 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6245 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6247 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6248 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6252 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6255 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6259 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6261 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6262 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6266 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6268 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6269 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6273 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6353 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6360 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6363 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6367 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6374 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 6383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6384 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6388 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6397 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6406 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6407 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6408 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6414 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6415 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6421 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6422 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6428 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6429 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6435 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6436 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6442 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6443 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6449 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6450 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6454 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6456 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6457 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6469 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6470 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6474 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6477 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6484 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6491 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6498 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6504 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6505 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6509 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6511 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6512 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6516 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6519 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6523 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6531 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6532 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6536 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6538 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6539 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6543 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6546 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6550 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6553 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6557 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6560 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6564 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6567 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6571 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6573 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6574 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6578 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6580 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6581 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6585 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6661 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6665 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6668 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6672 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6675 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6679 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6682 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6686 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 6695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6696 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6700 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6709 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6718 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6719 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6720 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6726 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6727 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6733 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6734 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6740 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6741 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6747 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6748 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6754 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6755 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6761 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6762 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6766 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6768 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6769 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6781 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6782 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6796 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6803 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6810 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6816 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6817 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6821 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6823 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6824 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6828 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6830 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6831 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6835 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6843 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6844 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6848 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6850 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6851 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6855 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6858 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6862 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6865 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6869 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6872 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6879 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6883 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6885 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6886 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6890 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6892 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6893 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6897 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6973 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6977 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6980 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6984 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6986 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6987 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6991 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6994 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6998 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 7006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 7007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 7008 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 7012 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 70 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 71 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 83 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 85 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 86 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 98 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 100 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 101 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 113 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 115 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 116 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 128 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 130 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 131 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 143 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 145 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 146 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 158 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 160 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 161 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 173 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 175 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 176 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 188 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 190 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 191 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 205 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 206 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 220 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 221 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 235 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 250 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 251 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 263 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 265 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 266 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 278 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 280 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 281 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 293 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 295 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 296 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 308 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 310 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 311 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 323 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 325 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 338 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 340 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 341 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 353 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 361 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 362 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 374 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 376 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 377 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 389 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 391 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 392 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 404 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 406 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 407 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 419 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 421 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 422 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 434 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 436 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 437 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 449 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 451 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 452 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 466 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 467 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 481 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 482 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 494 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 502 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 515 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 517 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 530 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 532 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 545 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 547 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 548 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 560 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 562 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 563 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 575 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 577 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 578 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 590 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 592 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 593 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 605 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 613 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 614 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 615 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 619 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 627 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 628 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 640 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 642 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 643 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 655 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 657 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 658 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 670 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 672 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 673 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 685 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 687 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 688 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 700 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 702 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 703 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 715 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 717 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 718 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 730 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 732 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 747 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 748 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 762 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 763 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 777 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 778 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 790 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 792 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 793 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 805 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 807 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 808 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 820 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 822 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 823 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 835 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 837 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 838 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 850 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 852 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 853 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 865 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 867 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 868 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 880 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 882 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 895 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 897 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 910 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 918 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 919 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 931 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 933 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 934 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 946 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 948 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 949 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 963 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 964 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 978 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 979 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 993 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 994 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1008 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1009 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1021 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1023 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1024 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1036 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1038 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1039 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1051 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1059 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1072 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1074 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1075 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1087 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1089 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1090 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1102 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1104 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1105 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1117 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1119 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1120 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1132 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1134 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1135 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1147 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1150 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1170 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 1171 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1172 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1176 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1184 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1185 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1197 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1199 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1200 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1212 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1214 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1215 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1227 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1229 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1230 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1242 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1244 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1245 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1257 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1260 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1274 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1275 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1289 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1290 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1304 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1305 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1317 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1319 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1320 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1332 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1334 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1335 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1347 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1349 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1350 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1362 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1364 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1365 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1377 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1379 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1380 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1392 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1394 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1395 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1407 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1409 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1410 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1422 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1424 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1437 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1439 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1440 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1452 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1454 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1455 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1467 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1475 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1476 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1488 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1490 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1491 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1505 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1506 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1520 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1521 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1535 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1536 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1548 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1550 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1551 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1563 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1565 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1566 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1578 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1580 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1581 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1593 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1595 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1596 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1608 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1616 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1617 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1629 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1631 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1632 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1644 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1646 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1647 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1659 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1661 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1662 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1674 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1676 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1677 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1689 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1691 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1692 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1704 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1706 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1707 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1727 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 1728 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1729 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1741 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1742 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1754 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1756 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1757 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1769 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1771 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1772 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1784 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1786 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1787 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1799 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1801 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1802 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1814 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1816 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1817 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1829 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1831 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1832 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1846 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1847 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1859 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1861 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1862 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1874 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1876 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1877 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1889 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1891 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1892 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1904 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1906 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1907 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1919 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1921 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1922 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1934 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1936 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1937 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1949 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1951 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1952 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1964 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1966 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1967 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1979 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1981 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1982 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1994 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1996 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1997 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2009 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2011 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2012 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2024 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2032 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2033 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2045 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2047 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2048 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2062 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2063 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2075 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2077 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2078 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2090 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2092 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2093 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2105 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2107 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2108 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2120 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2122 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2135 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2137 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2150 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2152 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2153 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2165 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2173 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2174 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2186 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2188 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2189 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2201 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2204 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2216 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2219 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2231 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2234 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2263 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2264 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2276 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2284 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 2285 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2286 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2290 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2298 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2299 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2311 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2313 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2314 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2328 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2329 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2341 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2343 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2344 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2356 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2358 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2359 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2371 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2373 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2374 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2386 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2388 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2389 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2401 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2403 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2404 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2416 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2418 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2419 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2431 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2433 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2434 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2446 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2448 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2449 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2461 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2463 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2476 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2478 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2491 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2493 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2494 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2506 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2508 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2509 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2521 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2523 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2524 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2536 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2538 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2539 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2551 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2553 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2554 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2566 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2568 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2569 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2581 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2589 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2590 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2602 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2604 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2605 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2617 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2619 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2620 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2632 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2634 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2635 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2647 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2649 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2662 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2664 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2677 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2679 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2680 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2692 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2694 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2695 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2707 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2709 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2710 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2722 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2730 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2731 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2743 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2746 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2758 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2761 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2773 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2776 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2788 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2790 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2791 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2803 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2805 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2806 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2818 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2820 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2821 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2833 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2841 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 2842 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2843 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2847 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2855 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2856 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2868 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2870 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2871 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2885 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2886 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2900 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2901 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2913 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2915 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2916 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2928 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2930 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2931 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2943 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2945 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2946 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2958 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2960 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2973 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2975 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2988 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2990 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3003 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3005 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3018 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3020 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3021 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3033 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3035 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3036 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3048 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3050 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3051 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3063 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3065 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3066 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3078 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3080 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3081 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3093 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3095 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3096 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3108 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3111 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3126 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3146 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3147 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3159 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3161 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3174 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3176 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3177 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3189 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3191 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3192 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3204 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3206 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3207 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3219 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3221 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3222 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3234 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3237 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3251 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3252 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3264 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3266 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3267 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3279 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3288 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3300 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3303 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3315 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3317 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3318 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3330 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3332 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3333 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3345 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3347 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3348 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3360 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3362 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3363 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3375 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3377 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3378 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3390 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3398 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 3399 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3400 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3404 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3412 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3413 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3427 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3428 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3440 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3442 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3443 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3455 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3457 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3458 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3470 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3472 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3473 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3485 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3487 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3488 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3500 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3502 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3515 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3517 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3530 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3532 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3545 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3547 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3548 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3560 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3562 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3563 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3575 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3577 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3578 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3590 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3592 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3593 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3605 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3607 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3608 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3620 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3622 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3623 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3635 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3637 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3638 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3652 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3653 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3667 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3668 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3680 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3682 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3683 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3695 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3703 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3704 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3716 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3718 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3731 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3734 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3746 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3748 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3749 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3761 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3763 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3764 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3776 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3778 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3779 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3791 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3793 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3794 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3806 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3808 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3809 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3821 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3823 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3824 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3836 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3845 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3857 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3859 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3860 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3872 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3874 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3875 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3887 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3889 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3890 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3902 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3904 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3905 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3917 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3919 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3920 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3932 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3934 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3935 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3947 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3955 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 3956 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3957 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3969 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3970 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3980 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3982 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3983 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3993 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3995 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3996 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4008 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4009 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4019 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4021 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4022 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4032 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4034 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4035 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4045 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4047 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4048 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4058 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4061 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4071 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4073 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4074 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4084 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4086 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4087 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4097 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4099 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4100 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4112 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4113 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4126 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4136 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4139 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4151 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4152 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4164 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4165 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4175 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4177 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4178 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4188 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4190 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4191 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4201 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4204 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4214 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4222 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4223 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4235 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4262 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4274 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4275 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4285 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4288 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4298 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4300 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4301 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4311 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4313 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4314 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4324 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4327 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4337 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4345 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4346 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4356 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4358 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4359 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4369 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4371 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4372 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4382 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4384 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4385 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4395 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4397 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4398 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4408 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4410 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4411 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4421 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4423 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4424 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4434 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4442 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4443 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4453 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4455 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4456 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4466 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4468 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4469 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4481 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4482 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4492 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4494 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4495 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4505 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4507 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4508 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4520 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4521 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4531 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4534 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4544 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4546 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4547 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4557 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4559 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4560 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4570 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4572 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4573 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4583 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4585 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4586 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4596 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4598 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4599 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4609 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4611 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4612 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4622 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4624 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4625 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4635 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4637 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4638 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4648 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4651 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4661 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4663 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4664 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4674 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4676 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4677 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4687 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4695 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4696 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4706 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4708 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4709 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4721 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4722 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4732 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4734 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4735 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4747 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4748 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4758 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4761 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4771 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4773 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4774 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4784 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4786 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4787 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4797 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4799 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4800 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4810 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4818 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4819 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4829 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4831 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4832 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4842 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4845 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4855 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4857 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4858 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4868 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4870 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4871 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4881 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4884 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4894 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4896 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4897 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4907 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4915 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4916 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4926 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4928 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4929 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4939 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4941 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4942 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4952 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4954 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4955 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4965 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4967 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4968 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4978 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4980 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4981 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4993 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4994 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5004 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5007 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5017 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5019 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5020 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5030 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5032 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5033 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5043 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5045 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5046 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5056 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5058 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5059 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5069 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5071 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5072 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5082 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5084 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5085 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5095 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5097 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5098 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5108 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5111 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5121 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5124 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5134 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5136 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5137 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5147 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5150 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5160 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5168 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5169 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5179 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5181 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5182 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5192 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5194 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5195 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5205 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5207 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5208 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5220 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5221 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5231 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5234 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5244 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5247 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5257 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5260 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5270 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5273 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5283 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5291 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5292 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5304 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5305 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5315 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5317 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5318 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5328 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5330 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5331 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5341 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5343 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5344 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5354 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5356 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5357 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5367 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5369 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5370 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5380 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5388 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5389 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5399 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5401 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5402 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5412 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5414 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5415 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5427 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5428 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5438 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5440 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5441 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5451 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5453 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5454 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5466 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5467 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5477 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5480 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5490 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5492 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5493 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5505 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5506 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5516 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5519 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5529 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5531 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5532 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5542 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5544 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5545 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5555 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5557 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5558 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5568 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5570 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5571 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5581 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5583 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5584 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5594 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5596 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5597 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5607 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5609 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5610 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5620 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5622 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5623 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5633 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5641 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5642 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5652 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5654 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5655 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5667 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5668 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5678 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5680 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5681 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5691 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5693 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5694 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5704 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5706 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5707 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5717 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5720 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5730 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5732 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5743 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5746 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5756 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5764 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5765 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5777 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5778 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5788 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5790 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5791 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5801 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5803 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5804 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5814 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5816 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5817 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5827 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5829 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5830 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5840 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5842 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5843 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5853 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5861 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5862 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5872 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5874 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5875 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5885 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5887 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5888 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5900 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5901 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5911 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5913 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5914 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5924 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5926 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5927 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5937 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5939 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5940 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5950 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5952 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5953 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5963 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5965 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5966 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5978 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5979 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5989 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5992 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6002 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6004 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6005 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6015 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6017 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6018 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6028 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6030 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6031 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6041 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6043 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6044 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6054 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6056 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6057 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6067 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6069 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6070 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6080 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6082 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6083 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6093 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6095 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6096 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6106 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6114 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6115 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6127 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6128 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6140 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6141 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6151 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6153 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6154 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6164 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6166 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6167 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6177 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6179 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6180 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6190 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6192 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6193 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6205 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6206 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6216 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6219 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6229 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6237 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6238 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6250 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6251 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6263 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6264 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6274 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6276 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6277 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6289 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6290 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6300 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6303 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6313 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6315 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6316 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6334 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6335 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6345 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6347 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6348 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6358 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6360 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6361 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6371 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6373 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6374 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6384 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6386 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6387 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6397 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6399 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6400 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6410 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6412 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6413 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6423 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6426 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6436 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6438 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6439 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6449 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6451 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6452 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6462 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6465 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6475 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6477 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6478 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6488 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6490 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6491 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6501 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6504 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6514 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6516 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6517 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6527 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6529 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6530 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6540 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6542 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6543 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6553 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6555 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6556 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6566 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6568 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6569 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6579 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6587 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6588 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6598 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6600 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6601 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6611 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6613 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6614 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6624 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6626 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6627 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6637 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6639 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6640 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6652 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6653 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6663 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6666 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6676 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6678 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6679 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6689 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6691 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6692 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6702 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6710 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6711 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6721 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6723 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6724 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6734 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6736 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6737 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6747 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6749 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6750 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6762 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6763 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6773 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6776 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6786 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6788 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6789 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6799 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6807 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6808 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6818 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6820 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6821 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6831 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6833 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6834 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6846 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6847 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6857 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6859 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6860 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6870 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6872 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6873 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6885 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6886 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6896 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6899 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6909 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6911 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6912 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6922 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6924 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6925 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6935 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6937 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6938 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6948 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6950 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6951 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6963 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6964 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6974 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6977 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6987 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6989 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6990 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7000 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7002 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7003 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7013 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7015 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7016 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7026 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7028 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7029 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7039 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7041 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7042 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7052 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7061 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7071 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7073 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7074 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7084 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7086 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7087 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7097 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7099 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7100 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7112 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7113 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7126 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7136 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7139 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7151 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7152 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7164 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7165 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7175 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7183 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7184 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7194 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7196 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7197 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7207 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7209 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7210 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7220 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7222 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7223 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7235 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7262 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 66 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 67 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 68 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 69 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 70 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 120 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 121 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaSetupArgument(T
# 122 "/usr/local/cuda-5.0//include/cuda_runtime.h"
arg, size_t
# 123 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset)
# 125 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 126 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 127 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 159 "/usr/local/cuda-5.0//include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 160 "/usr/local/cuda-5.0//include/cuda_runtime.h"
event, unsigned
# 161 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 163 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 164 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags);
# 165 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 222 "/usr/local/cuda-5.0//include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 223 "/usr/local/cuda-5.0//include/cuda_runtime.h"
ptr, size_t
# 224 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, unsigned
# 225 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 227 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 228 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 229 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 231 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 232 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaHostAlloc(T **
# 233 "/usr/local/cuda-5.0//include/cuda_runtime.h"
ptr, size_t
# 234 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, unsigned
# 235 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 237 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 238 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 239 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 241 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 242 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 243 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pDevice, void *
# 244 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pHost, unsigned
# 245 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 247 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 248 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 249 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 251 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 252 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMalloc(T **
# 253 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t
# 254 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size)
# 256 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 257 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 258 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 260 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 261 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMallocHost(T **
# 262 "/usr/local/cuda-5.0//include/cuda_runtime.h"
ptr, size_t
# 263 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, unsigned
# 264 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags = (0))
# 266 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 267 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 268 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 270 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 271 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMallocPitch(T **
# 272 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t *
# 273 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pitch, size_t
# 274 "/usr/local/cuda-5.0//include/cuda_runtime.h"
width, size_t
# 275 "/usr/local/cuda-5.0//include/cuda_runtime.h"
height)
# 277 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 278 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 279 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 316 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 317 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 318 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, const void *
# 319 "/usr/local/cuda-5.0//include/cuda_runtime.h"
src, size_t
# 320 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 321 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 322 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyHostToDevice))
# 324 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 325 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 326 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 368 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 369 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 370 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, const void *
# 371 "/usr/local/cuda-5.0//include/cuda_runtime.h"
src, size_t
# 372 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 373 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 374 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyHostToDevice), cudaStream_t
# 375 "/usr/local/cuda-5.0//include/cuda_runtime.h"
stream = 0)
# 377 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 378 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 379 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 414 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 415 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 416 "/usr/local/cuda-5.0//include/cuda_runtime.h"
dst, const T &
# 417 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, size_t
# 418 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 419 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 420 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyDeviceToHost))
# 422 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 423 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 424 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 466 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 467 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 468 "/usr/local/cuda-5.0//include/cuda_runtime.h"
dst, const T &
# 469 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, size_t
# 470 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 471 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 472 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyDeviceToHost), cudaStream_t
# 473 "/usr/local/cuda-5.0//include/cuda_runtime.h"
stream = 0)
# 475 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 476 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 477 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 499 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 500 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 501 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, const T &
# 502 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol)
# 504 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 505 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 506 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 528 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 529 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 530 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, const T &
# 531 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol)
# 533 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 534 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const void *)(&symbol));
# 535 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 571 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 572 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture(size_t *
# 573 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 574 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 575 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 576 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc, size_t
# 577 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 579 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 580 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 581 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 616 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 617 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture(size_t *
# 618 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 619 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 620 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t
# 621 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 623 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 624 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 625 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 672 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 673 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 674 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 675 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 676 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 677 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc, size_t
# 678 "/usr/local/cuda-5.0//include/cuda_runtime.h"
width, size_t
# 679 "/usr/local/cuda-5.0//include/cuda_runtime.h"
height, size_t
# 680 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pitch)
# 682 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 683 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 684 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 730 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 731 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 732 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 733 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 734 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t
# 735 "/usr/local/cuda-5.0//include/cuda_runtime.h"
width, size_t
# 736 "/usr/local/cuda-5.0//include/cuda_runtime.h"
height, size_t
# 737 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pitch)
# 739 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 740 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 741 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 772 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 773 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 774 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaArray_const_t
# 775 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 776 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc)
# 778 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 779 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 780 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 810 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 811 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 812 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaArray_const_t
# 813 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array)
# 815 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 816 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 817 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 819 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 820 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 851 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 852 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 853 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 854 "/usr/local/cuda-5.0//include/cuda_runtime.h"
mipmappedArray, const cudaChannelFormatDesc &
# 855 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc)
# 857 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 858 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 859 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 889 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 890 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 891 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 892 "/usr/local/cuda-5.0//include/cuda_runtime.h"
mipmappedArray)
# 894 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 895 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 896 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaArray_t levelArray;
# 897 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaError_t err = cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 899 "/usr/local/cuda-5.0//include/cuda_runtime.h"
if (err != (cudaSuccess)) {
# 900 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return err;
# 901 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 902 "/usr/local/cuda-5.0//include/cuda_runtime.h"
err = cudaGetChannelDesc(&desc, levelArray);
# 904 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 905 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 928 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 929 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 930 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex)
# 932 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 933 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 934 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 962 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 963 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 964 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 965 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex)
# 967 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 968 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 969 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1015 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1016 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 1017 "/usr/local/cuda-5.0//include/cuda_runtime.h"
func, cudaFuncCache
# 1018 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cacheConfig)
# 1020 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1021 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1022 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1024 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1025 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 1026 "/usr/local/cuda-5.0//include/cuda_runtime.h"
func, cudaSharedMemConfig
# 1027 "/usr/local/cuda-5.0//include/cuda_runtime.h"
config)
# 1029 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1030 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaFuncSetSharedMemConfig((const void *)func, config);
# 1031 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1067 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1068 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaLaunch(T *
# 1069 "/usr/local/cuda-5.0//include/cuda_runtime.h"
func)
# 1071 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1072 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaLaunch((const void *)func);
# 1073 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1105 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1106 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 1107 "/usr/local/cuda-5.0//include/cuda_runtime.h"
attr, T *
# 1108 "/usr/local/cuda-5.0//include/cuda_runtime.h"
entry)
# 1110 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1111 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const void *)entry);
# 1112 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1134 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1135 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1136 "/usr/local/cuda-5.0//include/cuda_runtime.h"
surf, cudaArray_const_t
# 1137 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1138 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc)
# 1140 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1141 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1142 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1163 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1164 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1165 "/usr/local/cuda-5.0//include/cuda_runtime.h"
surf, cudaArray_const_t
# 1166 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array)
# 1168 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1169 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1170 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1172 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1173 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 40 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stdarg.h" 3
extern "C" { typedef __builtin_va_list __gnuc_va_list; }
# 21 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
extern "C" { typedef
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
struct {
# 15 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
int __count;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
union {
# 18 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
unsigned __wch;
# 19 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
char __wchb[4];
# 20 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
} __value;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
} __mbstate_t; }
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
extern "C" { typedef
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
struct _G_fpos_t {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
__off_t __pos;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
__mbstate_t __state;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
} __fpos_t; }
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
extern "C" { typedef
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
struct _G_fpos64_t {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
__off64_t __pos;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
__mbstate_t __state;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
} __fpos64_t; }
# 4 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 3
struct _IO_FILE;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 3
extern "C" { typedef _IO_FILE __FILE; }
# 4 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 3
struct _IO_FILE;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 3
extern "C" { typedef _IO_FILE FILE; }
# 35 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_FILE;
# 36 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_marker;
# 37 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_codecvt;
# 38 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_wide_data;
# 43 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
extern "C" { typedef void _IO_lock_t; }
# 49 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
extern "C" { struct _IO_FILE {
# 51 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _flags;
# 54 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_ptr;
# 55 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_end;
# 56 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_base;
# 57 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_base;
# 58 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_ptr;
# 59 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_end;
# 60 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_buf_base;
# 61 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_buf_end;
# 64 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_save_base;
# 65 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_backup_base;
# 66 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_save_end;
# 68 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_marker *_markers;
# 70 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_FILE *_chain;
# 72 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _fileno;
# 73 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _flags2;
# 74 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
__off_t _old_offset;
# 77 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
unsigned short _cur_column;
# 78 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
signed char _vtable_offset;
# 79 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char _shortbuf[1];
# 81 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_lock_t *_lock;
# 89 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
__off64_t _offset;
# 91 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_codecvt *_codecvt;
# 92 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_wide_data *_wide_data;
# 93 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_FILE *_freeres_list;
# 94 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
void *_freeres_buf;
# 95 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
size_t __pad5;
# 96 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _mode;
# 98 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 99 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
}; }
# 27 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef __ssize_t cookie_read_function_t(void * , char * , size_t ); }
# 36 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef __ssize_t cookie_write_function_t(void * , const char * , size_t ); }
# 45 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef int cookie_seek_function_t(void * , __off64_t * , int ); }
# 48 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef int cookie_close_function_t(void * ); }
# 61 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef
# 55 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
struct _IO_cookie_io_functions_t {
# 57 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_read_function_t *read;
# 58 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_write_function_t *write;
# 59 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_seek_function_t *seek;
# 60 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_close_function_t *close;
# 61 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
} cookie_io_functions_t; }
# 52 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 84 "/usr/include/stdio.h" 3
extern "C" { typedef __fpos_t fpos_t; }
# 89 "/usr/include/stdio.h" 3
extern "C" { typedef __fpos64_t fpos64_t; }
# 137 "/usr/include/stdio.h" 3
extern "C" { extern FILE *stdin; }
# 138 "/usr/include/stdio.h" 3
extern "C" { extern FILE *stdout; }
# 139 "/usr/include/stdio.h" 3
extern "C" { extern FILE *stderr; }
# 146 "/usr/include/stdio.h" 3
extern "C" int remove(const char * ) throw();
# 148 "/usr/include/stdio.h" 3
extern "C" int rename(const char * , const char * ) throw();
# 152 "/usr/include/stdio.h" 3
extern "C" int renameat(int , const char * , int , const char * ) throw();
# 164 "/usr/include/stdio.h" 3
extern "C" int renameat2(int , const char * , int , const char * , unsigned ) throw();
# 173 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile() __attribute((__warn_unused_result__));
# 183 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64() __attribute((__warn_unused_result__));
# 187 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char * ) throw() __attribute((__warn_unused_result__));
# 192 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char * ) throw() __attribute((__warn_unused_result__));
# 204 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char * , const char * ) throw()
# 205 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 213 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE * );
# 218 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE * );
# 227 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE * );
# 237 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 246 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__ , const char *__restrict__ )
# 247 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 252 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ )
# 254 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 270 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__ , const char *__restrict__ )
# 271 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 272 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ )
# 274 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 279 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int , const char * ) throw() __attribute((__warn_unused_result__));
# 285 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__ , const char *__restrict__ , cookie_io_functions_t ) throw()
# 287 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 292 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void * , size_t , const char * ) throw()
# 293 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 298 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char ** , size_t * ) throw() __attribute((__warn_unused_result__));
# 304 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__ , char *__restrict__ ) throw();
# 308 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__ , char *__restrict__ , int , size_t ) throw();
# 314 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__ , char *__restrict__ , size_t ) throw();
# 318 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE * ) throw();
# 326 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fprintf(FILE *__restrict__ , const char *__restrict__ , ...); }
# 332 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int printf(const char *__restrict__ , ...); }
# 334 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int sprintf(char *__restrict__ , const char *__restrict__ , ...) throw(); }
# 341 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vfprintf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list ); }
# 347 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vprintf(const char *__restrict__ , __gnuc_va_list ); }
# 349 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vsprintf(char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw(); }
# 354 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int snprintf(char *__restrict__ , size_t , const char *__restrict__ , ...) throw()
# 356 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4))); }
# 358 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vsnprintf(char *__restrict__ , size_t , const char *__restrict__ , __gnuc_va_list ) throw()
# 360 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0))); }
# 366 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vasprintf(char **__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 368 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))) __attribute((__warn_unused_result__)); }
# 369 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int __asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 371 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__)); }
# 372 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 374 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__)); }
# 379 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vdprintf(int , const char *__restrict__ , __gnuc_va_list )
# 381 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))); }
# 382 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int dprintf(int , const char *__restrict__ , ...)
# 383 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))); }
# 391 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__ , const char *__restrict__ , ...)
# 392 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 397 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__ , ...) __attribute((__warn_unused_result__));
# 399 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__ , const char *__restrict__ , ...) throw();
# 432 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list )
# 434 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0))) __attribute((__warn_unused_result__));
# 440 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__ , __gnuc_va_list )
# 441 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0))) __attribute((__warn_unused_result__));
# 444 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 446 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 485 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE * );
# 486 "/usr/include/stdio.h" 3
extern "C" int getc(FILE * );
# 492 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getchar(); }
# 499 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getc_unlocked(FILE * ); }
# 500 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getchar_unlocked(); }
# 510 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fgetc_unlocked(FILE * ); }
# 521 "/usr/include/stdio.h" 3
extern "C" int fputc(int , FILE * );
# 522 "/usr/include/stdio.h" 3
extern "C" int putc(int , FILE * );
# 528 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int putchar(int ); }
# 537 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fputc_unlocked(int , FILE * ); }
# 545 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int putc_unlocked(int , FILE * ); }
# 546 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int putchar_unlocked(int ); }
# 553 "/usr/include/stdio.h" 3
extern "C" int getw(FILE * );
# 556 "/usr/include/stdio.h" 3
extern "C" int putw(int , FILE * );
# 564 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *fgets(char *__restrict__ , int , FILE *__restrict__ )
# 565 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 577 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *gets(char * ) __attribute((__warn_unused_result__)) __attribute((__deprecated__)); }
# 587 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *fgets_unlocked(char *__restrict__ , int , FILE *__restrict__ )
# 588 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 603 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ )
# 605 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 606 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ )
# 608 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 616 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline __ssize_t getline(char **__restrict__ , size_t *__restrict__ , FILE *__restrict__ )
# 618 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 626 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__ , FILE *__restrict__ );
# 632 "/usr/include/stdio.h" 3
extern "C" int puts(const char * );
# 639 "/usr/include/stdio.h" 3
extern "C" int ungetc(int , FILE * );
# 646 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t fread(void *__restrict__ , size_t , size_t , FILE *__restrict__ )
# 647 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 652 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 662 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__ , FILE *__restrict__ );
# 673 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t fread_unlocked(void *__restrict__ , size_t , size_t , FILE *__restrict__ )
# 674 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 675 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 684 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE * , long , int );
# 689 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE * ) __attribute((__warn_unused_result__));
# 694 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE * );
# 707 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE * , __off_t , int );
# 712 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE * ) __attribute((__warn_unused_result__));
# 731 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__ , fpos_t *__restrict__ );
# 736 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE * , const fpos_t * );
# 750 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE * , __off64_t , int );
# 751 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE * ) __attribute((__warn_unused_result__));
# 752 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__ , fpos64_t *__restrict__ );
# 753 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE * , const fpos64_t * );
# 757 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE * ) throw();
# 759 "/usr/include/stdio.h" 3
extern "C" int feof(FILE * ) throw() __attribute((__warn_unused_result__));
# 761 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE * ) throw() __attribute((__warn_unused_result__));
# 765 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE * ) throw();
# 766 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int feof_unlocked(FILE * ) throw() __attribute((__warn_unused_result__)); }
# 767 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int ferror_unlocked(FILE * ) throw() __attribute((__warn_unused_result__)); }
# 775 "/usr/include/stdio.h" 3
extern "C" void perror(const char * );
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 27 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 30 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 31 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 786 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE * ) throw() __attribute((__warn_unused_result__));
# 791 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE * ) throw() __attribute((__warn_unused_result__));
# 800 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char * , const char * ) __attribute((__warn_unused_result__));
# 806 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE * );
# 812 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char * ) throw();
# 818 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char * );
# 823 "/usr/include/stdio.h" 3
struct obstack;
# 826 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int obstack_printf(obstack *__restrict__ , const char *__restrict__ , ...) throw()
# 828 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))); }
# 829 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int obstack_vprintf(obstack *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 832 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))); }
# 840 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE * ) throw();
# 844 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE * ) throw() __attribute((__warn_unused_result__));
# 847 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE * ) throw();
# 858 "/usr/include/stdio.h" 3
extern "C" int __uflow(FILE *);
# 859 "/usr/include/stdio.h" 3
extern "C" int __overflow(FILE *, int);
# 47 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 47 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar()
# 48 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 49 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return getc(stdin);
# 50 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 56 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 56 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fgetc_unlocked(FILE *__fp)
# 57 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 58 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 59 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 65 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getc_unlocked(FILE *__fp)
# 67 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 68 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 69 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 72 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar_unlocked()
# 74 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 75 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdin->_IO_read_ptr) >= (stdin->_IO_read_end), 0)) ? __uflow(stdin) : (*((unsigned char *)((stdin->_IO_read_ptr)++)));
# 76 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 81 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar(int __c)
# 83 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 84 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return putc(__c, stdout);
# 85 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fputc_unlocked(int __c, FILE *__stream)
# 92 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 93 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 94 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 100 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putc_unlocked(int __c, FILE *__stream)
# 102 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 107 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar_unlocked(int __c)
# 109 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 110 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdout->_IO_write_ptr) >= (stdout->_IO_write_end), 0)) ? __overflow(stdout, (unsigned char)__c) : ((unsigned char)((*((stdout->_IO_write_ptr)++)) = __c));
# 111 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline __ssize_t
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getline(char **__lineptr, size_t *__n, FILE *__stream)
# 119 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 120 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return __getdelim(__lineptr, __n, '\n', __stream);
# 121 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
feof_unlocked(FILE *__stream) throw()
# 129 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 130 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 16) != 0;
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 134 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
ferror_unlocked(FILE *__stream) throw()
# 136 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 137 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 32) != 0;
# 138 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 26 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __sprintf_chk(char *__restrict__ , int , size_t , const char *__restrict__ , ...) throw();
# 28 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vsprintf_chk(char *__restrict__ , int , size_t , const char *__restrict__ , __gnuc_va_list ) throw();
# 34 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 34 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
sprintf(char *__restrict__ __s, const char *__restrict__ __fmt, ...) throw()
# 35 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 36 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___sprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 38 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 45 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vsprintf(char *__restrict__ __s, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 48 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 49 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 51 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __snprintf_chk(char *__restrict__ , size_t , int , size_t , const char *__restrict__ , ...) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vsnprintf_chk(char *__restrict__ , size_t , int , size_t , const char *__restrict__ , __gnuc_va_list ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 63 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
snprintf(char *__restrict__ __s, size_t __n, const char *__restrict__ __fmt, ...) throw()
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 67 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___snprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 69 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 77 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 76 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 77 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vsnprintf(char *__restrict__ __s, size_t __n, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 79 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 80 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsnprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 88 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __fprintf_chk(FILE *__restrict__ , int , const char *__restrict__ , ...);
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __printf_chk(int , const char *__restrict__ , ...);
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vfprintf_chk(FILE *__restrict__ , int , const char *__restrict__ , __gnuc_va_list );
# 93 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vprintf_chk(int , const char *__restrict__ , __gnuc_va_list );
# 98 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 97 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 98 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fprintf(FILE *__restrict__ __stream, const char *__restrict__ __fmt, ...)
# 99 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 100 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 102 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
printf(const char *__restrict__ __fmt, ...)
# 106 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 107 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __printf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 116 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vprintf(const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 120 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(stdout, 2 - 1, __fmt, __ap);
# 124 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 126 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vfprintf(FILE *__restrict__ __stream, const char *__restrict__
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__fmt, __gnuc_va_list __ap)
# 129 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 130 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 134 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __dprintf_chk(int , int , const char *__restrict__ , ...)
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 136 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vdprintf_chk(int , int , const char *__restrict__ , __gnuc_va_list )
# 138 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 142 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 141 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 142 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 143 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 144 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __dprintf_chk(__fd, 2 - 1, __fmt, __builtin_va_arg_pack());
# 146 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 153 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 152 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 153 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 154 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 155 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vdprintf_chk(__fd, 2 - 1, __fmt, __ap);
# 156 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 161 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __asprintf_chk(char **__restrict__ , int , const char *__restrict__ , ...) throw()
# 163 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4))) __attribute((__warn_unused_result__));
# 164 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vasprintf_chk(char **__restrict__ , int , const char *__restrict__ , __gnuc_va_list ) throw()
# 166 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0))) __attribute((__warn_unused_result__));
# 167 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __obstack_printf_chk(obstack *__restrict__ , int , const char *__restrict__ , ...) throw()
# 170 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 171 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __obstack_vprintf_chk(obstack *__restrict__ , int , const char *__restrict__ , __gnuc_va_list ) throw()
# 175 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 179 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 178 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 179 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 180 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 181 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 183 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 186 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 185 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 186 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 188 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 189 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 191 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 194 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 193 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 194 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, ...) throw()
# 196 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 197 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_printf_chk(__obstack, 2 - 1, __fmt, __builtin_va_arg_pack());
# 199 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 210 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 209 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 210 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vasprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 212 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 213 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vasprintf_chk(__ptr, 2 - 1, __fmt, __ap);
# 214 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 217 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 216 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 217 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 219 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 220 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_vprintf_chk(__obstack, 2 - 1, __fmt, __ap);
# 222 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 229 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__gets_chk(char * , size_t) __attribute((__warn_unused_result__));
# 230 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__gets_warn(char * ) __asm__("gets")
# 231 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("please use fgets or getline instead, gets can\'t specify buffer size")));
# 235 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 234 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 235 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
gets(char *__str)
# 236 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 237 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__str, 2 > 1) != ((size_t)(-1))) {
# 238 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __gets_chk(__str, __builtin_object_size(__str, 2 > 1)); }
# 239 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __gets_warn(__str);
# 240 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 243 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_chk(char *__restrict__ , size_t , int , FILE *__restrict__ )
# 244 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 245 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_alias(char *__restrict__ , int , FILE *__restrict__ ) __asm__("fgets") __attribute((__warn_unused_result__));
# 248 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_chk_warn(char *__restrict__ , size_t , int , FILE *__restrict__ ) __asm__("__fgets_chk")
# 251 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets called with bigger size than length of destination buffer")));
# 255 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 254 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 255 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 256 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 257 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 258 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 259 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 260 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 262 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 263 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 264 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 265 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_alias(__s, __n, __stream);
# 266 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 268 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_chk(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ )
# 270 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 271 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_alias(void *__restrict__ , size_t , size_t , FILE *__restrict__ ) __asm__("fread") __attribute((__warn_unused_result__));
# 275 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_chk_warn(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ ) __asm__("__fread_chk")
# 280 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread called with bigger size * nmemb than length of destination buffer")));
# 284 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 283 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 284 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__
# 285 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 286 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 287 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((size_t)(-1)))
# 288 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 289 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) {
# 292 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 294 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 295 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 296 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 297 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_alias(__ptr, __size, __n, __stream);
# 298 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 301 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_unlocked_chk(char *__restrict__ , size_t , int , FILE *__restrict__ )
# 302 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 303 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_unlocked_alias(char *__restrict__ , int , FILE *__restrict__ ) __asm__("fgets_unlocked") __attribute((__warn_unused_result__));
# 306 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_unlocked_chk_warn(char *__restrict__ , size_t , int , FILE *__restrict__ ) __asm__("__fgets_unlocked_chk")
# 309 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets_unlocked called with bigger size than length of destination buffer")));
# 313 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 312 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 313 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 314 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 315 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 316 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 317 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 318 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 320 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 321 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 322 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 323 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_alias(__s, __n, __stream);
# 324 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 329 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_unlocked_chk(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ )
# 331 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 332 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_unlocked_alias(void *__restrict__ , size_t , size_t , FILE *__restrict__ ) __asm__("fread_unlocked") __attribute((__warn_unused_result__));
# 336 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_unlocked_chk_warn(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ ) __asm__("__fread_unlocked_chk")
# 341 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread_unlocked called with bigger size * nmemb than length of destination buffer")));
# 345 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 344 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 345 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread_unlocked(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__
# 346 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 347 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 348 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((size_t)(-1)))
# 349 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 350 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) {
# 353 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 356 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 357 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 359 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 362 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((((0) && (0)) && ((__size | __n) < (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) && ((__size * __n) <= (8)))
# 366 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 367 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
size_t __cnt = (__size * __n);
# 368 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
char *__cptr = ((char *)__ptr);
# 369 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__cnt == (0)) {
# 370 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return 0; }
# 372 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
for (; __cnt > (0); --__cnt)
# 373 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 374 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
int __c = getc_unlocked(__stream);
# 375 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__c == (-1)) {
# 376 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
break; }
# 377 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
(*(__cptr++)) = __c;
# 378 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 379 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return (__cptr - ((char *)__ptr)) / __size;
# 380 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 382 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_alias(__ptr, __size, __n, __stream);
# 383 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 38 "/usr/include/malloc.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__))
# 39 "/usr/include/malloc.h" 3
 __attribute((__alloc_size__(1))) __attribute((__warn_unused_result__));
# 42 "/usr/include/malloc.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 43 "/usr/include/malloc.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(1, 2))) __attribute((__warn_unused_result__));
# 50 "/usr/include/malloc.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 51 "/usr/include/malloc.h" 3
 __attribute((__warn_unused_result__)) __attribute((__alloc_size__(2)));
# 58 "/usr/include/malloc.h" 3
extern "C" void *reallocarray(void * , size_t , size_t ) throw()
# 59 "/usr/include/malloc.h" 3
 __attribute((__warn_unused_result__)) __attribute((__alloc_size__(2, 3)));
# 62 "/usr/include/malloc.h" 3
extern "C" void free(void * ) throw();
# 65 "/usr/include/malloc.h" 3
extern "C" void *memalign(size_t , size_t ) throw()
# 66 "/usr/include/malloc.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2))) __attribute((__warn_unused_result__));
# 69 "/usr/include/malloc.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__))
# 70 "/usr/include/malloc.h" 3
 __attribute((__alloc_size__(1))) __attribute((__warn_unused_result__));
# 74 "/usr/include/malloc.h" 3
extern "C" void *pvalloc(size_t ) throw() __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 78 "/usr/include/malloc.h" 3
extern "C" { extern void *(*__morecore)(ptrdiff_t ); }
# 81 "/usr/include/malloc.h" 3
extern "C" void *__default_morecore(ptrdiff_t ) throw()
# 82 "/usr/include/malloc.h" 3
 __attribute((__malloc__));
# 86 "/usr/include/malloc.h" 3
extern "C" { struct mallinfo {
# 88 "/usr/include/malloc.h" 3
int arena;
# 89 "/usr/include/malloc.h" 3
int ordblks;
# 90 "/usr/include/malloc.h" 3
int smblks;
# 91 "/usr/include/malloc.h" 3
int hblks;
# 92 "/usr/include/malloc.h" 3
int hblkhd;
# 93 "/usr/include/malloc.h" 3
int usmblks;
# 94 "/usr/include/malloc.h" 3
int fsmblks;
# 95 "/usr/include/malloc.h" 3
int uordblks;
# 96 "/usr/include/malloc.h" 3
int fordblks;
# 97 "/usr/include/malloc.h" 3
int keepcost;
# 98 "/usr/include/malloc.h" 3
}; }
# 101 "/usr/include/malloc.h" 3
extern "C" struct mallinfo mallinfo() throw();
# 128 "/usr/include/malloc.h" 3
extern "C" int mallopt(int , int ) throw();
# 132 "/usr/include/malloc.h" 3
extern "C" int malloc_trim(size_t ) throw();
# 136 "/usr/include/malloc.h" 3
extern "C" size_t malloc_usable_size(void * ) throw();
# 139 "/usr/include/malloc.h" 3
extern "C" void malloc_stats() throw();
# 142 "/usr/include/malloc.h" 3
extern "C" int malloc_info(int , FILE * ) throw();
# 145 "/usr/include/malloc.h" 3
extern "C" { extern void (*volatile __free_hook)(void * , const void *)
# 147 "/usr/include/malloc.h" 3
 __attribute((__deprecated__)); }
# 148 "/usr/include/malloc.h" 3
extern "C" { extern void *(*volatile __malloc_hook)(size_t , const void *)
# 150 "/usr/include/malloc.h" 3
 __attribute((__deprecated__)); }
# 151 "/usr/include/malloc.h" 3
extern "C" { extern void *(*volatile __realloc_hook)(void * , size_t , const void *)
# 154 "/usr/include/malloc.h" 3
 __attribute((__deprecated__)); }
# 155 "/usr/include/malloc.h" 3
extern "C" { extern void *(*volatile __memalign_hook)(size_t , size_t , const void *)
# 158 "/usr/include/malloc.h" 3
 __attribute((__deprecated__)); }
# 159 "/usr/include/malloc.h" 3
extern "C" { extern void (*volatile __after_morecore_hook)(void); }
# 42 "/usr/include/c++/4.4/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _Alloc >
    class allocator;
# 47 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 50 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _CharT, typename _Traits = char_traits < _CharT >,
           typename _Alloc = allocator < _CharT > >
    class basic_string;
# 54 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 56 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< char> string;
# 59 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 61 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< wchar_t> wstring;
# 75 "/usr/include/c++/4.4/bits/stringfwd.h" 3
}
# 20 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h" 3
typedef unsigned wint_t;
# 6 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h" 3
typedef __mbstate_t mbstate_t;
# 83 "/usr/include/wchar.h" 3
struct tm;
# 87 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcscpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw()
# 89 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 92 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcsncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 94 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 97 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcscat(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw()
# 99 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 101 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcsncat(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 103 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 106 "/usr/include/wchar.h" 3
extern "C" int wcscmp(const wchar_t * , const wchar_t * ) throw()
# 107 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 109 "/usr/include/wchar.h" 3
extern "C" int wcsncmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 110 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 114 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp(const wchar_t * , const wchar_t * ) throw();
# 117 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp(const wchar_t * , const wchar_t * , size_t ) throw();
# 122 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp_l(const wchar_t * , const wchar_t * , locale_t ) throw();
# 125 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp_l(const wchar_t * , const wchar_t * , size_t , locale_t ) throw();
# 131 "/usr/include/wchar.h" 3
extern "C" int wcscoll(const wchar_t * , const wchar_t * ) throw();
# 135 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 144 "/usr/include/wchar.h" 3
extern "C" int wcscoll_l(const wchar_t * , const wchar_t * , locale_t ) throw();
# 150 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm_l(wchar_t * , const wchar_t * , size_t , locale_t ) throw();
# 154 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsdup(const wchar_t * ) throw() __attribute((__malloc__));
# 159 "/usr/include/wchar.h" 3
wchar_t *wcschr(wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 160 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 161 "/usr/include/wchar.h" 3
const wchar_t *wcschr(const wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 162 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 169 "/usr/include/wchar.h" 3
wchar_t *wcsrchr(wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 170 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 171 "/usr/include/wchar.h" 3
const wchar_t *wcsrchr(const wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 172 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 181 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcschrnul(const wchar_t * , wchar_t ) throw()
# 182 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 187 "/usr/include/wchar.h" 3
extern "C" size_t wcscspn(const wchar_t * , const wchar_t * ) throw()
# 188 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 191 "/usr/include/wchar.h" 3
extern "C" size_t wcsspn(const wchar_t * , const wchar_t * ) throw()
# 192 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 195 "/usr/include/wchar.h" 3
wchar_t *wcspbrk(wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 196 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 197 "/usr/include/wchar.h" 3
const wchar_t *wcspbrk(const wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 199 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 206 "/usr/include/wchar.h" 3
wchar_t *wcsstr(wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 207 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 208 "/usr/include/wchar.h" 3
const wchar_t *wcsstr(const wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 210 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 217 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcstok(wchar_t *__restrict__ , const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 222 "/usr/include/wchar.h" 3
extern "C" size_t wcslen(const wchar_t * ) throw() __attribute((__pure__));
# 227 "/usr/include/wchar.h" 3
wchar_t *wcswcs(wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 228 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 229 "/usr/include/wchar.h" 3
const wchar_t *wcswcs(const wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 231 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 240 "/usr/include/wchar.h" 3
extern "C" size_t wcsnlen(const wchar_t * , size_t ) throw()
# 241 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 247 "/usr/include/wchar.h" 3
wchar_t *wmemchr(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 248 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 249 "/usr/include/wchar.h" 3
const wchar_t *wmemchr(const wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 251 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 258 "/usr/include/wchar.h" 3
extern "C" int wmemcmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 259 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 262 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmemcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 267 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmemmove(wchar_t * , const wchar_t * , size_t ) throw(); }
# 271 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmemset(wchar_t * , wchar_t , size_t ) throw(); }
# 276 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmempcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 284 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wint_t btowc(int ) throw(); }
# 288 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int wctob(wint_t ) throw(); }
# 292 "/usr/include/wchar.h" 3
extern "C" int mbsinit(const mbstate_t * ) throw() __attribute((__pure__));
# 296 "/usr/include/wchar.h" 3
extern "C" size_t mbrtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 301 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcrtomb(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw(); }
# 305 "/usr/include/wchar.h" 3
extern "C" size_t __mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 307 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw(); }
# 316 "/usr/include/wchar.h" 3
extern "C" wint_t __btowc_alias(int ) __asm__("btowc");
# 318 "/usr/include/wchar.h" 3
extern "C" {
# 317 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline wint_t
# 318 "/usr/include/wchar.h" 3
btowc(int __c) throw()
# 319 "/usr/include/wchar.h" 3
{ return (((0) && (__c >= ('\000'))) && (__c <= ('\177'))) ? ((wint_t)__c) : __btowc_alias(__c);
# 320 "/usr/include/wchar.h" 3
} }
# 322 "/usr/include/wchar.h" 3
extern "C" int __wctob_alias(wint_t ) __asm__("wctob");
# 324 "/usr/include/wchar.h" 3
extern "C" {
# 323 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline int
# 324 "/usr/include/wchar.h" 3
wctob(wint_t __wc) throw()
# 325 "/usr/include/wchar.h" 3
{ return (((0) && (__wc >= (L'\x0'))) && (__wc <= (L'\x7f'))) ? ((int)__wc) : __wctob_alias(__wc);
# 326 "/usr/include/wchar.h" 3
} }
# 329 "/usr/include/wchar.h" 3
extern "C" {
# 328 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline size_t
# 329 "/usr/include/wchar.h" 3
mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw()
# 331 "/usr/include/wchar.h" 3
{ return (__ps != (__null)) ? mbrtowc(__null, __s, __n, __ps) : __mbrlen(__s, __n, __null);
# 332 "/usr/include/wchar.h" 3
} }
# 337 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbsrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw(); }
# 343 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcsrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw(); }
# 351 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbsnrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw(); }
# 357 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcsnrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw(); }
# 367 "/usr/include/wchar.h" 3
extern "C" int wcwidth(wchar_t ) throw();
# 371 "/usr/include/wchar.h" 3
extern "C" int wcswidth(const wchar_t * , size_t ) throw();
# 377 "/usr/include/wchar.h" 3
extern "C" double wcstod(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 382 "/usr/include/wchar.h" 3
extern "C" float wcstof(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 384 "/usr/include/wchar.h" 3
extern "C" long double wcstold(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 396 "/usr/include/wchar.h" 3
extern "C" _Float32 wcstof32(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 401 "/usr/include/wchar.h" 3
extern "C" _Float64 wcstof64(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 411 "/usr/include/wchar.h" 3
extern "C" _Float32x wcstof32x(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 416 "/usr/include/wchar.h" 3
extern "C" _Float64x wcstof64x(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 428 "/usr/include/wchar.h" 3
extern "C" long wcstol(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 433 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 441 "/usr/include/wchar.h" 3
__extension__ extern "C" long long wcstoll(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 448 "/usr/include/wchar.h" 3
__extension__ extern "C" unsigned long long wcstoull(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 457 "/usr/include/wchar.h" 3
__extension__ extern "C" long long wcstoq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 464 "/usr/include/wchar.h" 3
__extension__ extern "C" unsigned long long wcstouq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 473 "/usr/include/wchar.h" 3
extern "C" long wcstol_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 477 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 482 "/usr/include/wchar.h" 3
__extension__ extern "C" long long wcstoll_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 487 "/usr/include/wchar.h" 3
__extension__ extern "C" unsigned long long wcstoull_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 492 "/usr/include/wchar.h" 3
extern "C" double wcstod_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 496 "/usr/include/wchar.h" 3
extern "C" float wcstof_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 500 "/usr/include/wchar.h" 3
extern "C" long double wcstold_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 511 "/usr/include/wchar.h" 3
extern "C" _Float32 wcstof32_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 517 "/usr/include/wchar.h" 3
extern "C" _Float64 wcstof64_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 529 "/usr/include/wchar.h" 3
extern "C" _Float32x wcstof32x_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 535 "/usr/include/wchar.h" 3
extern "C" _Float64x wcstof64x_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 551 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcpcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw(); }
# 556 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcpncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 567 "/usr/include/wchar.h" 3
extern "C" __FILE *open_wmemstream(wchar_t ** , size_t * ) throw();
# 573 "/usr/include/wchar.h" 3
extern "C" int fwide(__FILE * , int ) throw();
# 580 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...); }
# 587 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int wprintf(const wchar_t *__restrict__ , ...); }
# 590 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int swprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw(); }
# 598 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vfwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ); }
# 606 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vwprintf(const wchar_t *__restrict__ , __gnuc_va_list ); }
# 611 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vswprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw(); }
# 621 "/usr/include/wchar.h" 3
extern "C" int fwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 628 "/usr/include/wchar.h" 3
extern "C" int wscanf(const wchar_t *__restrict__ , ...);
# 631 "/usr/include/wchar.h" 3
extern "C" int swscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , ...) throw();
# 671 "/usr/include/wchar.h" 3
extern "C" int vfwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 679 "/usr/include/wchar.h" 3
extern "C" int vwscanf(const wchar_t *__restrict__ , __gnuc_va_list );
# 683 "/usr/include/wchar.h" 3
extern "C" int vswscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 726 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc(__FILE * );
# 727 "/usr/include/wchar.h" 3
extern "C" wint_t getwc(__FILE * );
# 733 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar();
# 740 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc(wchar_t , __FILE * );
# 741 "/usr/include/wchar.h" 3
extern "C" wint_t putwc(wchar_t , __FILE * );
# 747 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar(wchar_t );
# 755 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *fgetws(wchar_t *__restrict__ , int , __FILE *__restrict__ ); }
# 762 "/usr/include/wchar.h" 3
extern "C" int fputws(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 770 "/usr/include/wchar.h" 3
extern "C" wint_t ungetwc(wint_t , __FILE * );
# 781 "/usr/include/wchar.h" 3
extern "C" wint_t getwc_unlocked(__FILE * );
# 782 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar_unlocked();
# 790 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc_unlocked(__FILE * );
# 798 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc_unlocked(wchar_t , __FILE * );
# 807 "/usr/include/wchar.h" 3
extern "C" wint_t putwc_unlocked(wchar_t , __FILE * );
# 808 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar_unlocked(wchar_t );
# 817 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *fgetws_unlocked(wchar_t *__restrict__ , int , __FILE *__restrict__ ); }
# 826 "/usr/include/wchar.h" 3
extern "C" int fputws_unlocked(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 834 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ ) throw();
# 841 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime_l(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ , locale_t ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemcpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemcpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wmemcpy");
# 31 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemcpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wmemcpy_chk")
# 35 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemcpy called with length bigger than size of destination buffer")));
# 39 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 38 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 39 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw()
# 41 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 43 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 44 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 45 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 48 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 49 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 51 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_alias(__s1, __s2, __n);
# 53 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 56 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemmove_chk(wchar_t * , const wchar_t * , size_t , size_t ) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemmove_alias(wchar_t * , const wchar_t * , size_t ) throw() __asm__("wmemmove");
# 61 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemmove_chk_warn(wchar_t * , const wchar_t * , size_t , size_t ) throw() __asm__("__wmemmove_chk")
# 64 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemmove called with length bigger than size of destination buffer")));
# 68 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 67 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 68 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw()
# 69 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 70 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 71 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 72 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 73 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 76 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 77 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 79 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 80 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_alias(__s1, __s2, __n);
# 81 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 85 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmempcpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmempcpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wmempcpy");
# 92 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmempcpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wmempcpy_chk")
# 96 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmempcpy called with length bigger than size of destination buffer")));
# 100 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 99 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 100 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw()
# 102 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 104 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 105 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 106 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 109 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 110 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 112 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 113 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_alias(__s1, __s2, __n);
# 114 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 118 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemset_chk(wchar_t * , wchar_t , size_t , size_t ) throw();
# 120 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemset_alias(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemset");
# 122 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemset_chk_warn(wchar_t * , wchar_t , size_t , size_t ) throw() __asm__("__wmemset_chk")
# 125 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemset called with length bigger than size of destination buffer")));
# 129 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 128 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 129 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw()
# 130 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 131 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 0) != ((size_t)(-1)))
# 132 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 133 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 134 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 136 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s, 0) / sizeof(wchar_t))) {
# 137 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk_warn(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 139 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 140 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_alias(__s, __c, __n);
# 141 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 144 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw() __asm__("wcscpy");
# 152 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 151 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 152 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 153 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 154 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 155 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 156 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_alias(__dest, __src);
# 157 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 160 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpcpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 163 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpcpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw() __asm__("wcpcpy");
# 168 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 167 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 168 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 169 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 170 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 171 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 172 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_alias(__dest, __src);
# 173 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 176 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 179 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcsncpy");
# 183 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wcsncpy_chk")
# 187 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsncpy called with length bigger than size of destination buffer")));
# 191 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 190 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 191 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 193 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 194 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1)))
# 195 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 196 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 197 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 199 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 200 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 202 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 203 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_alias(__dest, __src, __n);
# 204 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 207 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpncpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 210 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpncpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcpncpy");
# 214 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpncpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wcpncpy_chk")
# 218 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcpncpy called with length bigger than size of destination buffer")));
# 222 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 221 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 222 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 224 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 225 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1)))
# 226 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 227 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 228 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 230 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 231 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 233 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 234 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_alias(__dest, __src, __n);
# 235 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 238 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscat_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscat_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw() __asm__("wcscat");
# 246 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 245 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 246 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 247 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 248 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 249 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 250 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_alias(__dest, __src);
# 251 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 254 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncat_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 257 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncat_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcsncat");
# 263 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 262 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 263 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 265 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 266 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 267 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 269 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_alias(__dest, __src, __n);
# 270 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 273 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __swprintf_chk(wchar_t *__restrict__ , size_t , int , size_t , const wchar_t *__restrict__ , ...) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __swprintf_alias(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw() __asm__("swprintf");
# 285 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 284 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 285 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
swprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, ...) throw()
# 287 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 288 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) || (2 > 1)) {
# 289 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __builtin_va_arg_pack()); }
# 292 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_alias(__s, __n, __fmt, __builtin_va_arg_pack());
# 293 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 303 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vswprintf_chk(wchar_t *__restrict__ , size_t , int , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 309 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vswprintf_alias(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw() __asm__("vswprintf");
# 315 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 314 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 315 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vswprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 317 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 318 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) || (2 > 1)) {
# 319 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __ap); }
# 321 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_alias(__s, __n, __fmt, __ap);
# 322 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 327 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __fwprintf_chk(__FILE *__restrict__ , int , const wchar_t *__restrict__ , ...);
# 329 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __wprintf_chk(int , const wchar_t *__restrict__ , ...);
# 331 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vfwprintf_chk(__FILE *__restrict__ , int , const wchar_t *__restrict__ , __gnuc_va_list );
# 334 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vwprintf_chk(int , const wchar_t *__restrict__ , __gnuc_va_list );
# 339 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 338 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 339 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wprintf(const wchar_t *__restrict__ __fmt, ...)
# 340 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 341 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wprintf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 342 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 345 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 344 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 345 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __fmt, ...)
# 346 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 347 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fwprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 349 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 358 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 357 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 358 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vwprintf(const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap)
# 359 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 360 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vwprintf_chk(2 - 1, __fmt, __ap);
# 361 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 364 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 363 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 364 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vfwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__
# 365 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__fmt, __gnuc_va_list __ap)
# 366 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 367 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vfwprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 368 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 372 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_chk(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ )
# 373 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 374 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_alias(wchar_t *__restrict__ , int , __FILE *__restrict__ ) __asm__("fgetws") __attribute((__warn_unused_result__));
# 377 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_chk_warn(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ ) __asm__("__fgetws_chk")
# 380 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws called with bigger size than length of destination buffer")));
# 384 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 383 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 384 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 385 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 386 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 387 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 388 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 389 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 392 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 393 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 395 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 396 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_alias(__s, __n, __stream);
# 397 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 400 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_unlocked_chk(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ )
# 402 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 403 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_unlocked_alias(wchar_t *__restrict__ , int , __FILE *__restrict__ ) __asm__("fgetws_unlocked")
# 406 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 407 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_unlocked_chk_warn(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ ) __asm__("__fgetws_unlocked_chk")
# 411 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws_unlocked called with bigger size than length of destination buffer")));
# 415 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 414 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 415 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws_unlocked(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 416 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 417 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 418 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 419 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 420 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 423 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 424 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 426 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 427 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_alias(__s, __n, __stream);
# 428 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 432 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcrtomb_chk(char *__restrict__ , wchar_t , mbstate_t *__restrict__ , size_t ) throw()
# 434 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 435 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcrtomb_alias(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw() __asm__("wcrtomb") __attribute((__warn_unused_result__));
# 440 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 439 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 440 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcrtomb(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __ps) throw()
# 442 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 450 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 451 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_chk(__s, __wchar, __ps, __builtin_object_size(__s, 2 > 1)); }
# 452 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_alias(__s, __wchar, __ps);
# 453 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 456 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsrtowcs_chk(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 460 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsrtowcs_alias(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw() __asm__("mbsrtowcs");
# 465 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsrtowcs_chk_warn(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__mbsrtowcs_chk")
# 470 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 474 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 473 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 474 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 476 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 477 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 478 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 479 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 480 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 483 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 484 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 486 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 487 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_alias(__dst, __src, __len, __ps);
# 488 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 491 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsrtombs_chk(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 495 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsrtombs_alias(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw() __asm__("wcsrtombs");
# 500 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsrtombs_chk_warn(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__wcsrtombs_chk")
# 505 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsrtombs called with dst buffer smaller than len")));
# 508 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 507 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 508 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 510 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 511 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 512 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 513 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 514 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 516 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 517 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 518 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 519 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_alias(__dst, __src, __len, __ps);
# 520 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 524 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsnrtowcs_chk(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 528 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsnrtowcs_alias(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw() __asm__("mbsnrtowcs");
# 533 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsnrtowcs_chk_warn(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__mbsnrtowcs_chk")
# 538 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsnrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 542 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 541 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 542 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 544 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 545 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 546 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 547 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 548 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 551 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 552 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk_warn(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 554 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 555 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_alias(__dst, __src, __nmc, __len, __ps);
# 556 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 559 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsnrtombs_chk(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 564 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsnrtombs_alias(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw() __asm__("wcsnrtombs");
# 569 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsnrtombs_chk_warn(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__wcsnrtombs_chk")
# 575 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsnrtombs called with dst buffer smaller than len")));
# 578 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 577 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 578 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 580 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 581 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 582 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 583 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 584 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 587 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 588 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk_warn(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 590 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 591 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_alias(__dst, __src, __nwc, __len, __ps);
# 592 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 65 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/4.4/cwchar" 3
using ::mbstate_t;
# 69 "/usr/include/c++/4.4/cwchar" 3
}
# 139 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 141 "/usr/include/c++/4.4/cwchar" 3
using ::wint_t;
# 143 "/usr/include/c++/4.4/cwchar" 3
using ::btowc;
# 144 "/usr/include/c++/4.4/cwchar" 3
using ::fgetwc;
# 145 "/usr/include/c++/4.4/cwchar" 3
using ::fgetws;
# 146 "/usr/include/c++/4.4/cwchar" 3
using ::fputwc;
# 147 "/usr/include/c++/4.4/cwchar" 3
using ::fputws;
# 148 "/usr/include/c++/4.4/cwchar" 3
using ::fwide;
# 149 "/usr/include/c++/4.4/cwchar" 3
using ::fwprintf;
# 150 "/usr/include/c++/4.4/cwchar" 3
using ::fwscanf;
# 151 "/usr/include/c++/4.4/cwchar" 3
using ::getwc;
# 152 "/usr/include/c++/4.4/cwchar" 3
using ::getwchar;
# 153 "/usr/include/c++/4.4/cwchar" 3
using ::mbrlen;
# 154 "/usr/include/c++/4.4/cwchar" 3
using ::mbrtowc;
# 155 "/usr/include/c++/4.4/cwchar" 3
using ::mbsinit;
# 156 "/usr/include/c++/4.4/cwchar" 3
using ::mbsrtowcs;
# 157 "/usr/include/c++/4.4/cwchar" 3
using ::putwc;
# 158 "/usr/include/c++/4.4/cwchar" 3
using ::putwchar;
# 160 "/usr/include/c++/4.4/cwchar" 3
using ::swprintf;
# 162 "/usr/include/c++/4.4/cwchar" 3
using ::swscanf;
# 163 "/usr/include/c++/4.4/cwchar" 3
using ::ungetwc;
# 164 "/usr/include/c++/4.4/cwchar" 3
using ::vfwprintf;
# 166 "/usr/include/c++/4.4/cwchar" 3
using ::vfwscanf;
# 169 "/usr/include/c++/4.4/cwchar" 3
using ::vswprintf;
# 172 "/usr/include/c++/4.4/cwchar" 3
using ::vswscanf;
# 174 "/usr/include/c++/4.4/cwchar" 3
using ::vwprintf;
# 176 "/usr/include/c++/4.4/cwchar" 3
using ::vwscanf;
# 178 "/usr/include/c++/4.4/cwchar" 3
using ::wcrtomb;
# 179 "/usr/include/c++/4.4/cwchar" 3
using ::wcscat;
# 180 "/usr/include/c++/4.4/cwchar" 3
using ::wcscmp;
# 181 "/usr/include/c++/4.4/cwchar" 3
using ::wcscoll;
# 182 "/usr/include/c++/4.4/cwchar" 3
using ::wcscpy;
# 183 "/usr/include/c++/4.4/cwchar" 3
using ::wcscspn;
# 184 "/usr/include/c++/4.4/cwchar" 3
using ::wcsftime;
# 185 "/usr/include/c++/4.4/cwchar" 3
using ::wcslen;
# 186 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncat;
# 187 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncmp;
# 188 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncpy;
# 189 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrtombs;
# 190 "/usr/include/c++/4.4/cwchar" 3
using ::wcsspn;
# 191 "/usr/include/c++/4.4/cwchar" 3
using ::wcstod;
# 193 "/usr/include/c++/4.4/cwchar" 3
using ::wcstof;
# 195 "/usr/include/c++/4.4/cwchar" 3
using ::wcstok;
# 196 "/usr/include/c++/4.4/cwchar" 3
using ::wcstol;
# 197 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoul;
# 198 "/usr/include/c++/4.4/cwchar" 3
using ::wcsxfrm;
# 199 "/usr/include/c++/4.4/cwchar" 3
using ::wctob;
# 200 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcmp;
# 201 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcpy;
# 202 "/usr/include/c++/4.4/cwchar" 3
using ::wmemmove;
# 203 "/usr/include/c++/4.4/cwchar" 3
using ::wmemset;
# 204 "/usr/include/c++/4.4/cwchar" 3
using ::wprintf;
# 205 "/usr/include/c++/4.4/cwchar" 3
using ::wscanf;
# 206 "/usr/include/c++/4.4/cwchar" 3
using ::wcschr;
# 207 "/usr/include/c++/4.4/cwchar" 3
using ::wcspbrk;
# 208 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrchr;
# 209 "/usr/include/c++/4.4/cwchar" 3
using ::wcsstr;
# 210 "/usr/include/c++/4.4/cwchar" 3
using ::wmemchr;
# 234 "/usr/include/c++/4.4/cwchar" 3
}
# 242 "/usr/include/c++/4.4/cwchar" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 249 "/usr/include/c++/4.4/cwchar" 3
using ::wcstold;
# 258 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoll;
# 259 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoull;
# 262 "/usr/include/c++/4.4/cwchar" 3
}
# 264 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 266 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstold;
# 267 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoll;
# 268 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoull;
# 270 "/usr/include/c++/4.4/cwchar" 3
}
# 70 "/usr/include/c++/4.4/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    class fpos
    {
    private :
      streamoff _M_off;
      _StateT _M_state;

    public :




      fpos ( )
      : _M_off ( 0 ), _M_state ( ) { }

      fpos ( streamoff __off )
      : _M_off ( __off ), _M_state ( ) { }


      operator streamoff ( ) const { return _M_off; }


      void
      state ( _StateT __st )
      { _M_state = __st; }


      _StateT
      state ( ) const
      { return _M_state; }





      fpos &
      operator += ( streamoff __off )
      {
 _M_off += __off;
 return * this;
      }





      fpos &
      operator -= ( streamoff __off )
      {
 _M_off -= __off;
 return * this;
      }







      fpos
      operator + ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos += __off;
 return __pos;
      }







      fpos
      operator - ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator - ( const fpos & __other ) const
      { return _M_off - __other . _M_off; }
    };
# 214 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator == ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) == streamoff ( __rhs ); }
# 219 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator != ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) != streamoff ( __rhs ); }
# 228 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 239 "/usr/include/c++/4.4/bits/postypes.h" 3
}
# 44 "/usr/include/c++/4.4/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ios;
# 49 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_streambuf;
# 52 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_istream;
# 55 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ostream;
# 58 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_iostream;
# 61 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 62 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 65 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 66 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 69 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 73 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 74 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 77 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_filebuf;
# 80 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ifstream;
# 83 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ofstream;
# 86 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_fstream;
# 89 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class istreambuf_iterator;
# 92 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class ostreambuf_iterator;
# 97 "/usr/include/c++/4.4/iosfwd" 3
class ios_base;
# 127 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< char> ios;
# 128 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< char> streambuf;
# 129 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< char> istream;
# 130 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< char> ostream;
# 131 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< char> iostream;
# 132 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< char> stringbuf;
# 133 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< char> istringstream;
# 134 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< char> ostringstream;
# 135 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< char> stringstream;
# 136 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< char> filebuf;
# 137 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< char> ifstream;
# 138 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< char> ofstream;
# 139 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< char> fstream;
# 142 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< wchar_t> wios;
# 143 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< wchar_t> wstreambuf;
# 144 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< wchar_t> wistream;
# 145 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< wchar_t> wostream;
# 146 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< wchar_t> wiostream;
# 147 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< wchar_t> wstringbuf;
# 148 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< wchar_t> wistringstream;
# 149 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< wchar_t> wostringstream;
# 150 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< wchar_t> wstringstream;
# 151 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< wchar_t> wfilebuf;
# 152 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< wchar_t> wifstream;
# 153 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< wchar_t> wofstream;
# 154 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< wchar_t> wfstream;
# 158 "/usr/include/c++/4.4/iosfwd" 3
}
# 41 "/usr/include/c++/4.4/exception" 3
namespace std {
# 59 "/usr/include/c++/4.4/exception" 3
class exception {
# 62 "/usr/include/c++/4.4/exception" 3
public: exception() throw() { }
# 63 "/usr/include/c++/4.4/exception" 3
virtual ~exception() throw();
# 67 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 68 "/usr/include/c++/4.4/exception" 3
};
# 72 "/usr/include/c++/4.4/exception" 3
class bad_exception : public exception {
# 75 "/usr/include/c++/4.4/exception" 3
public: bad_exception() throw() { }
# 79 "/usr/include/c++/4.4/exception" 3
virtual ~bad_exception() throw();
# 82 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 83 "/usr/include/c++/4.4/exception" 3
};
# 86 "/usr/include/c++/4.4/exception" 3
typedef void (*terminate_handler)(void);
# 89 "/usr/include/c++/4.4/exception" 3
typedef void (*unexpected_handler)(void);
# 92 "/usr/include/c++/4.4/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 96 "/usr/include/c++/4.4/exception" 3
void terminate() __attribute((__noreturn__));
# 99 "/usr/include/c++/4.4/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 103 "/usr/include/c++/4.4/exception" 3
void unexpected() __attribute((__noreturn__));
# 115 "/usr/include/c++/4.4/exception" 3
bool uncaught_exception() throw();
# 118 "/usr/include/c++/4.4/exception" 3
}
# 120 "/usr/include/c++/4.4/exception" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 138 "/usr/include/c++/4.4/exception" 3
void __verbose_terminate_handler();
# 140 "/usr/include/c++/4.4/exception" 3
}
# 39 "/usr/include/c++/4.4/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 47 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 51 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 54 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 58 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 61 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 64 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 67 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 70 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 73 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 76 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 79 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 82 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 86 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 89 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 91 "/usr/include/c++/4.4/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 53 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 56 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? (((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0))) : ((_Value)0));
# 57 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? ((((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1) : (~((_Value)0)));
# 61 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 62 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 63 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 65 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 66 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 68 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 69 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 71 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 72 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 74 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 75 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 97 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 98 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 101 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_digits10 = (2 + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 3010) / 10000));
# 104 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 105 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 106 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 107 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 109 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 110 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 112 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 113 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 115 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 116 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 118 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 119 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 121 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 122 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 126 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 128 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
}
# 66 "/usr/include/c++/4.4/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp >
    inline void
    swap ( _Tp & __a, _Tp & __b )
    {



      _Tp __tmp = ( __a );
      __a = ( __b );
      __b = ( __tmp );
    }
# 88 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp, size_t _Nm >
    inline void
    swap ( _Tp ( & __a ) [ _Nm ], _Tp ( & __b ) [ _Nm ] )
    {
      for ( size_t __n = 0; __n < _Nm; ++ __n )
 swap ( __a [ __n ], __b [ __n ] );
    }
# 96 "/usr/include/c++/4.4/bits/move.h" 3
}
# 63 "/usr/include/c++/4.4/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair ( )
      : first ( ), second ( ) { }


      pair ( const _T1 & __a, const _T2 & __b )
      : first ( __a ), second ( __b ) { }

      template < class _U1, class _U2 >
        pair ( const pair < _U1, _U2 > & __p )
 : first ( __p . first ),
   second ( __p . second ) { }

    };
# 144 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator == ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first == __y . first && __x . second == __y . second; }
# 150 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator < ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first < __y . first
      || ( ! ( __y . first < __x . first ) && __x . second < __y . second ); }
# 157 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator != ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x == __y ); }
# 163 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator > ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __y < __x; }
# 169 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator <= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __y < __x ); }
# 175 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator >= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x < __y ); }
# 213 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline pair < _T1, _T2 >
    make_pair ( _T1 __x, _T2 __y )
    { return pair < _T1, _T2 > ( __x, __y ); }
# 259 "/usr/include/c++/4.4/bits/stl_pair.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 81 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 83 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 86 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 89 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 102 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 103 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 104 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator {
# 107 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 109 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 111 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 113 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 115 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 116 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 124 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 125 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 128 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 129 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 130 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 131 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 132 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 135 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 137 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 138 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 139 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 140 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 141 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 142 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 144 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 145 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 147 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 148 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 149 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 150 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 151 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 152 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 158 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template < typename _Iter >
    inline typename iterator_traits < _Iter > :: iterator_category
    __iterator_category ( const _Iter & )
    { return typename iterator_traits < _Iter > :: iterator_category ( ); }
# 165 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
}
# 66 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    __distance ( _InputIterator __first, _InputIterator __last,
               input_iterator_tag )
    {



      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      while ( __first != __last )
 {
   ++ __first;
   ++ __n;
 }
      return __n;
    }
# 85 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator >
    inline typename iterator_traits < _RandomAccessIterator > :: difference_type
    __distance ( _RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag )
    {



      return __last - __first;
    }
# 108 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    distance ( _InputIterator __first, _InputIterator __last )
    {

      return std :: __distance ( __first, __last,
        std :: __iterator_category ( __first ) );
    }
# 117 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    __advance ( _InputIterator & __i, _Distance __n, input_iterator_tag )
    {


      while ( __n -- )
 ++ __i;
    }
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _BidirectionalIterator, typename _Distance >
    inline void
    __advance ( _BidirectionalIterator & __i, _Distance __n,
       bidirectional_iterator_tag )
    {



      if ( __n > 0 )
        while ( __n -- )
   ++ __i;
      else
        while ( __n ++ )
   -- __i;
    }
# 143 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    inline void
    __advance ( _RandomAccessIterator & __i, _Distance __n,
              random_access_iterator_tag )
    {



      __i += __n;
    }
# 166 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    advance ( _InputIterator & __i, _Distance __n )
    {

      typename iterator_traits < _InputIterator > :: difference_type __d = __n;
      std :: __advance ( __i, __d, std :: __iterator_category ( __i ) );
    }
# 195 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    class reverse_iterator
    : public iterator < typename iterator_traits < _Iterator > :: iterator_category,
        typename iterator_traits < _Iterator > :: value_type,
        typename iterator_traits < _Iterator > :: difference_type,
        typename iterator_traits < _Iterator > :: pointer,
                      typename iterator_traits < _Iterator > :: reference >
    {
    protected :
      _Iterator current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
              difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

    public :






      reverse_iterator ( ) : current ( ) { }




      explicit
      reverse_iterator ( iterator_type __x ) : current ( __x ) { }




      reverse_iterator ( const reverse_iterator & __x )
      : current ( __x . current ) { }





      template < typename _Iter >
        reverse_iterator ( const reverse_iterator < _Iter > & __x )
 : current ( __x . base ( ) ) { }




      iterator_type
      base ( ) const
      { return current; }






      reference
      operator * ( ) const
      {
 _Iterator __tmp = current;
 return * -- __tmp;
      }






      pointer
      operator -> ( ) const
      { return & ( operator * ( ) ); }






      reverse_iterator &
      operator ++ ( )
      {
 -- current;
 return * this;
      }






      reverse_iterator
      operator ++ ( int )
      {
 reverse_iterator __tmp = * this;
 -- current;
 return __tmp;
      }






      reverse_iterator &
      operator -- ( )
      {
 ++ current;
 return * this;
      }






      reverse_iterator
      operator -- ( int )
      {
 reverse_iterator __tmp = * this;
 ++ current;
 return __tmp;
      }






      reverse_iterator
      operator + ( difference_type __n ) const
      { return reverse_iterator ( current - __n ); }






      reverse_iterator &
      operator += ( difference_type __n )
      {
 current -= __n;
 return * this;
      }






      reverse_iterator
      operator - ( difference_type __n ) const
      { return reverse_iterator ( current + __n ); }






      reverse_iterator &
      operator -= ( difference_type __n )
      {
 current += __n;
 return * this;
      }






      reference
      operator [ ] ( difference_type __n ) const
      { return * ( * this + __n ); }
    };
# 276 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator == ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 282 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator < ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 288 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator != ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x == __y ); }
# 294 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator > ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y < __x; }
# 300 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator <= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __y < __x ); }
# 306 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator >= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x < __y ); }
# 312 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline typename reverse_iterator < _Iterator > :: difference_type
    operator - ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) - __x . base ( ); }
# 318 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline reverse_iterator < _Iterator >
    operator + ( typename reverse_iterator < _Iterator > :: difference_type __n,
       const reverse_iterator < _Iterator > & __x )
    { return reverse_iterator < _Iterator > ( __x . base ( ) - __n ); }
# 326 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator == ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 332 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator < ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 338 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator != ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x == __y ); }
# 344 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator > ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y < __x; }
# 350 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator <= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __y < __x ); }
# 356 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator >= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x < __y ); }
# 362 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >







    inline typename reverse_iterator < _IteratorL > :: difference_type
    operator - ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )

    { return __y . base ( ) - __x . base ( ); }
# 388 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class back_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit
      back_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      back_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_back ( __value );
 return * this;
      }

      back_insert_iterator &
      operator * ( )
      { return * this; }


      back_insert_iterator &
      operator ++ ( )
      { return * this; }


      back_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 457 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline back_insert_iterator < _Container >
    back_inserter ( _Container & __x )
    { return back_insert_iterator < _Container > ( __x ); }
# 472 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class front_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit front_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      front_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_front ( __value );
 return * this;
      }

      front_insert_iterator &
      operator * ( )
      { return * this; }


      front_insert_iterator &
      operator ++ ( )
      { return * this; }


      front_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 540 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline front_insert_iterator < _Container >
    front_inserter ( _Container & __x )
    { return front_insert_iterator < _Container > ( __x ); }
# 559 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;
      typename _Container :: iterator iter;

    public :

      typedef _Container container_type;





      insert_iterator ( _Container & __x, typename _Container :: iterator __i )
      : container ( & __x ), iter ( __i ) { }

      insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 iter = container -> insert ( iter, __value );
 ++ iter;
 return * this;
      }

      insert_iterator &
      operator * ( )
      { return * this; }


      insert_iterator &
      operator ++ ( )
      { return * this; }


      insert_iterator &
      operator ++ ( int )
      { return * this; }
    };
# 646 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container, typename _Iterator >
    inline insert_iterator < _Container >
    inserter ( _Container & __x, _Iterator __i )
    {
      return insert_iterator < _Container > ( __x,
      typename _Container :: iterator ( __i ) );
    }
# 654 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 656 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 665 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator_traits;
# 666 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator;
# 667 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator
    {
    protected :
      _Iterator _M_current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: iterator_category
                                                             iterator_category;
      typedef typename iterator_traits < _Iterator > :: value_type value_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
                                                             difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

      __normal_iterator ( ) : _M_current ( _Iterator ( ) ) { }

      explicit
      __normal_iterator ( const _Iterator & __i ) : _M_current ( __i ) { }


      template < typename _Iter >
        __normal_iterator ( const __normal_iterator < _Iter,
     typename __enable_if <
              ( std :: __are_same < _Iter, typename _Container :: pointer > :: __value ),
        _Container > :: __type > & __i )
        : _M_current ( __i . base ( ) ) { }


      reference
      operator * ( ) const
      { return * _M_current; }

      pointer
      operator -> ( ) const
      { return _M_current; }

      __normal_iterator &
      operator ++ ( )
      {
 ++ _M_current;
 return * this;
      }

      __normal_iterator
      operator ++ ( int )
      { return __normal_iterator ( _M_current ++ ); }


      __normal_iterator &
      operator -- ( )
      {
 -- _M_current;
 return * this;
      }

      __normal_iterator
      operator -- ( int )
      { return __normal_iterator ( _M_current -- ); }


      reference
      operator [ ] ( const difference_type & __n ) const
      { return _M_current [ __n ]; }

      __normal_iterator &
      operator += ( const difference_type & __n )
      { _M_current += __n; return * this; }

      __normal_iterator
      operator + ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current + __n ); }

      __normal_iterator &
      operator -= ( const difference_type & __n )
      { _M_current -= __n; return * this; }

      __normal_iterator
      operator - ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current - __n ); }

      const _Iterator &
      base ( ) const
      { return _M_current; }
    };
# 763 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 769 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 775 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 781 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 788 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 794 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 800 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 806 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 812 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 818 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 824 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 830 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 840 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >







    inline typename __normal_iterator < _IteratorL, _Container > :: difference_type
    operator - ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )

    { return __lhs . base ( ) - __rhs . base ( ); }
# 854 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline typename __normal_iterator < _Iterator, _Container > :: difference_type
    operator - ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) - __rhs . base ( ); }
# 860 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline __normal_iterator < _Iterator, _Container >
    operator + ( typename __normal_iterator < _Iterator, _Container > :: difference_type
       __n, const __normal_iterator < _Iterator, _Container > & __i )
    { return __normal_iterator < _Iterator, _Container > ( __i . base ( ) + __n ); }
# 866 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 47 "/usr/include/c++/4.4/debug/debug.h" 3
namespace std {
# 49 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __debug { }
# 50 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 55 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __gnu_debug {
# 57 "/usr/include/c++/4.4/debug/debug.h" 3
using namespace std::__debug;
# 58 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 74 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 80 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __iter_swap {
# 82 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          typedef typename iterator_traits < _ForwardIterator1 > :: value_type
            _ValueType1;
          _ValueType1 __tmp = ( * __a );
          * __a = ( * __b );
          * __b = ( __tmp );
 }
# 92 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 95 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 97 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          swap ( * __a, * __b );
        }
# 103 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 115 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    inline void
    iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
    {
      typedef typename iterator_traits < _ForwardIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: value_type
 _ValueType2;
# 134 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
      typedef typename iterator_traits < _ForwardIterator1 > :: reference
 _ReferenceType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: reference
 _ReferenceType2;
      std :: __iter_swap < __are_same < _ValueType1, _ValueType2 > :: __value
 && __are_same < _ValueType1 &, _ReferenceType1 > :: __value
 && __are_same < _ValueType2 &, _ReferenceType2 > :: __value > ::
 iter_swap ( __a, __b );
    }
# 156 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator2
    swap_ranges ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2 )
    {





      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 std :: iter_swap ( __first1, __first2 );
      return __first2;
    }
# 184 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b )
    {



      if ( __b < __a )
 return __b;
      return __a;
    }
# 207 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b )
    {



      if ( __a < __b )
 return __b;
      return __a;
    }
# 230 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __b, __a ) )
 return __b;
      return __a;
    }
# 251 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __a, __b ) )
 return __b;
      return __a;
    }
# 264 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsNormal = __is_normal_iterator < _Iterator > :: __value >
    struct __niter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 273 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __niter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 282 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsMove = __is_move_iterator < _Iterator > :: __value >
    struct __miter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __miter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 305 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T3, bool __T4, class >
# 306 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move {
# 308 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   for (; __first != __last; ++ __result, ++ __first )
     * __result = * __first;
   return __result;
 }
# 316 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 334 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 336 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   typedef typename iterator_traits < _II > :: difference_type _Distance;
   for ( _Distance __n = __last - __first; __n > 0; -- __n )
     {
       * __result = * __first;
       ++ __first;
       ++ __result;
     }
   return __result;
 }
# 349 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 371 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 372 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 374 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_m ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   __builtin_memmove ( __result, __first,
       sizeof ( _Tp ) * ( __last - __first ) );
   return __result + ( __last - __first );
 }
# 382 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 384 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a ( _II __first, _II __last, _OI __result )
    {
      typedef typename iterator_traits < _II > :: value_type _ValueTypeI;
      typedef typename iterator_traits < _OI > :: value_type _ValueTypeO;
      typedef typename iterator_traits < _II > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueTypeI )
                      && __is_pointer < _II > :: __value
                      && __is_pointer < _OI > :: __value
        && __are_same < _ValueTypeI, _ValueTypeO > :: __value );

      return std :: __copy_move < _IsMove, __simple,
                       _Category > :: __copy_m ( __first, __last, __result );
    }
# 402 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 405 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 408 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 411 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( _CharT *, _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 417 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( const _CharT *, const _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 423 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT, char_traits < _CharT > >,
     istreambuf_iterator < _CharT, char_traits < _CharT > >, _CharT * );
# 429 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a2 ( _II __first, _II __last, _OI __result )
    {
      return _OI ( std :: __copy_move_a < _IsMove >
   ( std :: __niter_base < _II > :: __b ( __first ),
    std :: __niter_base < _II > :: __b ( __last ),
    std :: __niter_base < _OI > :: __b ( __result ) ) );
    }
# 456 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
    inline _OI
    copy ( _II __first, _II __last, _OI __result )
    {




      ;

      return ( std :: __copy_move_a2 < __is_move_iterator < _II > :: __value >
       ( std :: __miter_base < _II > :: __b ( __first ),
        std :: __miter_base < _II > :: __b ( __last ), __result ) );
    }
# 509 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T5, bool __T6, class >
# 510 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 512 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   while ( __first != __last )
     * -- __result = * -- __last;
   return __result;
 }
# 520 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 538 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 540 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   typename iterator_traits < _BI1 > :: difference_type __n;
   for ( __n = __last - __first; __n > 0; -- __n )
     * -- __result = * -- __last;
   return __result;
 }
# 549 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 567 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 568 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 570 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_move_b ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   const ptrdiff_t _Num = __last - __first;
   __builtin_memmove ( __result - _Num, __first, sizeof ( _Tp ) * _Num );
   return __result - _Num;
 }
# 578 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 580 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      typedef typename iterator_traits < _BI1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _BI2 > :: value_type _ValueType2;
      typedef typename iterator_traits < _BI1 > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueType1 )
                      && __is_pointer < _BI1 > :: __value
                      && __is_pointer < _BI2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __copy_move_backward < _IsMove, __simple,
                                _Category > :: __copy_move_b ( __first,
         __last,
         __result );
    }
# 598 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a2 ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      return _BI2 ( std :: __copy_move_backward_a < _IsMove >
    ( std :: __niter_base < _BI1 > :: __b ( __first ),
     std :: __niter_base < _BI1 > :: __b ( __last ),
     std :: __niter_base < _BI2 > :: __b ( __result ) ) );
    }
# 626 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
    inline _BI2
    copy_backward ( _BI1 __first, _BI1 __last, _BI2 __result )
    {






      ;

      return ( std :: __copy_move_backward_a2 < __is_move_iterator < _BI1 > :: __value >
       ( std :: __miter_base < _BI1 > :: __b ( __first ),
        std :: __miter_base < _BI1 > :: __b ( __last ), __result ) );
    }
# 684 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
       const _Tp & __value )
    {
      for (; __first != __last; ++ __first )
 * __first = __value;
    }
# 694 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++ __first )
 * __first = __tmp;
    }
# 706 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, void > :: __type
    __fill_a ( _Tp * __first, _Tp * __last, const _Tp & __c )
    {
      const _Tp __tmp = __c;
      __builtin_memset ( __first, static_cast < unsigned char > ( __tmp ),
         __last - __first );
    }
# 728 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    fill ( _ForwardIterator __first, _ForwardIterator __last, const _Tp & __value )
    {



      ;

      std :: __fill_a ( std :: __niter_base < _ForwardIterator > :: __b ( __first ),
      std :: __niter_base < _ForwardIterator > :: __b ( __last ), __value );
    }
# 741 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      for (; __n > 0; -- __n, ++ __first )
 * __first = __value;
      return __first;
    }
# 751 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __n > 0; -- __n, ++ __first )
 * __first = __tmp;
      return __first;
    }
# 762 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, _Tp * > :: __type
    __fill_n_a ( _Tp * __first, _Size __n, const _Tp & __c )
    {
      std :: __fill_a ( __first, __first + __n, __c );
      return __first + __n;
    }
# 783 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OI, typename _Size, typename _Tp >
    inline _OI
    fill_n ( _OI __first, _Size __n, const _Tp & __value )
    {



      return _OI ( std :: __fill_n_a ( std :: __niter_base < _OI > :: __b ( __first ),
     __n, __value ) );
    }
# 794 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 795 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __equal {
# 797 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool
        equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
        {
   for (; __first1 != __last1; ++ __first1, ++ __first2 )
     if ( ! ( * __first1 == * __first2 ) )
       return false;
   return true;
 }
# 806 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 809 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 811 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static bool
        equal ( const _Tp * __first1, const _Tp * __last1, const _Tp * __first2 )
        {
   return ! __builtin_memcmp ( __first1, __first2, sizeof ( _Tp )
       * ( __last1 - __first1 ) );
 }
# 818 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 820 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __equal_aux ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple = ( __is_integer < _ValueType1 > :: __value
                      && __is_pointer < _II1 > :: __value
                      && __is_pointer < _II2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __equal < __simple > :: equal ( __first1, __last1, __first2 );
    }
# 835 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class , class >
# 836 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lc_rai {
# 838 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static _II1
        __newlast1 ( _II1, _II1 __last1, _II2, _II2 )
        { return __last1; }
# 843 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II >
        static bool
        __cnd2 ( _II __first, _II __last )
        { return __first != __last; }
# 847 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 850 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 852 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI1, typename _RAI2 >
        static _RAI1
        __newlast1 ( _RAI1 __first1, _RAI1 __last1,
     _RAI2 __first2, _RAI2 __last2 )
        {
   const typename iterator_traits < _RAI1 > :: difference_type
     __diff1 = __last1 - __first1;
   const typename iterator_traits < _RAI2 > :: difference_type
     __diff2 = __last2 - __first2;
   return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 }
# 864 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI >
        static bool
        __cnd2 ( _RAI, _RAI )
        { return true; }
# 868 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 870 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 871 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 873 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool __lc ( _II1, _II1, _II2, _II2 );
# 875 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 877 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _BoolType >
    template < typename _II1, typename _II2 >
      bool
      __lexicographical_compare < _BoolType > ::
      __lc ( _II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2 )
      {
 typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
 typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
 typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;

 __last1 = __rai_type :: __newlast1 ( __first1, __last1,
      __first2, __last2 );
 for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
      ++ __first1, ++ __first2 )
   {
     if ( * __first1 < * __first2 )
       return true;
     if ( * __first2 < * __first1 )
       return false;
   }
 return __first1 == __last1 && __first2 != __last2;
      }
# 901 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 903 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Up >
        static bool
        __lc ( const _Tp * __first1, const _Tp * __last1,
      const _Up * __first2, const _Up * __last2 )
 {
   const size_t __len1 = __last1 - __first1;
   const size_t __len2 = __last2 - __first2;
   const int __result = __builtin_memcmp ( __first1, __first2,
      std :: min ( __len1, __len2 ) );
   return __result != 0 ? __result < 0 : __len1 < __len2;
 }
# 914 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 916 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __lexicographical_compare_aux ( _II1 __first1, _II1 __last1,
      _II2 __first2, _II2 __last2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple =
 ( __is_byte < _ValueType1 > :: __value && __is_byte < _ValueType2 > :: __value
  && ! __gnu_cxx :: __numeric_traits < _ValueType1 > :: __is_signed
  && ! __gnu_cxx :: __numeric_traits < _ValueType2 > :: __is_signed
  && __is_pointer < _II1 > :: __value
  && __is_pointer < _II2 > :: __value );

      return std :: __lexicographical_compare < __simple > :: __lc ( __first1, __last1,
           __first2, __last2 );
    }
# 934 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 936 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 950 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {






      ;

      return std :: __equal_aux ( std :: __niter_base < _II1 > :: __b ( __first1 ),
         std :: __niter_base < _II1 > :: __b ( __last1 ),
         std :: __niter_base < _II2 > :: __b ( __first2 ) );
    }
# 982 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _IIter1, typename _IIter2, typename _BinaryPredicate >
    inline bool
    equal ( _IIter1 __first1, _IIter1 __last1,
   _IIter2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 if ( ! bool ( __binary_pred ( * __first1, * __first2 ) ) )
   return false;
      return true;
    }
# 1013 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2 )
    {

      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;




      ;
      ;

      return std :: __lexicographical_compare_aux
 ( std :: __niter_base < _II1 > :: __b ( __first1 ),
  std :: __niter_base < _II1 > :: __b ( __last1 ),
  std :: __niter_base < _II2 > :: __b ( __first2 ),
  std :: __niter_base < _II2 > :: __b ( __last2 ) );
    }
# 1048 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2, typename _Compare >
    bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2, _Compare __comp )
    {
      typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
      typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
      typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;




      ;
      ;

      __last1 = __rai_type :: __newlast1 ( __first1, __last1, __first2, __last2 );
      for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
    ++ __first1, ++ __first2 )
 {
   if ( __comp ( * __first1, * __first2 ) )
     return true;
   if ( __comp ( * __first2, * __first1 ) )
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 1088 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2 >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2 )
    {






      ;

      while ( __first1 != __last1 && * __first1 == * __first2 )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1125 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      while ( __first1 != __last1 && bool ( __binary_pred ( * __first1, * __first2 ) ) )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1144 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 52 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 65 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct _Char_types {
# 67 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef unsigned long int_type;
# 68 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 69 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 70 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 71 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 89 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types < _CharT > :: int_type int_type;
      typedef typename _Char_types < _CharT > :: pos_type pos_type;
      typedef typename _Char_types < _CharT > :: off_type off_type;
      typedef typename _Char_types < _CharT > :: state_type state_type;

      static void
      assign ( char_type & __c1, const char_type & __c2 )
      { __c1 = __c2; }

      static bool
      eq ( const char_type & __c1, const char_type & __c2 )
      { return __c1 == __c2; }

      static bool
      lt ( const char_type & __c1, const char_type & __c2 )
      { return __c1 < __c2; }

      static int
      compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n );

      static std :: size_t
      length ( const char_type * __s );

      static const char_type *
      find ( const char_type * __s, std :: size_t __n, const char_type & __a );

      static char_type *
      move ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      copy ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      assign ( char_type * __s, std :: size_t __n, char_type __a );

      static char_type
      to_char_type ( const int_type & __c )
      { return static_cast < char_type > ( __c ); }

      static int_type
      to_int_type ( const char_type & __c )
      { return static_cast < int_type > ( __c ); }

      static bool
      eq_int_type ( const int_type & __c1, const int_type & __c2 )
      { return __c1 == __c2; }

      static int_type
      eof ( )
      { return static_cast < int_type > ( ( - 1 ) ); }

      static int_type
      not_eof ( const int_type & __c )
      { return ! eq_int_type ( __c, eof ( ) ) ? __c : to_int_type ( char_type ( ) ); }
    };
# 149 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    int
    char_traits < _CharT > ::
    compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
 if ( lt ( __s1 [ __i ], __s2 [ __i ] ) )
   return - 1;
 else if ( lt ( __s2 [ __i ], __s1 [ __i ] ) )
   return 1;
      return 0;
    }
# 162 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    std :: size_t
    char_traits < _CharT > ::
    length ( const char_type * __p )
    {
      std :: size_t __i = 0;
      while ( ! eq ( __p [ __i ], char_type ( ) ) )
        ++ __i;
      return __i;
    }
# 173 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    const typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    find ( const char_type * __s, std :: size_t __n, const char_type & __a )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
        if ( eq ( __s [ __i ], __a ) )
          return __s + __i;
      return 0;
    }
# 184 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    move ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      return static_cast < _CharT * > ( __builtin_memmove ( __s1, __s2,
          __n * sizeof ( char_type ) ) );
    }
# 193 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    copy ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {

      std :: copy ( __s2, __s2 + __n, __s1 );
      return __s1;
    }
# 203 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    assign ( char_type * __s, std :: size_t __n, char_type __a )
    {

      std :: fill_n ( __s, __n, __a );
      return __s;
    }
# 213 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 215 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 230 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 231 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 232 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 239 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef char char_type;
# 240 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef int int_type;
# 241 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streampos pos_type;
# 242 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 243 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 246 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 250 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 254 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 255 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 258 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_memcmp(__s1, __s2, __n); }
# 262 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 263 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 266 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 267 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n)); }
# 270 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 271 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n)); }
# 274 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 275 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n)); }
# 278 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 279 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memset(__s, __a, __n)); }
# 282 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 283 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 288 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 289 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((static_cast< unsigned char>(__c))); }
# 292 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 293 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 296 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 297 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((-1)); }
# 300 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 301 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 302 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 308 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 310 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wchar_t char_type;
# 311 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wint_t int_type;
# 312 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 313 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 314 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 317 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 318 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 321 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 322 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 325 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 326 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 329 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 330 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcmp(__s1, __s2, __n); }
# 333 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 334 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wcslen(__s); }
# 337 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 338 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemchr(__s, __a, __n); }
# 341 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 342 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemmove(__s1, __s2, __n); }
# 345 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 346 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcpy(__s1, __s2, __n); }
# 349 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 350 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemset(__s, __a, __n); }
# 353 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 354 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (char_type)__c; }
# 357 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 358 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (int_type)__c; }
# 361 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 362 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 365 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 366 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 369 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 370 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? (0) : __c; }
# 371 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 374 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 51 "/usr/include/locale.h" 3
extern "C" { struct lconv {
# 55 "/usr/include/locale.h" 3
char *decimal_point;
# 56 "/usr/include/locale.h" 3
char *thousands_sep;
# 62 "/usr/include/locale.h" 3
char *grouping;
# 68 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 69 "/usr/include/locale.h" 3
char *currency_symbol;
# 70 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 71 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 72 "/usr/include/locale.h" 3
char *mon_grouping;
# 73 "/usr/include/locale.h" 3
char *positive_sign;
# 74 "/usr/include/locale.h" 3
char *negative_sign;
# 75 "/usr/include/locale.h" 3
char int_frac_digits;
# 76 "/usr/include/locale.h" 3
char frac_digits;
# 78 "/usr/include/locale.h" 3
char p_cs_precedes;
# 80 "/usr/include/locale.h" 3
char p_sep_by_space;
# 82 "/usr/include/locale.h" 3
char n_cs_precedes;
# 84 "/usr/include/locale.h" 3
char n_sep_by_space;
# 91 "/usr/include/locale.h" 3
char p_sign_posn;
# 92 "/usr/include/locale.h" 3
char n_sign_posn;
# 95 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 97 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 99 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 101 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 108 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 109 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 118 "/usr/include/locale.h" 3
}; }
# 122 "/usr/include/locale.h" 3
extern "C" char *setlocale(int , const char * ) throw();
# 125 "/usr/include/locale.h" 3
extern "C" lconv *localeconv() throw();
# 141 "/usr/include/locale.h" 3
extern "C" locale_t newlocale(int , const char * , locale_t ) throw();
# 176 "/usr/include/locale.h" 3
extern "C" locale_t duplocale(locale_t ) throw();
# 180 "/usr/include/locale.h" 3
extern "C" void freelocale(locale_t ) throw();
# 187 "/usr/include/locale.h" 3
extern "C" locale_t uselocale(locale_t ) throw();
# 53 "/usr/include/c++/4.4/clocale" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.4/clocale" 3
using ::lconv;
# 56 "/usr/include/c++/4.4/clocale" 3
using ::setlocale;
# 57 "/usr/include/c++/4.4/clocale" 3
using ::localeconv;
# 59 "/usr/include/c++/4.4/clocale" 3
}
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
}
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__out, const int
# 68 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__fmt, ...)
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
{
# 72 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 85 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__builtin_va_list __args;
# 86 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__builtin_va_start(__args,__fmt);
# 89 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__builtin_va_end(__args);
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 105 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
return __ret;
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
}
# 108 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
}
# 47 "/usr/include/ctype.h" 3
enum {
# 48 "/usr/include/ctype.h" 3
_ISupper = 256,
# 49 "/usr/include/ctype.h" 3
_ISlower = 512,
# 50 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 51 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 52 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 53 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 54 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 55 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 56 "/usr/include/ctype.h" 3
_ISblank = 1,
# 57 "/usr/include/ctype.h" 3
_IScntrl,
# 58 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 59 "/usr/include/ctype.h" 3
_ISalnum = 8
# 60 "/usr/include/ctype.h" 3
};
# 79 "/usr/include/ctype.h" 3
extern "C" const unsigned short **__ctype_b_loc() throw()
# 80 "/usr/include/ctype.h" 3
 __attribute((const));
# 81 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_tolower_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_toupper_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 108 "/usr/include/ctype.h" 3
extern "C" int isalnum(int) throw();
# 109 "/usr/include/ctype.h" 3
extern "C" int isalpha(int) throw();
# 110 "/usr/include/ctype.h" 3
extern "C" int iscntrl(int) throw();
# 111 "/usr/include/ctype.h" 3
extern "C" int isdigit(int) throw();
# 112 "/usr/include/ctype.h" 3
extern "C" int islower(int) throw();
# 113 "/usr/include/ctype.h" 3
extern "C" int isgraph(int) throw();
# 114 "/usr/include/ctype.h" 3
extern "C" int isprint(int) throw();
# 115 "/usr/include/ctype.h" 3
extern "C" int ispunct(int) throw();
# 116 "/usr/include/ctype.h" 3
extern "C" int isspace(int) throw();
# 117 "/usr/include/ctype.h" 3
extern "C" int isupper(int) throw();
# 118 "/usr/include/ctype.h" 3
extern "C" int isxdigit(int) throw();
# 122 "/usr/include/ctype.h" 3
extern "C" int tolower(int ) throw();
# 125 "/usr/include/ctype.h" 3
extern "C" int toupper(int ) throw();
# 130 "/usr/include/ctype.h" 3
extern "C" int isblank(int) throw();
# 135 "/usr/include/ctype.h" 3
extern "C" int isctype(int , int ) throw();
# 142 "/usr/include/ctype.h" 3
extern "C" int isascii(int ) throw();
# 146 "/usr/include/ctype.h" 3
extern "C" int toascii(int ) throw();
# 150 "/usr/include/ctype.h" 3
extern "C" int _toupper(int) throw();
# 151 "/usr/include/ctype.h" 3
extern "C" int _tolower(int) throw();
# 251 "/usr/include/ctype.h" 3
extern "C" int isalnum_l(int, locale_t) throw();
# 252 "/usr/include/ctype.h" 3
extern "C" int isalpha_l(int, locale_t) throw();
# 253 "/usr/include/ctype.h" 3
extern "C" int iscntrl_l(int, locale_t) throw();
# 254 "/usr/include/ctype.h" 3
extern "C" int isdigit_l(int, locale_t) throw();
# 255 "/usr/include/ctype.h" 3
extern "C" int islower_l(int, locale_t) throw();
# 256 "/usr/include/ctype.h" 3
extern "C" int isgraph_l(int, locale_t) throw();
# 257 "/usr/include/ctype.h" 3
extern "C" int isprint_l(int, locale_t) throw();
# 258 "/usr/include/ctype.h" 3
extern "C" int ispunct_l(int, locale_t) throw();
# 259 "/usr/include/ctype.h" 3
extern "C" int isspace_l(int, locale_t) throw();
# 260 "/usr/include/ctype.h" 3
extern "C" int isupper_l(int, locale_t) throw();
# 261 "/usr/include/ctype.h" 3
extern "C" int isxdigit_l(int, locale_t) throw();
# 263 "/usr/include/ctype.h" 3
extern "C" int isblank_l(int, locale_t) throw();
# 267 "/usr/include/ctype.h" 3
extern "C" int __tolower_l(int , locale_t ) throw();
# 268 "/usr/include/ctype.h" 3
extern "C" int tolower_l(int , locale_t ) throw();
# 271 "/usr/include/ctype.h" 3
extern "C" int __toupper_l(int , locale_t ) throw();
# 272 "/usr/include/ctype.h" 3
extern "C" int toupper_l(int , locale_t ) throw();
# 64 "/usr/include/c++/4.4/cctype" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/cctype" 3
using ::isalnum;
# 67 "/usr/include/c++/4.4/cctype" 3
using ::isalpha;
# 68 "/usr/include/c++/4.4/cctype" 3
using ::iscntrl;
# 69 "/usr/include/c++/4.4/cctype" 3
using ::isdigit;
# 70 "/usr/include/c++/4.4/cctype" 3
using ::isgraph;
# 71 "/usr/include/c++/4.4/cctype" 3
using ::islower;
# 72 "/usr/include/c++/4.4/cctype" 3
using ::isprint;
# 73 "/usr/include/c++/4.4/cctype" 3
using ::ispunct;
# 74 "/usr/include/c++/4.4/cctype" 3
using ::isspace;
# 75 "/usr/include/c++/4.4/cctype" 3
using ::isupper;
# 76 "/usr/include/c++/4.4/cctype" 3
using ::isxdigit;
# 77 "/usr/include/c++/4.4/cctype" 3
using ::tolower;
# 78 "/usr/include/c++/4.4/cctype" 3
using ::toupper;
# 80 "/usr/include/c++/4.4/cctype" 3
}
# 46 "/usr/include/c++/4.4/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/4.4/bits/localefwd.h" 3
class locale;
# 51 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    bool
    has_facet ( const locale & ) throw ( );
# 55 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & );
# 60 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isspace ( _CharT, const locale & );
# 64 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isprint ( _CharT, const locale & );
# 68 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    iscntrl ( _CharT, const locale & );
# 72 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isupper ( _CharT, const locale & );
# 76 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    islower ( _CharT, const locale & );
# 80 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalpha ( _CharT, const locale & );
# 84 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isdigit ( _CharT, const locale & );
# 88 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    ispunct ( _CharT, const locale & );
# 92 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isxdigit ( _CharT, const locale & );
# 96 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalnum ( _CharT, const locale & );
# 100 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isgraph ( _CharT, const locale & );
# 104 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    toupper ( _CharT, const locale & );
# 108 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    tolower ( _CharT, const locale & );
# 113 "/usr/include/c++/4.4/bits/localefwd.h" 3
struct ctype_base;
# 114 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype;
# 116 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< char> ;
# 118 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 120 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype_byname;
# 124 "/usr/include/c++/4.4/bits/localefwd.h" 3
class codecvt_base;
# 125 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt;
# 127 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 129 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 131 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt_byname;
# 136 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _InIter = istreambuf_iterator < _CharT > >
    class num_get;
# 138 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _OutIter = ostreambuf_iterator < _CharT > >
    class num_put;
# 141 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct;
# 142 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct_byname;
# 145 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class collate;
# 147 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class
    collate_byname;
# 151 "/usr/include/c++/4.4/bits/localefwd.h" 3
class time_base;
# 152 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 154 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 156 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 158 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 162 "/usr/include/c++/4.4/bits/localefwd.h" 3
class money_base;
# 164 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 166 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 169 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 171 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 175 "/usr/include/c++/4.4/bits/localefwd.h" 3
class messages_base;
# 176 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages;
# 178 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 181 "/usr/include/c++/4.4/bits/localefwd.h" 3
}
# 23 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h" 3
struct sched_param {
# 25 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h" 3
int sched_priority;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h" 3
};
# 82 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int clone(int (* )(void * ), void * , int , void * , ...) throw();
# 86 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int unshare(int ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int sched_getcpu() throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int getcpu(unsigned *, unsigned *) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int setns(int , int ) throw();
# 32 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
typedef unsigned long __cpu_mask;
# 42 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
typedef
# 40 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
struct {
# 41 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 42 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
} cpu_set_t;
# 117 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
extern "C" int __sched_cpucount(size_t , const cpu_set_t * ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
extern "C" cpu_set_t *__sched_cpualloc(size_t ) throw() __attribute((__warn_unused_result__));
# 120 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
extern "C" void __sched_cpufree(cpu_set_t * ) throw();
# 54 "/usr/include/sched.h" 3
extern "C" int sched_setparam(__pid_t , const sched_param * ) throw();
# 58 "/usr/include/sched.h" 3
extern "C" int sched_getparam(__pid_t , sched_param * ) throw();
# 61 "/usr/include/sched.h" 3
extern "C" int sched_setscheduler(__pid_t , int , const sched_param * ) throw();
# 65 "/usr/include/sched.h" 3
extern "C" int sched_getscheduler(__pid_t ) throw();
# 68 "/usr/include/sched.h" 3
extern "C" int sched_yield() throw();
# 71 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_max(int ) throw();
# 74 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_min(int ) throw();
# 77 "/usr/include/sched.h" 3
extern "C" int sched_rr_get_interval(__pid_t , timespec * ) throw();
# 121 "/usr/include/sched.h" 3
extern "C" int sched_setaffinity(__pid_t , size_t , const cpu_set_t * ) throw();
# 125 "/usr/include/sched.h" 3
extern "C" int sched_getaffinity(__pid_t , size_t , cpu_set_t * ) throw();
# 31 "/usr/include/x86_64-linux-gnu/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 34 "/usr/include/pthread.h" 3
enum {
# 35 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 37 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 39 "/usr/include/pthread.h" 3
};
# 44 "/usr/include/pthread.h" 3
enum {
# 45 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 48 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 54 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 58 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 60 "/usr/include/pthread.h" 3
};
# 66 "/usr/include/pthread.h" 3
enum {
# 67 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 70 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 71 "/usr/include/pthread.h" 3
};
# 78 "/usr/include/pthread.h" 3
enum {
# 79 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 81 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 82 "/usr/include/pthread.h" 3
};
# 101 "/usr/include/pthread.h" 3
enum {
# 102 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 103 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 104 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 105 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 106 "/usr/include/pthread.h" 3
};
# 121 "/usr/include/pthread.h" 3
enum {
# 122 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 124 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 126 "/usr/include/pthread.h" 3
};
# 131 "/usr/include/pthread.h" 3
enum {
# 132 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 134 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 136 "/usr/include/pthread.h" 3
};
# 141 "/usr/include/pthread.h" 3
enum {
# 142 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 144 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 146 "/usr/include/pthread.h" 3
};
# 155 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 157 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 158 "/usr/include/pthread.h" 3
void *__arg;
# 159 "/usr/include/pthread.h" 3
int __canceltype;
# 160 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 161 "/usr/include/pthread.h" 3
};
# 165 "/usr/include/pthread.h" 3
enum {
# 166 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 168 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 170 "/usr/include/pthread.h" 3
};
# 172 "/usr/include/pthread.h" 3
enum {
# 173 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 175 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 177 "/usr/include/pthread.h" 3
};
# 198 "/usr/include/pthread.h" 3
extern "C" int pthread_create(pthread_t *__restrict__ , const pthread_attr_t *__restrict__ , void *(* )(void *), void *__restrict__ ) throw()
# 201 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 207 "/usr/include/pthread.h" 3
extern "C" void pthread_exit(void * ) __attribute((__noreturn__));
# 215 "/usr/include/pthread.h" 3
extern "C" int pthread_join(pthread_t , void ** );
# 220 "/usr/include/pthread.h" 3
extern "C" int pthread_tryjoin_np(pthread_t , void ** ) throw();
# 228 "/usr/include/pthread.h" 3
extern "C" int pthread_timedjoin_np(pthread_t , void ** , const timespec * );
# 238 "/usr/include/pthread.h" 3
extern "C" int pthread_clockjoin_np(pthread_t , void ** , clockid_t , const timespec * );
# 247 "/usr/include/pthread.h" 3
extern "C" int pthread_detach(pthread_t ) throw();
# 251 "/usr/include/pthread.h" 3
extern "C" pthread_t pthread_self() throw() __attribute((const));
# 254 "/usr/include/pthread.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int pthread_equal(pthread_t , pthread_t ) throw()
# 255 "/usr/include/pthread.h" 3
 __attribute((const)); }
# 263 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_init(pthread_attr_t * ) throw() __attribute((__nonnull__(1)));
# 266 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_destroy(pthread_attr_t * ) throw()
# 267 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 270 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getdetachstate(const pthread_attr_t * , int * ) throw()
# 272 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 275 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setdetachstate(pthread_attr_t * , int ) throw()
# 277 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 281 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getguardsize(const pthread_attr_t * , size_t * ) throw()
# 283 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 286 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setguardsize(pthread_attr_t * , size_t ) throw()
# 288 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 292 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ , sched_param *__restrict__ ) throw()
# 294 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 297 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedparam(pthread_attr_t *__restrict__ , const sched_param *__restrict__ ) throw()
# 299 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 302 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 304 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 307 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedpolicy(pthread_attr_t * , int ) throw()
# 308 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 311 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 313 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 316 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setinheritsched(pthread_attr_t * , int ) throw()
# 318 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 322 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getscope(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 324 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 327 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setscope(pthread_attr_t * , int ) throw()
# 328 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 331 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ , void **__restrict__ ) throw()
# 333 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 339 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstackaddr(pthread_attr_t * , void * ) throw()
# 341 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 344 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ , size_t *__restrict__ ) throw()
# 346 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 351 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstacksize(pthread_attr_t * , size_t ) throw()
# 353 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 357 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstack(const pthread_attr_t *__restrict__ , void **__restrict__ , size_t *__restrict__ ) throw()
# 360 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 365 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstack(pthread_attr_t * , void * , size_t ) throw()
# 366 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 372 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setaffinity_np(pthread_attr_t * , size_t , const cpu_set_t * ) throw()
# 375 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 379 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getaffinity_np(const pthread_attr_t * , size_t , cpu_set_t * ) throw()
# 382 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 385 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_default_np(pthread_attr_t * ) throw()
# 386 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 390 "/usr/include/pthread.h" 3
extern "C" int pthread_setattr_default_np(const pthread_attr_t * ) throw()
# 391 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 396 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_np(pthread_t , pthread_attr_t * ) throw()
# 397 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 405 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedparam(pthread_t , int , const sched_param * ) throw()
# 407 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 410 "/usr/include/pthread.h" 3
extern "C" int pthread_getschedparam(pthread_t , int *__restrict__ , sched_param *__restrict__ ) throw()
# 413 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 416 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedprio(pthread_t , int ) throw();
# 422 "/usr/include/pthread.h" 3
extern "C" int pthread_getname_np(pthread_t , char * , size_t ) throw()
# 424 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 427 "/usr/include/pthread.h" 3
extern "C" int pthread_setname_np(pthread_t , const char * ) throw()
# 428 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 434 "/usr/include/pthread.h" 3
extern "C" int pthread_getconcurrency() throw();
# 437 "/usr/include/pthread.h" 3
extern "C" int pthread_setconcurrency(int ) throw();
# 445 "/usr/include/pthread.h" 3
extern "C" int pthread_yield() throw();
# 450 "/usr/include/pthread.h" 3
extern "C" int pthread_setaffinity_np(pthread_t , size_t , const cpu_set_t * ) throw()
# 452 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 455 "/usr/include/pthread.h" 3
extern "C" int pthread_getaffinity_np(pthread_t , size_t , cpu_set_t * ) throw()
# 457 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 470 "/usr/include/pthread.h" 3
extern "C" int pthread_once(pthread_once_t * , void (* )(void))
# 471 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 482 "/usr/include/pthread.h" 3
extern "C" int pthread_setcancelstate(int , int * );
# 486 "/usr/include/pthread.h" 3
extern "C" int pthread_setcanceltype(int , int * );
# 489 "/usr/include/pthread.h" 3
extern "C" int pthread_cancel(pthread_t );
# 494 "/usr/include/pthread.h" 3
extern "C" void pthread_testcancel();
# 507 "/usr/include/pthread.h" 3
extern "C" { typedef
# 500 "/usr/include/pthread.h" 3
struct {
# 502 "/usr/include/pthread.h" 3
struct {
# 503 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 504 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 505 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 506 "/usr/include/pthread.h" 3
void *__pad[4];
# 507 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__)); }
# 516 "/usr/include/pthread.h" 3
extern "C" { struct __pthread_cleanup_frame {
# 518 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 519 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 520 "/usr/include/pthread.h" 3
int __do_it;
# 521 "/usr/include/pthread.h" 3
int __cancel_type;
# 522 "/usr/include/pthread.h" 3
}; }
# 527 "/usr/include/pthread.h" 3
extern "C" { class __pthread_cleanup_class {
# 529 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 530 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 531 "/usr/include/pthread.h" 3
int __do_it;
# 532 "/usr/include/pthread.h" 3
int __cancel_type;
# 535 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 536 "/usr/include/pthread.h" 3
{ }
# 537 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 538 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 539 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 540 "/usr/include/pthread.h" 3
}
# 541 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 542 "/usr/include/pthread.h" 3
}; }
# 718 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 719 "/usr/include/pthread.h" 3
extern "C" int __sigsetjmp(__jmp_buf_tag * , int ) throw();
# 725 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_init(pthread_mutex_t * , const pthread_mutexattr_t * ) throw()
# 727 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 730 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_destroy(pthread_mutex_t * ) throw()
# 731 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 734 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_trylock(pthread_mutex_t * ) throw()
# 735 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 738 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_lock(pthread_mutex_t * ) throw()
# 739 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 743 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ , const timespec *__restrict__ ) throw()
# 745 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 749 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_clocklock(pthread_mutex_t *__restrict__ , clockid_t , const timespec *__restrict__ ) throw()
# 752 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 756 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_unlock(pthread_mutex_t * ) throw()
# 757 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 761 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ , int *__restrict__ ) throw()
# 764 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 768 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ , int , int *__restrict__ ) throw()
# 771 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 776 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent(pthread_mutex_t * ) throw()
# 777 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 779 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 780 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 789 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_init(pthread_mutexattr_t * ) throw()
# 790 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 793 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_destroy(pthread_mutexattr_t * ) throw()
# 794 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 797 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 800 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 803 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setpshared(pthread_mutexattr_t * , int ) throw()
# 805 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 809 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 811 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 816 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_settype(pthread_mutexattr_t * , int ) throw()
# 817 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 821 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 824 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 828 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprotocol(pthread_mutexattr_t * , int ) throw()
# 830 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 833 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 836 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 839 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * , int ) throw()
# 841 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 845 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust(const pthread_mutexattr_t * , int * ) throw()
# 847 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 849 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * , int * ) throw()
# 851 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 855 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust(pthread_mutexattr_t * , int ) throw()
# 857 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 859 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * , int ) throw()
# 861 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 871 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_init(pthread_rwlock_t *__restrict__ , const pthread_rwlockattr_t *__restrict__ ) throw()
# 873 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 876 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_destroy(pthread_rwlock_t * ) throw()
# 877 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 880 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_rdlock(pthread_rwlock_t * ) throw()
# 881 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 884 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_tryrdlock(pthread_rwlock_t * ) throw()
# 885 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 889 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 891 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 895 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_clockrdlock(pthread_rwlock_t *__restrict__ , clockid_t , const timespec *__restrict__ ) throw()
# 898 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 902 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_wrlock(pthread_rwlock_t * ) throw()
# 903 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 906 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_trywrlock(pthread_rwlock_t * ) throw()
# 907 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 911 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 913 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 917 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_clockwrlock(pthread_rwlock_t *__restrict__ , clockid_t , const timespec *__restrict__ ) throw()
# 920 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 924 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_unlock(pthread_rwlock_t * ) throw()
# 925 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 931 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_init(pthread_rwlockattr_t * ) throw()
# 932 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 935 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_destroy(pthread_rwlockattr_t * ) throw()
# 936 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 939 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 942 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 945 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * , int ) throw()
# 947 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 950 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 953 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 956 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * , int ) throw()
# 957 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 965 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_init(pthread_cond_t *__restrict__ , const pthread_condattr_t *__restrict__ ) throw()
# 967 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 970 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_destroy(pthread_cond_t * ) throw()
# 971 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 974 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_signal(pthread_cond_t * ) throw()
# 975 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 978 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_broadcast(pthread_cond_t * ) throw()
# 979 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 986 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_wait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ )
# 988 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 997 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_timedwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , const timespec *__restrict__ )
# 1000 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1010 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_clockwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , __clockid_t , const timespec *__restrict__ )
# 1014 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 4)));
# 1020 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_init(pthread_condattr_t * ) throw()
# 1021 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1024 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_destroy(pthread_condattr_t * ) throw()
# 1025 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1028 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ , int *__restrict__ ) throw()
# 1031 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1034 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setpshared(pthread_condattr_t * , int ) throw()
# 1035 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1039 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ , __clockid_t *__restrict__ ) throw()
# 1042 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1045 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setclock(pthread_condattr_t * , __clockid_t ) throw()
# 1047 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1056 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_init(pthread_spinlock_t * , int ) throw()
# 1057 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1060 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_destroy(pthread_spinlock_t * ) throw()
# 1061 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1064 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_lock(pthread_spinlock_t * ) throw()
# 1065 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1068 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_trylock(pthread_spinlock_t * ) throw()
# 1069 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1072 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_unlock(pthread_spinlock_t * ) throw()
# 1073 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1080 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_init(pthread_barrier_t *__restrict__ , const pthread_barrierattr_t *__restrict__ , unsigned ) throw()
# 1083 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1086 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_destroy(pthread_barrier_t * ) throw()
# 1087 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1090 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_wait(pthread_barrier_t * ) throw()
# 1091 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1095 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_init(pthread_barrierattr_t * ) throw()
# 1096 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1099 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_destroy(pthread_barrierattr_t * ) throw()
# 1100 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1103 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ , int *__restrict__ ) throw()
# 1106 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1109 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_setpshared(pthread_barrierattr_t * , int ) throw()
# 1111 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1123 "/usr/include/pthread.h" 3
extern "C" int pthread_key_create(pthread_key_t * , void (* )(void *)) throw()
# 1125 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1128 "/usr/include/pthread.h" 3
extern "C" int pthread_key_delete(pthread_key_t ) throw();
# 1131 "/usr/include/pthread.h" 3
extern "C" void *pthread_getspecific(pthread_key_t ) throw();
# 1134 "/usr/include/pthread.h" 3
extern "C" int pthread_setspecific(pthread_key_t , const void * ) throw();
# 1140 "/usr/include/pthread.h" 3
extern "C" int pthread_getcpuclockid(pthread_t , __clockid_t * ) throw()
# 1142 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1157 "/usr/include/pthread.h" 3
extern "C" int pthread_atfork(void (* )(void), void (* )(void), void (* )(void)) throw();
# 1165 "/usr/include/pthread.h" 3
extern "C" {
# 1164 "/usr/include/pthread.h" 3
__attribute((__gnu_inline__)) extern inline int
# 1165 "/usr/include/pthread.h" 3
pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 1166 "/usr/include/pthread.h" 3
{
# 1167 "/usr/include/pthread.h" 3
return __thread1 == __thread2;
# 1168 "/usr/include/pthread.h" 3
} }
# 267 "/usr/include/unistd.h" 3
extern "C" { typedef __intptr_t intptr_t; }
# 274 "/usr/include/unistd.h" 3
extern "C" { typedef __socklen_t socklen_t; }
# 287 "/usr/include/unistd.h" 3
extern "C" int access(const char * , int ) throw() __attribute((__nonnull__(1)));
# 292 "/usr/include/unistd.h" 3
extern "C" int euidaccess(const char * , int ) throw()
# 293 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 296 "/usr/include/unistd.h" 3
extern "C" int eaccess(const char * , int ) throw()
# 297 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 304 "/usr/include/unistd.h" 3
extern "C" int faccessat(int , const char * , int , int ) throw()
# 305 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 334 "/usr/include/unistd.h" 3
extern "C" __off_t lseek(int , __off_t , int ) throw();
# 345 "/usr/include/unistd.h" 3
extern "C" __off64_t lseek64(int , __off64_t , int ) throw();
# 353 "/usr/include/unistd.h" 3
extern "C" int close(int );
# 360 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t read(int , void * , size_t ) __attribute((__warn_unused_result__)); }
# 366 "/usr/include/unistd.h" 3
extern "C" ssize_t write(int , const void * , size_t ) __attribute((__warn_unused_result__));
# 376 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t pread(int , void * , size_t , __off_t )
# 377 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__)); }
# 384 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite(int , const void * , size_t , __off_t )
# 385 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 404 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t pread64(int , void * , size_t , __off64_t )
# 405 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__)); }
# 408 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite64(int , const void * , size_t , __off64_t )
# 409 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 417 "/usr/include/unistd.h" 3
extern "C" int pipe(int [2]) throw() __attribute((__warn_unused_result__));
# 422 "/usr/include/unistd.h" 3
extern "C" int pipe2(int [2], int ) throw() __attribute((__warn_unused_result__));
# 432 "/usr/include/unistd.h" 3
extern "C" unsigned alarm(unsigned ) throw();
# 444 "/usr/include/unistd.h" 3
extern "C" unsigned sleep(unsigned );
# 452 "/usr/include/unistd.h" 3
extern "C" __useconds_t ualarm(__useconds_t , __useconds_t ) throw();
# 460 "/usr/include/unistd.h" 3
extern "C" int usleep(__useconds_t );
# 469 "/usr/include/unistd.h" 3
extern "C" int pause();
# 473 "/usr/include/unistd.h" 3
extern "C" int chown(const char * , __uid_t , __gid_t ) throw()
# 474 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 478 "/usr/include/unistd.h" 3
extern "C" int fchown(int , __uid_t , __gid_t ) throw() __attribute((__warn_unused_result__));
# 483 "/usr/include/unistd.h" 3
extern "C" int lchown(const char * , __uid_t , __gid_t ) throw()
# 484 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 491 "/usr/include/unistd.h" 3
extern "C" int fchownat(int , const char * , __uid_t , __gid_t , int ) throw()
# 493 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 497 "/usr/include/unistd.h" 3
extern "C" int chdir(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 501 "/usr/include/unistd.h" 3
extern "C" int fchdir(int ) throw() __attribute((__warn_unused_result__));
# 511 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *getcwd(char * , size_t ) throw() __attribute((__warn_unused_result__)); }
# 517 "/usr/include/unistd.h" 3
extern "C" char *get_current_dir_name() throw();
# 525 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *getwd(char * ) throw()
# 526 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__)) __attribute((__warn_unused_result__)); }
# 531 "/usr/include/unistd.h" 3
extern "C" int dup(int ) throw() __attribute((__warn_unused_result__));
# 534 "/usr/include/unistd.h" 3
extern "C" int dup2(int , int ) throw();
# 539 "/usr/include/unistd.h" 3
extern "C" int dup3(int , int , int ) throw();
# 543 "/usr/include/unistd.h" 3
extern "C" { extern char **__environ; }
# 545 "/usr/include/unistd.h" 3
extern "C" { extern char **environ; }
# 551 "/usr/include/unistd.h" 3
extern "C" int execve(const char * , char *const [], char *const []) throw()
# 552 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 557 "/usr/include/unistd.h" 3
extern "C" int fexecve(int , char *const [], char *const []) throw()
# 558 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 563 "/usr/include/unistd.h" 3
extern "C" int execv(const char * , char *const []) throw()
# 564 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 568 "/usr/include/unistd.h" 3
extern "C" int execle(const char * , const char * , ...) throw()
# 569 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 573 "/usr/include/unistd.h" 3
extern "C" int execl(const char * , const char * , ...) throw()
# 574 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 578 "/usr/include/unistd.h" 3
extern "C" int execvp(const char * , char *const []) throw()
# 579 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 584 "/usr/include/unistd.h" 3
extern "C" int execlp(const char * , const char * , ...) throw()
# 585 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 590 "/usr/include/unistd.h" 3
extern "C" int execvpe(const char * , char *const [], char *const []) throw()
# 592 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 598 "/usr/include/unistd.h" 3
extern "C" int nice(int ) throw() __attribute((__warn_unused_result__));
# 603 "/usr/include/unistd.h" 3
extern "C" void _exit(int ) __attribute((__noreturn__));
# 25 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
enum {
# 26 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_LINK_MAX,
# 28 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_MAX_CANON,
# 30 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_MAX_INPUT,
# 32 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_NAME_MAX,
# 34 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_PATH_MAX,
# 36 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_PIPE_BUF,
# 38 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_CHOWN_RESTRICTED,
# 40 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_NO_TRUNC,
# 42 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_VDISABLE,
# 44 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_SYNC_IO,
# 46 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_ASYNC_IO,
# 48 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_PRIO_IO,
# 50 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_SOCK_MAXBUF,
# 52 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_FILESIZEBITS,
# 54 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_INCR_XFER_SIZE,
# 56 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_MAX_XFER_SIZE,
# 58 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_MIN_XFER_SIZE,
# 60 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_XFER_ALIGN,
# 62 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_ALLOC_SIZE_MIN,
# 64 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_SYMLINK_MAX,
# 66 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_2_SYMLINKS
# 68 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
};
# 72 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
enum {
# 73 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ARG_MAX,
# 75 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHILD_MAX,
# 77 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CLK_TCK,
# 79 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NGROUPS_MAX,
# 81 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_OPEN_MAX,
# 83 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_STREAM_MAX,
# 85 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TZNAME_MAX,
# 87 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_JOB_CONTROL,
# 89 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SAVED_IDS,
# 91 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_REALTIME_SIGNALS,
# 93 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PRIORITY_SCHEDULING,
# 95 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TIMERS,
# 97 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ASYNCHRONOUS_IO,
# 99 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PRIORITIZED_IO,
# 101 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYNCHRONIZED_IO,
# 103 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FSYNC,
# 105 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MAPPED_FILES,
# 107 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MEMLOCK,
# 109 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MEMLOCK_RANGE,
# 111 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MEMORY_PROTECTION,
# 113 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MESSAGE_PASSING,
# 115 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SEMAPHORES,
# 117 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHARED_MEMORY_OBJECTS,
# 119 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AIO_LISTIO_MAX,
# 121 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AIO_MAX,
# 123 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AIO_PRIO_DELTA_MAX,
# 125 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DELAYTIMER_MAX,
# 127 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MQ_OPEN_MAX,
# 129 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MQ_PRIO_MAX,
# 131 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_VERSION,
# 133 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PAGESIZE,
# 136 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_RTSIG_MAX,
# 138 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SEM_NSEMS_MAX,
# 140 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SEM_VALUE_MAX,
# 142 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SIGQUEUE_MAX,
# 144 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TIMER_MAX,
# 149 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_BASE_MAX,
# 151 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_DIM_MAX,
# 153 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_SCALE_MAX,
# 155 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_STRING_MAX,
# 157 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_COLL_WEIGHTS_MAX,
# 159 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_EQUIV_CLASS_MAX,
# 161 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_EXPR_NEST_MAX,
# 163 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LINE_MAX,
# 165 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_RE_DUP_MAX,
# 167 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHARCLASS_NAME_MAX,
# 170 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_VERSION,
# 172 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_C_BIND,
# 174 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_C_DEV,
# 176 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_FORT_DEV,
# 178 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_FORT_RUN,
# 180 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_SW_DEV,
# 182 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_LOCALEDEF,
# 185 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII,
# 187 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_XTI,
# 189 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_SOCKET,
# 191 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_INTERNET,
# 193 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI,
# 195 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_POLL,
# 197 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SELECT,
# 199 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_UIO_MAXIOV,
# 201 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_IOV_MAX = 60,
# 203 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_INTERNET_STREAM,
# 205 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_INTERNET_DGRAM,
# 207 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI_COTS,
# 209 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI_CLTS,
# 211 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI_M,
# 213 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_T_IOV_MAX,
# 217 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREADS,
# 219 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_SAFE_FUNCTIONS,
# 221 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_GETGR_R_SIZE_MAX,
# 223 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_GETPW_R_SIZE_MAX,
# 225 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LOGIN_NAME_MAX,
# 227 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TTY_NAME_MAX,
# 229 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_DESTRUCTOR_ITERATIONS,
# 231 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_KEYS_MAX,
# 233 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_STACK_MIN,
# 235 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_THREADS_MAX,
# 237 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ATTR_STACKADDR,
# 239 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ATTR_STACKSIZE,
# 241 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PRIORITY_SCHEDULING,
# 243 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PRIO_INHERIT,
# 245 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PRIO_PROTECT,
# 247 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PROCESS_SHARED,
# 250 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NPROCESSORS_CONF,
# 252 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NPROCESSORS_ONLN,
# 254 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PHYS_PAGES,
# 256 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AVPHYS_PAGES,
# 258 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ATEXIT_MAX,
# 260 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PASS_MAX,
# 263 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_VERSION,
# 265 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XCU_VERSION,
# 267 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_UNIX,
# 269 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_CRYPT,
# 271 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_ENH_I18N,
# 273 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_SHM,
# 276 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_CHAR_TERM,
# 278 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_C_VERSION,
# 280 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_UPE,
# 283 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XPG2,
# 285 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XPG3,
# 287 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XPG4,
# 290 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHAR_BIT,
# 292 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHAR_MAX,
# 294 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHAR_MIN,
# 296 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_INT_MAX,
# 298 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_INT_MIN,
# 300 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LONG_BIT,
# 302 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_WORD_BIT,
# 304 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MB_LEN_MAX,
# 306 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NZERO,
# 308 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SSIZE_MAX,
# 310 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SCHAR_MAX,
# 312 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SCHAR_MIN,
# 314 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHRT_MAX,
# 316 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHRT_MIN,
# 318 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_UCHAR_MAX,
# 320 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_UINT_MAX,
# 322 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ULONG_MAX,
# 324 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_USHRT_MAX,
# 327 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_ARGMAX,
# 329 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_LANGMAX,
# 331 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_MSGMAX,
# 333 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_NMAX,
# 335 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_SETMAX,
# 337 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_TEXTMAX,
# 340 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_ILP32_OFF32,
# 342 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_ILP32_OFFBIG,
# 344 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_LP64_OFF64,
# 346 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_LPBIG_OFFBIG,
# 349 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_LEGACY,
# 351 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_REALTIME,
# 353 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_REALTIME_THREADS,
# 356 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ADVISORY_INFO,
# 358 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BARRIERS,
# 360 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BASE,
# 362 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_C_LANG_SUPPORT,
# 364 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_C_LANG_SUPPORT_R,
# 366 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CLOCK_SELECTION,
# 368 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CPUTIME,
# 370 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_CPUTIME,
# 372 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DEVICE_IO,
# 374 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DEVICE_SPECIFIC,
# 376 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DEVICE_SPECIFIC_R,
# 378 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FD_MGMT,
# 380 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FIFO,
# 382 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PIPE,
# 384 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FILE_ATTRIBUTES,
# 386 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FILE_LOCKING,
# 388 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FILE_SYSTEM,
# 390 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MONOTONIC_CLOCK,
# 392 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MULTI_PROCESS,
# 394 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SINGLE_PROCESS,
# 396 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NETWORKING,
# 398 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_READER_WRITER_LOCKS,
# 400 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SPIN_LOCKS,
# 402 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_REGEXP,
# 404 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_REGEX_VERSION,
# 406 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHELL,
# 408 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SIGNALS,
# 410 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SPAWN,
# 412 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SPORADIC_SERVER,
# 414 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_SPORADIC_SERVER,
# 416 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYSTEM_DATABASE,
# 418 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYSTEM_DATABASE_R,
# 420 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TIMEOUTS,
# 422 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TYPED_MEMORY_OBJECTS,
# 424 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_USER_GROUPS,
# 426 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_USER_GROUPS_R,
# 428 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS,
# 430 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_ACCOUNTING,
# 432 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_LOCATE,
# 434 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_MESSAGE,
# 436 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_TRACK,
# 438 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYMLOOP_MAX,
# 440 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_STREAMS,
# 442 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_CHECKPOINT,
# 445 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_ILP32_OFF32,
# 447 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_ILP32_OFFBIG,
# 449 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_LP64_OFF64,
# 451 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_LPBIG_OFFBIG,
# 454 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_HOST_NAME_MAX,
# 456 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE,
# 458 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_EVENT_FILTER,
# 460 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_INHERIT,
# 462 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_LOG,
# 465 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_ICACHE_SIZE,
# 467 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_ICACHE_ASSOC,
# 469 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_ICACHE_LINESIZE,
# 471 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_DCACHE_SIZE,
# 473 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_DCACHE_ASSOC,
# 475 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_DCACHE_LINESIZE,
# 477 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL2_CACHE_SIZE,
# 479 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL2_CACHE_ASSOC,
# 481 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL2_CACHE_LINESIZE,
# 483 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL3_CACHE_SIZE,
# 485 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL3_CACHE_ASSOC,
# 487 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL3_CACHE_LINESIZE,
# 489 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL4_CACHE_SIZE,
# 491 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL4_CACHE_ASSOC,
# 493 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL4_CACHE_LINESIZE,
# 497 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_IPV6 = 235,
# 499 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_RAW_SOCKETS,
# 502 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_ILP32_OFF32,
# 504 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_ILP32_OFFBIG,
# 506 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_LP64_OFF64,
# 508 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_LPBIG_OFFBIG,
# 511 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SS_REPL_MAX,
# 514 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_EVENT_NAME_MAX,
# 516 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_NAME_MAX,
# 518 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_SYS_MAX,
# 520 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_USER_EVENT_MAX,
# 523 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_STREAMS,
# 526 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_INHERIT,
# 528 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_PROTECT
# 530 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
};
# 534 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
enum {
# 535 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_PATH,
# 538 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V6_WIDTH_RESTRICTED_ENVS,
# 542 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_GNU_LIBC_VERSION,
# 544 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_GNU_LIBPTHREAD_VERSION,
# 547 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V5_WIDTH_RESTRICTED_ENVS,
# 551 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V7_WIDTH_RESTRICTED_ENVS,
# 555 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_CFLAGS = 1000,
# 557 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_LDFLAGS,
# 559 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_LIBS,
# 561 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_LINTFLAGS,
# 563 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_CFLAGS,
# 565 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_LDFLAGS,
# 567 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_LIBS,
# 569 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_LINTFLAGS,
# 572 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_CFLAGS = 1100,
# 574 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LDFLAGS,
# 576 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LIBS,
# 578 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LINTFLAGS,
# 580 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_CFLAGS,
# 582 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LDFLAGS,
# 584 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LIBS,
# 586 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
# 588 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_CFLAGS,
# 590 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LDFLAGS,
# 592 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LIBS,
# 594 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LINTFLAGS,
# 596 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_CFLAGS,
# 598 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
# 600 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LIBS,
# 602 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
# 605 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_CFLAGS,
# 607 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
# 609 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LIBS,
# 611 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
# 613 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
# 615 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
# 617 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LIBS,
# 619 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
# 621 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_CFLAGS,
# 623 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LDFLAGS,
# 625 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LIBS,
# 627 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
# 629 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
# 631 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
# 633 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
# 635 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
# 638 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_CFLAGS,
# 640 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
# 642 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LIBS,
# 644 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
# 646 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
# 648 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
# 650 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LIBS,
# 652 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
# 654 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_CFLAGS,
# 656 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LDFLAGS,
# 658 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LIBS,
# 660 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
# 662 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
# 664 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
# 666 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
# 668 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
# 671 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V6_ENV,
# 673 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V7_ENV
# 675 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
};
# 612 "/usr/include/unistd.h" 3
extern "C" long pathconf(const char * , int ) throw()
# 613 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 616 "/usr/include/unistd.h" 3
extern "C" long fpathconf(int , int ) throw();
# 619 "/usr/include/unistd.h" 3
extern "C" long sysconf(int ) throw();
# 623 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t confstr(int , char * , size_t ) throw(); }
# 628 "/usr/include/unistd.h" 3
extern "C" __pid_t getpid() throw();
# 631 "/usr/include/unistd.h" 3
extern "C" __pid_t getppid() throw();
# 634 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgrp() throw();
# 637 "/usr/include/unistd.h" 3
extern "C" __pid_t __getpgid(__pid_t ) throw();
# 639 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgid(__pid_t ) throw();
# 646 "/usr/include/unistd.h" 3
extern "C" int setpgid(__pid_t , __pid_t ) throw();
# 660 "/usr/include/unistd.h" 3
extern "C" int setpgrp() throw();
# 667 "/usr/include/unistd.h" 3
extern "C" __pid_t setsid() throw();
# 671 "/usr/include/unistd.h" 3
extern "C" __pid_t getsid(__pid_t ) throw();
# 675 "/usr/include/unistd.h" 3
extern "C" __uid_t getuid() throw();
# 678 "/usr/include/unistd.h" 3
extern "C" __uid_t geteuid() throw();
# 681 "/usr/include/unistd.h" 3
extern "C" __gid_t getgid() throw();
# 684 "/usr/include/unistd.h" 3
extern "C" __gid_t getegid() throw();
# 689 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getgroups(int , __gid_t []) throw() __attribute((__warn_unused_result__)); }
# 693 "/usr/include/unistd.h" 3
extern "C" int group_member(__gid_t ) throw();
# 700 "/usr/include/unistd.h" 3
extern "C" int setuid(__uid_t ) throw() __attribute((__warn_unused_result__));
# 705 "/usr/include/unistd.h" 3
extern "C" int setreuid(__uid_t , __uid_t ) throw() __attribute((__warn_unused_result__));
# 710 "/usr/include/unistd.h" 3
extern "C" int seteuid(__uid_t ) throw() __attribute((__warn_unused_result__));
# 717 "/usr/include/unistd.h" 3
extern "C" int setgid(__gid_t ) throw() __attribute((__warn_unused_result__));
# 722 "/usr/include/unistd.h" 3
extern "C" int setregid(__gid_t , __gid_t ) throw() __attribute((__warn_unused_result__));
# 727 "/usr/include/unistd.h" 3
extern "C" int setegid(__gid_t ) throw() __attribute((__warn_unused_result__));
# 733 "/usr/include/unistd.h" 3
extern "C" int getresuid(__uid_t * , __uid_t * , __uid_t * ) throw();
# 738 "/usr/include/unistd.h" 3
extern "C" int getresgid(__gid_t * , __gid_t * , __gid_t * ) throw();
# 743 "/usr/include/unistd.h" 3
extern "C" int setresuid(__uid_t , __uid_t , __uid_t ) throw()
# 744 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 748 "/usr/include/unistd.h" 3
extern "C" int setresgid(__gid_t , __gid_t , __gid_t ) throw()
# 749 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 756 "/usr/include/unistd.h" 3
extern "C" __pid_t fork() throw();
# 764 "/usr/include/unistd.h" 3
extern "C" __pid_t vfork() throw();
# 770 "/usr/include/unistd.h" 3
extern "C" char *ttyname(int ) throw();
# 774 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int ttyname_r(int , char * , size_t ) throw()
# 775 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__)); }
# 779 "/usr/include/unistd.h" 3
extern "C" int isatty(int ) throw();
# 784 "/usr/include/unistd.h" 3
extern "C" int ttyslot() throw();
# 789 "/usr/include/unistd.h" 3
extern "C" int link(const char * , const char * ) throw()
# 790 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 795 "/usr/include/unistd.h" 3
extern "C" int linkat(int , const char * , int , const char * , int ) throw()
# 797 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 4))) __attribute((__warn_unused_result__));
# 802 "/usr/include/unistd.h" 3
extern "C" int symlink(const char * , const char * ) throw()
# 803 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 808 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t readlink(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 810 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__)); }
# 815 "/usr/include/unistd.h" 3
extern "C" int symlinkat(const char * , int , const char * ) throw()
# 816 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 3))) __attribute((__warn_unused_result__));
# 819 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t readlinkat(int , const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 821 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__)); }
# 825 "/usr/include/unistd.h" 3
extern "C" int unlink(const char * ) throw() __attribute((__nonnull__(1)));
# 829 "/usr/include/unistd.h" 3
extern "C" int unlinkat(int , const char * , int ) throw()
# 830 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 834 "/usr/include/unistd.h" 3
extern "C" int rmdir(const char * ) throw() __attribute((__nonnull__(1)));
# 838 "/usr/include/unistd.h" 3
extern "C" __pid_t tcgetpgrp(int ) throw();
# 841 "/usr/include/unistd.h" 3
extern "C" int tcsetpgrp(int , __pid_t ) throw();
# 848 "/usr/include/unistd.h" 3
extern "C" char *getlogin();
# 856 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getlogin_r(char * , size_t ) __attribute((__nonnull__(1))); }
# 861 "/usr/include/unistd.h" 3
extern "C" int setlogin(const char * ) throw() __attribute((__nonnull__(1)));
# 36 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern char *optarg; }
# 50 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern int optind; }
# 55 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern int opterr; }
# 59 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern int optopt; }
# 91 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" int getopt(int , char *const * , const char * ) throw()
# 92 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
 __attribute((__nonnull__(2, 3)));
# 877 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int gethostname(char * , size_t ) throw() __attribute((__nonnull__(1))); }
# 884 "/usr/include/unistd.h" 3
extern "C" int sethostname(const char * , size_t ) throw()
# 885 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 889 "/usr/include/unistd.h" 3
extern "C" int sethostid(long ) throw() __attribute((__warn_unused_result__));
# 895 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getdomainname(char * , size_t ) throw()
# 896 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 897 "/usr/include/unistd.h" 3
extern "C" int setdomainname(const char * , size_t ) throw()
# 898 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 904 "/usr/include/unistd.h" 3
extern "C" int vhangup() throw();
# 907 "/usr/include/unistd.h" 3
extern "C" int revoke(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 915 "/usr/include/unistd.h" 3
extern "C" int profil(unsigned short * , size_t , size_t , unsigned ) throw()
# 917 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 923 "/usr/include/unistd.h" 3
extern "C" int acct(const char * ) throw();
# 927 "/usr/include/unistd.h" 3
extern "C" char *getusershell() throw();
# 928 "/usr/include/unistd.h" 3
extern "C" void endusershell() throw();
# 929 "/usr/include/unistd.h" 3
extern "C" void setusershell() throw();
# 935 "/usr/include/unistd.h" 3
extern "C" int daemon(int , int ) throw() __attribute((__warn_unused_result__));
# 942 "/usr/include/unistd.h" 3
extern "C" int chroot(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 946 "/usr/include/unistd.h" 3
extern "C" char *getpass(const char * ) __attribute((__nonnull__(1)));
# 954 "/usr/include/unistd.h" 3
extern "C" int fsync(int );
# 960 "/usr/include/unistd.h" 3
extern "C" int syncfs(int ) throw();
# 967 "/usr/include/unistd.h" 3
extern "C" long gethostid();
# 970 "/usr/include/unistd.h" 3
extern "C" void sync() throw();
# 976 "/usr/include/unistd.h" 3
extern "C" int getpagesize() throw() __attribute((const));
# 981 "/usr/include/unistd.h" 3
extern "C" int getdtablesize() throw();
# 991 "/usr/include/unistd.h" 3
extern "C" int truncate(const char * , __off_t ) throw()
# 992 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 1003 "/usr/include/unistd.h" 3
extern "C" int truncate64(const char * , __off64_t ) throw()
# 1004 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 1014 "/usr/include/unistd.h" 3
extern "C" int ftruncate(int , __off_t ) throw() __attribute((__warn_unused_result__));
# 1024 "/usr/include/unistd.h" 3
extern "C" int ftruncate64(int , __off64_t ) throw() __attribute((__warn_unused_result__));
# 1035 "/usr/include/unistd.h" 3
extern "C" int brk(void * ) throw() __attribute((__warn_unused_result__));
# 1041 "/usr/include/unistd.h" 3
extern "C" void *sbrk(intptr_t ) throw();
# 1056 "/usr/include/unistd.h" 3
extern "C" long syscall(long , ...) throw();
# 1079 "/usr/include/unistd.h" 3
extern "C" int lockf(int , int , __off_t ) __attribute((__warn_unused_result__));
# 1089 "/usr/include/unistd.h" 3
extern "C" int lockf64(int , int , __off64_t ) __attribute((__warn_unused_result__));
# 1107 "/usr/include/unistd.h" 3
extern "C" ssize_t copy_file_range(int , __off64_t * , int , __off64_t * , size_t , unsigned );
# 1115 "/usr/include/unistd.h" 3
extern "C" int fdatasync(int );
# 1124 "/usr/include/unistd.h" 3
extern "C" char *crypt(const char * , const char * ) throw()
# 1125 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1133 "/usr/include/unistd.h" 3
extern "C" void swab(const void *__restrict__ , void *__restrict__ , ssize_t ) throw()
# 1134 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1161 "/usr/include/unistd.h" 3
extern "C" int getentropy(void * , size_t ) __attribute((__warn_unused_result__));
# 23 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __read_chk(int , void * , size_t , size_t )
# 24 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 25 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __read_alias(int , void * , size_t ) __asm__("read") __attribute((__warn_unused_result__));
# 27 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __read_chk_warn(int , void * , size_t , size_t ) __asm__("__read_chk")
# 30 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("read called with bigger length than size of the destination buffer")));
# 34 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ssize_t
# 34 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
read(int __fd, void *__buf, size_t __nbytes)
# 35 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 36 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 0) != ((size_t)(-1)))
# 37 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 38 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 39 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __read_chk(__fd, __buf, __nbytes, __builtin_object_size(__buf, 0)); }
# 41 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__nbytes > __builtin_object_size(__buf, 0)) {
# 42 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __read_chk_warn(__fd, __buf, __nbytes, __builtin_object_size(__buf, 0)); }
# 43 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 44 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __read_alias(__fd, __buf, __nbytes);
# 45 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 48 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread_chk(int , void * , size_t , __off_t , size_t )
# 49 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 50 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread64_chk(int , void * , size_t , __off64_t , size_t )
# 51 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 52 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread_alias(int , void * , size_t , __off_t ) __asm__("pread") __attribute((__warn_unused_result__));
# 55 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread64_alias(int , void * , size_t , __off64_t ) __asm__("pread64") __attribute((__warn_unused_result__));
# 58 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread_chk_warn(int , void * , size_t , __off_t , size_t ) __asm__("__pread_chk")
# 61 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("pread called with bigger length than size of the destination buffer")));
# 63 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread64_chk_warn(int , void * , size_t , __off64_t , size_t ) __asm__("__pread64_chk")
# 67 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("pread64 called with bigger length than size of the destination buffer")));
# 72 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 71 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ssize_t
# 72 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset)
# 73 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 74 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 0) != ((size_t)(-1)))
# 75 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 76 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 77 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread_chk(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 79 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__nbytes > __builtin_object_size(__buf, 0)) {
# 80 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread_chk_warn(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 82 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 83 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread_alias(__fd, __buf, __nbytes, __offset);
# 84 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 105 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 104 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ssize_t
# 105 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset)
# 106 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 107 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 0) != ((size_t)(-1)))
# 108 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 109 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 110 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread64_chk(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 112 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__nbytes > __builtin_object_size(__buf, 0)) {
# 113 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread64_chk_warn(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 115 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 117 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread64_alias(__fd, __buf, __nbytes, __offset);
# 118 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 123 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlink_chk(const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw()
# 126 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 127 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlink_alias(const char *__restrict__ , char *__restrict__ , size_t ) throw() __asm__("readlink")
# 130 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 131 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlink_chk_warn(const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw() __asm__("__readlink_chk")
# 135 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__)) __attribute((__warning__("readlink called with bigger length than size of destination buffer")));
# 139 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 138 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__)) extern inline ssize_t
# 139 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
readlink(const char *__restrict__ __path, char *__restrict__ __buf, size_t __len) throw()
# 141 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 142 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 143 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 144 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 145 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlink_chk(__path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 147 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__len > __builtin_object_size(__buf, 2 > 1)) {
# 148 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlink_chk_warn(__path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 149 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 150 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlink_alias(__path, __buf, __len);
# 151 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 155 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlinkat_chk(int , const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw()
# 158 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__));
# 159 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlinkat_alias(int , const char *__restrict__ , char *__restrict__ , size_t ) throw() __asm__("readlinkat")
# 163 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__));
# 164 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlinkat_chk_warn(int , const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw() __asm__("__readlinkat_chk")
# 168 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__)) __attribute((__warning__("readlinkat called with bigger length than size of destination buffer")));
# 173 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 172 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__)) extern inline ssize_t
# 173 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
readlinkat(int __fd, const char *__restrict__ __path, char *__restrict__ __buf, size_t __len) throw()
# 175 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 176 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 177 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 178 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 179 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlinkat_chk(__fd, __path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 181 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__len > __builtin_object_size(__buf, 2 > 1)) {
# 182 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlinkat_chk_warn(__fd, __path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 184 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 185 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlinkat_alias(__fd, __path, __buf, __len);
# 186 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 189 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getcwd_chk(char * , size_t , size_t ) throw()
# 190 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 191 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getcwd_alias(char * , size_t ) throw() __asm__("getcwd") __attribute((__warn_unused_result__));
# 193 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getcwd_chk_warn(char * , size_t , size_t ) throw() __asm__("__getcwd_chk")
# 196 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("getcwd caller with bigger length than size of destination buffer")));
# 200 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 199 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 200 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getcwd(char *__buf, size_t __size) throw()
# 201 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 202 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 203 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 204 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 205 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getcwd_chk(__buf, __size, __builtin_object_size(__buf, 2 > 1)); }
# 207 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__size > __builtin_object_size(__buf, 2 > 1)) {
# 208 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getcwd_chk_warn(__buf, __size, __builtin_object_size(__buf, 2 > 1)); }
# 209 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 210 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getcwd_alias(__buf, __size);
# 211 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 214 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getwd_chk(char * , size_t ) throw()
# 215 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 216 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getwd_warn(char * ) throw() __asm__("getwd")
# 217 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)) __attribute((__warning__("please use getcwd instead, as getwd doesn\'t specify buffer size")));
# 221 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 220 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__nonnull__(1))) __attribute((__deprecated__)) __attribute((__warn_unused_result__)) extern inline char *
# 221 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getwd(char *__buf) throw()
# 222 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 223 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1))) {
# 224 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getwd_chk(__buf, __builtin_object_size(__buf, 2 > 1)); }
# 225 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getwd_warn(__buf);
# 226 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 229 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" size_t __confstr_chk(int , char * , size_t , size_t ) throw();
# 231 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" size_t __confstr_alias(int , char * , size_t ) throw() __asm__("confstr");
# 233 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" size_t __confstr_chk_warn(int , char * , size_t , size_t ) throw() __asm__("__confstr_chk")
# 236 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warning__("confstr called with bigger length than size of destination buffer")));
# 240 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 239 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 240 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
confstr(int __name, char *__buf, size_t __len) throw()
# 241 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 242 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 243 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 244 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 245 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __confstr_chk(__name, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 247 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) < __len) {
# 248 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __confstr_chk_warn(__name, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 249 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 250 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __confstr_alias(__name, __buf, __len);
# 251 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 254 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getgroups_chk(int , __gid_t [], size_t ) throw()
# 255 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 256 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getgroups_alias(int , __gid_t []) throw() __asm__("getgroups") __attribute((__warn_unused_result__));
# 258 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getgroups_chk_warn(int , __gid_t [], size_t ) throw() __asm__("__getgroups_chk")
# 261 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("getgroups called with bigger group count than what can fit into destination buffer")));
# 265 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 264 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 265 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getgroups(int __size, __gid_t __list[]) throw()
# 266 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 267 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__list, 2 > 1) != ((size_t)(-1)))
# 268 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 269 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if ((!(0)) || (__size < 0)) {
# 270 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getgroups_chk(__size, __list, __builtin_object_size(__list, 2 > 1)); }
# 272 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if ((__size * sizeof(__gid_t)) > __builtin_object_size(__list, 2 > 1)) {
# 273 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getgroups_chk_warn(__size, __list, __builtin_object_size(__list, 2 > 1)); }
# 274 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 275 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getgroups_alias(__size, __list);
# 276 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 279 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __ttyname_r_chk(int , char * , size_t , size_t ) throw()
# 280 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2)));
# 281 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __ttyname_r_alias(int , char * , size_t ) throw() __asm__("ttyname_r")
# 283 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2)));
# 284 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __ttyname_r_chk_warn(int , char * , size_t , size_t ) throw() __asm__("__ttyname_r_chk")
# 287 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warning__("ttyname_r called with bigger buflen than size of destination buffer")));
# 291 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 290 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 291 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
ttyname_r(int __fd, char *__buf, size_t __buflen) throw()
# 292 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 293 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 294 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 295 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 296 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __ttyname_r_chk(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 298 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 299 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __ttyname_r_chk_warn(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 300 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 301 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __ttyname_r_alias(__fd, __buf, __buflen);
# 302 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 306 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getlogin_r_chk(char * , size_t , size_t )
# 307 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1)));
# 308 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getlogin_r_alias(char * , size_t ) __asm__("getlogin_r") __attribute((__nonnull__(1)));
# 310 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getlogin_r_chk_warn(char * , size_t , size_t ) __asm__("__getlogin_r_chk")
# 313 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warning__("getlogin_r called with bigger buflen than size of destination buffer")));
# 317 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 316 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 317 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getlogin_r(char *__buf, size_t __buflen)
# 318 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 319 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 320 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 321 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 322 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getlogin_r_chk(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 324 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 325 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getlogin_r_chk_warn(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 326 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 327 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getlogin_r_alias(__buf, __buflen);
# 328 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 333 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __gethostname_chk(char * , size_t , size_t ) throw()
# 334 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1)));
# 335 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __gethostname_alias(char * , size_t ) throw() __asm__("gethostname") __attribute((__nonnull__(1)));
# 337 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __gethostname_chk_warn(char * , size_t , size_t ) throw() __asm__("__gethostname_chk")
# 340 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warning__("gethostname called with bigger buflen than size of destination buffer")));
# 344 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 343 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 344 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
gethostname(char *__buf, size_t __buflen) throw()
# 345 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 346 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 347 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 348 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 349 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __gethostname_chk(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 351 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 352 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __gethostname_chk_warn(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 353 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 354 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __gethostname_alias(__buf, __buflen);
# 355 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 360 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getdomainname_chk(char * , size_t , size_t ) throw()
# 361 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 362 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getdomainname_alias(char * , size_t ) throw() __asm__("getdomainname") __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 365 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getdomainname_chk_warn(char * , size_t , size_t ) throw() __asm__("__getdomainname_chk")
# 368 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)) __attribute((__warning__("getdomainname called with bigger buflen than size of destination buffer")));
# 373 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 372 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 373 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getdomainname(char *__buf, size_t __buflen) throw()
# 374 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 375 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 376 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 377 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 378 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getdomainname_chk(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 380 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 381 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getdomainname_chk_warn(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 382 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 383 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getdomainname_alias(__buf, __buflen);
# 384 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 34 "/usr/include/x86_64-linux-gnu/bits/unistd_ext.h" 3
extern "C" __pid_t gettid() throw();
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 118 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 119 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 120 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 122 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 123 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 124 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 125 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 126 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 127 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 128 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 130 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 131 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 134 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 137 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 138 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 139 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 141 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 142 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 143 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 144 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 145 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 148 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 149 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 150 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 151 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 152 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 238 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 239 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 240 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw_pthread_cancel));
# 242 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 243 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 649 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 650 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__args)
# 651 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 652 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 653 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 656 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 657 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 658 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 659 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 662 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 663 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 664 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 665 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 668 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 669 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 670 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 671 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 674 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 675 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 676 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 677 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 680 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_yield()
# 681 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 682 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 683 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 686 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 687 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 688 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 689 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 691 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return -1; }
# 692 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 695 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 696 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 697 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 698 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 701 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 702 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 703 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 704 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 707 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 708 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 709 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 710 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 713 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 714 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 715 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 716 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 719 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 720 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 721 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 722 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 724 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 725 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 728 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 729 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 730 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 731 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 733 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 734 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 737 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 738 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 739 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 740 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 742 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 743 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 748 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 749 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 750 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 751 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 752 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 754 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 755 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 760 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 761 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 762 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 763 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 765 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 766 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 792 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 793 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 794 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 795 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 798 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 799 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 800 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 801 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 806 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 807 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 808 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 809 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 810 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 815 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 816 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 817 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 818 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 821 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 822 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 823 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 824 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 827 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 828 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 829 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 830 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 833 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 834 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 835 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 836 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 839 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 840 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 841 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 842 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 843 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 846 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 847 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__mutex)
# 848 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 849 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 850 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 853 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 854 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__mutex, const __gthread_time_t *
# 855 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 856 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 857 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 858 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 861 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 862 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 863 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 864 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 32 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/atomic_word.h" 3
typedef int _Atomic_word;
# 37 "/usr/include/c++/4.4/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 46 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ return __sync_fetch_and_add_4(__mem, __val); }
# 49 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 50 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ __sync_fetch_and_add_4(__mem, __val); }
# 62 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 63 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 64 "/usr/include/c++/4.4/ext/atomicity.h" 3
_Atomic_word __result = (*__mem);
# 65 "/usr/include/c++/4.4/ext/atomicity.h" 3
(*__mem) += __val;
# 66 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __result;
# 67 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 70 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 71 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 74 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 75 "/usr/include/c++/4.4/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 76 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 78 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 79 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 81 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 85 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 88 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 89 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 90 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 92 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 93 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 95 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 99 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 101 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 46 "/usr/include/c++/4.4/new" 3
namespace std {
# 54 "/usr/include/c++/4.4/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/4.4/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/4.4/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/4.4/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/4.4/new" 3
};
# 67 "/usr/include/c++/4.4/new" 3
struct nothrow_t { };
# 69 "/usr/include/c++/4.4/new" 3
extern const nothrow_t nothrow;
# 73 "/usr/include/c++/4.4/new" 3
typedef void (*new_handler)(void);
# 77 "/usr/include/c++/4.4/new" 3
new_handler set_new_handler(new_handler) throw();
# 78 "/usr/include/c++/4.4/new" 3
}
# 91 "/usr/include/c++/4.4/new" 3
void *operator new(size_t) throw(std::bad_alloc);
# 92 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t) throw(std::bad_alloc);
# 93 "/usr/include/c++/4.4/new" 3
void operator delete(void *) throw();
# 94 "/usr/include/c++/4.4/new" 3
void operator delete[](void *) throw();
# 95 "/usr/include/c++/4.4/new" 3
void *operator new(size_t, const std::nothrow_t &) throw();
# 96 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t, const std::nothrow_t &) throw();
# 97 "/usr/include/c++/4.4/new" 3
void operator delete(void *, const std::nothrow_t &) throw();
# 98 "/usr/include/c++/4.4/new" 3
void operator delete[](void *, const std::nothrow_t &) throw();
# 101 "/usr/include/c++/4.4/new" 3
inline void *operator new(size_t, void *__p) throw() { return __p; }
# 102 "/usr/include/c++/4.4/new" 3
inline void *operator new[](size_t, void *__p) throw() { return __p; }
# 105 "/usr/include/c++/4.4/new" 3
inline void operator delete(void *, void *) throw() { }
# 106 "/usr/include/c++/4.4/new" 3
inline void operator delete[](void *, void *) throw() { }
# 37 "/usr/include/c++/4.4/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::size_t;
# 40 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 50 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    class new_allocator
    {
    public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef new_allocator < _Tp1 > other; };

      new_allocator ( ) throw ( ) { }

      new_allocator ( const new_allocator & ) throw ( ) { }

      template < typename _Tp1 >
        new_allocator ( const new_allocator < _Tp1 > & ) throw ( ) { }

      ~ new_allocator ( ) throw ( ) { }

      pointer
      address ( reference __x ) const { return & __x; }

      const_pointer
      address ( const_reference __x ) const { return & __x; }



      pointer
      allocate ( size_type __n, const void * = 0 )
      {
 if ( __builtin_expect ( __n > this -> max_size ( ), false ) )
   std :: __throw_bad_alloc ( );

 return static_cast < _Tp * > ( :: operator new ( __n * sizeof ( _Tp ) ) );
      }


      void
      deallocate ( pointer __p, size_type )
      { :: operator delete ( __p ); }

      size_type
      max_size ( ) const throw ( )
      { return size_t ( - 1 ) / sizeof ( _Tp ); }



      void
      construct ( pointer __p, const _Tp & __val )
      { :: new ( ( void * ) __p ) _Tp ( __val ); }

      void
      destroy ( pointer __p ) { __p -> ~ _Tp ( ); }
    };
# 118 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return true; }
# 123 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return false; }
# 128 "/usr/include/c++/4.4/ext/new_allocator.h" 3
}
# 50 "/usr/include/c++/4.4/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp> class allocator;
# 64 "/usr/include/c++/4.4/bits/allocator.h" 3
template<> class allocator< void> {
# 67 "/usr/include/c++/4.4/bits/allocator.h" 3
public: typedef size_t size_type;
# 68 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 69 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void *pointer;
# 70 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef const void *const_pointer;
# 71 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void value_type;
# 73 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp1>
# 74 "/usr/include/c++/4.4/bits/allocator.h" 3
struct rebind {
# 75 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 76 "/usr/include/c++/4.4/bits/allocator.h" 3
};
# 85 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    class allocator : public __gnu_cxx :: new_allocator < _Tp >
    {
   public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef allocator < _Tp1 > other; };

      allocator ( ) throw ( ) { }

      allocator ( const allocator & __a ) throw ( )
      : __gnu_cxx :: new_allocator < _Tp > ( __a ) { }

      template < typename _Tp1 >
        allocator ( const allocator < _Tp1 > & ) throw ( ) { }

      ~ allocator ( ) throw ( ) { }


    };
# 114 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator == ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return true; }
# 119 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return true; }
# 124 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator != ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return false; }
# 129 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return false; }
# 138 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< char> ;
# 139 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 146 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_swap
    { static void _S_do_it ( _Alloc &, _Alloc & ) { } };
# 150 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_swap < _Alloc, false >
    {
      static void
      _S_do_it ( _Alloc & __one, _Alloc & __two )
      {

 if ( __one != __two )
   swap ( __one, __two );
      }
    };
# 163 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_neq
    {
      static bool
      _S_do_it ( const _Alloc &, const _Alloc & )
      { return false; }
    };
# 171 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_neq < _Alloc, false >
    {
      static bool
      _S_do_it ( const _Alloc & __one, const _Alloc & __two )
      { return __one != __two; }
    };
# 179 "/usr/include/c++/4.4/bits/allocator.h" 3
}
# 32 "/usr/include/c++/4.4/cxxabi-forced.h" 3
namespace __cxxabiv1 {
# 41 "/usr/include/c++/4.4/cxxabi-forced.h" 3
class __forced_unwind {
# 43 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual ~__forced_unwind() throw();
# 44 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual void __pure_dummy() = 0;
# 45 "/usr/include/c++/4.4/cxxabi-forced.h" 3
};
# 46 "/usr/include/c++/4.4/cxxabi-forced.h" 3
}
# 38 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_write ( basic_ostream < _CharT, _Traits > & __out,
      const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const streamsize __put = __out . rdbuf ( ) -> sputn ( __s, __n );
      if ( __put != __n )
 __out . setstate ( __ios_base :: badbit );
    }
# 53 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_fill ( basic_ostream < _CharT, _Traits > & __out, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const _CharT __c = __out . fill ( );
      for (; __n > 0; -- __n )
 {
   const typename _Traits :: int_type __put = __out . rdbuf ( ) -> sputc ( __c );
   if ( _Traits :: eq_int_type ( __put, _Traits :: eof ( ) ) )
     {
       __out . setstate ( __ios_base :: badbit );
       break;
     }
 }
    }
# 72 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    __ostream_insert ( basic_ostream < _CharT, _Traits > & __out,
       const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      typename __ostream_type :: sentry __cerb ( __out );
      if ( __cerb )
 {
   try
     {
       const streamsize __w = __out . width ( );
       if ( __w > __n )
  {
    const bool __left = ( ( __out . flags ( )
     & __ios_base :: adjustfield )
           == __ios_base :: left );
    if ( ! __left )
      __ostream_fill ( __out, __w - __n );
    if ( __out . good ( ) )
      __ostream_write ( __out, __s, __n );
    if ( __left && __out . good ( ) )
      __ostream_fill ( __out, __w - __n );
  }
       else
  __ostream_write ( __out, __s, __n );
       __out . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( __ios_base :: badbit ); }
 }
      return __out;
    }
# 117 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< char> &__ostream_insert(basic_ostream< char> & , const char * , streamsize );
# 120 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t> &__ostream_insert(basic_ostream< wchar_t> & , const wchar_t * , streamsize );
# 125 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
}
# 60 "/usr/include/c++/4.4/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 99 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 100 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct unary_function {
# 102 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg argument_type;
# 105 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 106 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 111 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 112 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct binary_function {
# 114 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 117 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 118 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 119 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct plus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x + __y; }
    };
# 143 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct minus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x - __y; }
    };
# 152 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct multiplies : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x * __y; }
    };
# 161 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct divides : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x / __y; }
    };
# 170 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct modulus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x % __y; }
    };
# 179 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct negate : public unary_function < _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x ) const
      { return - __x; }
    };
# 198 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x == __y; }
    };
# 207 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct not_equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x != __y; }
    };
# 216 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x > __y; }
    };
# 225 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x < __y; }
    };
# 234 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x >= __y; }
    };
# 243 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x <= __y; }
    };
# 262 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_and : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x && __y; }
    };
# 271 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_or : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x || __y; }
    };
# 280 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_not : public unary_function < _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x ) const
      { return ! __x; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_and : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x & __y; }
    };
# 299 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_or : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x | __y; }
    };
# 307 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_xor : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x ^ __y; }
    };
# 345 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class unary_negate
    : public unary_function < typename _Predicate :: argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      unary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: argument_type & __x ) const
      { return ! _M_pred ( __x ); }
    };
# 362 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline unary_negate < _Predicate >
    not1 ( const _Predicate & __pred )
    { return unary_negate < _Predicate > ( __pred ); }
# 368 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class binary_negate
    : public binary_function < typename _Predicate :: first_argument_type,
        typename _Predicate :: second_argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      binary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: first_argument_type & __x,
   const typename _Predicate :: second_argument_type & __y ) const
      { return ! _M_pred ( __x, __y ); }
    };
# 387 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline binary_negate < _Predicate >
    not2 ( const _Predicate & __pred )
    { return binary_negate < _Predicate > ( __pred ); }
# 416 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    class pointer_to_unary_function : public unary_function < _Arg, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg );

    public :
      pointer_to_unary_function ( ) { }

      explicit
      pointer_to_unary_function ( _Result ( * __x ) ( _Arg ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg __x ) const
      { return _M_ptr ( __x ); }
    };
# 435 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    inline pointer_to_unary_function < _Arg, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg ) )
    { return pointer_to_unary_function < _Arg, _Result > ( __x ); }
# 441 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    class pointer_to_binary_function
    : public binary_function < _Arg1, _Arg2, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg1, _Arg2 );

    public :
      pointer_to_binary_function ( ) { }

      explicit
      pointer_to_binary_function ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg1 __x, _Arg2 __y ) const
      { return _M_ptr ( __x, __y ); }
    };
# 461 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    inline pointer_to_binary_function < _Arg1, _Arg2, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
    { return pointer_to_binary_function < _Arg1, _Arg2, _Result > ( __x ); }
# 467 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct _Identity : public unary_function < _Tp, _Tp >
    {
      _Tp &
      operator ( ) ( _Tp & __x ) const
      { return __x; }

      const _Tp &
      operator ( ) ( const _Tp & __x ) const
      { return __x; }
    };
# 479 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select1st : public unary_function < _Pair,
           typename _Pair :: first_type >
    {
      typename _Pair :: first_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . first; }

      const typename _Pair :: first_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . first; }
    };
# 492 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select2nd : public unary_function < _Pair,
           typename _Pair :: second_type >
    {
      typename _Pair :: second_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . second; }

      const typename _Pair :: second_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . second; }
    };
# 523 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_t : public unary_function < _Tp *, _Ret >
    {
    public :
      explicit
      mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
    };
# 541 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_t : public unary_function < const _Tp *, _Ret >
    {
    public :
      explicit
      const_mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 559 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
  };
# 577 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      const_mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 595 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_t : public binary_function < _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 613 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_t : public binary_function < const _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 631 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 649 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 667 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_t < _Ret, _Tp > ( __f ); }
# 672 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_t < _Ret, _Tp > ( __f ); }
# 677 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 682 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 687 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 692 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 697 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 702 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 709 "/usr/include/c++/4.4/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/4.4/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder1st
    : public unary_function < typename _Operation :: second_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: first_argument_type value;

    public :
      binder1st ( const _Operation & __x,
  const typename _Operation :: first_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }
    };
# 122 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder1st < _Operation >
    bind1st ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: first_argument_type _Arg1_type;
      return binder1st < _Operation > ( __fn, _Arg1_type ( __x ) );
    }
# 131 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder2nd
    : public unary_function < typename _Operation :: first_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: second_argument_type value;

    public :
      binder2nd ( const _Operation & __x,
  const typename _Operation :: second_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }
    };
# 157 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder2nd < _Operation >
    bind2nd ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: second_argument_type _Arg2_type;
      return binder2nd < _Operation > ( __fn, _Arg2_type ( __x ) );
    }
# 166 "/usr/include/c++/4.4/backward/binders.h" 3
}
# 45 "/usr/include/c++/4.4/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 103 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    class basic_string
    {
      typedef typename _Alloc :: template rebind < _CharT > :: other _CharT_alloc_type;


    public :
      typedef _Traits traits_type;
      typedef typename _Traits :: char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _CharT_alloc_type :: size_type size_type;
      typedef typename _CharT_alloc_type :: difference_type difference_type;
      typedef typename _CharT_alloc_type :: reference reference;
      typedef typename _CharT_alloc_type :: const_reference const_reference;
      typedef typename _CharT_alloc_type :: pointer pointer;
      typedef typename _CharT_alloc_type :: const_pointer const_pointer;
      typedef __gnu_cxx :: __normal_iterator < pointer, basic_string > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, basic_string >
                                                            const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;

    private :

      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc :: template rebind < char > :: other _Raw_bytes_alloc;

 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage [ ];

        static _Rep &
        _S_empty_rep ( )
        {



   void * __p = reinterpret_cast < void * > ( & _S_empty_rep_storage );
   return * reinterpret_cast < _Rep * > ( __p );
 }

        bool
 _M_is_leaked ( ) const
        { return this -> _M_refcount < 0; }

        bool
 _M_is_shared ( ) const
        { return this -> _M_refcount > 0; }

        void
 _M_set_leaked ( )
        { this -> _M_refcount = - 1; }

        void
 _M_set_sharable ( )
        { this -> _M_refcount = 0; }

 void
 _M_set_length_and_sharable ( size_type __n )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     {
       this -> _M_set_sharable ( );
       this -> _M_length = __n;
       traits_type :: assign ( this -> _M_refdata ( ) [ __n ], _S_terminal );


     }
 }

 _CharT *
 _M_refdata ( ) throw ( )
 { return reinterpret_cast < _CharT * > ( this + 1 ); }

 _CharT *
 _M_grab ( const _Alloc & __alloc1, const _Alloc & __alloc2 )
 {
   return ( ! _M_is_leaked ( ) && __alloc1 == __alloc2 )
           ? _M_refcopy ( ) : _M_clone ( __alloc1 );
 }


 static _Rep *
 _S_create ( size_type, size_type, const _Alloc & );

 void
 _M_dispose ( const _Alloc & __a )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     if ( __gnu_cxx :: __exchange_and_add_dispatch ( & this -> _M_refcount,
             - 1 ) <= 0 )
       _M_destroy ( __a );
 }

 void
 _M_destroy ( const _Alloc & ) throw ( );

 _CharT *
 _M_refcopy ( ) throw ( )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

            __gnu_cxx :: __atomic_add_dispatch ( & this -> _M_refcount, 1 );
   return _M_refdata ( );
 }

 _CharT *
 _M_clone ( const _Alloc &, size_type __res = 0 );
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider ( _CharT * __dat, const _Alloc & __a )
 : _Alloc ( __a ), _M_p ( __dat ) { }

 _CharT * _M_p;
      };

    public :




      static const size_type npos = static_cast < size_type > ( - 1 );

    private :

      mutable _Alloc_hider _M_dataplus;

      _CharT *
      _M_data ( ) const
      { return _M_dataplus . _M_p; }

      _CharT *
      _M_data ( _CharT * __p )
      { return ( _M_dataplus . _M_p = __p ); }

      _Rep *
      _M_rep ( ) const
      { return & ( ( reinterpret_cast < _Rep * > ( _M_data ( ) ) ) [ - 1 ] ); }



      iterator
      _M_ibegin ( ) const
      { return iterator ( _M_data ( ) ); }

      iterator
      _M_iend ( ) const
      { return iterator ( _M_data ( ) + this -> size ( ) ); }

      void
      _M_leak ( )
      {
 if ( ! _M_rep ( ) -> _M_is_leaked ( ) )
   _M_leak_hard ( );
      }

      size_type
      _M_check ( size_type __pos, const char * __s ) const
      {
 if ( __pos > this -> size ( ) )
   __throw_out_of_range ( ( __s ) );
 return __pos;
      }

      void
      _M_check_length ( size_type __n1, size_type __n2, const char * __s ) const
      {
 if ( this -> max_size ( ) - ( this -> size ( ) - __n1 ) < __n2 )
   __throw_length_error ( ( __s ) );
      }


      size_type
      _M_limit ( size_type __pos, size_type __off ) const
      {
 const bool __testoff = __off < this -> size ( ) - __pos;
 return __testoff ? __off : this -> size ( ) - __pos;
      }


      bool
      _M_disjunct ( const _CharT * __s ) const
      {
 return ( less < const _CharT * > ( ) ( __s, _M_data ( ) )
  || less < const _CharT * > ( ) ( _M_data ( ) + this -> size ( ), __s ) );
      }



      static void
      _M_copy ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: copy ( __d, __s, __n );
      }

      static void
      _M_move ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: move ( __d, __s, __n );
      }

      static void
      _M_assign ( _CharT * __d, size_type __n, _CharT __c )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, __c );
 else
   traits_type :: assign ( __d, __n, __c );
      }



      template < class _Iterator >
        static void
        _S_copy_chars ( _CharT * __p, _Iterator __k1, _Iterator __k2 )
        {
   for (; __k1 != __k2; ++ __k1, ++ __p )
     traits_type :: assign ( * __p, * __k1 );
 }

      static void
      _S_copy_chars ( _CharT * __p, iterator __k1, iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, const_iterator __k1, const_iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, _CharT * __k1, _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static void
      _S_copy_chars ( _CharT * __p, const _CharT * __k1, const _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static int
      _S_compare ( size_type __n1, size_type __n2 )
      {
 const difference_type __d = difference_type ( __n1 - __n2 );

 if ( __d > __gnu_cxx :: __numeric_traits < int > :: __max )
   return __gnu_cxx :: __numeric_traits < int > :: __max;
 else if ( __d < __gnu_cxx :: __numeric_traits < int > :: __min )
   return __gnu_cxx :: __numeric_traits < int > :: __min;
 else
   return int ( __d );
      }

      void
      _M_mutate ( size_type __pos, size_type __len1, size_type __len2 );

      void
      _M_leak_hard ( );

      static _Rep &
      _S_empty_rep ( )
      { return _Rep :: _S_empty_rep ( ); }

    public :







      inline
      basic_string ( );




      explicit
      basic_string ( const _Alloc & __a );






      basic_string ( const basic_string & __str );






      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n = npos );







      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n, const _Alloc & __a );

      basic_string ( const _CharT * __s, size_type __n,
     const _Alloc & __a = _Alloc ( ) );





      basic_string ( const _CharT * __s, const _Alloc & __a = _Alloc ( ) );






      basic_string ( size_type __n, _CharT __c, const _Alloc & __a = _Alloc ( ) );

      template < class _InputIterator >
        basic_string ( _InputIterator __beg, _InputIterator __end,
       const _Alloc & __a = _Alloc ( ) );




      ~ basic_string ( )
      { _M_rep ( ) -> _M_dispose ( this -> get_allocator ( ) ); }





      basic_string &
      operator = ( const basic_string & __str )
      { return this -> assign ( __str ); }





      basic_string &
      operator = ( const _CharT * __s )
      { return this -> assign ( __s ); }

      basic_string &
      operator = ( _CharT __c )
      {
 this -> assign ( 1, __c );
 return * this;
      }

      iterator
      begin ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) );
      }





      const_iterator
      begin ( ) const
      { return const_iterator ( _M_data ( ) ); }





      iterator
      end ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) + this -> size ( ) );
      }





      const_iterator
      end ( ) const
      { return const_iterator ( _M_data ( ) + this -> size ( ) ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( this -> end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( this -> end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( this -> begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( this -> begin ( ) ); }

    public :



      size_type
      size ( ) const
      { return _M_rep ( ) -> _M_length; }



      size_type
      length ( ) const
      { return _M_rep ( ) -> _M_length; }


      size_type
      max_size ( ) const
      { return _Rep :: _S_max_size; }

      void
      resize ( size_type __n, _CharT __c );

      void
      resize ( size_type __n )
      { this -> resize ( __n, _CharT ( ) ); }





      size_type
      capacity ( ) const
      { return _M_rep ( ) -> _M_capacity; }

      void
      reserve ( size_type __res_arg = 0 );




      void
      clear ( )
      { _M_mutate ( 0, this -> size ( ), 0 ); }




      bool
      empty ( ) const
      { return this -> size ( ) == 0; }

      const_reference
      operator [ ] ( size_type __pos ) const
      {
 ;
 return _M_data ( ) [ __pos ];
      }

      reference
      operator [ ] ( size_type __pos )
      {

 ;

 ;
 _M_leak ( );
 return _M_data ( ) [ __pos ];
      }

      const_reference
      at ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 return _M_data ( ) [ __n ];
      }

      reference
      at ( size_type __n )
      {
 if ( __n >= size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 _M_leak ( );
 return _M_data ( ) [ __n ];
      }







      basic_string &
      operator += ( const basic_string & __str )
      { return this -> append ( __str ); }






      basic_string &
      operator += ( const _CharT * __s )
      { return this -> append ( __s ); }






      basic_string &
      operator += ( _CharT __c )
      {
 this -> push_back ( __c );
 return * this;
      }

      basic_string &
      append ( const basic_string & __str );

      basic_string &
      append ( const basic_string & __str, size_type __pos, size_type __n );







      basic_string &
      append ( const _CharT * __s, size_type __n );






      basic_string &
      append ( const _CharT * __s )
      {
 ;
 return this -> append ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      append ( size_type __n, _CharT __c );

      template < class _InputIterator >
        basic_string &
        append ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_iend ( ), _M_iend ( ), __first, __last ); }





      void
      push_back ( _CharT __c )
      {
 const size_type __len = 1 + this -> size ( );
 if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
   this -> reserve ( __len );
 traits_type :: assign ( _M_data ( ) [ this -> size ( ) ], __c );
 _M_rep ( ) -> _M_set_length_and_sharable ( __len );
      }






      basic_string &
      assign ( const basic_string & __str );

      basic_string &
      assign ( const basic_string & __str, size_type __pos, size_type __n )
      { return this -> assign ( __str . _M_data ( )
       + __str . _M_check ( __pos, "basic_string::assign" ),
       __str . _M_limit ( __pos, __n ) ); }

      basic_string &
      assign ( const _CharT * __s, size_type __n );

      basic_string &
      assign ( const _CharT * __s )
      {
 ;
 return this -> assign ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      assign ( size_type __n, _CharT __c )
      { return _M_replace_aux ( size_type ( 0 ), this -> size ( ), __n, __c ); }

      template < class _InputIterator >
        basic_string &
        assign ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_ibegin ( ), _M_iend ( ), __first, __last ); }

      void
      insert ( iterator __p, size_type __n, _CharT __c )
      { this -> replace ( __p, __p, __n, __c ); }

      template < class _InputIterator >
        void
        insert ( iterator __p, _InputIterator __beg, _InputIterator __end )
        { this -> replace ( __p, __p, __beg, __end ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str )
      { return this -> insert ( __pos1, __str, size_type ( 0 ), __str . size ( ) ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str,
      size_type __pos2, size_type __n )
      { return this -> insert ( __pos1, __str . _M_data ( )
       + __str . _M_check ( __pos2, "basic_string::insert" ),
       __str . _M_limit ( __pos2, __n ) ); }

      basic_string &
      insert ( size_type __pos, const _CharT * __s, size_type __n );

      basic_string &
      insert ( size_type __pos, const _CharT * __s )
      {
 ;
 return this -> insert ( __pos, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      insert ( size_type __pos, size_type __n, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::insert" ),
         size_type ( 0 ), __n, __c ); }

      iterator
      insert ( iterator __p, _CharT __c )
      {
 ;
 const size_type __pos = __p - _M_ibegin ( );
 _M_replace_aux ( __pos, size_type ( 0 ), size_type ( 1 ), __c );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      erase ( size_type __pos = 0, size_type __n = npos )
      {
 _M_mutate ( _M_check ( __pos, "basic_string::erase" ),
    _M_limit ( __pos, __n ), size_type ( 0 ) );
 return * this;
      }

      iterator
      erase ( iterator __position )
      {
 ;

 const size_type __pos = __position - _M_ibegin ( );
 _M_mutate ( __pos, size_type ( 1 ), size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      iterator
      erase ( iterator __first, iterator __last );

      basic_string &
      replace ( size_type __pos, size_type __n, const basic_string & __str )
      { return this -> replace ( __pos, __n, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 )
      { return this -> replace ( __pos1, __n1, __str . _M_data ( )
        + __str . _M_check ( __pos2, "basic_string::replace" ),
        __str . _M_limit ( __pos2, __n2 ) ); }

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 );

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s )
      {
 ;
 return this -> replace ( __pos, __n1, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( size_type __pos, size_type __n1, size_type __n2, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::replace" ),
         _M_limit ( __pos, __n1 ), __n2, __c ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const basic_string & __str )
      { return this -> replace ( __i1, __i2, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s, size_type __n )
      {
 ;

 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1, __s, __n );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s )
      {
 ;
 return this -> replace ( __i1, __i2, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, size_type __n, _CharT __c )
      {
 ;

 return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __c );
      }

      template < class _InputIterator >
        basic_string &
        replace ( iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2 )
        {
   ;

   ;
   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   return _M_replace_dispatch ( __i1, __i2, __k1, __k2, _Integral ( ) );
 }



      basic_string &
      replace ( iterator __i1, iterator __i2, _CharT * __k1, _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const _CharT * __k1, const _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, iterator __k1, iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

    private :
      template < class _Integer >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type )
        { return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __val ); }

      template < class _InputIterator >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type );

      basic_string &
      _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c );

      basic_string &
      _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
        size_type __n2 );



      template < class _InIterator >
        static _CharT *
        _S_construct_aux ( _InIterator __beg, _InIterator __end,
    const _Alloc & __a, __false_type )
 {
          typedef typename iterator_traits < _InIterator > :: iterator_category _Tag;
          return _S_construct ( __beg, __end, __a, _Tag ( ) );
 }



      template < class _Integer >
        static _CharT *
        _S_construct_aux ( _Integer __beg, _Integer __end,
    const _Alloc & __a, __true_type )
        { return _S_construct ( static_cast < size_type > ( __beg ), __end, __a ); }

      template < class _InIterator >
        static _CharT *
        _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a )
 {
   typedef typename std :: __is_integer < _InIterator > :: __type _Integral;
   return _S_construct_aux ( __beg, __end, __a, _Integral ( ) );
        }


      template < class _InIterator >
        static _CharT *
         _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
        input_iterator_tag );



      template < class _FwdIterator >
        static _CharT *
        _S_construct ( _FwdIterator __beg, _FwdIterator __end, const _Alloc & __a,
       forward_iterator_tag );

      static _CharT *
      _S_construct ( size_type __req, _CharT __c, const _Alloc & __a );

    public :

      size_type
      copy ( _CharT * __s, size_type __n, size_type __pos = 0 ) const;

      void
      swap ( basic_string & __s );

      const _CharT *
      c_str ( ) const
      { return _M_data ( ); }







      const _CharT *
      data ( ) const
      { return _M_data ( ); }




      allocator_type
      get_allocator ( ) const
      { return _M_dataplus; }

      size_type
      find ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      rfind ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> rfind ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      rfind ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      rfind ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> rfind ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      rfind ( _CharT __c, size_type __pos = npos ) const;

      size_type
      find_first_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_first_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_of ( _CharT __c, size_type __pos = 0 ) const
      { return this -> find ( __c, __pos ); }

      size_type
      find_last_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_last_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_of ( _CharT __c, size_type __pos = npos ) const
      { return this -> rfind ( __c, __pos ); }

      size_type
      find_first_not_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos,
   size_type __n ) const;

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_not_of ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      find_last_not_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos,
         size_type __n ) const;

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_not_of ( _CharT __c, size_type __pos = npos ) const;

      basic_string
      substr ( size_type __pos = 0, size_type __n = npos ) const
      { return basic_string ( * this,
       _M_check ( __pos, "basic_string::substr" ), __n ); }

      int
      compare ( const basic_string & __str ) const
      {
 const size_type __size = this -> size ( );
 const size_type __osize = __str . size ( );
 const size_type __len = std :: min ( __size, __osize );

 int __r = traits_type :: compare ( _M_data ( ), __str . data ( ), __len );
 if ( ! __r )
   __r = _S_compare ( __size, __osize );
 return __r;
      }

      int
      compare ( size_type __pos, size_type __n, const basic_string & __str ) const;

      int
      compare ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 ) const;

      int
      compare ( const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 ) const;
  };
# 2143 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( )

    : _M_dataplus ( _S_empty_rep ( ) . _M_refdata ( ), _Alloc ( ) ) { }
# 2159 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2175 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2186 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2196 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
      const _CharT * __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2212 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs, _CharT __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str ( __lhs );
      __str . append ( __size_type ( 1 ), __rhs );
      return __str;
    }
# 2230 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2236 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT >
    inline
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value, bool > :: __type
    operator == ( const basic_string < _CharT > & __lhs,
        const basic_string < _CharT > & __rhs )
    { return ( __lhs . size ( ) == __rhs . size ( )
       && ! std :: char_traits < _CharT > :: compare ( __lhs . data ( ), __rhs . data ( ),
          __lhs . size ( ) ) ); }
# 2251 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) == 0; }
# 2263 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2276 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2288 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2300 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return ! ( __lhs == __rhs ); }
# 2313 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2325 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2337 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) > 0; }
# 2350 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2362 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2374 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) < 0; }
# 2387 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2399 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2411 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) >= 0; }
# 2424 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2436 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2448 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const _CharT * __lhs,
      const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) <= 0; }
# 2461 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline void
    swap ( basic_string < _CharT, _Traits, _Alloc > & __lhs,
  basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { __lhs . swap ( __rhs ); }
# 2478 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __is,
        basic_string < _CharT, _Traits, _Alloc > & __str );
# 2485 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char> &operator>>(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & );
# 2496 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __os,
        const basic_string < _CharT, _Traits, _Alloc > & __str )
    {


      return __ostream_insert ( __os, __str . data ( ), __str . size ( ) );
    }
# 2519 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim );
# 2536 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str )
    { return getline ( __is, __str, __is . widen ( '\n' ) ); }
# 2544 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char> &getline(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 2550 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< wchar_t> &getline(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 2554 "/usr/include/c++/4.4/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 51 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_max_size = ((((npos - sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base)) / sizeof(_CharT)) - 1) / 4);
# 53 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const _CharT
# 56 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_terminal = (_CharT());
# 58 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 60 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::npos;
# 64 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 66 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_empty_rep_storage[(((sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base) + sizeof(_CharT)) + sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::size_type)) - (1)) / sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::size_type)];
# 74 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     input_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 _CharT __buf [ 128 ];
 size_type __len = 0;
 while ( __beg != __end && __len < sizeof ( __buf ) / sizeof ( _CharT ) )
   {
     __buf [ __len ++ ] = * __beg;
     ++ __beg;
   }
 _Rep * __r = _Rep :: _S_create ( __len, size_type ( 0 ), __a );
 _M_copy ( __r -> _M_refdata ( ), __buf, __len );
 try
   {
     while ( __beg != __end )
       {
  if ( __len == __r -> _M_capacity )
    {

      _Rep * __another = _Rep :: _S_create ( __len + 1, __len, __a );
      _M_copy ( __another -> _M_refdata ( ), __r -> _M_refdata ( ), __len );
      __r -> _M_destroy ( __a );
      __r = __another;
    }
  __r -> _M_refdata ( ) [ __len ++ ] = * __beg;
  ++ __beg;
       }
   }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __len );
 return __r -> _M_refdata ( );
      }
# 120 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     forward_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 if ( __builtin_expect ( __gnu_cxx :: __is_null_pointer ( __beg )
        && __beg != __end, 0 ) )
   __throw_logic_error ( ( "basic_string::_S_construct NULL not valid" ) );

 const size_type __dnew = static_cast < size_type > ( std :: distance ( __beg,
              __end ) );

 _Rep * __r = _Rep :: _S_create ( __dnew, size_type ( 0 ), __a );
 try
   { _S_copy_chars ( __r -> _M_refdata ( ), __beg, __end ); }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __dnew );
 return __r -> _M_refdata ( );
      }
# 151 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > ::
    _S_construct ( size_type __n, _CharT __c, const _Alloc & __a )
    {

      if ( __n == 0 && __a == _Alloc ( ) )
 return _S_empty_rep ( ) . _M_refdata ( );


      _Rep * __r = _Rep :: _S_create ( __n, size_type ( 0 ), __a );
      if ( __n )
 _M_assign ( __r -> _M_refdata ( ), __n, __c );

      __r -> _M_set_length_and_sharable ( __n );
      return __r -> _M_refdata ( );
    }
# 169 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str )
    : _M_dataplus ( __str . _M_rep ( ) -> _M_grab ( _Alloc ( __str . get_allocator ( ) ),
       __str . get_allocator ( ) ),
    __str . get_allocator ( ) )
    { }
# 177 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _Alloc & __a )
    : _M_dataplus ( _S_construct ( size_type ( ), _CharT ( ), __a ), __a )
    { }
# 183 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos, size_type __n )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, _Alloc ( ) ), _Alloc ( ) )
    { }
# 193 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos,
   size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, __a ), __a )
    { }
# 205 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s + __n, __a ), __a )
    { }
# 212 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s ? __s + traits_type :: length ( __s ) :
          __s + npos, __a ), __a )
    { }
# 219 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( size_type __n, _CharT __c, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __n, __c, __a ), __a )
    { }
# 226 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( _InputIterator __beg, _InputIterator __end, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __beg, __end, __a ), __a )
    { }
# 241 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const basic_string & __str )
    {
      if ( _M_rep ( ) != __str . _M_rep ( ) )
 {

   const allocator_type __a = this -> get_allocator ( );
   _CharT * __tmp = __str . _M_rep ( ) -> _M_grab ( __a, __str . get_allocator ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
 }
      return * this;
    }
# 257 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const _CharT * __s, size_type __n )
    {
      ;
      _M_check_length ( this -> size ( ), __n, "basic_string::assign" );
      if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
 return _M_replace_safe ( size_type ( 0 ), this -> size ( ), __s, __n );
      else
 {

   const size_type __pos = __s - _M_data ( );
   if ( __pos >= __n )
     _M_copy ( _M_data ( ), __s, __n );
   else if ( __pos )
     _M_move ( _M_data ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __n );
   return * this;
 }
     }
# 279 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( size_type __n, _CharT __c )
    {
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_assign ( _M_data ( ) + this -> size ( ), __n, __c );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 296 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const _CharT * __s, size_type __n )
    {
      ;
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     {
       if ( _M_disjunct ( __s ) )
  this -> reserve ( __len );
       else
  {
    const size_type __off = __s - _M_data ( );
    this -> reserve ( __len );
    __s = _M_data ( ) + __off;
  }
     }
   _M_copy ( _M_data ( ) + this -> size ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 323 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str )
    {
      const size_type __size = __str . size ( );
      if ( __size )
 {
   const size_type __len = __size + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ), __size );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 340 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str, size_type __pos, size_type __n )
    {
      __str . _M_check ( __pos, "basic_string::append" );
      __n = __str . _M_limit ( __pos, __n );
      if ( __n )
 {
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ) + __pos, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 358 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     insert ( size_type __pos, const _CharT * __s, size_type __n )
     {
       ;
       _M_check ( __pos, "basic_string::insert" );
       _M_check_length ( size_type ( 0 ), __n, "basic_string::insert" );
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, size_type ( 0 ), __s, __n );
       else
         {

           const size_type __off = __s - _M_data ( );
           _M_mutate ( __pos, 0, __n );
           __s = _M_data ( ) + __off;
           _CharT * __p = _M_data ( ) + __pos;
           if ( __s + __n <= __p )
             _M_copy ( __p, __s, __n );
           else if ( __s >= __p )
             _M_copy ( __p, __s + __n, __n );
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy ( __p, __s, __nleft );
               _M_copy ( __p + __nleft, __p + __n, __n - __nleft );
             }
           return * this;
         }
     }
# 389 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     typename basic_string < _CharT, _Traits, _Alloc > :: iterator
     basic_string < _CharT, _Traits, _Alloc > ::
     erase ( iterator __first, iterator __last )
     {
       ;





       const size_type __size = __last - __first;
       if ( __size )
  {
    const size_type __pos = __first - _M_ibegin ( );
    _M_mutate ( __pos, __size, size_type ( 0 ) );
    _M_rep ( ) -> _M_set_leaked ( );
    return iterator ( _M_data ( ) + __pos );
  }
       else
  return __first;
     }
# 412 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     replace ( size_type __pos, size_type __n1, const _CharT * __s,
      size_type __n2 )
     {
       ;
       _M_check ( __pos, "basic_string::replace" );
       __n1 = _M_limit ( __pos, __n1 );
       _M_check_length ( __n1, __n2, "basic_string::replace" );
       bool __left;
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, __n1, __s, __n2 );
       else if ( ( __left = __s + __n2 <= _M_data ( ) + __pos )
  || _M_data ( ) + __pos + __n1 <= __s )
  {

    size_type __off = __s - _M_data ( );
    __left ? __off : ( __off += __n2 - __n1 );
    _M_mutate ( __pos, __n1, __n2 );
    _M_copy ( _M_data ( ) + __pos, _M_data ( ) + __off, __n2 );
    return * this;
  }
       else
  {

    const basic_string __tmp ( __s, __n2 );
    return _M_replace_safe ( __pos, __n1, __tmp . _M_data ( ), __n2 );
  }
     }
# 443 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_destroy ( const _Alloc & __a ) throw ( )
    {
      const size_type __size = sizeof ( _Rep_base ) +
                        ( this -> _M_capacity + 1 ) * sizeof ( _CharT );
      _Raw_bytes_alloc ( __a ) . deallocate ( reinterpret_cast < char * > ( this ), __size );
    }
# 453 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_leak_hard ( )
    {

      if ( _M_rep ( ) == & _S_empty_rep ( ) )
 return;

      if ( _M_rep ( ) -> _M_is_shared ( ) )
 _M_mutate ( 0, 0, 0 );
      _M_rep ( ) -> _M_set_leaked ( );
    }
# 467 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_mutate ( size_type __pos, size_type __len1, size_type __len2 )
    {
      const size_type __old_size = this -> size ( );
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if ( __new_size > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
 {

   const allocator_type __a = get_allocator ( );
   _Rep * __r = _Rep :: _S_create ( __new_size, this -> capacity ( ), __a );

   if ( __pos )
     _M_copy ( __r -> _M_refdata ( ), _M_data ( ), __pos );
   if ( __how_much )
     _M_copy ( __r -> _M_refdata ( ) + __pos + __len2,
      _M_data ( ) + __pos + __len1, __how_much );

   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __r -> _M_refdata ( ) );
 }
      else if ( __how_much && __len1 != __len2 )
 {

   _M_move ( _M_data ( ) + __pos + __len2,
    _M_data ( ) + __pos + __len1, __how_much );
 }
      _M_rep ( ) -> _M_set_length_and_sharable ( __new_size );
    }
# 500 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    reserve ( size_type __res )
    {
      if ( __res != this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
        {

   if ( __res < this -> size ( ) )
     __res = this -> size ( );
   const allocator_type __a = get_allocator ( );
   _CharT * __tmp = _M_rep ( ) -> _M_clone ( __a, __res - this -> size ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
        }
    }
# 517 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    swap ( basic_string & __s )
    {
      if ( _M_rep ( ) -> _M_is_leaked ( ) )
 _M_rep ( ) -> _M_set_sharable ( );
      if ( __s . _M_rep ( ) -> _M_is_leaked ( ) )
 __s . _M_rep ( ) -> _M_set_sharable ( );
      if ( this -> get_allocator ( ) == __s . get_allocator ( ) )
 {
   _CharT * __tmp = _M_data ( );
   _M_data ( __s . _M_data ( ) );
   __s . _M_data ( __tmp );
 }

      else
 {
   const basic_string __tmp1 ( _M_ibegin ( ), _M_iend ( ),
        __s . get_allocator ( ) );
   const basic_string __tmp2 ( __s . _M_ibegin ( ), __s . _M_iend ( ),
        this -> get_allocator ( ) );
   * this = __tmp2;
   __s = __tmp1;
 }
    }
# 544 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: _Rep *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _S_create ( size_type __capacity, size_type __old_capacity,
       const _Alloc & __alloc )
    {


      if ( __capacity > _S_max_size )
 __throw_length_error ( ( "basic_string::_S_create" ) );

      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof ( void * );







      if ( __capacity > __old_capacity && __capacity < 2 * __old_capacity )
 __capacity = 2 * __old_capacity;




      size_type __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );

      const size_type __adj_size = __size + __malloc_header_size;
      if ( __adj_size > __pagesize && __capacity > __old_capacity )
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof ( _CharT );

   if ( __capacity > _S_max_size )
     __capacity = _S_max_size;
   __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );
 }



      void * __place = _Raw_bytes_alloc ( __alloc ) . allocate ( __size );
      _Rep * __p = new ( __place ) _Rep;
      __p -> _M_capacity = __capacity;







      __p -> _M_set_sharable ( );
      return __p;
    }
# 622 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_clone ( const _Alloc & __alloc, size_type __res )
    {

      const size_type __requested_cap = this -> _M_length + __res;
      _Rep * __r = _Rep :: _S_create ( __requested_cap, this -> _M_capacity,
      __alloc );
      if ( this -> _M_length )
 _M_copy ( __r -> _M_refdata ( ), _M_refdata ( ), this -> _M_length );

      __r -> _M_set_length_and_sharable ( this -> _M_length );
      return __r -> _M_refdata ( );
    }
# 638 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    resize ( size_type __n, _CharT __c )
    {
      const size_type __size = this -> size ( );
      _M_check_length ( __size, __n, "basic_string::resize" );
      if ( __size < __n )
 this -> append ( __n - __size, __c );
      else if ( __n < __size )
 this -> erase ( __n );

    }
# 652 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
      basic_string < _CharT, _Traits, _Alloc > &
      basic_string < _CharT, _Traits, _Alloc > ::
      _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type )
      {
 const basic_string __s ( __k1, __k2 );
 const size_type __n1 = __i2 - __i1;
 _M_check_length ( __n1, __s . size ( ), "basic_string::_M_replace_dispatch" );
 return _M_replace_safe ( __i1 - _M_ibegin ( ), __n1, __s . _M_data ( ),
          __s . size ( ) );
      }
# 666 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c )
    {
      _M_check_length ( __n1, __n2, "basic_string::_M_replace_aux" );
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_assign ( _M_data ( ) + __pos1, __n2, __c );
      return * this;
    }
# 679 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
      size_type __n2 )
    {
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_copy ( _M_data ( ) + __pos1, __s, __n2 );
      return * this;
    }
# 691 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      ;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      const __size_type __len = _Traits :: length ( __lhs );
      __string_type __str;
      __str . reserve ( __len + __rhs . size ( ) );
      __str . append ( __lhs, __len );
      __str . append ( __rhs );
      return __str;
    }
# 707 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs . size ( );
      __str . reserve ( __len + 1 );
      __str . append ( __size_type ( 1 ), __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 721 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    copy ( _CharT * __s, size_type __n, size_type __pos ) const
    {
      _M_check ( __pos, "basic_string::copy" );
      __n = _M_limit ( __pos, __n );
      ;
      if ( __n )
 _M_copy ( __s, _M_data ( ) + __pos, __n );

      return __n;
    }
# 735 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      const _CharT * __data = _M_data ( );

      if ( __n == 0 )
 return __pos <= __size ? __pos : npos;

      if ( __n <= __size )
 {
   for (; __pos <= __size - __n; ++ __pos )
     if ( traits_type :: eq ( __data [ __pos ], __s [ 0 ] )
  && traits_type :: compare ( __data + __pos + 1,
     __s + 1, __n - 1 ) == 0 )
       return __pos;
 }
      return npos;
    }
# 758 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( _CharT __c, size_type __pos ) const
    {
      size_type __ret = npos;
      const size_type __size = this -> size ( );
      if ( __pos < __size )
 {
   const _CharT * __data = _M_data ( );
   const size_type __n = __size - __pos;
   const _CharT * __p = traits_type :: find ( __data + __pos, __n, __c );
   if ( __p )
     __ret = __p - __data;
 }
      return __ret;
    }
# 776 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      if ( __n <= __size )
 {
   __pos = std :: min ( size_type ( __size - __n ), __pos );
   const _CharT * __data = _M_data ( );
   do
     {
       if ( traits_type :: compare ( __data + __pos, __s, __n ) == 0 )
  return __pos;
     }
   while ( __pos -- > 0 );
 }
      return npos;
    }
# 797 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   for ( ++ __size; __size -- > 0; )
     if ( traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
       return __size;
 }
      return npos;
    }
# 814 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __n && __pos < this -> size ( ); ++ __pos )
 {
   const _CharT * __p = traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] );
   if ( __p )
     return __pos;
 }
      return npos;
    }
# 829 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size && __n )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- != 0 );
 }
      return npos;
    }
# 850 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] ) )
   return __pos;
      return npos;
    }
# 862 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( _CharT __c, size_type __pos ) const
    {
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: eq ( _M_data ( ) [ __pos ], __c ) )
   return __pos;
      return npos;
    }
# 873 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 894 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 914 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n, const basic_string & __str ) const
    {
      _M_check ( __pos, "basic_string::compare" );
      __n = _M_limit ( __pos, __n );
      const size_type __osize = __str . size ( );
      const size_type __len = std :: min ( __n, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __str . data ( ), __len );
      if ( ! __r )
 __r = _S_compare ( __n, __osize );
      return __r;
    }
# 929 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos1, size_type __n1, const basic_string & __str,
     size_type __pos2, size_type __n2 ) const
    {
      _M_check ( __pos1, "basic_string::compare" );
      __str . _M_check ( __pos2, "basic_string::compare" );
      __n1 = _M_limit ( __pos1, __n1 );
      __n2 = __str . _M_limit ( __pos2, __n2 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos1,
         __str . data ( ) + __pos2, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 947 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( const _CharT * __s ) const
    {
      ;
      const size_type __size = this -> size ( );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __size, __osize );
      int __r = traits_type :: compare ( _M_data ( ), __s, __len );
      if ( ! __r )
 __r = _S_compare ( __size, __osize );
      return __r;
    }
# 962 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __n1, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __osize );
      return __r;
    }
# 978 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s,
     size_type __n2 ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 995 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in,
        basic_string < _CharT, _Traits, _Alloc > & __str )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;
      typedef ctype < _CharT > __ctype_type;
      typedef typename __ctype_type :: ctype_base __ctype_base;

      __size_type __extracted = 0;
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       __str . erase ( );
       _CharT __buf [ 128 ];
       __size_type __len = 0;
       const streamsize __w = __in . width ( );
       const __size_type __n = __w > 0 ? static_cast < __size_type > ( __w )
                                : __str . max_size ( );
       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( __ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    if ( __len == sizeof ( __buf ) / sizeof ( _CharT ) )
      {
        __str . append ( __buf, sizeof ( __buf ) / sizeof ( _CharT ) );
        __len = 0;
      }
    __buf [ __len ++ ] = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }
       __str . append ( __buf, __len );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }

      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1067 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __in,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str . max_size ( );
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, true );
      if ( __cerb )
 {
   try
     {
       __str . erase ( );
       const __int_type __idelim = _Traits :: to_int_type ( __delim );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! _Traits :: eq_int_type ( __c, __idelim ) )
  {
    __str += _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       else if ( _Traits :: eq_int_type ( __c, __idelim ) )
  {
    ++ __extracted;
    __in . rdbuf ( ) -> sbumpc ( );
  }
       else
  __err |= __ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }
      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1134 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< char, char_traits< char> , allocator< char> > ;
# 1135 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char> &operator>>(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1138 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< char> &operator<<(basic_ostream< char> & , const basic_string< char, char_traits< char> , allocator< char> > & );
# 1141 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 1144 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1149 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1150 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &operator>>(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1153 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t> &operator<<(basic_ostream< wchar_t> & , const basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1156 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 1159 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1165 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
}
# 45 "/usr/include/c++/4.4/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 61 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale {
# 66 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: typedef int category;
# 69 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class facet;
# 70 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class id;
# 71 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class _Impl;
# 73 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class facet;
# 74 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class _Impl;
# 76 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 80 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 84 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 97 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category none = 0;
# 98 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 99 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 100 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 101 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 102 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 103 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 104 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 116 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale() throw();
# 125 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & ) throw();
# 136 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(const char * );
# 150 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const char * , category );
# 163 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const locale & , category );
# 175 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale ( const locale & __other, _Facet * __f );
# 179 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~locale() throw();
# 190 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale &operator=(const locale & ) throw();
# 204 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale
      combine ( const locale & __other ) const;
# 214 "/usr/include/c++/4.4/bits/locale_classes.h" 3
string name() const;
# 224 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator==(const locale & ) const throw();
# 233 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 234 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 251 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Char, typename _Traits, typename _Alloc >
      bool
      operator ( ) ( const basic_string < _Char, _Traits, _Alloc > & __s1,
   const basic_string < _Char, _Traits, _Alloc > & __s2 ) const;
# 268 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static locale global(const locale &);
# 274 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale &classic();
# 278 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 281 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 284 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_global;
# 290 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 302 "/usr/include/c++/4.4/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 305 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 309 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 312 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize();
# 315 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 318 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 321 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_coalesce(const locale & , const locale & , category );
# 322 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 335 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::facet {
# 338 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 339 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 341 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 344 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 347 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 350 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 354 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 367 "/usr/include/c++/4.4/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = (0)) throw() : _M_refcount(((__refs) ? 1 : 0))
# 368 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 372 "/usr/include/c++/4.4/bits/locale_classes.h" 3
virtual ~facet();
# 375 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & , const char * , __c_locale = 0);
# 379 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & );
# 382 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & );
# 387 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 390 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *_S_get_c_name();
# 394 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 395 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 398 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 399 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 400 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 401 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 402 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 403 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 404 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 405 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 406 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 407 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 409 "/usr/include/c++/4.4/bits/locale_classes.h" 3
facet(const locale::facet &);
# 412 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale::facet &operator=(const locale::facet &);
# 413 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 426 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::id {
# 429 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 430 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 432 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 436 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 443 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable size_t _M_index;
# 446 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 449 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::id &);
# 451 "/usr/include/c++/4.4/bits/locale_classes.h" 3
id(const locale::id &);
# 457 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: id() { }
# 460 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_id() const;
# 461 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 465 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::_Impl {
# 469 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 470 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::facet;
# 472 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 476 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 480 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 485 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 486 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_facets;
# 487 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_facets_size;
# 488 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_caches;
# 489 "/usr/include/c++/4.4/bits/locale_classes.h" 3
char **_M_names;
# 490 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_ctype[];
# 491 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_numeric[];
# 492 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_collate[];
# 493 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_time[];
# 494 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_monetary[];
# 495 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_messages[];
# 496 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const *const _S_facet_categories[];
# 499 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 500 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 503 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 504 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 505 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 506 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 507 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 508 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 509 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 510 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 511 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 512 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 514 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &, size_t);
# 515 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 516 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 518 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~_Impl() throw();
# 520 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &);
# 523 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::_Impl &);
# 526 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool _M_check_same_name()
# 527 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 528 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool __ret = true;
# 529 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 531 "/usr/include/c++/4.4/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 532 "/usr/include/c++/4.4/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 533 "/usr/include/c++/4.4/bits/locale_classes.h" 3
return __ret;
# 534 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 537 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_categories(const locale::_Impl *, locale::category);
# 540 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_category(const locale::_Impl *, const locale::id *const *);
# 543 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_facet(const locale::_Impl *, const locale::id *);
# 546 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_facet(const locale::id *, const locale::facet *);
# 548 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      void
      _M_init_facet ( _Facet * __facet )
      { _M_install_facet ( & _Facet :: id, __facet ); }
# 554 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_cache(const locale::facet *, size_t);
# 555 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 569 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> bool has_facet(const locale & ) throw();
# 586 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> const _Facet &use_facet(const locale & );
# 603 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


    protected :


      __c_locale _M_c_locale_collate;

    public :

      static locale :: id id;

      explicit
      collate ( size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_get_c_locale ( ) )
      { }

      explicit
      collate ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_clone_c_locale ( __cloc ) )
      { }

      int
      compare ( const _CharT * __lo1, const _CharT * __hi1,
       const _CharT * __lo2, const _CharT * __hi2 ) const
      { return this -> do_compare ( __lo1, __hi1, __lo2, __hi2 ); }

      string_type
      transform ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_transform ( __lo, __hi ); }

      long
      hash ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_hash ( __lo, __hi ); }


      int
      _M_compare ( const _CharT *, const _CharT * ) const;

      size_t
      _M_transform ( _CharT *, const _CharT *, size_t ) const;

  protected :

      virtual
      ~ collate ( )
      { _S_destroy_c_locale ( _M_c_locale_collate ); }

      virtual int
      do_compare ( const _CharT * __lo1, const _CharT * __hi1,
   const _CharT * __lo2, const _CharT * __hi2 ) const;

      virtual string_type
      do_transform ( const _CharT * __lo, const _CharT * __hi ) const;

      virtual long
      do_hash ( const _CharT * __lo, const _CharT * __hi ) const;
    };
# 756 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 757 "/usr/include/c++/4.4/bits/locale_classes.h" 3
collate< _CharT> ::id;
# 762 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const;
# 766 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const;
# 771 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const;
# 775 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const;
# 779 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate_byname : public collate < _CharT >
    {
    public :


      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


      explicit
      collate_byname ( const char * __s, size_t __refs = 0 )
      : collate < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_collate );
     this -> _S_create_c_locale ( this -> _M_c_locale_collate, __s );
   }
      }

    protected :
      virtual
      ~ collate_byname ( ) { }
    };
# 806 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale ::
    locale ( const locale & __other, _Facet * __f )
    {
      _M_impl = new _Impl ( * __other . _M_impl, 1 );

      try
 { _M_impl -> _M_install_facet ( & _Facet :: id, __f ); }
      catch ( ... )
 {
   _M_impl -> _M_remove_reference ( );
   throw;
 }
      delete [ ] _M_impl -> _M_names [ 0 ];
      _M_impl -> _M_names [ 0 ] = 0;
    }
# 58 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale
    locale ::
    combine ( const locale & __other ) const
    {
      _Impl * __tmp = new _Impl ( * _M_impl, 1 );
      try
 {
   __tmp -> _M_replace_facet ( __other . _M_impl, & _Facet :: id );
 }
      catch ( ... )
 {
   __tmp -> _M_remove_reference ( );
   throw;
 }
      return locale ( __tmp );
    }
# 76 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    bool
    locale ::
    operator ( ) ( const basic_string < _CharT, _Traits, _Alloc > & __s1,
        const basic_string < _CharT, _Traits, _Alloc > & __s2 ) const
    {
      typedef std :: collate < _CharT > __collate_type;
      const __collate_type & __collate = use_facet < __collate_type > ( * this );
      return ( __collate . compare ( __s1 . data ( ), __s1 . data ( ) + __s1 . length ( ),
    __s2 . data ( ), __s2 . data ( ) + __s2 . length ( ) ) < 0 );
    }
# 89 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    bool
    has_facet ( const locale & __loc ) throw ( )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      return ( __i < __loc . _M_impl -> _M_facets_size

       && dynamic_cast < const _Facet * > ( __facets [ __i ] ) );



    }
# 103 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & __loc )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      if ( __i >= __loc . _M_impl -> _M_facets_size || ! __facets [ __i ] )
        __throw_bad_cast ( );

      return dynamic_cast < const _Facet & > ( * __facets [ __i ] );



    }
# 120 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > :: _M_compare ( const _CharT *, const _CharT * ) const
    { return 0; }
# 126 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    size_t
    collate < _CharT > :: _M_transform ( _CharT *, const _CharT *, size_t ) const
    { return 0; }
# 131 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > ::
    do_compare ( const _CharT * __lo1, const _CharT * __hi1,
        const _CharT * __lo2, const _CharT * __hi2 ) const
    {


      const string_type __one ( __lo1, __hi1 );
      const string_type __two ( __lo2, __hi2 );

      const _CharT * __p = __one . c_str ( );
      const _CharT * __pend = __one . data ( ) + __one . length ( );
      const _CharT * __q = __two . c_str ( );
      const _CharT * __qend = __two . data ( ) + __two . length ( );




      for (;; )
 {
   const int __res = _M_compare ( __p, __q );
   if ( __res )
     return __res;

   __p += char_traits < _CharT > :: length ( __p );
   __q += char_traits < _CharT > :: length ( __q );
   if ( __p == __pend && __q == __qend )
     return 0;
   else if ( __p == __pend )
     return - 1;
   else if ( __q == __qend )
     return 1;

   __p ++;
   __q ++;
 }
    }
# 170 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    typename collate < _CharT > :: string_type
    collate < _CharT > ::
    do_transform ( const _CharT * __lo, const _CharT * __hi ) const
    {
      string_type __ret;


      const string_type __str ( __lo, __hi );

      const _CharT * __p = __str . c_str ( );
      const _CharT * __pend = __str . data ( ) + __str . length ( );

      size_t __len = ( __hi - __lo ) * 2;

      _CharT * __c = new _CharT [ __len ];

      try
 {



   for (;; )
     {

       size_t __res = _M_transform ( __c, __p, __len );


       if ( __res >= __len )
  {
    __len = __res + 1;
    delete [ ] __c, __c = 0;
    __c = new _CharT [ __len ];
    __res = _M_transform ( __c, __p, __len );
  }

       __ret . append ( __c, __res );
       __p += char_traits < _CharT > :: length ( __p );
       if ( __p == __pend )
  break;

       __p ++;
       __ret . push_back ( _CharT ( ) );
     }
 }
      catch ( ... )
 {
   delete [ ] __c;
   throw;
 }

      delete [ ] __c;

      return __ret;
    }
# 226 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    long
    collate < _CharT > ::
    do_hash ( const _CharT * __lo, const _CharT * __hi ) const
    {
      unsigned long __val = 0;
      for (; __lo < __hi; ++ __lo )
 __val =
   * __lo + ( ( __val << 7 )
     | ( __val >> ( __gnu_cxx :: __numeric_traits < unsigned long > ::
    __digits - 7 ) ) );
      return static_cast < long > ( __val );
    }
# 244 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< char> ;
# 245 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< char> ;
# 247 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< char> &use_facet< collate< char> > (const locale &);
# 251 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< char> > (const locale &) throw();
# 256 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< wchar_t> ;
# 257 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< wchar_t> ;
# 259 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< wchar_t> &use_facet< collate< wchar_t> > (const locale &);
# 263 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< wchar_t> > (const locale &) throw();
# 269 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
}
# 54 "/usr/include/c++/4.4/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 62 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_boolalpha = 1,
# 63 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_dec,
# 64 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_fixed = 4,
# 65 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_hex = 8,
# 66 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_internal = 16,
# 67 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_left = 32,
# 68 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_oct = 64,
# 69 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_right = 128,
# 70 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_scientific = 256,
# 71 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showbase = 512,
# 72 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpoint = 1024,
# 73 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpos = 2048,
# 74 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_skipws = 4096,
# 75 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 76 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_uppercase = 16384,
# 77 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_adjustfield = 176,
# 78 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_basefield = 74,
# 79 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_floatfield = 260,
# 80 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536
# 81 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 84 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 85 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 88 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 89 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 92 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 93 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 96 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 97 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 100 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 101 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 104 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 105 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 108 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 109 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 112 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Openmode {
# 114 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_app = 1,
# 115 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ate,
# 116 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_bin = 4,
# 117 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_in = 8,
# 118 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_out = 16,
# 119 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_trunc = 32,
# 120 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_openmode_end = 65536
# 121 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 124 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 125 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 128 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 129 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 132 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 133 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 136 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 137 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 140 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 141 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 144 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 145 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 148 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator~(_Ios_Openmode __a)
# 149 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 152 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Iostate {
# 154 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_goodbit,
# 155 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_badbit,
# 156 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_eofbit,
# 157 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_failbit = 4,
# 158 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_iostate_end = 65536
# 159 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 162 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 163 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 166 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 167 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 170 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 171 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 174 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 175 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 178 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 179 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 182 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 183 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 186 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator~(_Ios_Iostate __a)
# 187 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 189 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 191 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_beg,
# 192 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_cur,
# 193 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_end,
# 194 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 195 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 207 "/usr/include/c++/4.4/bits/ios_base.h" 3
class ios_base {
# 217 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class failure : public exception {
# 223 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: explicit failure(const string & ) throw();
# 228 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~failure() throw();
# 231 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual const char *what() const throw();
# 234 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: string _M_msg;
# 235 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 263 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 266 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags boolalpha = ((fmtflags)1);
# 269 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags dec = ((fmtflags)2);
# 272 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags fixed = ((fmtflags)4);
# 275 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags hex = ((fmtflags)8);
# 280 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags internal = ((fmtflags)16);
# 284 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags left = ((fmtflags)32);
# 287 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags oct = ((fmtflags)64);
# 291 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags right = ((fmtflags)128);
# 294 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags scientific = ((fmtflags)256);
# 298 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showbase = ((fmtflags)512);
# 302 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpoint = ((fmtflags)1024);
# 305 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpos = ((fmtflags)2048);
# 308 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags skipws = ((fmtflags)4096);
# 311 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags unitbuf = ((fmtflags)8192);
# 315 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags uppercase = ((fmtflags)16384);
# 318 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags adjustfield = ((fmtflags)176);
# 321 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags basefield = ((fmtflags)74);
# 324 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags floatfield = ((fmtflags)260);
# 338 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 342 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate badbit = ((iostate)1);
# 345 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate eofbit = ((iostate)2);
# 350 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate failbit = ((iostate)4);
# 353 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate goodbit = ((iostate)0);
# 369 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 372 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode app = ((openmode)1);
# 375 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode ate = ((openmode)2);
# 380 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode binary = ((openmode)4);
# 383 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode in = ((openmode)8);
# 386 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode out = ((openmode)16);
# 389 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode trunc = ((openmode)32);
# 401 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 404 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir beg = ((seekdir)0);
# 407 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir cur = ((seekdir)1);
# 410 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir end = ((seekdir)2);
# 413 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int io_state;
# 414 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int open_mode;
# 415 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int seek_dir;
# 417 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streampos streampos;
# 418 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 427 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum event {
# 429 "/usr/include/c++/4.4/bits/ios_base.h" 3
erase_event,
# 430 "/usr/include/c++/4.4/bits/ios_base.h" 3
imbue_event,
# 431 "/usr/include/c++/4.4/bits/ios_base.h" 3
copyfmt_event
# 432 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 444 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef void (*event_callback)(event, ios_base &, int);
# 457 "/usr/include/c++/4.4/bits/ios_base.h" 3
void register_callback(event_callback , int );
# 464 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 465 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize _M_width;
# 466 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags _M_flags;
# 467 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_exception;
# 468 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 473 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Callback_list {
# 476 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_next;
# 477 "/usr/include/c++/4.4/bits/ios_base.h" 3
event_callback _M_fn;
# 478 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_index;
# 479 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 481 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 482 "/usr/include/c++/4.4/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 483 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ }
# 486 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 490 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_remove_reference()
# 491 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1); }
# 492 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 494 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 497 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_call_callbacks(event ) throw();
# 500 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_dispose_callbacks();
# 503 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Words {
# 505 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *_M_pword;
# 506 "/usr/include/c++/4.4/bits/ios_base.h" 3
long _M_iword;
# 507 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 508 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 511 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_word_zero;
# 515 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 516 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 519 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_word_size;
# 520 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words *_M_word;
# 523 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &_M_grow_words(int , bool );
# 526 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale _M_ios_locale;
# 529 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_init();
# 537 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class Init {
# 539 "/usr/include/c++/4.4/bits/ios_base.h" 3
friend class ios_base;
# 541 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: Init();
# 542 "/usr/include/c++/4.4/bits/ios_base.h" 3
~Init();
# 545 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 546 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 547 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 555 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags() const
# 556 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_flags; }
# 566 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 567 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 568 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 569 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 570 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 571 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 582 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 583 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 584 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 585 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 586 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 587 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 599 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 600 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 601 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 602 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 603 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 604 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 605 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 614 "/usr/include/c++/4.4/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 615 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 625 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision() const
# 626 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_precision; }
# 634 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 635 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 636 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_precision);
# 637 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_precision) = __prec;
# 638 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 639 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 648 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width() const
# 649 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_width; }
# 657 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 658 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 659 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_width);
# 660 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_width) = __wide;
# 661 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 662 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 676 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool sync_with_stdio(bool = (true));
# 688 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale imbue(const locale & );
# 699 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale getloc() const
# 700 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 710 "/usr/include/c++/4.4/bits/ios_base.h" 3
const locale &_M_getloc() const
# 711 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 729 "/usr/include/c++/4.4/bits/ios_base.h" 3
static int xalloc() throw();
# 745 "/usr/include/c++/4.4/bits/ios_base.h" 3
long &iword(int __ix)
# 746 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 747 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, true));
# 749 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_iword;
# 750 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 766 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *&pword(int __ix)
# 767 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 768 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, false));
# 770 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_pword;
# 771 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 782 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~ios_base();
# 785 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: ios_base();
# 790 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: ios_base(const ios_base &);
# 793 "/usr/include/c++/4.4/bits/ios_base.h" 3
ios_base &operator=(const ios_base &);
# 794 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 799 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 800 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 801 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 802 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 803 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 807 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 808 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 809 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 810 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 811 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 815 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 816 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 817 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 818 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 819 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 823 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 824 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 825 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 826 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 827 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 831 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 832 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 833 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 834 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 835 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 839 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 840 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 841 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 842 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 843 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 847 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 848 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 849 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 850 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 851 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 855 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 856 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 857 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 858 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 859 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 863 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 864 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 865 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 866 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 867 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 871 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 872 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 873 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 874 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 875 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 879 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 880 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 881 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 882 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 883 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 887 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 888 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 889 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 890 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 891 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 895 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 896 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 897 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 898 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 899 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 903 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 904 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 905 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 906 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 907 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 912 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 913 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 914 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 915 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 916 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 920 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 921 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 922 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 923 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 924 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 928 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 929 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 930 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 931 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 932 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 937 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 938 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 939 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 940 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 941 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 945 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 946 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 947 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 948 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 949 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 953 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 954 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 955 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 956 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 957 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 962 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 963 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 964 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 965 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 966 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 970 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 971 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 972 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 973 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 974 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 976 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 46 "/usr/include/c++/4.4/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > *,
     basic_streambuf < _CharT, _Traits > *, bool & );
# 113 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    class basic_streambuf
    {
    public :






      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;




      typedef basic_streambuf < char_type, traits_type > __streambuf_type;


      friend class basic_ios < char_type, traits_type >;
      friend class basic_istream < char_type, traits_type >;
      friend class basic_ostream < char_type, traits_type >;
      friend class istreambuf_iterator < char_type, traits_type >;
      friend class ostreambuf_iterator < char_type, traits_type >;

      friend streamsize
      __copy_streambufs_eof < > ( __streambuf_type *, __streambuf_type *, bool & );

      template < bool _IsMove, typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
        __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
      istreambuf_iterator < _CharT2 > > :: __type
        find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

      template < typename _CharT2, typename _Traits2 >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &, _CharT2 * );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &,
     basic_string < _CharT2, _Traits2, _Alloc > & );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        getline ( basic_istream < _CharT2, _Traits2 > &,
  basic_string < _CharT2, _Traits2, _Alloc > &, _CharT2 );

    protected :

      char_type * _M_in_beg;
      char_type * _M_in_cur;
      char_type * _M_in_end;
      char_type * _M_out_beg;
      char_type * _M_out_cur;
      char_type * _M_out_end;


      locale _M_buf_locale;

  public :

      virtual
      ~ basic_streambuf ( )
      { }

      locale
      pubimbue ( const locale & __loc )
      {
 locale __tmp ( this -> getloc ( ) );
 this -> imbue ( __loc );
 _M_buf_locale = __loc;
 return __tmp;
      }

      locale
      getloc ( ) const
      { return _M_buf_locale; }

      __streambuf_type *
      pubsetbuf ( char_type * __s, streamsize __n )
      { return this -> setbuf ( __s, __n ); }

      pos_type
      pubseekoff ( off_type __off, ios_base :: seekdir __way,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekoff ( __off, __way, __mode ); }

      pos_type
      pubseekpos ( pos_type __sp,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekpos ( __sp, __mode ); }

      int
      pubsync ( ) { return this -> sync ( ); }

      streamsize
      in_avail ( )
      {
 const streamsize __ret = this -> egptr ( ) - this -> gptr ( );
 return __ret ? __ret : this -> showmanyc ( );
      }

      int_type
      snextc ( )
      {
 int_type __ret = traits_type :: eof ( );
 if ( __builtin_expect ( ! traits_type :: eq_int_type ( this -> sbumpc ( ),
             __ret ), true ) )
   __ret = this -> sgetc ( );
 return __ret;
      }

      int_type
      sbumpc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 else
   __ret = this -> uflow ( );
 return __ret;
      }

      int_type
      sgetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
 else
   __ret = this -> underflow ( );
 return __ret;
      }

      streamsize
      sgetn ( char_type * __s, streamsize __n )
      { return this -> xsgetn ( __s, __n ); }

      int_type
      sputbackc ( char_type __c )
      {
 int_type __ret;
 const bool __testpos = this -> eback ( ) < this -> gptr ( );
 if ( __builtin_expect ( ! __testpos ||
        ! traits_type :: eq ( __c, this -> gptr ( ) [ - 1 ] ), false ) )
   __ret = this -> pbackfail ( traits_type :: to_int_type ( __c ) );
 else
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 return __ret;
      }

      int_type
      sungetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> eback ( ) < this -> gptr ( ), true ) )
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 else
   __ret = this -> pbackfail ( );
 return __ret;
      }

      int_type
      sputc ( char_type __c )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> pptr ( ) < this -> epptr ( ), true ) )
   {
     * this -> pptr ( ) = __c;
     this -> pbump ( 1 );
     __ret = traits_type :: to_int_type ( __c );
   }
 else
   __ret = this -> overflow ( traits_type :: to_int_type ( __c ) );
 return __ret;
      }

      streamsize
      sputn ( const char_type * __s, streamsize __n )
      { return this -> xsputn ( __s, __n ); }

    protected :

      basic_streambuf ( )
      : _M_in_beg ( 0 ), _M_in_cur ( 0 ), _M_in_end ( 0 ),
      _M_out_beg ( 0 ), _M_out_cur ( 0 ), _M_out_end ( 0 ),
      _M_buf_locale ( locale ( ) )
      { }

      char_type *
      eback ( ) const { return _M_in_beg; }

      char_type *
      gptr ( ) const { return _M_in_cur; }

      char_type *
      egptr ( ) const { return _M_in_end; }

      void
      gbump ( int __n ) { _M_in_cur += __n; }

      void
      setg ( char_type * __gbeg, char_type * __gnext, char_type * __gend )
      {
 _M_in_beg = __gbeg;
 _M_in_cur = __gnext;
 _M_in_end = __gend;
      }

      char_type *
      pbase ( ) const { return _M_out_beg; }

      char_type *
      pptr ( ) const { return _M_out_cur; }

      char_type *
      epptr ( ) const { return _M_out_end; }

      void
      pbump ( int __n ) { _M_out_cur += __n; }

      void
      setp ( char_type * __pbeg, char_type * __pend )
      {
 _M_out_beg = _M_out_cur = __pbeg;
 _M_out_end = __pend;
      }

      virtual void
      imbue ( const locale & )
      { }

      virtual basic_streambuf < char_type, _Traits > *
      setbuf ( char_type *, streamsize )
      { return this; }

      virtual pos_type
      seekoff ( off_type, ios_base :: seekdir,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual pos_type
      seekpos ( pos_type,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual int
      sync ( ) { return 0; }

      virtual streamsize
      showmanyc ( ) { return 0; }

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual int_type
      underflow ( )
      { return traits_type :: eof ( ); }

      virtual int_type
      uflow ( )
      {
 int_type __ret = traits_type :: eof ( );
 const bool __testeof = traits_type :: eq_int_type ( this -> underflow ( ),
       __ret );
 if ( ! __testeof )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 return __ret;
      }

      virtual int_type
      pbackfail ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );

      virtual int_type
      overflow ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }



    public :

      void
      stossc ( )
      {
 if ( this -> gptr ( ) < this -> egptr ( ) )
   this -> gbump ( 1 );
 else
   this -> uflow ( );
      }


    private :


      basic_streambuf ( const __streambuf_type & __sb )
      : _M_in_beg ( __sb . _M_in_beg ), _M_in_cur ( __sb . _M_in_cur ),
      _M_in_end ( __sb . _M_in_end ), _M_out_beg ( __sb . _M_out_beg ),
      _M_out_cur ( __sb . _M_out_cur ), _M_out_end ( __sb . _M_out_cur ),
      _M_buf_locale ( __sb . _M_buf_locale )
      { }

      __streambuf_type &
      operator = ( const __streambuf_type & ) { return * this; };
    };
# 784 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * , bool & );
# 789 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * , bool & );
# 793 "/usr/include/c++/4.4/streambuf" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsgetn ( char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> egptr ( ) - this -> gptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( __s, this -> gptr ( ), __len );
       __ret += __len;
       __s += __len;
       this -> gbump ( __len );
     }

   if ( __ret < __n )
     {
       const int_type __c = this -> uflow ( );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    traits_type :: assign ( * __s ++, traits_type :: to_char_type ( __c ) );
    ++ __ret;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 76 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsputn ( const char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> epptr ( ) - this -> pptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( this -> pptr ( ), __s, __len );
       __ret += __len;
       __s += __len;
       this -> pbump ( __len );
     }

   if ( __ret < __n )
     {
       int_type __c = this -> overflow ( traits_type :: to_int_type ( * __s ) );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    ++ __ret;
    ++ __s;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 113 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > * __sbin,
     basic_streambuf < _CharT, _Traits > * __sbout,
     bool & __ineof )
    {
      streamsize __ret = 0;
      __ineof = true;
      typename _Traits :: int_type __c = __sbin -> sgetc ( );
      while ( ! _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
 {
   __c = __sbout -> sputc ( _Traits :: to_char_type ( __c ) );
   if ( _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
     {
       __ineof = false;
       break;
     }
   ++ __ret;
   __c = __sbin -> snextc ( );
 }
      return __ret;
    }
# 136 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    inline streamsize
    __copy_streambufs ( basic_streambuf < _CharT, _Traits > * __sbin,
        basic_streambuf < _CharT, _Traits > * __sbout )
    {
      bool __ineof;
      return __copy_streambufs_eof ( __sbin, __sbout, __ineof );
    }
# 149 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * );
# 154 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * );
# 165 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 172 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
}
# 38 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
typedef unsigned long wctype_t;
# 57 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
enum {
# 58 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwupper,
# 59 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwlower,
# 60 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwalpha,
# 61 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwdigit,
# 62 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwxdigit,
# 63 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwspace,
# 64 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwprint,
# 65 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwgraph,
# 66 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwblank,
# 67 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwcntrl,
# 68 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwpunct,
# 69 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwalnum,
# 71 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwupper = 16777216,
# 72 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwlower = 33554432,
# 73 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwalpha = 67108864,
# 74 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwdigit = 134217728,
# 75 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwxdigit = 268435456,
# 76 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwspace = 536870912,
# 77 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwprint = 1073741824,
# 78 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwgraph = (-2147483647-1),
# 79 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwblank = 65536,
# 80 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwcntrl = 131072,
# 81 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwpunct = 262144,
# 82 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwalnum = 524288
# 83 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
};
# 95 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswalnum(wint_t ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswalpha(wint_t ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswcntrl(wint_t ) throw();
# 108 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswdigit(wint_t ) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswgraph(wint_t ) throw();
# 117 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswlower(wint_t ) throw();
# 120 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswprint(wint_t ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswpunct(wint_t ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswspace(wint_t ) throw();
# 135 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswupper(wint_t ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswxdigit(wint_t ) throw();
# 146 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswblank(wint_t ) throw();
# 155 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" wctype_t wctype(const char * ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswctype(wint_t , wctype_t ) throw();
# 166 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" wint_t towlower(wint_t ) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" wint_t towupper(wint_t ) throw();
# 48 "/usr/include/wctype.h" 3
extern "C" { typedef const __int32_t *wctrans_t; }
# 52 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans(const char * ) throw();
# 55 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans(wint_t , wctrans_t ) throw();
# 63 "/usr/include/wctype.h" 3
extern "C" int iswalnum_l(wint_t , locale_t ) throw();
# 69 "/usr/include/wctype.h" 3
extern "C" int iswalpha_l(wint_t , locale_t ) throw();
# 72 "/usr/include/wctype.h" 3
extern "C" int iswcntrl_l(wint_t , locale_t ) throw();
# 76 "/usr/include/wctype.h" 3
extern "C" int iswdigit_l(wint_t , locale_t ) throw();
# 80 "/usr/include/wctype.h" 3
extern "C" int iswgraph_l(wint_t , locale_t ) throw();
# 85 "/usr/include/wctype.h" 3
extern "C" int iswlower_l(wint_t , locale_t ) throw();
# 88 "/usr/include/wctype.h" 3
extern "C" int iswprint_l(wint_t , locale_t ) throw();
# 93 "/usr/include/wctype.h" 3
extern "C" int iswpunct_l(wint_t , locale_t ) throw();
# 98 "/usr/include/wctype.h" 3
extern "C" int iswspace_l(wint_t , locale_t ) throw();
# 103 "/usr/include/wctype.h" 3
extern "C" int iswupper_l(wint_t , locale_t ) throw();
# 108 "/usr/include/wctype.h" 3
extern "C" int iswxdigit_l(wint_t , locale_t ) throw();
# 113 "/usr/include/wctype.h" 3
extern "C" int iswblank_l(wint_t , locale_t ) throw();
# 117 "/usr/include/wctype.h" 3
extern "C" wctype_t wctype_l(const char * , locale_t ) throw();
# 122 "/usr/include/wctype.h" 3
extern "C" int iswctype_l(wint_t , wctype_t , locale_t ) throw();
# 130 "/usr/include/wctype.h" 3
extern "C" wint_t towlower_l(wint_t , locale_t ) throw();
# 133 "/usr/include/wctype.h" 3
extern "C" wint_t towupper_l(wint_t , locale_t ) throw();
# 137 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans_l(const char * , locale_t ) throw();
# 141 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans_l(wint_t , wctrans_t , locale_t ) throw();
# 76 "/usr/include/c++/4.4/cwctype" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans_t;
# 79 "/usr/include/c++/4.4/cwctype" 3
using ::wctype_t;
# 82 "/usr/include/c++/4.4/cwctype" 3
using ::iswalnum;
# 83 "/usr/include/c++/4.4/cwctype" 3
using ::iswalpha;
# 85 "/usr/include/c++/4.4/cwctype" 3
using ::iswblank;
# 87 "/usr/include/c++/4.4/cwctype" 3
using ::iswcntrl;
# 88 "/usr/include/c++/4.4/cwctype" 3
using ::iswctype;
# 89 "/usr/include/c++/4.4/cwctype" 3
using ::iswdigit;
# 90 "/usr/include/c++/4.4/cwctype" 3
using ::iswgraph;
# 91 "/usr/include/c++/4.4/cwctype" 3
using ::iswlower;
# 92 "/usr/include/c++/4.4/cwctype" 3
using ::iswprint;
# 93 "/usr/include/c++/4.4/cwctype" 3
using ::iswpunct;
# 94 "/usr/include/c++/4.4/cwctype" 3
using ::iswspace;
# 95 "/usr/include/c++/4.4/cwctype" 3
using ::iswupper;
# 96 "/usr/include/c++/4.4/cwctype" 3
using ::iswxdigit;
# 97 "/usr/include/c++/4.4/cwctype" 3
using ::towctrans;
# 98 "/usr/include/c++/4.4/cwctype" 3
using ::towlower;
# 99 "/usr/include/c++/4.4/cwctype" 3
using ::towupper;
# 100 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans;
# 101 "/usr/include/c++/4.4/cwctype" 3
using ::wctype;
# 103 "/usr/include/c++/4.4/cwctype" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
struct ctype_base {
# 43 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
typedef const int *__to_type;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
typedef unsigned short mask;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 53 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
};
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class istreambuf_iterator
    : public iterator < input_iterator_tag, _CharT, typename _Traits :: off_type,
        _CharT *, _CharT & >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename _Traits :: int_type int_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_istream < _CharT, _Traits > istream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

      template < bool _IsMove, typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
 __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
               istreambuf_iterator < _CharT2 > > :: __type
 find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

    private :







      mutable streambuf_type * _M_sbuf;
      mutable int_type _M_c;

    public :

      istreambuf_iterator ( ) throw ( )
      : _M_sbuf ( 0 ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( istream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_c ( traits_type :: eof ( ) ) { }




      char_type
      operator * ( ) const
      {







 return traits_type :: to_char_type ( _M_get ( ) );
      }


      istreambuf_iterator &
      operator ++ ( )
      {
 ;


 if ( _M_sbuf )
   {
     _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return * this;
      }


      istreambuf_iterator
      operator ++ ( int )
      {
 ;



 istreambuf_iterator __old = * this;
 if ( _M_sbuf )
   {
     __old . _M_c = _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return __old;
      }





      bool
      equal ( const istreambuf_iterator & __b ) const
      { return _M_at_eof ( ) == __b . _M_at_eof ( ); }

    private :
      int_type
      _M_get ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 int_type __ret = __eof;
 if ( _M_sbuf )
   {
     if ( ! traits_type :: eq_int_type ( _M_c, __eof ) )
       __ret = _M_c;
     else if ( ! traits_type :: eq_int_type ( ( __ret = _M_sbuf -> sgetc ( ) ),
            __eof ) )
       _M_c = __ret;
     else
       _M_sbuf = 0;
   }
 return __ret;
      }

      bool
      _M_at_eof ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 return traits_type :: eq_int_type ( _M_get ( ), __eof );
      }
    };
# 185 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator == ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return __a . equal ( __b ); }
# 191 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator != ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return ! __a . equal ( __b ); }
# 198 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class ostreambuf_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_ostream < _CharT, _Traits > ostream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

    private :
      streambuf_type * _M_sbuf;
      bool _M_failed;

    public :

      ostreambuf_iterator ( ostream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator &
      operator = ( _CharT __c )
      {
 if ( ! _M_failed &&
     _Traits :: eq_int_type ( _M_sbuf -> sputc ( __c ), _Traits :: eof ( ) ) )
   _M_failed = true;
 return * this;
      }


      ostreambuf_iterator &
      operator * ( )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( int )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( )
      { return * this; }


      bool
      failed ( ) const throw ( )
      { return _M_failed; }

      ostreambuf_iterator &
      _M_put ( const _CharT * __ws, streamsize __len )
      {
 if ( __builtin_expect ( ! _M_failed, true )
     && __builtin_expect ( this -> _M_sbuf -> sputn ( __ws, __len ) != __len,
    false ) )
   _M_failed = true;
 return * this;
      }
    };
# 273 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
                           ostreambuf_iterator < _CharT > > :: __type
    copy ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last,
  ostreambuf_iterator < _CharT > __result )
    {
      if ( __first . _M_sbuf && ! __last . _M_sbuf && ! __result . _M_failed )
 {
   bool __ineof;
   __copy_streambufs_eof ( __first . _M_sbuf, __result . _M_sbuf, __ineof );
   if ( ! __ineof )
     __result . _M_failed = true;
 }
      return __result;
    }
# 290 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( _CharT * __first, _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 302 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( const _CharT * __first, const _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 314 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT > __first,
     istreambuf_iterator < _CharT > __last, _CharT * __result )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     {
       const streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    traits_type :: copy ( __result, __sb -> gptr ( ), __n );
    __sb -> gbump ( __n );
    __result += __n;
    __c = __sb -> underflow ( );
  }
       else
  {
    * __result ++ = traits_type :: to_char_type ( __c );
    __c = __sb -> snextc ( );
  }
     }
 }
      return __result;
    }
# 349 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
          istreambuf_iterator < _CharT > > :: __type
    find ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last, const _CharT & __val )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   const int_type __ival = traits_type :: to_int_type ( __val );
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) )
   && ! traits_type :: eq_int_type ( __c, __ival ) )
     {
       streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    const _CharT * __p = traits_type :: find ( __sb -> gptr ( ),
       __n, __val );
    if ( __p )
      __n = __p - __sb -> gptr ( );
    __sb -> gbump ( __n );
    __c = __sb -> sgetc ( );
  }
       else
  __c = __sb -> snextc ( );
     }

   if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     __first . _M_c = __c;
   else
     __first . _M_sbuf = 0;
 }
      return __first;
    }
# 390 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
}
# 52 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _Tv> void __convert_to_v(const char * , _Tv & , ios_base::iostate & , const __c_locale & );
# 72 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &);
# 77 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &);
# 82 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &);
# 87 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 88 "/usr/include/c++/4.4/bits/locale_facets.h" 3
struct __pad {
# 91 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_pad(ios_base & , _CharT , _CharT * , const _CharT * , streamsize , streamsize );
# 93 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last );
# 109 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline
    ostreambuf_iterator < _CharT >
    __write ( ostreambuf_iterator < _CharT > __s, const _CharT * __ws, int __len )
    {
      __s . _M_put ( __ws, __len );
      return __s;
    }
# 119 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    inline
    _OutIter
    __write ( _OutIter __s, const _CharT * __ws, int __len )
    {
      for ( int __j = 0; __j < __len; __j ++, ++ __s )
 * __s = __ws [ __j ];
      return __s;
    }
# 143 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class __ctype_abstract_base : public locale :: facet, public ctype_base
    {
    public :


      typedef _CharT char_type;

      bool
      is ( mask __m, char_type __c ) const
      { return this -> do_is ( __m, __c ); }

      const char_type *
      is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const
      { return this -> do_is ( __lo, __hi, __vec ); }

      const char_type *
      scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_is ( __m, __lo, __hi ); }

      const char_type *
      scan_not ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_not ( __m, __lo, __hi ); }

      char_type
      toupper ( char_type __c ) const
      { return this -> do_toupper ( __c ); }

      const char_type *
      toupper ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_toupper ( __lo, __hi ); }

      char_type
      tolower ( char_type __c ) const
      { return this -> do_tolower ( __c ); }

      const char_type *
      tolower ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_tolower ( __lo, __hi ); }

      char_type
      widen ( char __c ) const
      { return this -> do_widen ( __c ); }

      const char *
      widen ( const char * __lo, const char * __hi, char_type * __to ) const
      { return this -> do_widen ( __lo, __hi, __to ); }

      char
      narrow ( char_type __c, char __dfault ) const
      { return this -> do_narrow ( __c, __dfault ); }

      const char_type *
      narrow ( const char_type * __lo, const char_type * __hi,
       char __dfault, char * __to ) const
      { return this -> do_narrow ( __lo, __hi, __dfault, __to ); }

    protected :
      explicit
      __ctype_abstract_base ( size_t __refs = 0 ) : facet ( __refs ) { }

      virtual
      ~ __ctype_abstract_base ( ) { }

      virtual bool
      do_is ( mask __m, char_type __c ) const = 0;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi,
     mask * __vec ) const = 0;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo,
   const char_type * __hi ) const = 0;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const = 0;

      virtual char_type
      do_toupper ( char_type ) const = 0;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_tolower ( char_type ) const = 0;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_widen ( char ) const = 0;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi,
        char_type * __dest ) const = 0;

      virtual char
      do_narrow ( char_type, char __dfault ) const = 0;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const = 0;
    };
# 604 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype : public __ctype_abstract_base < _CharT >
    {
    public :

      typedef _CharT char_type;
      typedef typename __ctype_abstract_base < _CharT > :: mask mask;


      static locale :: id id;

      explicit
      ctype ( size_t __refs = 0 ) : __ctype_abstract_base < _CharT > ( __refs ) { }

   protected :
      virtual
      ~ ctype ( );

      virtual bool
      do_is ( mask __m, char_type __c ) const;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const;

      virtual char_type
      do_toupper ( char_type __c ) const;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_tolower ( char_type __c ) const;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_widen ( char __c ) const;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi, char_type * __dest ) const;

      virtual char
      do_narrow ( char_type, char __dfault ) const;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const;
    };
# 661 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 662 "/usr/include/c++/4.4/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 674 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 679 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef char char_type;
# 683 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 684 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_del;
# 685 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_toupper;
# 686 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_tolower;
# 687 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *_M_table;
# 688 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 689 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 690 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>((-1)))];
# 691 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 696 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 698 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>((-1))));
# 711 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(const mask * = 0, bool = (false), size_t = (0));
# 724 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , const mask * = 0, bool = (false), size_t = (0));
# 737 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline bool is(mask , char ) const;
# 752 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *is(const char * , const char * , mask * ) const;
# 766 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_is(mask , const char * , const char * ) const;
# 780 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_not(mask , const char * , const char * ) const;
# 795 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 796 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 812 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 813 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 828 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 829 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 845 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 846 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 865 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type widen(char __c) const
# 866 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 868 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 869 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init();
# 870 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__c);
# 871 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 892 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 893 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 894 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 895 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 896 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 897 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 898 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 900 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 901 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 902 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 923 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 924 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 925 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 926 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 927 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 928 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__t != __dfault) {
# 929 "/usr/include/c++/4.4/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 930 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __t;
# 931 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 956 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 957 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dfault, char *__to) const
# 958 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 959 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 960 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 961 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 962 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 963 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 964 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 965 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 966 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 967 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 974 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *table() const throw()
# 975 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return _M_table; }
# 979 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 989 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1005 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1022 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1038 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1055 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1075 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1076 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1098 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const
# 1099 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1101 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1102 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1124 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char) const
# 1125 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1150 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *
# 1151 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dest) const
# 1152 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1153 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1154 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1155 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1158 "/usr/include/c++/4.4/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1159 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1160 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1175 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1180 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1181 "/usr/include/c++/4.4/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1184 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1187 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1188 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char _M_narrow[128];
# 1189 "/usr/include/c++/4.4/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 1192 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mask _M_bit[16];
# 1193 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1198 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 1208 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(size_t = (0));
# 1219 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , size_t = (0));
# 1223 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask ) const;
# 1227 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual ~ctype();
# 1243 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual bool do_is(mask , char_type ) const;
# 1262 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * , const char_type * , mask * ) const;
# 1280 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask , const char_type * , const char_type * ) const;
# 1298 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask , const char_type * , const char_type * ) const;
# 1315 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1332 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1348 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1365 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1385 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char) const;
# 1407 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char * , const char * , char_type * ) const;
# 1430 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char ) const;
# 1456 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * , const char_type * , char , char * ) const;
# 1461 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_initialize_ctype();
# 1462 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1466 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype_byname : public ctype < _CharT >
    {
    public :
      typedef typename ctype < _CharT > :: mask mask;

      explicit
      ctype_byname ( const char * __s, size_t __refs = 0 );

    protected :
      virtual
      ~ ctype_byname ( ) { };
    };
# 1482 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1486 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1490 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1491 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1499 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1503 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1504 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1507 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
while (__low < __high) {
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>((*(__low++)))]); }
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
return __high;
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>((*__low))]) & __m))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
++__low; }
# 60 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
return __low;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 65 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>((*__low))]) & __m) != 0)) {
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
++__low; }
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
return __low;
# 71 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 1512 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1515 "/usr/include/c++/4.4/bits/locale_facets.h" 3
class __num_base {
# 1521 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: enum {
# 1522 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ominus,
# 1523 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oplus,
# 1524 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ox,
# 1525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oX,
# 1526 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits,
# 1527 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1528 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1529 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1530 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oe = 18,
# 1531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oE = 34,
# 1532 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oend = 36
# 1533 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1540 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1544 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1547 "/usr/include/c++/4.4/bits/locale_facets.h" 3
enum {
# 1548 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iminus,
# 1549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iplus,
# 1550 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ix,
# 1551 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iX,
# 1552 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_izero,
# 1553 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ie = 18,
# 1554 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iE = 24,
# 1555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iend = 26
# 1556 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & , char * , char );
# 1562 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1564 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    struct __numpunct_cache : public locale :: facet
    {
      const char * _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      const _CharT * _M_truename;
      size_t _M_truename_size;
      const _CharT * _M_falsename;
      size_t _M_falsename_size;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;





      _CharT _M_atoms_out [ __num_base :: _S_oend ];





      _CharT _M_atoms_in [ __num_base :: _S_iend ];

      bool _M_allocated;

      __numpunct_cache ( size_t __refs = 0 ) : facet ( __refs ),
      _M_grouping ( __null ), _M_grouping_size ( 0 ), _M_use_grouping ( false ),
      _M_truename ( __null ), _M_truename_size ( 0 ), _M_falsename ( __null ),
      _M_falsename_size ( 0 ), _M_decimal_point ( _CharT ( ) ),
      _M_thousands_sep ( _CharT ( ) ), _M_allocated ( false )
      { }

      ~ __numpunct_cache ( );

      void
      _M_cache ( const locale & __loc );

    private :
      __numpunct_cache &
      operator = ( const __numpunct_cache & );

      explicit
      __numpunct_cache ( const __numpunct_cache & );
    };
# 1611 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    __numpunct_cache < _CharT > :: ~ __numpunct_cache ( )
    {
      if ( _M_allocated )
 {
   delete [ ] _M_grouping;
   delete [ ] _M_truename;
   delete [ ] _M_falsename;
 }
    }
# 1635 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      typedef __numpunct_cache < _CharT > __cache_type;

    protected :
      __cache_type * _M_data;

    public :

      static locale :: id id;






      explicit
      numpunct ( size_t __refs = 0 ) : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __cache_type * __cache, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __cache )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( __cloc ); }

      char_type
      decimal_point ( ) const
      { return this -> do_decimal_point ( ); }

      char_type
      thousands_sep ( ) const
      { return this -> do_thousands_sep ( ); }

      string
      grouping ( ) const
      { return this -> do_grouping ( ); }

      string_type
      truename ( ) const
      { return this -> do_truename ( ); }

      string_type
      falsename ( ) const
      { return this -> do_falsename ( ); }

    protected :

      virtual
      ~ numpunct ( );

      virtual char_type
      do_decimal_point ( ) const
      { return _M_data -> _M_decimal_point; }

      virtual char_type
      do_thousands_sep ( ) const
      { return _M_data -> _M_thousands_sep; }

      virtual string
      do_grouping ( ) const
      { return _M_data -> _M_grouping; }

      virtual string_type
      do_truename ( ) const
      { return _M_data -> _M_truename; }

      virtual string_type
      do_falsename ( ) const
      { return _M_data -> _M_falsename; }


      void
      _M_initialize_numpunct ( __c_locale __cloc = __null );
    };
# 1847 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1848 "/usr/include/c++/4.4/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1851 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1855 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale );
# 1859 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1863 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale );
# 1867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct_byname : public numpunct < _CharT >
    {
    public :
      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      explicit
      numpunct_byname ( const char * __s, size_t __refs = 0 )
      : numpunct < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     __c_locale __tmp;
     this -> _S_create_c_locale ( __tmp, __s );
     this -> _M_initialize_numpunct ( __tmp );
     this -> _S_destroy_c_locale ( __tmp );
   }
      }

    protected :
      virtual
      ~ numpunct_byname ( ) { }
    };
# 1907 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _InIter >
    class num_get : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _InIter iter_type;



      static locale :: id id;

      explicit
      num_get ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, bool & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned short & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned int & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }


      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, float & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, void * & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

    protected :

      virtual ~ num_get ( ) { }

      iter_type
      _M_extract_float ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         string & ) const;

      template < typename _ValueT >
        iter_type
        _M_extract_int ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         _ValueT & ) const;

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value, int > :: __type
        _M_find ( const _CharT2 *, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   if ( __len <= 10 )
     {
       if ( __c >= _CharT2 ( '0' ) && __c < _CharT2 ( _CharT2 ( '0' ) + __len ) )
  __ret = __c - _CharT2 ( '0' );
     }
   else
     {
       if ( __c >= _CharT2 ( '0' ) && __c <= _CharT2 ( '9' ) )
  __ret = __c - _CharT2 ( '0' );
       else if ( __c >= _CharT2 ( 'a' ) && __c <= _CharT2 ( 'f' ) )
  __ret = 10 + ( __c - _CharT2 ( 'a' ) );
       else if ( __c >= _CharT2 ( 'A' ) && __c <= _CharT2 ( 'F' ) )
  __ret = 10 + ( __c - _CharT2 ( 'A' ) );
     }
   return __ret;
 }

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < ! __is_char < _CharT2 > :: __value,
          int > :: __type
        _M_find ( const _CharT2 * __zero, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   const char_type * __q = char_traits < _CharT2 > :: find ( __zero, __len, __c );
   if ( __q )
     {
       __ret = __q - __zero;
       if ( __ret > 15 )
  __ret -= 6;
     }
   return __ret;
 }

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate &, bool & ) const;

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned short & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned int & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      float & ) const;

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      double & ) const;







      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      long double & ) const;


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      void * & ) const;

    };
# 2229 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2230 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2244 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    class num_put : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale :: id id;

      explicit
      num_put ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, bool __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }


      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   long double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   const void * __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

    protected :
      template < typename _ValueT >
        iter_type
        _M_insert_float ( iter_type, ios_base & __io, char_type __fill,
   char __mod, _ValueT __v ) const;

      void
      _M_group_float ( const char * __grouping, size_t __grouping_size,
       char_type __sep, const char_type * __p, char_type * __new,
       char_type * __cs, int & __len ) const;

      template < typename _ValueT >
        iter_type
        _M_insert_int ( iter_type, ios_base & __io, char_type __fill,
        _ValueT __v ) const;

      void
      _M_group_int ( const char * __grouping, size_t __grouping_size,
     char_type __sep, ios_base & __io, char_type * __new,
     char_type * __cs, int & __len ) const;

      void
      _M_pad ( char_type __fill, streamsize __w, ios_base & __io,
      char_type * __new, const char_type * __cs, int & __len ) const;


      virtual
      ~ num_put ( ) { };

      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, bool __v ) const;

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill, long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, double __v ) const;






      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, long double __v ) const;


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, const void * __v ) const;







    };
# 2508 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2509 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2519 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isspace ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: space, __c ); }
# 2525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isprint ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: print, __c ); }
# 2531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    iscntrl ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: cntrl, __c ); }
# 2537 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: upper, __c ); }
# 2543 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    islower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: lower, __c ); }
# 2549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalpha ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alpha, __c ); }
# 2555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: digit, __c ); }
# 2561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    ispunct ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: punct, __c ); }
# 2567 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isxdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: xdigit, __c ); }
# 2573 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalnum ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alnum, __c ); }
# 2579 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isgraph ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: graph, __c ); }
# 2585 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    toupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . toupper ( __c ); }
# 2591 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    tolower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . tolower ( __c ); }
# 2596 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & ) const;
# 46 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    struct __use_cache < __numpunct_cache < _CharT > >
    {
      const __numpunct_cache < _CharT > *
      operator ( ) ( const locale & __loc ) const
      {
 const size_t __i = numpunct < _CharT > :: id . _M_id ( );
 const locale :: facet * * __caches = __loc . _M_impl -> _M_caches;
 if ( ! __caches [ __i ] )
   {
     __numpunct_cache < _CharT > * __tmp = __null;
     try
       {
  __tmp = new __numpunct_cache < _CharT >;
  __tmp -> _M_cache ( __loc );
       }
     catch ( ... )
       {
  delete __tmp;
  throw;
       }
     __loc . _M_impl -> _M_install_cache ( __tmp, __i );
   }
 return static_cast < const __numpunct_cache < _CharT > * > ( __caches [ __i ] );
      }
    };
# 76 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    void
    __numpunct_cache < _CharT > :: _M_cache ( const locale & __loc )
    {
      _M_allocated = true;

      const numpunct < _CharT > & __np = use_facet < numpunct < _CharT > > ( __loc );

      _M_grouping_size = __np . grouping ( ) . size ( );
      char * __grouping = new char [ _M_grouping_size ];
      __np . grouping ( ) . copy ( __grouping, _M_grouping_size );
      _M_grouping = __grouping;
      _M_use_grouping = ( _M_grouping_size
    && static_cast < signed char > ( _M_grouping [ 0 ] ) > 0
    && ( _M_grouping [ 0 ]
        != __gnu_cxx :: __numeric_traits < char > :: __max ) );

      _M_truename_size = __np . truename ( ) . size ( );
      _CharT * __truename = new _CharT [ _M_truename_size ];
      __np . truename ( ) . copy ( __truename, _M_truename_size );
      _M_truename = __truename;

      _M_falsename_size = __np . falsename ( ) . size ( );
      _CharT * __falsename = new _CharT [ _M_falsename_size ];
      __np . falsename ( ) . copy ( __falsename, _M_falsename_size );
      _M_falsename = __falsename;

      _M_decimal_point = __np . decimal_point ( );
      _M_thousands_sep = __np . thousands_sep ( );

      const ctype < _CharT > & __ct = use_facet < ctype < _CharT > > ( __loc );
      __ct . widen ( __num_base :: _S_atoms_out,
   __num_base :: _S_atoms_out + __num_base :: _S_oend, _M_atoms_out );
      __ct . widen ( __num_base :: _S_atoms_in,
   __num_base :: _S_atoms_in + __num_base :: _S_iend, _M_atoms_in );
    }
# 122 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
bool __verify_grouping(const char * , size_t , const string & );
# 127 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    _M_extract_float ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, string & __xtrc ) const
    {
      typedef char_traits < _CharT > __traits_type;
      typedef __numpunct_cache < _CharT > __cache_type;
      __use_cache < __cache_type > __uc;
      const locale & __loc = __io . _M_getloc ( );
      const __cache_type * __lc = __uc ( __loc );
      const _CharT * __lit = __lc -> _M_atoms_in;
      char_type __c = char_type ( );


      bool __testeof = __beg == __end;


      if ( ! __testeof )
 {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
     {
       __xtrc += __plus ? '+' : '-';
       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 }


      bool __found_mantissa = false;
      int __sep_pos = 0;
      while ( ! __testeof )
 {
   if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       || __c == __lc -> _M_decimal_point )
     break;
   else if ( __c == __lit [ __num_base :: _S_izero ] )
     {
       if ( ! __found_mantissa )
  {
    __xtrc += '0';
    __found_mantissa = true;
  }
       ++ __sep_pos;

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
   else
     break;
 }


      bool __found_dec = false;
      bool __found_sci = false;
      string __found_grouping;
      if ( __lc -> _M_use_grouping )
 __found_grouping . reserve ( 32 );
      const char_type * __lit_zero = __lit + __num_base :: _S_izero;

      if ( ! __lc -> _M_allocated )

 while ( ! __testeof )
   {
     const int __digit = _M_find ( __lit_zero, 10, __c );
     if ( __digit != - 1 )
       {
  __xtrc += '0' + __digit;
  __found_mantissa = true;
       }
     else if ( __c == __lc -> _M_decimal_point
       && ! __found_dec && ! __found_sci )
       {
  __xtrc += '.';
  __found_dec = true;
       }
     else if ( ( __c == __lit [ __num_base :: _S_ie ]
        || __c == __lit [ __num_base :: _S_iE ] )
       && ! __found_sci && __found_mantissa )
       {

  __xtrc += 'e';
  __found_sci = true;


  if ( ++ __beg != __end )
    {
      __c = * __beg;
      const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
      if ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
        __xtrc += __plus ? '+' : '-';
      else
        continue;
    }
  else
    {
      __testeof = true;
      break;
    }
       }
     else
       break;

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }
      else
 while ( ! __testeof )
   {


     if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       {
  if ( ! __found_dec && ! __found_sci )
    {


      if ( __sep_pos )
        {
   __found_grouping += static_cast < char > ( __sep_pos );
   __sep_pos = 0;
        }
      else
        {


   __xtrc . clear ( );
   break;
        }
    }
  else
    break;
       }
     else if ( __c == __lc -> _M_decimal_point )
       {
  if ( ! __found_dec && ! __found_sci )
    {



      if ( __found_grouping . size ( ) )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += '.';
      __found_dec = true;
    }
  else
    break;
       }
     else
       {
  const char_type * __q =
    __traits_type :: find ( __lit_zero, 10, __c );
  if ( __q )
    {
      __xtrc += '0' + ( __q - __lit_zero );
      __found_mantissa = true;
      ++ __sep_pos;
    }
  else if ( ( __c == __lit [ __num_base :: _S_ie ]
     || __c == __lit [ __num_base :: _S_iE ] )
    && ! __found_sci && __found_mantissa )
    {

      if ( __found_grouping . size ( ) && ! __found_dec )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += 'e';
      __found_sci = true;


      if ( ++ __beg != __end )
        {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping
     && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
        __xtrc += __plus ? '+' : '-';
   else
     continue;
        }
      else
        {
   __testeof = true;
   break;
        }
    }
  else
    break;
       }

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }



      if ( __found_grouping . size ( ) )
        {

   if ( ! __found_dec && ! __found_sci )
     __found_grouping += static_cast < char > ( __sep_pos );

          if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
          __lc -> _M_grouping_size,
          __found_grouping ) )
     __err = ios_base :: failbit;
        }

      return __beg;
    }
# 351 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    template < typename _ValueT >
      _InIter
      num_get < _CharT, _InIter > ::
      _M_extract_int ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, _ValueT & __v ) const
      {
        typedef char_traits < _CharT > __traits_type;
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_in;
 char_type __c = char_type ( );


 const ios_base :: fmtflags __basefield = __io . flags ( )
                                        & ios_base :: basefield;
 const bool __oct = __basefield == ios_base :: oct;
 int __base = __oct ? 8 : ( __basefield == ios_base :: hex ? 16 : 10 );


 bool __testeof = __beg == __end;


 bool __negative = false;
 if ( ! __testeof )
   {
     __c = * __beg;
     __negative = __c == __lit [ __num_base :: _S_iminus ];
     if ( ( __negative || __c == __lit [ __num_base :: _S_iplus ] )
  && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  && ! ( __c == __lc -> _M_decimal_point ) )
       {
  if ( ++ __beg != __end )
    __c = * __beg;
  else
    __testeof = true;
       }
   }



 bool __found_zero = false;
 int __sep_pos = 0;
 while ( ! __testeof )
   {
     if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  || __c == __lc -> _M_decimal_point )
       break;
     else if ( __c == __lit [ __num_base :: _S_izero ]
       && ( ! __found_zero || __base == 10 ) )
       {
  __found_zero = true;
  ++ __sep_pos;
  if ( __basefield == 0 )
    __base = 8;
  if ( __base == 8 )
    __sep_pos = 0;
       }
     else if ( __found_zero
       && ( __c == __lit [ __num_base :: _S_ix ]
    || __c == __lit [ __num_base :: _S_iX ] ) )
       {
  if ( __basefield == 0 )
    __base = 16;
  if ( __base == 16 )
    {
      __found_zero = false;
      __sep_pos = 0;
    }
  else
    break;
       }
     else
       break;

     if ( ++ __beg != __end )
       {
  __c = * __beg;
  if ( ! __found_zero )
    break;
       }
     else
       __testeof = true;
   }



 const size_t __len = ( __base == 16 ? __num_base :: _S_iend
         - __num_base :: _S_izero : __base );


 string __found_grouping;
 if ( __lc -> _M_use_grouping )
   __found_grouping . reserve ( 32 );
 bool __testfail = false;
 bool __testoverflow = false;
 const __unsigned_type __max =
   ( __negative && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
   ? - __gnu_cxx :: __numeric_traits < _ValueT > :: __min
   : __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
 const __unsigned_type __smax = __max / __base;
 __unsigned_type __result = 0;
 int __digit = 0;
 const char_type * __lit_zero = __lit + __num_base :: _S_izero;

 if ( ! __lc -> _M_allocated )

   while ( ! __testeof )
     {
       __digit = _M_find ( __lit_zero, __len, __c );
       if ( __digit == - 1 )
  break;

       if ( __result > __smax )
  __testoverflow = true;
       else
  {
    __result *= __base;
    __testoverflow |= __result > __max - __digit;
    __result += __digit;
    ++ __sep_pos;
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 else
   while ( ! __testeof )
     {


       if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  {


    if ( __sep_pos )
      {
        __found_grouping += static_cast < char > ( __sep_pos );
        __sep_pos = 0;
      }
    else
      {
        __testfail = true;
        break;
      }
  }
       else if ( __c == __lc -> _M_decimal_point )
  break;
       else
  {
    const char_type * __q =
      __traits_type :: find ( __lit_zero, __len, __c );
    if ( ! __q )
      break;

    __digit = __q - __lit_zero;
    if ( __digit > 15 )
      __digit -= 6;
    if ( __result > __smax )
      __testoverflow = true;
    else
      {
        __result *= __base;
        __testoverflow |= __result > __max - __digit;
        __result += __digit;
        ++ __sep_pos;
      }
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }



 if ( __found_grouping . size ( ) )
   {

     __found_grouping += static_cast < char > ( __sep_pos );

     if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
     __lc -> _M_grouping_size,
     __found_grouping ) )
       __err = ios_base :: failbit;
   }



 if ( ( ! __sep_pos && ! __found_zero && ! __found_grouping . size ( ) )
     || __testfail )
   {
     __v = 0;
     __err = ios_base :: failbit;
   }
 else if ( __testoverflow )
   {
     if ( __negative
  && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __min;
     else
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
     __err = ios_base :: failbit;
   }
 else
   __v = __negative ? - __result : __result;

 if ( __testeof )
   __err |= ios_base :: eofbit;
 return __beg;
      }
# 572 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, bool & __v ) const
    {
      if ( ! ( __io . flags ( ) & ios_base :: boolalpha ) )
        {



   long __l = - 1;
          __beg = _M_extract_int ( __beg, __end, __io, __err, __l );
   if ( __l == 0 || __l == 1 )
     __v = bool ( __l );
   else
     {


       __v = true;
       __err = ios_base :: failbit;
       if ( __beg == __end )
  __err |= ios_base :: eofbit;
     }
        }
      else
        {

   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   bool __testf = true;
   bool __testt = true;
   bool __donef = __lc -> _M_falsename_size == 0;
   bool __donet = __lc -> _M_truename_size == 0;
   bool __testeof = false;
   size_t __n = 0;
   while ( ! __donef || ! __donet )
     {
       if ( __beg == __end )
  {
    __testeof = true;
    break;
  }

       const char_type __c = * __beg;

       if ( ! __donef )
  __testf = __c == __lc -> _M_falsename [ __n ];

       if ( ! __testf && __donet )
  break;

       if ( ! __donet )
  __testt = __c == __lc -> _M_truename [ __n ];

       if ( ! __testt && __donef )
  break;

       if ( ! __testt && ! __testf )
  break;

       ++ __n;
       ++ __beg;

       __donef = ! __testf || __n >= __lc -> _M_falsename_size;
       __donet = ! __testt || __n >= __lc -> _M_truename_size;
     }
   if ( __testf && __n == __lc -> _M_falsename_size && __n )
     {
       __v = false;
       if ( __testt && __n == __lc -> _M_truename_size )
  __err = ios_base :: failbit;
       else
  __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else if ( __testt && __n == __lc -> _M_truename_size && __n )
     {
       __v = true;
       __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else
     {


       __v = false;
       __err = ios_base :: failbit;
       if ( __testeof )
  __err |= ios_base :: eofbit;
     }
 }
      return __beg;
    }
# 668 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
    ios_base :: iostate & __err, float & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 683 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 715 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, long double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 730 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, void * & __v ) const
    {

      typedef ios_base :: fmtflags fmtflags;
      const fmtflags __fmt = __io . flags ( );
      __io . flags ( ( __fmt & ~ ios_base :: basefield ) | ios_base :: hex );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      _UIntPtrType __ul;
      __beg = _M_extract_int ( __beg, __end, __io, __err, __ul );


      __io . flags ( __fmt );

      __v = reinterpret_cast < void * > ( __ul );
      return __beg;
    }
# 757 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_pad ( _CharT __fill, streamsize __w, ios_base & __io,
    _CharT * __new, const _CharT * __cs, int & __len ) const
    {


      __pad < _CharT, char_traits < _CharT > > :: _S_pad ( __io, __fill, __new,
        __cs, __w, __len );
      __len = static_cast < int > ( __w );
    }
# 772 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _ValueT >
    int
    __int_to_char ( _CharT * __bufend, _ValueT __v, const _CharT * __lit,
    ios_base :: fmtflags __flags, bool __dec )
    {
      _CharT * __buf = __bufend;
      if ( __builtin_expect ( __dec, true ) )
 {

   do
     {
       * -- __buf = __lit [ ( __v % 10 ) + __num_base :: _S_odigits ];
       __v /= 10;
     }
   while ( __v != 0 );
 }
      else if ( ( __flags & ios_base :: basefield ) == ios_base :: oct )
 {

   do
     {
       * -- __buf = __lit [ ( __v & 7 ) + __num_base :: _S_odigits ];
       __v >>= 3;
     }
   while ( __v != 0 );
 }
      else
 {

   const bool __uppercase = __flags & ios_base :: uppercase;
   const int __case_offset = __uppercase ? __num_base :: _S_oudigits
                                         : __num_base :: _S_odigits;
   do
     {
       * -- __buf = __lit [ ( __v & 15 ) + __case_offset ];
       __v >>= 4;
     }
   while ( __v != 0 );
 }
      return __bufend - __buf;
    }
# 816 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_int ( const char * __grouping, size_t __grouping_size, _CharT __sep,
   ios_base &, _CharT * __new, _CharT * __cs, int & __len ) const
    {
      _CharT * __p = std :: __add_grouping ( __new, __sep, __grouping,
     __grouping_size, __cs, __cs + __len );
      __len = __p - __new;
    }
# 827 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_int ( _OutIter __s, ios_base & __io, _CharT __fill,
      _ValueT __v ) const
      {
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_out;
 const ios_base :: fmtflags __flags = __io . flags ( );


 const int __ilen = 5 * sizeof ( _ValueT );
 _CharT * __cs = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __ilen ) );



 const ios_base :: fmtflags __basefield = __flags & ios_base :: basefield;
 const bool __dec = ( __basefield != ios_base :: oct
       && __basefield != ios_base :: hex );
 const __unsigned_type __u = ( ( __v > 0 || ! __dec )
         ? __unsigned_type ( __v )
         : - __unsigned_type ( __v ) );
  int __len = __int_to_char ( __cs + __ilen, __u, __lit, __flags, __dec );
 __cs += __ilen - __len;


 if ( __lc -> _M_use_grouping )
   {


     _CharT * __cs2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * ( __len + 1 )
          * 2 ) );
     _M_group_int ( __lc -> _M_grouping, __lc -> _M_grouping_size,
    __lc -> _M_thousands_sep, __io, __cs2 + 2, __cs, __len );
     __cs = __cs2 + 2;
   }


 if ( __builtin_expect ( __dec, true ) )
   {

     if ( __v >= 0 )
       {
  if ( bool ( __flags & ios_base :: showpos )
      && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
    * -- __cs = __lit [ __num_base :: _S_oplus ], ++ __len;
       }
     else
       * -- __cs = __lit [ __num_base :: _S_ominus ], ++ __len;
   }
 else if ( bool ( __flags & ios_base :: showbase ) && __v )
   {
     if ( __basefield == ios_base :: oct )
       * -- __cs = __lit [ __num_base :: _S_odigits ], ++ __len;
     else
       {

  const bool __uppercase = __flags & ios_base :: uppercase;
  * -- __cs = __lit [ __num_base :: _S_ox + __uppercase ];

  * -- __cs = __lit [ __num_base :: _S_odigits ];
  __len += 2;
       }
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __cs3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __cs3, __cs, __len );
     __cs = __cs3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __cs, __len );
      }
# 916 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_float ( const char * __grouping, size_t __grouping_size,
     _CharT __sep, const _CharT * __p, _CharT * __new,
     _CharT * __cs, int & __len ) const
    {



      const int __declen = __p ? __p - __cs : __len;
      _CharT * __p2 = std :: __add_grouping ( __new, __sep, __grouping,
      __grouping_size,
      __cs, __cs + __declen );


      int __newlen = __p2 - __new;
      if ( __p )
 {
   char_traits < _CharT > :: copy ( __p2, __p, __len - __declen );
   __newlen += __len - __declen;
 }
      __len = __newlen;
    }
# 951 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_float ( _OutIter __s, ios_base & __io, _CharT __fill, char __mod,
         _ValueT __v ) const
      {
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );


 const streamsize __prec = __io . precision ( ) < 0 ? 6 : __io . precision ( );

 const int __max_digits =
   __gnu_cxx :: __numeric_traits < _ValueT > :: __digits10;


 int __len;

 char __fbuf [ 16 ];
 __num_base :: _S_format_float ( __io, __fbuf, __mod );




 int __cs_size = __max_digits * 3;
 char * __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
 __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
          __fbuf, __prec, __v );


 if ( __len >= __cs_size )
   {
     __cs_size = __len + 1;
     __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
     __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
       __fbuf, __prec, __v );
   }

 const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

 _CharT * __ws = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __len ) );
 __ctype . widen ( __cs, __cs + __len, __ws );


 _CharT * __wp = 0;
 const char * __p = char_traits < char > :: find ( __cs, __len, '.' );
 if ( __p )
   {
     __wp = __ws + ( __p - __cs );
     * __wp = __lc -> _M_decimal_point;
   }




 if ( __lc -> _M_use_grouping
     && ( __wp || __len < 3 || ( __cs [ 1 ] <= '9' && __cs [ 2 ] <= '9'
          && __cs [ 1 ] >= '0' && __cs [ 2 ] >= '0' ) ) )
   {


     _CharT * __ws2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __len * 2 ) );

     streamsize __off = 0;
     if ( __cs [ 0 ] == '-' || __cs [ 0 ] == '+' )
       {
  __off = 1;
  __ws2 [ 0 ] = __ws [ 0 ];
  __len -= 1;
       }

     _M_group_float ( __lc -> _M_grouping, __lc -> _M_grouping_size,
      __lc -> _M_thousands_sep, __wp, __ws2 + __off,
      __ws + __off, __len );
     __len += __off;

     __ws = __ws2;
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __ws3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __ws3, __ws, __len );
     __ws = __ws3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __ws, __len );
      }
# 1071 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, bool __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      if ( ( __flags & ios_base :: boolalpha ) == 0 )
        {
          const long __l = __v;
          __s = _M_insert_int ( __s, __io, __fill, __l );
        }
      else
        {
   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   const _CharT * __name = __v ? __lc -> _M_truename
                              : __lc -> _M_falsename;
   int __len = __v ? __lc -> _M_truename_size
                   : __lc -> _M_falsename_size;

   const streamsize __w = __io . width ( );
   if ( __w > static_cast < streamsize > ( __len ) )
     {
       const streamsize __plen = __w - __len;
       _CharT * __ps
  = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
       * __plen ) );

       char_traits < _CharT > :: assign ( __ps, __plen, __fill );
       __io . width ( 0 );

       if ( ( __flags & ios_base :: adjustfield ) == ios_base :: left )
  {
    __s = std :: __write ( __s, __name, __len );
    __s = std :: __write ( __s, __ps, __plen );
  }
       else
  {
    __s = std :: __write ( __s, __ps, __plen );
    __s = std :: __write ( __s, __name, __len );
  }
       return __s;
     }
   __io . width ( 0 );
   __s = std :: __write ( __s, __name, __len );
 }
      return __s;
    }
# 1123 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, double __v ) const
    { return _M_insert_float ( __s, __io, __fill, char ( ), __v ); }
# 1137 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
    long double __v ) const
    { return _M_insert_float ( __s, __io, __fill, 'L', __v ); }
# 1144 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
           const void * __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      const ios_base :: fmtflags __fmt = ~ ( ios_base :: basefield
      | ios_base :: uppercase );
      __io . flags ( ( __flags & __fmt ) | ( ios_base :: hex | ios_base :: showbase ) );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( const void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      __s = _M_insert_int ( __s, __io, __fill,
     reinterpret_cast < _UIntPtrType > ( __v ) );
      __io . flags ( __flags );
      return __s;
    }
# 1174 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _Traits >
    void
    __pad < _CharT, _Traits > :: _S_pad ( ios_base & __io, _CharT __fill,
       _CharT * __news, const _CharT * __olds,
       streamsize __newlen, streamsize __oldlen )
    {
      const size_t __plen = static_cast < size_t > ( __newlen - __oldlen );
      const ios_base :: fmtflags __adjust = __io . flags ( ) & ios_base :: adjustfield;


      if ( __adjust == ios_base :: left )
 {
   _Traits :: copy ( __news, __olds, __oldlen );
   _Traits :: assign ( __news + __oldlen, __plen, __fill );
   return;
 }

      size_t __mod = 0;
      if ( __adjust == ios_base :: internal )
 {



          const locale & __loc = __io . _M_getloc ( );
   const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

   if ( __ctype . widen ( '-' ) == __olds [ 0 ]
       || __ctype . widen ( '+' ) == __olds [ 0 ] )
     {
       __news [ 0 ] = __olds [ 0 ];
       __mod = 1;
       ++ __news;
     }
   else if ( __ctype . widen ( '0' ) == __olds [ 0 ]
     && __oldlen > 1
     && ( __ctype . widen ( 'x' ) == __olds [ 1 ]
         || __ctype . widen ( 'X' ) == __olds [ 1 ] ) )
     {
       __news [ 0 ] = __olds [ 0 ];
       __news [ 1 ] = __olds [ 1 ];
       __mod = 2;
       __news += 2;
     }

 }
      _Traits :: assign ( __news, __plen, __fill );
      _Traits :: copy ( __news + __plen, __olds + __mod, __oldlen - __mod );
    }
# 1223 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last )
    {
      size_t __idx = 0;
      size_t __ctr = 0;

      while ( __last - __first > __gbeg [ __idx ]
      && static_cast < signed char > ( __gbeg [ __idx ] ) > 0
      && __gbeg [ __idx ] != __gnu_cxx :: __numeric_traits < char > :: __max )
 {
   __last -= __gbeg [ __idx ];
   __idx < __gsize - 1 ? ++ __idx : ++ __ctr;
 }

      while ( __first != __last )
 * __s ++ = * __first ++;

      while ( __ctr -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      while ( __idx -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      return __s;
    }
# 1264 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< char> ;
# 1265 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< char> ;
# 1266 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1267 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1270 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1274 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< char> &use_facet< numpunct< char> > (const locale &);
# 1278 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1282 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1286 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1290 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< char> > (const locale &) throw();
# 1294 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1298 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1303 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< wchar_t> ;
# 1304 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< wchar_t> ;
# 1305 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1306 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1309 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1313 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< wchar_t> &use_facet< numpunct< wchar_t> > (const locale &);
# 1317 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1321 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1325 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1329 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< wchar_t> > (const locale &) throw();
# 1333 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1337 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1343 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
}
# 42 "/usr/include/c++/4.4/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _Facet >
    inline const _Facet &
    __check_facet ( const _Facet * __f )
    {
      if ( ! __f )
 __throw_bad_cast ( );
      return * __f;
    }
# 61 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _CharT, typename _Traits >
    class basic_ios : public ios_base
    {
    public :






      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;






      typedef ctype < _CharT > __ctype_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
           __num_put_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
           __num_get_type;



    protected :
      basic_ostream < _CharT, _Traits > * _M_tie;
      mutable char_type _M_fill;
      mutable bool _M_fill_init;
      basic_streambuf < _CharT, _Traits > * _M_streambuf;


      const __ctype_type * _M_ctype;

      const __num_put_type * _M_num_put;

      const __num_get_type * _M_num_get;

    public :







      operator void * ( ) const
      { return this -> fail ( ) ? 0 : const_cast < basic_ios * > ( this ); }

      bool
      operator ! ( ) const
      { return this -> fail ( ); }

      iostate
      rdstate ( ) const
      { return _M_streambuf_state; }

      void
      clear ( iostate __state = goodbit );







      void
      setstate ( iostate __state )
      { this -> clear ( this -> rdstate ( ) | __state ); }




      void
      _M_setstate ( iostate __state )
      {


 _M_streambuf_state |= __state;
 if ( this -> exceptions ( ) & __state )
   throw;
      }







      bool
      good ( ) const
      { return this -> rdstate ( ) == 0; }







      bool
      eof ( ) const
      { return ( this -> rdstate ( ) & eofbit ) != 0; }

      bool
      fail ( ) const
      { return ( this -> rdstate ( ) & ( badbit | failbit ) ) != 0; }







      bool
      bad ( ) const
      { return ( this -> rdstate ( ) & badbit ) != 0; }

      iostate
      exceptions ( ) const
      { return _M_exception; }

      void
      exceptions ( iostate __except )
      {
        _M_exception = __except;
        this -> clear ( _M_streambuf_state );
      }







      explicit
      basic_ios ( basic_streambuf < _CharT, _Traits > * __sb )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( ), _M_fill_init ( false ), _M_streambuf ( 0 ),
 _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { this -> init ( __sb ); }







      virtual
      ~ basic_ios ( ) { }

      basic_ostream < _CharT, _Traits > *
      tie ( ) const
      { return _M_tie; }

      basic_ostream < _CharT, _Traits > *
      tie ( basic_ostream < _CharT, _Traits > * __tiestr )
      {
        basic_ostream < _CharT, _Traits > * __old = _M_tie;
        _M_tie = __tiestr;
        return __old;
      }







      basic_streambuf < _CharT, _Traits > *
      rdbuf ( ) const
      { return _M_streambuf; }

      basic_streambuf < _CharT, _Traits > *
      rdbuf ( basic_streambuf < _CharT, _Traits > * __sb );

      basic_ios &
      copyfmt ( const basic_ios & __rhs );







      char_type
      fill ( ) const
      {
 if ( ! _M_fill_init )
   {
     _M_fill = this -> widen ( ' ' );
     _M_fill_init = true;
   }
 return _M_fill;
      }

      char_type
      fill ( char_type __ch )
      {
 char_type __old = this -> fill ( );
 _M_fill = __ch;
 return __old;
      }

      locale
      imbue ( const locale & __loc );

      char
      narrow ( char_type __c, char __dfault ) const
      { return __check_facet ( _M_ctype ) . narrow ( __c, __dfault ); }

      char_type
      widen ( char __c ) const
      { return __check_facet ( _M_ctype ) . widen ( __c ); }

    protected :







      basic_ios ( )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( char_type ( ) ), _M_fill_init ( false ),
 _M_streambuf ( 0 ), _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { }







      void
      init ( basic_streambuf < _CharT, _Traits > * __sb );

      void
      _M_cache_locale ( const locale & __loc );
    };
# 468 "/usr/include/c++/4.4/bits/basic_ios.h" 3
}
# 36 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 38 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: clear ( iostate __state )
    {
      if ( this -> rdbuf ( ) )
 _M_streambuf_state = __state;
      else
   _M_streambuf_state = __state | badbit;
      if ( this -> exceptions ( ) & this -> rdstate ( ) )
 __throw_ios_failure ( ( "basic_ios::clear" ) );
    }
# 50 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_streambuf < _CharT, _Traits > *
    basic_ios < _CharT, _Traits > :: rdbuf ( basic_streambuf < _CharT, _Traits > * __sb )
    {
      basic_streambuf < _CharT, _Traits > * __old = _M_streambuf;
      _M_streambuf = __sb;
      this -> clear ( );
      return __old;
    }
# 60 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ios < _CharT, _Traits > &
    basic_ios < _CharT, _Traits > :: copyfmt ( const basic_ios & __rhs )
    {


      if ( this != & __rhs )
 {




   _Words * __words = ( __rhs . _M_word_size <= _S_local_word_size ) ?
                      _M_local_word : new _Words [ __rhs . _M_word_size ];


   _Callback_list * __cb = __rhs . _M_callbacks;
   if ( __cb )
     __cb -> _M_add_reference ( );
   _M_call_callbacks ( erase_event );
   if ( _M_word != _M_local_word )
     {
       delete [ ] _M_word;
       _M_word = 0;
     }
   _M_dispose_callbacks ( );


   _M_callbacks = __cb;
   for ( int __i = 0; __i < __rhs . _M_word_size; ++ __i )
     __words [ __i ] = __rhs . _M_word [ __i ];
   _M_word = __words;
   _M_word_size = __rhs . _M_word_size;

   this -> flags ( __rhs . flags ( ) );
   this -> width ( __rhs . width ( ) );
   this -> precision ( __rhs . precision ( ) );
   this -> tie ( __rhs . tie ( ) );
   this -> fill ( __rhs . fill ( ) );
   _M_ios_locale = __rhs . getloc ( );
   _M_cache_locale ( _M_ios_locale );

   _M_call_callbacks ( copyfmt_event );


   this -> exceptions ( __rhs . exceptions ( ) );
 }
      return * this;
    }
# 111 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    locale
    basic_ios < _CharT, _Traits > :: imbue ( const locale & __loc )
    {
      locale __old ( this -> getloc ( ) );
      ios_base :: imbue ( __loc );
      _M_cache_locale ( __loc );
      if ( this -> rdbuf ( ) != 0 )
 this -> rdbuf ( ) -> pubimbue ( __loc );
      return __old;
    }
# 123 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: init ( basic_streambuf < _CharT, _Traits > * __sb )
    {

      ios_base :: _M_init ( );


      _M_cache_locale ( _M_ios_locale );

      _M_fill = _CharT ( );
      _M_fill_init = false;

      _M_tie = 0;
      _M_exception = goodbit;
      _M_streambuf = __sb;
      _M_streambuf_state = __sb ? goodbit : badbit;
    }
# 154 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: _M_cache_locale ( const locale & __loc )
    {
      if ( __builtin_expect ( has_facet < __ctype_type > ( __loc ), true ) )
 _M_ctype = & use_facet < __ctype_type > ( __loc );
      else
 _M_ctype = 0;

      if ( __builtin_expect ( has_facet < __num_put_type > ( __loc ), true ) )
 _M_num_put = & use_facet < __num_put_type > ( __loc );
      else
 _M_num_put = 0;

      if ( __builtin_expect ( has_facet < __num_get_type > ( __loc ), true ) )
 _M_num_get = & use_facet < __num_get_type > ( __loc );
      else
 _M_num_get = 0;
    }
# 178 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 185 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
}
# 43 "/usr/include/c++/4.4/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
             __num_put_type;
      typedef ctype < _CharT > __ctype_type;

      explicit
      basic_ostream ( __streambuf_type * __sb )
      { this -> init ( __sb ); }






      virtual
      ~ basic_ostream ( ) { }


      class sentry;
      friend class sentry;

      __ostream_type &
      operator << ( __ostream_type & ( * __pf ) ( __ostream_type & ) )
      {



 return __pf ( * this );
      }

      __ostream_type &
      operator << ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( ios_base & ( * __pf ) ( ios_base & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( bool __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( short __n );

      __ostream_type &
      operator << ( unsigned short __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }

      __ostream_type &
      operator << ( int __n );

      __ostream_type &
      operator << ( unsigned int __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }


      __ostream_type &
      operator << ( long long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long long __n )
      { return _M_insert ( __n ); }


      __ostream_type &
      operator << ( double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( float __f )
      {


 return _M_insert ( static_cast < double > ( __f ) );
      }

      __ostream_type &
      operator << ( long double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( const void * __p )
      { return _M_insert ( __p ); }

      __ostream_type &
      operator << ( __streambuf_type * __sb );

      __ostream_type &
      put ( char_type __c );


      void
      _M_write ( const char_type * __s, streamsize __n )
      {
 const streamsize __put = this -> rdbuf ( ) -> sputn ( __s, __n );
 if ( __put != __n )
   this -> setstate ( ios_base :: badbit );
      }

      __ostream_type &
      write ( const char_type * __s, streamsize __n );

      __ostream_type &
      flush ( );

      pos_type
      tellp ( );

      __ostream_type &
      seekp ( pos_type );

       __ostream_type &
      seekp ( off_type, ios_base :: seekdir );

    protected :
      basic_ostream ( )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __ostream_type &
        _M_insert ( _ValueT __v );
    };
# 376 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream < _CharT, _Traits > :: sentry
    {

      bool _M_ok;
      basic_ostream < _CharT, _Traits > & _M_os;

    public :

      explicit
      sentry ( basic_ostream < _CharT, _Traits > & __os );

      ~ sentry ( )
      {

 if ( bool ( _M_os . flags ( ) & ios_base :: unitbuf ) && ! uncaught_exception ( ) )
   {

     if ( _M_os . rdbuf ( ) && _M_os . rdbuf ( ) -> pubsync ( ) == - 1 )
       _M_os . setstate ( ios_base :: badbit );
   }
      }

      operator bool ( ) const
      { return _M_ok; }
    };
# 444 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, _CharT __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 449 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, char __c )
    { return ( __out << __out . widen ( __c ) ); }
# 455 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, char __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 461 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, signed char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 466 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, unsigned char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 486 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const _CharT * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 498 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s );
# 503 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 516 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const signed char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 521 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const unsigned char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 536 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    endl ( basic_ostream < _CharT, _Traits > & __os )
    { return flush ( __os . put ( __os . widen ( '\n' ) ) ); }
# 547 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    ends ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . put ( _CharT ( ) ); }
# 557 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    flush ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . flush ( ); }
# 562 "/usr/include/c++/4.4/ostream" 3
}
# 43 "/usr/include/c++/4.4/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > :: sentry ::
    sentry ( basic_ostream < _CharT, _Traits > & __os )
    : _M_ok ( false ), _M_os ( __os )
    {

      if ( __os . tie ( ) && __os . good ( ) )
 __os . tie ( ) -> flush ( );

      if ( __os . good ( ) )
 _M_ok = true;
      else
 __os . setstate ( ios_base :: failbit );
    }
# 60 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_ostream < _CharT, _Traits > &
      basic_ostream < _CharT, _Traits > ::
      _M_insert ( _ValueT __v )
      {
 sentry __cerb ( * this );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_put_type & __np = __check_facet ( this -> _M_num_put );
  if ( __np . put ( * this, * this, this -> fill ( ), __v ) . failed ( ) )
    __err |= ios_base :: badbit;
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 89 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( short __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned short > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 103 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( int __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned int > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 117 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( __streambuf_type * __sbin )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this );
      if ( __cerb && __sbin )
 {
   try
     {
       if ( ! __copy_streambufs ( __sbin, this -> rdbuf ( ) ) )
  __err |= ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbin )
 __err |= ios_base :: badbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 146 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    put ( char_type __c )
    {






      sentry __cerb ( * this );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __put = this -> rdbuf ( ) -> sputc ( __c );
       if ( traits_type :: eq_int_type ( __put, traits_type :: eof ( ) ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 180 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    write ( const _CharT * __s, streamsize __n )
    {







      sentry __cerb ( * this );
      if ( __cerb )
 {
   try
     { _M_write ( __s, __n ); }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      return * this;
    }
# 208 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    flush ( )
    {



      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( this -> rdbuf ( ) && this -> rdbuf ( ) -> pubsync ( ) == - 1 )
     __err |= ios_base :: badbit;
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 234 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_ostream < _CharT, _Traits > :: pos_type
    basic_ostream < _CharT, _Traits > ::
    tellp ( )
    {
      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur, ios_base :: out );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 255 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( pos_type __pos )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 287 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( off_type __off, ios_base :: seekdir __dir )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 319 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 {


   const size_t __clen = char_traits < char > :: length ( __s );
   try
     {
       struct __ptr_guard
       {
  _CharT * __p;
  __ptr_guard ( _CharT * __ip ) : __p ( __ip ) { }
  ~ __ptr_guard ( ) { delete [ ] __p; }
  _CharT * __get ( ) { return __p; }
       } __pg ( new _CharT [ __clen ] );

       _CharT * __ws = __pg . __get ( );
       for ( size_t __i = 0; __i < __clen; ++ __i )
  __ws [ __i ] = __out . widen ( __s [ __i ] );
       __ostream_insert ( __out, __ws, __clen );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( ios_base :: badbit ); }
 }
      return __out;
    }
# 360 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 361 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & );
# 362 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & );
# 363 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & );
# 364 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , char );
# 365 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , unsigned char );
# 366 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , signed char );
# 367 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const char * );
# 368 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const unsigned char * );
# 369 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const signed char * );
# 371 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long );
# 372 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long );
# 373 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool );
# 375 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long );
# 376 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long );
# 378 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double );
# 379 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double );
# 380 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * );
# 383 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 384 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 385 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 386 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 387 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , wchar_t );
# 388 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , char );
# 389 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * );
# 390 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const char * );
# 392 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long );
# 393 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long );
# 394 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool );
# 396 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long );
# 397 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long );
# 399 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double );
# 400 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double );
# 401 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * );
# 405 "/usr/include/c++/4.4/bits/ostream.tcc" 3
}
# 43 "/usr/include/c++/4.4/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
        __num_get_type;
      typedef ctype < _CharT > __ctype_type;

    protected :





      streamsize _M_gcount;

    public :

      explicit
      basic_istream ( __streambuf_type * __sb )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( __sb ); }






      virtual
      ~ basic_istream ( )
      { _M_gcount = streamsize ( 0 ); }


      class sentry;
      friend class sentry;

      __istream_type &
      operator >> ( __istream_type & ( * __pf ) ( __istream_type & ) )
      { return __pf ( * this ); }

      __istream_type &
      operator >> ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( ios_base & ( * __pf ) ( ios_base & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( bool & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( short & __n );

      __istream_type &
      operator >> ( unsigned short & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( int & __n );

      __istream_type &
      operator >> ( unsigned int & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( long long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( float & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( long double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( void * & __p )
      { return _M_extract ( __p ); }

      __istream_type &
      operator >> ( __streambuf_type * __sb );

      streamsize
      gcount ( ) const
      { return _M_gcount; }

      int_type
      get ( );

      __istream_type &
      get ( char_type & __c );

      __istream_type &
      get ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      get ( char_type * __s, streamsize __n )
      { return this -> get ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      get ( __streambuf_type & __sb, char_type __delim );

      __istream_type &
      get ( __streambuf_type & __sb )
      { return this -> get ( __sb, this -> widen ( '\n' ) ); }

      __istream_type &
      getline ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      getline ( char_type * __s, streamsize __n )
      { return this -> getline ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      ignore ( );

      __istream_type &
      ignore ( streamsize __n );

      __istream_type &
      ignore ( streamsize __n, int_type __delim );

      int_type
      peek ( );

      __istream_type &
      read ( char_type * __s, streamsize __n );

      streamsize
      readsome ( char_type * __s, streamsize __n );

      __istream_type &
      putback ( char_type __c );

      __istream_type &
      unget ( );

      int
      sync ( );

      pos_type
      tellg ( );

      __istream_type &
      seekg ( pos_type );

      __istream_type &
      seekg ( off_type, ios_base :: seekdir );


    protected :
      basic_istream ( )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __istream_type &
        _M_extract ( _ValueT & __v );
    };
# 594 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * , streamsize , char_type );
# 599 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize );
# 604 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize , int_type );
# 610 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * , streamsize , char_type );
# 615 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize );
# 620 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize , int_type );
# 631 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream < _CharT, _Traits > :: sentry
    {
    public :

      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: __ctype_type __ctype_type;
      typedef typename _Traits :: int_type __int_type;

      explicit
      sentry ( basic_istream < _CharT, _Traits > & __is, bool __noskipws = false );

      operator bool ( ) const
      { return _M_ok; }

    private :
      bool _M_ok;
    };
# 693 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c );
# 697 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 702 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 734 "/usr/include/c++/4.4/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & , _CharT * );
# 741 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char * );
# 743 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 748 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 762 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_iostream
    : public basic_istream < _CharT, _Traits >,
      public basic_ostream < _CharT, _Traits >
    {
    public :



      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;







      explicit
      basic_iostream ( basic_streambuf < _CharT, _Traits > * __sb )
      : __istream_type ( __sb ), __ostream_type ( __sb ) { }




      virtual
      ~ basic_iostream ( ) { }

    protected :
      basic_iostream ( )
      : __istream_type ( ), __ostream_type ( ) { }
    };
# 823 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __is );
# 827 "/usr/include/c++/4.4/istream" 3
}
# 43 "/usr/include/c++/4.4/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > :: sentry ::
    sentry ( basic_istream < _CharT, _Traits > & __in, bool __noskip ) : _M_ok ( false )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      if ( __in . good ( ) )
 {
   if ( __in . tie ( ) )
     __in . tie ( ) -> flush ( );
   if ( ! __noskip && bool ( __in . flags ( ) & ios_base :: skipws ) )
     {
       const __int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       __int_type __c = __sb -> sgetc ( );

       const __ctype_type & __ct = __check_facet ( __in . _M_ctype );
       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && __ct . is ( ctype_base :: space,
    traits_type :: to_char_type ( __c ) ) )
  __c = __sb -> snextc ( );




       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
 }

      if ( __in . good ( ) && __err == ios_base :: goodbit )
 _M_ok = true;
      else
 {
   __err |= ios_base :: failbit;
   __in . setstate ( __err );
 }
    }
# 83 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_istream < _CharT, _Traits > &
      basic_istream < _CharT, _Traits > ::
      _M_extract ( _ValueT & __v )
      {
 sentry __cerb ( * this, false );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_get_type & __ng = __check_facet ( this -> _M_num_get );
  __ng . get ( * this, 0, * this, __err, __v );
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 111 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( short & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < short > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < short > :: __max )
     __n = short ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 131 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( int & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < int > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < int > :: __max )
     __n = int ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 151 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( __streambuf_type * __sbout )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, false );
      if ( __cerb && __sbout )
 {
   try
     {
       bool __ineof;
       if ( ! __copy_streambufs_eof ( this -> rdbuf ( ), __sbout, __ineof ) )
  __err |= ios_base :: failbit;
       if ( __ineof )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: failbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbout )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 183 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    get ( void )
    {
      const int_type __eof = traits_type :: eof ( );
      int_type __c = __eof;
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       __c = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __c, __eof ) )
  _M_gcount = 1;
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return __c;
    }
# 219 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type & __c )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __cb = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __cb, traits_type :: eof ( ) ) )
  {
    _M_gcount = 1;
    __c = traits_type :: to_char_type ( __cb );
  }
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 256 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( _M_gcount + 1 < __n
       && ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim ) )
  {
    * __s ++ = traits_type :: to_char_type ( __c );
    ++ _M_gcount;
    __c = __sb -> snextc ( );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 303 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( __streambuf_type & __sb, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __this_sb = this -> rdbuf ( );
       int_type __c = __this_sb -> sgetc ( );
       char_type __c2 = traits_type :: to_char_type ( __c );

       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim )
       && ! traits_type :: eq_int_type ( __sb . sputc ( __c2 ), __eof ) )
  {
    ++ _M_gcount;
    __c = __this_sb -> snextc ( );
    __c2 = traits_type :: to_char_type ( __c );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 347 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    getline ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
        {
          try
            {
              const int_type __idelim = traits_type :: to_int_type ( __delim );
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

              while ( _M_gcount + 1 < __n
                     && ! traits_type :: eq_int_type ( __c, __eof )
                     && ! traits_type :: eq_int_type ( __c, __idelim ) )
                {
                  * __s ++ = traits_type :: to_char_type ( __c );
                  __c = __sb -> snextc ( );
                  ++ _M_gcount;
                }
              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
              else
                {
                  if ( traits_type :: eq_int_type ( __c, __idelim ) )
                    {
                      __sb -> sbumpc ( );
                      ++ _M_gcount;
                    }
                  else
                    __err |= ios_base :: failbit;
                }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
        }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
        __err |= ios_base :: failbit;
      if ( __err )
        this -> setstate ( __err );
      return * this;
    }
# 407 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( void )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );

       if ( traits_type :: eq_int_type ( __sb -> sbumpc ( ), __eof ) )
  __err |= ios_base :: eofbit;
       else
  _M_gcount = 1;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 440 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 502 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n, int_type __delim )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );


       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof )
    && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof )
        && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
       else if ( traits_type :: eq_int_type ( __c, __delim ) )
  {
    if ( _M_gcount
        < __gnu_cxx :: __numeric_traits < streamsize > :: __max )
      ++ _M_gcount;
    __sb -> sbumpc ( );
  }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 567 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    peek ( void )
    {
      int_type __c = traits_type :: eof ( );
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __c = this -> rdbuf ( ) -> sgetc ( );
       if ( traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __c;
    }
# 597 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    read ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, __n );
       if ( _M_gcount != __n )
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 626 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_istream < _CharT, _Traits > ::
    readsome ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {

       const streamsize __num = this -> rdbuf ( ) -> in_avail ( );
       if ( __num > 0 )
  _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, std :: min ( __num, __n ) );
       else if ( __num == - 1 )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return _M_gcount;
    }
# 658 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    putback ( char_type __c )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sputbackc ( __c ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 691 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    unget ( void )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sungetc ( ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 724 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_istream < _CharT, _Traits > ::
    sync ( void )
    {


      int __ret = - 1;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( __sb )
  {
    if ( __sb -> pubsync ( ) == - 1 )
      __err |= ios_base :: badbit;
    else
      __ret = 0;
  }
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __ret;
    }
# 760 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: pos_type
    basic_istream < _CharT, _Traits > ::
    tellg ( void )
    {


      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur,
           ios_base :: in );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 784 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( pos_type __pos )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 817 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( off_type __off, ios_base :: seekdir __dir )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 851 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: int_type __int_type;

      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const __int_type __cb = __in . rdbuf ( ) -> sbumpc ( );
       if ( ! _Traits :: eq_int_type ( __cb, _Traits :: eof ( ) ) )
  __c = _Traits :: to_char_type ( __cb );
       else
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     __in . setstate ( __err );
 }
      return __in;
    }
# 883 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT * __s )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename _Traits :: int_type int_type;
      typedef _CharT char_type;
      typedef ctype < _CharT > __ctype_type;

      streamsize __extracted = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       streamsize __num = __in . width ( );
       if ( __num <= 0 )
  __num = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );

       const int_type __eof = _Traits :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( __extracted < __num - 1
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    * __s ++ = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __sb -> snextc ( );
  }
       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;



       * __s = char_type ( );
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! __extracted )
 __err |= ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 944 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __in )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename __istream_type :: int_type __int_type;
      typedef ctype < _CharT > __ctype_type;

      const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
      const __int_type __eof = _Traits :: eof ( );
      __streambuf_type * __sb = __in . rdbuf ( );
      __int_type __c = __sb -> sgetc ( );

      while ( ! _Traits :: eq_int_type ( __c, __eof )
      && __ct . is ( ctype_base :: space, _Traits :: to_char_type ( __c ) ) )
 __c = __sb -> snextc ( );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __in . setstate ( ios_base :: eofbit );
      return __in;
    }
# 971 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 972 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & );
# 973 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char & );
# 974 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 975 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char & );
# 976 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char & );
# 977 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char * );
# 978 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char * );
# 980 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & );
# 981 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & );
# 982 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & );
# 983 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & );
# 984 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & );
# 986 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & );
# 987 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & );
# 989 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & );
# 990 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & );
# 991 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & );
# 992 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& );
# 994 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 997 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 998 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & );
# 999 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , wchar_t & );
# 1000 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1002 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & );
# 1003 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & );
# 1004 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & );
# 1005 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & );
# 1006 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & );
# 1008 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & );
# 1009 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & );
# 1011 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & );
# 1012 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & );
# 1013 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & );
# 1014 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& );
# 1016 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1020 "/usr/include/c++/4.4/bits/istream.tcc" 3
}
# 43 "/usr/include/c++/4.4/iostream" 3
namespace std __attribute((__visibility__("default"))) {
# 58 "/usr/include/c++/4.4/iostream" 3
extern istream cin;
# 59 "/usr/include/c++/4.4/iostream" 3
extern ostream cout;
# 60 "/usr/include/c++/4.4/iostream" 3
extern ostream cerr;
# 61 "/usr/include/c++/4.4/iostream" 3
extern ostream clog;
# 64 "/usr/include/c++/4.4/iostream" 3
extern wistream wcin;
# 65 "/usr/include/c++/4.4/iostream" 3
extern wostream wcout;
# 66 "/usr/include/c++/4.4/iostream" 3
extern wostream wcerr;
# 67 "/usr/include/c++/4.4/iostream" 3
extern wostream wclog;
# 72 "/usr/include/c++/4.4/iostream" 3
static ios_base::Init __ioinit;
# 74 "/usr/include/c++/4.4/iostream" 3
}
# 56 "cutil.h"
enum CUTBoolean {
# 58 "cutil.h"
CUTFalse,
# 59 "cutil.h"
CUTTrue
# 60 "cutil.h"
};
# 68 "cutil.h"
void cutFree(void * );
# 86 "cutil.h"
void cutCheckBankAccess(unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , const char * , const int , const char * , const int );
# 99 "cutil.h"
char *cutFindFilePath(const char * , const char * );
# 114 "cutil.h"
CUTBoolean cutReadFilef(const char * , float ** , unsigned * , bool = (false));
# 130 "cutil.h"
CUTBoolean cutReadFiled(const char * , double ** , unsigned * , bool = (false));
# 146 "cutil.h"
CUTBoolean cutReadFilei(const char * , int ** , unsigned * , bool = (false));
# 161 "cutil.h"
CUTBoolean cutReadFileui(const char * , unsigned ** , unsigned * , bool = (false));
# 177 "cutil.h"
CUTBoolean cutReadFileb(const char * , char ** , unsigned * , bool = (false));
# 193 "cutil.h"
CUTBoolean cutReadFileub(const char * , unsigned char ** , unsigned * , bool = (false));
# 207 "cutil.h"
CUTBoolean cutWriteFilef(const char * , const float * , unsigned , const float , bool = (false));
# 221 "cutil.h"
CUTBoolean cutWriteFiled(const char * , const float * , unsigned , const double , bool = (false));
# 233 "cutil.h"
CUTBoolean cutWriteFilei(const char * , const int * , unsigned , bool = (false));
# 245 "cutil.h"
CUTBoolean cutWriteFileui(const char * , const unsigned * , unsigned , bool = (false));
# 257 "cutil.h"
CUTBoolean cutWriteFileb(const char * , const char * , unsigned , bool = (false));
# 269 "cutil.h"
CUTBoolean cutWriteFileub(const char * , const unsigned char * , unsigned , bool = (false));
# 285 "cutil.h"
CUTBoolean cutLoadPGMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 298 "cutil.h"
CUTBoolean cutLoadPPMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 312 "cutil.h"
CUTBoolean cutLoadPPM4ub(const char * , unsigned char ** , unsigned * , unsigned * );
# 328 "cutil.h"
CUTBoolean cutLoadPGMi(const char * , unsigned ** , unsigned * , unsigned * );
# 344 "cutil.h"
CUTBoolean cutLoadPGMs(const char * , unsigned short ** , unsigned * , unsigned * );
# 359 "cutil.h"
CUTBoolean cutLoadPGMf(const char * , float ** , unsigned * , unsigned * );
# 371 "cutil.h"
CUTBoolean cutSavePGMub(const char * , unsigned char * , unsigned , unsigned );
# 383 "cutil.h"
CUTBoolean cutSavePPMub(const char * , unsigned char * , unsigned , unsigned );
# 396 "cutil.h"
CUTBoolean cutSavePPM4ub(const char * , unsigned char * , unsigned , unsigned );
# 408 "cutil.h"
CUTBoolean cutSavePGMi(const char * , unsigned * , unsigned , unsigned );
# 420 "cutil.h"
CUTBoolean cutSavePGMs(const char * , unsigned short * , unsigned , unsigned );
# 432 "cutil.h"
CUTBoolean cutSavePGMf(const char * , float * , unsigned , unsigned );
# 453 "cutil.h"
CUTBoolean cutCheckCmdLineFlag(const int , const char ** , const char * );
# 467 "cutil.h"
CUTBoolean cutGetCmdLineArgumenti(const int , const char ** , const char * , int * );
# 481 "cutil.h"
CUTBoolean cutGetCmdLineArgumentf(const int , const char ** , const char * , float * );
# 495 "cutil.h"
CUTBoolean cutGetCmdLineArgumentstr(const int , const char ** , const char * , char ** );
# 510 "cutil.h"
CUTBoolean cutGetCmdLineArgumentListstr(const int , const char ** , const char * , char ** , unsigned * );
# 524 "cutil.h"
CUTBoolean cutCheckCondition(int , const char * , const int );
# 536 "cutil.h"
CUTBoolean cutComparef(const float * , const float * , const unsigned );
# 549 "cutil.h"
CUTBoolean cutComparei(const int * , const int * , const unsigned );
# 563 "cutil.h"
CUTBoolean cutCompareuit(const unsigned * , const unsigned * , const unsigned , const float , const float );
# 576 "cutil.h"
CUTBoolean cutCompareub(const unsigned char * , const unsigned char * , const unsigned );
# 591 "cutil.h"
CUTBoolean cutCompareubt(const unsigned char * , const unsigned char * , const unsigned , const float , const float );
# 605 "cutil.h"
CUTBoolean cutCompareube(const unsigned char * , const unsigned char * , const unsigned , const float );
# 619 "cutil.h"
CUTBoolean cutComparefe(const float * , const float * , const unsigned , const float );
# 634 "cutil.h"
CUTBoolean cutComparefet(const float * , const float * , const unsigned , const float , const float );
# 649 "cutil.h"
CUTBoolean cutCompareL2fe(const float * , const float * , const unsigned , const float );
# 664 "cutil.h"
CUTBoolean cutComparePPM(const char * , const char * , const float , const float , bool = (false));
# 677 "cutil.h"
CUTBoolean cutCreateTimer(unsigned * );
# 686 "cutil.h"
CUTBoolean cutDeleteTimer(unsigned );
# 694 "cutil.h"
CUTBoolean cutStartTimer(const unsigned );
# 702 "cutil.h"
CUTBoolean cutStopTimer(const unsigned );
# 710 "cutil.h"
CUTBoolean cutResetTimer(const unsigned );
# 719 "cutil.h"
float cutGetTimerValue(const unsigned );
# 730 "cutil.h"
float cutGetAverageTimerValue(const unsigned );
# 11 "cuda_helpers.h"
bool InitCUDA()
# 12 "cuda_helpers.h"
{
# 13 "cuda_helpers.h"
int count = 0;
# 14 "cuda_helpers.h"
int i = 0;
# 16 "cuda_helpers.h"
cudaGetDeviceCount(&count);
# 17 "cuda_helpers.h"
if (count == 0) {
# 18 "cuda_helpers.h"
fprintf(stderr, "There is no device.\n");
# 19 "cuda_helpers.h"
return false;
# 20 "cuda_helpers.h"
}
# 22 "cuda_helpers.h"
for (i = 0; i < count; i++) {
# 23 "cuda_helpers.h"
cudaDeviceProp prop;
# 24 "cuda_helpers.h"
if ((cudaGetDeviceProperties(&prop, i)) == (cudaSuccess)) {
# 25 "cuda_helpers.h"
if ((prop.major) >= 1) {
# 26 "cuda_helpers.h"
break;
# 27 "cuda_helpers.h"
}
# 28 "cuda_helpers.h"
}
# 29 "cuda_helpers.h"
}
# 30 "cuda_helpers.h"
if (i == count) {
# 31 "cuda_helpers.h"
fprintf(stderr, "There is no device supporting CUDA.\n");
# 32 "cuda_helpers.h"
return false;
# 33 "cuda_helpers.h"
}
# 34 "cuda_helpers.h"
cudaSetDevice(i);
# 36 "cuda_helpers.h"
printf("CUDA initialized.\n");
# 37 "cuda_helpers.h"
return true;
# 38 "cuda_helpers.h"
}
# 4 "parameters.h"
extern "C" { typedef unsigned uint; }
# 5 "parameters.h"
typedef unsigned char uint8;
# 7 "print_helpers.h"
inline void printdbg_data_bin(const char *filename, unsigned *data, unsigned num_ints) {
# 8 "print_helpers.h"
FILE *dump = fopen((const char *)filename, "wt");
# 9 "print_helpers.h"
for (unsigned i = (0); i < num_ints; i++) {
# 10 "print_helpers.h"
unsigned mask = 2147483648U;
# 11 "print_helpers.h"
for (unsigned j = (0); j < (32); j++) {
# 12 "print_helpers.h"
if ((data[i]) & mask) { fprintf(dump, "1"); } else {
# 13 "print_helpers.h"
fprintf(dump, "0"); }
# 14 "print_helpers.h"
mask = (mask >> 1);
# 15 "print_helpers.h"
}
# 16 "print_helpers.h"
fprintf(dump, "\n");
# 17 "print_helpers.h"
}
# 18 "print_helpers.h"
fclose(dump);
# 19 "print_helpers.h"
}
# 20 "print_helpers.h"
inline void printdbg_data_int(const char *filename, unsigned *data, unsigned num_ints) {
# 21 "print_helpers.h"
FILE *dump = fopen((const char *)filename, "wt");
# 22 "print_helpers.h"
for (unsigned i = (0); i < num_ints; i++) {
# 23 "print_helpers.h"
fprintf(dump, "%d: %d\n", i, data[i]);
# 24 "print_helpers.h"
}
# 25 "print_helpers.h"
fclose(dump);
# 26 "print_helpers.h"
}
# 29 "print_helpers.h"
inline void printdbg_gpu_data_detailed(FILE *gpudump, unsigned *cw32, unsigned *cw32len, unsigned *cw32idx, unsigned num_elements) {
# 30 "print_helpers.h"
for (unsigned i = (0); i < num_elements; i++) {
# 31 "print_helpers.h"
fprintf(gpudump, "bp: %d, kc: %d, startbit: %d, cwlen: %d, cw:\t\t", cw32idx[i], (cw32idx[i]) / (32), (cw32idx[i]) % (32), cw32len[i]);
# 33 "print_helpers.h"
unsigned mask = 2147483648U;
# 34 "print_helpers.h"
mask = (mask >> ((32) - (cw32len[i])));
# 35 "print_helpers.h"
for (unsigned j = (0); j < (cw32len[i]); j++) {
# 36 "print_helpers.h"
if ((cw32[i]) & mask) { fprintf(gpudump, "1"); } else {
# 37 "print_helpers.h"
fprintf(gpudump, "0"); }
# 38 "print_helpers.h"
mask = (mask >> 1);
# 39 "print_helpers.h"
}
# 40 "print_helpers.h"
fprintf(gpudump, "\n");
# 41 "print_helpers.h"
}
# 42 "print_helpers.h"
}
# 45 "print_helpers.h"
inline void printdbg_gpu_data_detailed2(const char *filename, unsigned *cw32, unsigned *cw32len, unsigned *cw32idx, unsigned num_elements) {
# 46 "print_helpers.h"
FILE *gpudump = fopen((const char *)filename, "wt");
# 47 "print_helpers.h"
for (unsigned i = (0); i < num_elements; i++) {
# 48 "print_helpers.h"
fprintf(gpudump, "bp: %d, kc: %d, startbit: %d, cwlen: %d, cw:\t\t", cw32idx[i], (cw32idx[i]) / (32), (cw32idx[i]) % (32), cw32len[i]);
# 50 "print_helpers.h"
unsigned mask = 2147483648U;
# 51 "print_helpers.h"
mask = (mask >> ((32) - (cw32len[i])));
# 52 "print_helpers.h"
for (unsigned j = (0); j < (cw32len[i]); j++) {
# 53 "print_helpers.h"
if ((cw32[i]) & mask) { fprintf(gpudump, "1"); } else {
# 54 "print_helpers.h"
fprintf(gpudump, "0"); }
# 55 "print_helpers.h"
mask = (mask >> 1);
# 56 "print_helpers.h"
}
# 57 "print_helpers.h"
fprintf(gpudump, "\n");
# 58 "print_helpers.h"
}
# 59 "print_helpers.h"
fclose(gpudump);
# 60 "print_helpers.h"
}
# 67 "print_helpers.h"
inline void printBits(unsigned char number) {
# 68 "print_helpers.h"
unsigned char mask = (128);
# 69 "print_helpers.h"
for (unsigned j = (0); j < (8); j++) {
# 70 "print_helpers.h"
if (number & mask) { printf("1"); } else {
# 71 "print_helpers.h"
printf("0"); }
# 72 "print_helpers.h"
mask = (mask >> 1);
# 73 "print_helpers.h"
}
# 74 "print_helpers.h"
printf(" ");
# 75 "print_helpers.h"
}
# 76 "print_helpers.h"
inline void print32Bits(unsigned number) {
# 77 "print_helpers.h"
unsigned mask = 2147483648U;
# 78 "print_helpers.h"
for (unsigned j = (0); j < (32); j++) {
# 79 "print_helpers.h"
if (number & mask) { printf("1"); } else {
# 80 "print_helpers.h"
printf("0"); }
# 81 "print_helpers.h"
mask = (mask >> 1);
# 82 "print_helpers.h"
}
# 83 "print_helpers.h"
printf("\n");
# 84 "print_helpers.h"
}
# 85 "print_helpers.h"
inline void print32BitsM(unsigned marker) {
# 86 "print_helpers.h"
for (unsigned j = (0); j < (32); j++) {
# 87 "print_helpers.h"
if (marker == (j + (1))) { printf("|"); } else {
# 88 "print_helpers.h"
printf("."); }
# 89 "print_helpers.h"
}
# 90 "print_helpers.h"
printf("\n");
# 91 "print_helpers.h"
}
# 92 "print_helpers.h"
inline void print_array_char_as_bits(unsigned char *a, unsigned len) {
# 94 "print_helpers.h"
printf(" ========================= Printing vector =======================\n");
# 95 "print_helpers.h"
printf("Total number of elements is %d\n", len);
# 96 "print_helpers.h"
for (unsigned i = (0); i < len; i++) {
# 97 "print_helpers.h"
printf("a[%d]=%d \t", i, a[i]);
# 98 "print_helpers.h"
printBits(a[i]);
# 99 "print_helpers.h"
printf("\n");
# 101 "print_helpers.h"
}
# 102 "print_helpers.h"
printf("\n");
# 103 "print_helpers.h"
printf(" ==================================================================\n");
# 104 "print_helpers.h"
}
# 106 "print_helpers.h"
inline void print_array_ints_as_bits(unsigned *a, unsigned len) {
# 108 "print_helpers.h"
printf(" ========================= Printing vector =======================\n");
# 109 "print_helpers.h"
for (unsigned i = (0); i < len; i++) {
# 110 "print_helpers.h"
print32Bits(a[i]);
# 111 "print_helpers.h"
printf("\n");
# 113 "print_helpers.h"
}
# 114 "print_helpers.h"
printf("\n");
# 115 "print_helpers.h"
printf(" ==================================================================\n");
# 116 "print_helpers.h"
}
# 118 "print_helpers.h"
inline void print_compare_array_ints_as_bits(unsigned *a, unsigned *b, unsigned len) {
# 120 "print_helpers.h"
printf(" ========================= Printing vector =======================\n");
# 121 "print_helpers.h"
for (unsigned i = (0); i < len; i++) {
# 122 "print_helpers.h"
print32Bits(a[i]);
# 123 "print_helpers.h"
print32Bits(b[i]);
# 124 "print_helpers.h"
printf("\n");
# 126 "print_helpers.h"
}
# 127 "print_helpers.h"
printf("\n");
# 128 "print_helpers.h"
printf(" ==================================================================\n");
# 129 "print_helpers.h"
}
# 132 "print_helpers.h"
inline void print_array_in_hex(unsigned *a, unsigned len) {
# 134 "print_helpers.h"
printf(" ========================= Printing vector =======================\n");
# 136 "print_helpers.h"
for (unsigned i = (0); i < len; i++) {
# 137 "print_helpers.h"
printf("%#X\t", a[i]);
# 138 "print_helpers.h"
}
# 140 "print_helpers.h"
printf("\n");
# 141 "print_helpers.h"
printf(" ==================================================================\n");
# 142 "print_helpers.h"
}
# 148 "print_helpers.h"
template< class T> inline void
# 149 "print_helpers.h"
print_array(T *a, unsigned len) {
# 151 "print_helpers.h"
printf(" ========================= Printing vector =======================\n");
# 152 "print_helpers.h"
printf("Total number of elements is %d\n", len);
# 153 "print_helpers.h"
for (unsigned i = (0); i < len; i++) {
# 154 "print_helpers.h"
printf("a[%d]=%d \t", i, a[i]);
# 155 "print_helpers.h"
}
# 157 "print_helpers.h"
printf("\n");
# 158 "print_helpers.h"
printf(" ==================================================================\n");
# 159 "print_helpers.h"
}
# 161 "print_helpers.h"
template< class ST, class CT> inline void
# 162 "print_helpers.h"
print_rled_arrays(ST *rle_symbols, CT *rle_counts, unsigned rle_len) {
# 163 "print_helpers.h"
ST current_symbol;
# 164 "print_helpers.h"
CT current_count;
# 165 "print_helpers.h"
printf(" ========================= Printing RLE vector =======================\n");
# 166 "print_helpers.h"
printf(" Total number of RL Pairs is %d\n", rle_len);
# 167 "print_helpers.h"
for (unsigned k = (0); k < rle_len; k++) {
# 168 "print_helpers.h"
current_symbol = (rle_symbols[k]);
# 169 "print_helpers.h"
current_count = (rle_counts[k]);
# 170 "print_helpers.h"
printf("(%d,%d) ,\t", current_symbol, current_count);
# 172 "print_helpers.h"
}
# 173 "print_helpers.h"
printf("\n");
# 174 "print_helpers.h"
}
# 176 "print_helpers.h"
inline void print_packed_rle_array(unsigned *rle, unsigned rle_len) {
# 177 "print_helpers.h"
unsigned short current_symbol;
# 178 "print_helpers.h"
unsigned short current_count;
# 179 "print_helpers.h"
printf(" ========================= Printing RLE vector =======================\n");
# 180 "print_helpers.h"
printf(" Total number of RL Pairs is %d\n", rle_len);
# 181 "print_helpers.h"
for (unsigned k = (0); k < rle_len; k++) {
# 182 "print_helpers.h"
current_symbol = ((unsigned short)((rle[k]) >> 16));
# 183 "print_helpers.h"
current_count = (((unsigned short)(rle[k])) & 1048575);
# 184 "print_helpers.h"
printf("(%d,%d) ,\t", current_symbol, current_count);
# 186 "print_helpers.h"
}
# 187 "print_helpers.h"
printf("\n");
# 188 "print_helpers.h"
}
# 4 "comparison_helpers.h"
template< class T> inline int
# 5 "comparison_helpers.h"
compare_vectors(T *data1, T *data2, unsigned size) {
# 6 "comparison_helpers.h"
printf("Comparing vectors: \n");
# 7 "comparison_helpers.h"
bool match = true;
# 8 "comparison_helpers.h"
for (unsigned i = (0); i < size; i++) {
# 9 "comparison_helpers.h"
if ((data1[i]) != (data2[i])) {
# 10 "comparison_helpers.h"
match = false;
# 11 "comparison_helpers.h"
printf("Diff: data1[%d]=%d,  data1[%d]=%d.\n", i, data1[i], i, data2[i]);
# 12 "comparison_helpers.h"
} }
# 14 "comparison_helpers.h"
if (match) { printf("PASS! vectors are matching!\n"); return 0; } else
# 15 "comparison_helpers.h"
{ printf("FAIL! vectors are NOT matching!\n"); return -1; }
# 16 "comparison_helpers.h"
}
# 74 "/usr/include/c++/4.4/cstring" 3
namespace std __attribute((__visibility__("default"))) {
# 76 "/usr/include/c++/4.4/cstring" 3
using ::memchr;
# 77 "/usr/include/c++/4.4/cstring" 3
using ::memcmp;
# 78 "/usr/include/c++/4.4/cstring" 3
using ::memcpy;
# 79 "/usr/include/c++/4.4/cstring" 3
using ::memmove;
# 80 "/usr/include/c++/4.4/cstring" 3
using ::memset;
# 81 "/usr/include/c++/4.4/cstring" 3
using ::strcat;
# 82 "/usr/include/c++/4.4/cstring" 3
using ::strcmp;
# 83 "/usr/include/c++/4.4/cstring" 3
using ::strcoll;
# 84 "/usr/include/c++/4.4/cstring" 3
using ::strcpy;
# 85 "/usr/include/c++/4.4/cstring" 3
using ::strcspn;
# 86 "/usr/include/c++/4.4/cstring" 3
using ::strerror;
# 87 "/usr/include/c++/4.4/cstring" 3
using ::strlen;
# 88 "/usr/include/c++/4.4/cstring" 3
using ::strncat;
# 89 "/usr/include/c++/4.4/cstring" 3
using ::strncmp;
# 90 "/usr/include/c++/4.4/cstring" 3
using ::strncpy;
# 91 "/usr/include/c++/4.4/cstring" 3
using ::strspn;
# 92 "/usr/include/c++/4.4/cstring" 3
using ::strtok;
# 93 "/usr/include/c++/4.4/cstring" 3
using ::strxfrm;
# 94 "/usr/include/c++/4.4/cstring" 3
using ::strchr;
# 95 "/usr/include/c++/4.4/cstring" 3
using ::strpbrk;
# 96 "/usr/include/c++/4.4/cstring" 3
using ::strrchr;
# 97 "/usr/include/c++/4.4/cstring" 3
using ::strstr;
# 121 "/usr/include/c++/4.4/cstring" 3
}
# 9 "stats_logger.h"
#pragma warning(disable:4996)
# 11 "stats_logger.h"
extern "C" void LogStats(const char * , const char * , float , float , const char * , const char * , const char * = (""), const char * = (""), const char * = ("lin"), const char * = ("lin"), unsigned = (0), const char * = (""));
# 24 "stats_logger.h"
inline void LogStats2(const char *graph, const char *
# 25 "stats_logger.h"
function, float
# 26 "stats_logger.h"
yValue, float
# 27 "stats_logger.h"
xValue, const char *
# 28 "stats_logger.h"
yAxisName = ("Time"), const char *
# 29 "stats_logger.h"
yAxisUnit = ("ms"), const char *
# 30 "stats_logger.h"
xAxisName = ("Data size"), const char *
# 31 "stats_logger.h"
xAxisUnit = ("MB"), const char *
# 32 "stats_logger.h"
yAxisScaleType = ("lin"), const char *
# 33 "stats_logger.h"
xAxisScaleType = ("log"), unsigned
# 34 "stats_logger.h"
fId = (0), const char *
# 35 "stats_logger.h"
description = (""))
# 36 "stats_logger.h"
{
# 37 "stats_logger.h"
LogStats(graph, function, xValue, yValue, xAxisName, yAxisName, xAxisUnit, yAxisUnit, xAxisScaleType, yAxisScaleType, fId, description);
# 38 "stats_logger.h"
if ((strcmp(xAxisUnit, "MB") == 0) && (strcmp(yAxisUnit, "ms") == 0)) {
# 39 "stats_logger.h"
char buffer[100];
# 40 "stats_logger.h"
strcpy(buffer, graph);
# 41 "stats_logger.h"
strcat(buffer, "_datarate");
# 42 "stats_logger.h"
LogStats(buffer, function, xValue, (xValue * (1000.0F)) / (yValue * (1024.0F)), xAxisName, "Data rate", xAxisUnit, "GB/s", xAxisScaleType, yAxisScaleType, fId, description);
# 43 "stats_logger.h"
}
# 44 "stats_logger.h"
}
# 20 "hist.cu"
inline void gpuAssert(cudaError_t code, const char *file, int line, bool abort = (true))
# 21 "hist.cu"
{
# 22 "hist.cu"
if (code != (cudaSuccess))
# 23 "hist.cu"
{
# 24 "hist.cu"
fprintf(stderr, "GPUassert: %s %s %d\n", cudaGetErrorString(code), file, line);
# 25 "hist.cu"
if (abort) { exit(code); }
# 26 "hist.cu"
}
# 27 "hist.cu"
}
# 29 "hist.cu"
using namespace std;
# 34 "hist.cu"
void histo_kernel(unsigned char *buffer, long
# 35 "hist.cu"
size, unsigned *
# 36 "hist.cu"
histo) ;
# 54 "hist.cu"
int runHisto(char *file, unsigned *freq, unsigned memSize, unsigned *source) {
# 56 "hist.cu"
FILE *f = fopen(file, "rb");
# 57 "hist.cu"
if (!(f)) { perror(file); exit(1); }
# 58 "hist.cu"
fseek(f, 0, 0);
# 59 "hist.cu"
size_t result = fread(source, 1, memSize, f);
# 60 "hist.cu"
if (result != memSize) { fputs("Cannot read input file", stderr); }
# 62 "hist.cu"
fclose(f);
# 64 "hist.cu"
unsigned char *buffer = ((unsigned char *)source);
# 66 "hist.cu"
cudaDeviceProp prop;
# 67 "hist.cu"
cudaGetDeviceProperties(&prop, 0);
# 68 "hist.cu"
int blocks = (prop.multiProcessorCount);
# 69 "hist.cu"
if (!(prop.deviceOverlap))
# 70 "hist.cu"
{
# 71 "hist.cu"
(((cout << ("No overlaps, so no speedup from streams"))) << (endl));
# 72 "hist.cu"
return 0;
# 73 "hist.cu"
}
# 76 "hist.cu"
int partSize = (memSize / (32));
# 77 "hist.cu"
int totalNum = (memSize / sizeof(unsigned));
# 78 "hist.cu"
int partialNum = (partSize / sizeof(unsigned));
# 80 "hist.cu"
unsigned char *dev_buffer0;
# 81 "hist.cu"
unsigned char *dev_buffer1;
# 82 "hist.cu"
unsigned *dev_histo;
# 83 "hist.cu"
cudaMalloc((void **)(&dev_buffer0), partSize);
# 84 "hist.cu"
cudaMalloc((void **)(&dev_buffer1), partSize);
# 85 "hist.cu"
cudaMalloc((void **)(&dev_histo), (256) * sizeof(int));
# 87 "hist.cu"
cudaMemset(dev_histo, 0, (256) * sizeof(int));
# 89 "hist.cu"
cudaStream_t stream0, stream1;
# 90 "hist.cu"
{ gpuAssert(cudaStreamCreate(&stream0), "hist.cu", 90); } ;
# 91 "hist.cu"
{ gpuAssert(cudaStreamCreate(&stream1), "hist.cu", 91); } ;
# 92 "hist.cu"
cudaEvent_t start, stop;
# 93 "hist.cu"
cudaEventCreate(&start);
# 94 "hist.cu"
cudaEventCreate(&stop);
# 95 "hist.cu"
cudaEventRecord(start, 0);
# 98 "hist.cu"
for (int i = 0; i < totalNum; i += (partialNum * 2))
# 99 "hist.cu"
{
# 101 "hist.cu"
{ gpuAssert(cudaMemcpyAsync(dev_buffer0, buffer + i, partSize, cudaMemcpyHostToDevice, stream0), "hist.cu", 101); } ;
# 102 "hist.cu"
{ gpuAssert(cudaMemcpyAsync(dev_buffer1, (buffer + i) + partialNum, partSize, cudaMemcpyHostToDevice, stream1), "hist.cu", 102); } ;
# 106 "hist.cu"
(cudaConfigureCall(blocks * 2, 256, 0, stream0)) ? ((void)0) : histo_kernel(dev_buffer0, partSize, dev_histo);
# 107 "hist.cu"
(cudaConfigureCall(blocks * 2, 256, 0, stream1)) ? ((void)0) : histo_kernel(dev_buffer1, partSize, dev_histo);
# 108 "hist.cu"
}
# 109 "hist.cu"
{ gpuAssert(cudaStreamSynchronize(stream0), "hist.cu", 109); } ;
# 110 "hist.cu"
{ gpuAssert(cudaStreamSynchronize(stream1), "hist.cu", 110); } ;
# 111 "hist.cu"
cudaMemcpy(freq, dev_histo, (256) * sizeof(int), cudaMemcpyDeviceToHost);
# 112 "hist.cu"
cudaEventRecord(stop, 0);
# 113 "hist.cu"
cudaEventSynchronize(stop);
# 114 "hist.cu"
float elapsedTime;
# 115 "hist.cu"
cudaEventElapsedTime(&elapsedTime, start, stop);
# 117 "hist.cu"
printf("Time to generate:  %3.1f ms\n", elapsedTime);
# 121 "hist.cu"
cudaFree(dev_histo);
# 122 "hist.cu"
cudaFree(dev_buffer0);
# 123 "hist.cu"
cudaFree(dev_buffer1);
# 124 "hist.cu"
return 0;
# 125 "hist.cu"
}
# 62 "/usr/include/c++/4.4/bits/stl_construct.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _T1, typename _T2 >
    inline void
    _Construct ( _T1 * __p, const _T2 & __value )
    {


      :: new ( static_cast < void * > ( __p ) ) _T1 ( __value );
    }
# 80 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _Tp >
    inline void
    _Destroy ( _Tp * __pointer )
    { __pointer -> ~ _Tp ( ); }
# 85 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template< bool __T7>
# 86 "/usr/include/c++/4.4/bits/stl_construct.h" 3
struct _Destroy_aux {
# 88 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _ForwardIterator >
        static void
        __destroy ( _ForwardIterator __first, _ForwardIterator __last )
 {
   for (; __first != __last; ++ __first )
     std :: _Destroy ( & * __first );
 }
# 95 "/usr/include/c++/4.4/bits/stl_construct.h" 3
};
# 98 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template<> struct _Destroy_aux< true> {
# 100 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _ForwardIterator >
        static void
        __destroy ( _ForwardIterator, _ForwardIterator ) { }
# 103 "/usr/include/c++/4.4/bits/stl_construct.h" 3
};
# 110 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _ForwardIterator >
    inline void
    _Destroy ( _ForwardIterator __first, _ForwardIterator __last )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
                       _Value_type;
      std :: _Destroy_aux < __has_trivial_destructor ( _Value_type ) > ::
 __destroy ( __first, __last );
    }
# 126 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template< class _Tp> class allocator;
# 128 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _ForwardIterator, typename _Allocator >
    void
    _Destroy ( _ForwardIterator __first, _ForwardIterator __last,
      _Allocator & __alloc )
    {
      for (; __first != __last; ++ __first )
 __alloc . destroy ( & * __first );
    }
# 137 "/usr/include/c++/4.4/bits/stl_construct.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    _Destroy ( _ForwardIterator __first, _ForwardIterator __last,
      allocator < _Tp > & )
    {
      _Destroy ( __first, __last );
    }
# 145 "/usr/include/c++/4.4/bits/stl_construct.h" 3
}
# 60 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template< bool __T8>
# 63 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
struct __uninitialized_copy {
# 65 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator >
        static _ForwardIterator
        uninitialized_copy ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result )
        {
   _ForwardIterator __cur = __result;
   try
     {
       for (; __first != __last; ++ __first, ++ __cur )
  :: new ( static_cast < void * > ( & * __cur ) ) typename
      iterator_traits < _ForwardIterator > :: value_type ( * __first );
       return __cur;
     }
   catch ( ... )
     {
       std :: _Destroy ( __result, __cur );
       throw;
     }
 }
# 84 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
};
# 87 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_copy< true> {
# 89 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator >
        static _ForwardIterator
        uninitialized_copy ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result )
        { return std :: copy ( __first, __last, __result ); }
# 94 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
};
# 105 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator >
    inline _ForwardIterator
    uninitialized_copy ( _InputIterator __first, _InputIterator __last,
         _ForwardIterator __result )
    {
      typedef typename iterator_traits < _InputIterator > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType2;

      return std :: __uninitialized_copy < ( __is_pod ( _ValueType1 )
     && __is_pod ( _ValueType2 ) ) > ::
 uninitialized_copy ( __first, __last, __result );
    }
# 121 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template< bool __T9>
# 122 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
struct __uninitialized_fill {
# 124 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
        static void
        uninitialized_fill ( _ForwardIterator __first,
      _ForwardIterator __last, const _Tp & __x )
        {
   _ForwardIterator __cur = __first;
   try
     {
       for (; __cur != __last; ++ __cur )
  std :: _Construct ( & * __cur, __x );
     }
   catch ( ... )
     {
       std :: _Destroy ( __first, __cur );
       throw;
     }
 }
# 141 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
};
# 144 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill< true> {
# 146 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
        static void
        uninitialized_fill ( _ForwardIterator __first,
      _ForwardIterator __last, const _Tp & __x )
        { std :: fill ( __first, __last, __x ); }
# 151 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
};
# 162 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    uninitialized_fill ( _ForwardIterator __first, _ForwardIterator __last,
         const _Tp & __x )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;

      std :: __uninitialized_fill < __is_pod ( _ValueType ) > ::
 uninitialized_fill ( __first, __last, __x );
    }
# 175 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template< bool __T10>
# 176 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
struct __uninitialized_fill_n {
# 178 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp >
        static void
        uninitialized_fill_n ( _ForwardIterator __first, _Size __n,
        const _Tp & __x )
        {
   _ForwardIterator __cur = __first;
   try
     {
       for (; __n > 0; -- __n, ++ __cur )
  std :: _Construct ( & * __cur, __x );
     }
   catch ( ... )
     {
       std :: _Destroy ( __first, __cur );
       throw;
     }
 }
# 195 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
};
# 198 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill_n< true> {
# 200 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp >
        static void
        uninitialized_fill_n ( _ForwardIterator __first, _Size __n,
        const _Tp & __x )
        { std :: fill_n ( __first, __n, __x ); }
# 205 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
};
# 216 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp >
    inline void
    uninitialized_fill_n ( _ForwardIterator __first, _Size __n, const _Tp & __x )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;

      std :: __uninitialized_fill_n < __is_pod ( _ValueType ) > ::
 uninitialized_fill_n ( __first, __n, __x );
    }
# 233 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator,
    typename _Allocator >
    _ForwardIterator
    __uninitialized_copy_a ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result, _Allocator & __alloc )
    {
      _ForwardIterator __cur = __result;
      try
 {
   for (; __first != __last; ++ __first, ++ __cur )
     __alloc . construct ( & * __cur, * __first );
   return __cur;
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __cur, __alloc );
   throw;
 }
    }
# 253 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator, typename _Tp >
    inline _ForwardIterator
    __uninitialized_copy_a ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result, allocator < _Tp > & )
    { return std :: uninitialized_copy ( __first, __last, __result ); }
# 259 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator,
    typename _Allocator >
    inline _ForwardIterator
    __uninitialized_move_a ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result, _Allocator & __alloc )
    {
      return std :: __uninitialized_copy_a ( ( __first ),
      ( __last ),
      __result, __alloc );
    }
# 270 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Allocator >
    void
    __uninitialized_fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __x, _Allocator & __alloc )
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __cur != __last; ++ __cur )
     __alloc . construct ( & * __cur, __x );
 }
      catch ( ... )
 {
   std :: _Destroy ( __first, __cur, __alloc );
   throw;
 }
    }
# 288 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Tp2 >
    inline void
    __uninitialized_fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __x, allocator < _Tp2 > & )
    { std :: uninitialized_fill ( __first, __last, __x ); }
# 294 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Allocator >
    void
    __uninitialized_fill_n_a ( _ForwardIterator __first, _Size __n,
        const _Tp & __x, _Allocator & __alloc )
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __n > 0; -- __n, ++ __cur )
     __alloc . construct ( & * __cur, __x );
 }
      catch ( ... )
 {
   std :: _Destroy ( __first, __cur, __alloc );
   throw;
 }
    }
# 313 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Tp2 >
    inline void
    __uninitialized_fill_n_a ( _ForwardIterator __first, _Size __n,
        const _Tp & __x, allocator < _Tp2 > & )
    { std :: uninitialized_fill_n ( __first, __n, __x ); }
# 330 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _ForwardIterator, typename _Allocator >
    inline _ForwardIterator
    __uninitialized_copy_move ( _InputIterator1 __first1,
         _InputIterator1 __last1,
         _InputIterator2 __first2,
         _InputIterator2 __last2,
         _ForwardIterator __result,
         _Allocator & __alloc )
    {
      _ForwardIterator __mid = std :: __uninitialized_copy_a ( __first1, __last1,
          __result,
          __alloc );
      try
 {
   return std :: __uninitialized_move_a ( __first2, __last2, __mid, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __mid, __alloc );
   throw;
 }
    }
# 358 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _ForwardIterator, typename _Allocator >
    inline _ForwardIterator
    __uninitialized_move_copy ( _InputIterator1 __first1,
         _InputIterator1 __last1,
         _InputIterator2 __first2,
         _InputIterator2 __last2,
         _ForwardIterator __result,
         _Allocator & __alloc )
    {
      _ForwardIterator __mid = std :: __uninitialized_move_a ( __first1, __last1,
          __result,
          __alloc );
      try
 {
   return std :: __uninitialized_copy_a ( __first2, __last2, __mid, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __mid, __alloc );
   throw;
 }
    }
# 385 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp, typename _InputIterator,
    typename _Allocator >
    inline _ForwardIterator
    __uninitialized_fill_move ( _ForwardIterator __result, _ForwardIterator __mid,
         const _Tp & __x, _InputIterator __first,
         _InputIterator __last, _Allocator & __alloc )
    {
      std :: __uninitialized_fill_a ( __result, __mid, __x, __alloc );
      try
 {
   return std :: __uninitialized_move_a ( __first, __last, __mid, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __mid, __alloc );
   throw;
 }
    }
# 407 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator, typename _Tp,
    typename _Allocator >
    inline void
    __uninitialized_move_fill ( _InputIterator __first1, _InputIterator __last1,
         _ForwardIterator __first2,
         _ForwardIterator __last2, const _Tp & __x,
         _Allocator & __alloc )
    {
      _ForwardIterator __mid2 = std :: __uninitialized_move_a ( __first1, __last1,
           __first2,
           __alloc );
      try
 {
   std :: __uninitialized_fill_a ( __mid2, __last2, __x, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __first2, __mid2, __alloc );
   throw;
 }
    }
# 476 "/usr/include/c++/4.4/bits/stl_uninitialized.h" 3
}
# 65 "/usr/include/c++/4.4/bits/stl_deque.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/bits/stl_deque.h" 3
inline size_t __deque_buf_size(size_t __size)
# 79 "/usr/include/c++/4.4/bits/stl_deque.h" 3
{ return (__size < (512)) ? ((size_t)((512) / __size)) : ((size_t)1); }
# 93 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    struct _Deque_iterator
    {
      typedef _Deque_iterator < _Tp, _Tp &, _Tp * > iterator;
      typedef _Deque_iterator < _Tp, const _Tp &, const _Tp * > const_iterator;

      static size_t _S_buffer_size ( )
      { return __deque_buf_size ( sizeof ( _Tp ) ); }

      typedef std :: random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef _Ptr pointer;
      typedef _Ref reference;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * * _Map_pointer;
      typedef _Deque_iterator _Self;

      _Tp * _M_cur;
      _Tp * _M_first;
      _Tp * _M_last;
      _Map_pointer _M_node;

      _Deque_iterator ( _Tp * __x, _Map_pointer __y )
      : _M_cur ( __x ), _M_first ( * __y ),
        _M_last ( * __y + _S_buffer_size ( ) ), _M_node ( __y ) { }

      _Deque_iterator ( )
      : _M_cur ( 0 ), _M_first ( 0 ), _M_last ( 0 ), _M_node ( 0 ) { }

      _Deque_iterator ( const iterator & __x )
      : _M_cur ( __x . _M_cur ), _M_first ( __x . _M_first ),
        _M_last ( __x . _M_last ), _M_node ( __x . _M_node ) { }

      reference
      operator * ( ) const
      { return * _M_cur; }

      pointer
      operator -> ( ) const
      { return _M_cur; }

      _Self &
      operator ++ ( )
      {
 ++ _M_cur;
 if ( _M_cur == _M_last )
   {
     _M_set_node ( _M_node + 1 );
     _M_cur = _M_first;
   }
 return * this;
      }

      _Self
      operator ++ ( int )
      {
 _Self __tmp = * this;
 ++ * this;
 return __tmp;
      }

      _Self &
      operator -- ( )
      {
 if ( _M_cur == _M_first )
   {
     _M_set_node ( _M_node - 1 );
     _M_cur = _M_last;
   }
 -- _M_cur;
 return * this;
      }

      _Self
      operator -- ( int )
      {
 _Self __tmp = * this;
 -- * this;
 return __tmp;
      }

      _Self &
      operator += ( difference_type __n )
      {
 const difference_type __offset = __n + ( _M_cur - _M_first );
 if ( __offset >= 0 && __offset < difference_type ( _S_buffer_size ( ) ) )
   _M_cur += __n;
 else
   {
     const difference_type __node_offset =
       __offset > 0 ? __offset / difference_type ( _S_buffer_size ( ) )
                    : - difference_type ( ( - __offset - 1 )
           / _S_buffer_size ( ) ) - 1;
     _M_set_node ( _M_node + __node_offset );
     _M_cur = _M_first + ( __offset - __node_offset
     * difference_type ( _S_buffer_size ( ) ) );
   }
 return * this;
      }

      _Self
      operator + ( difference_type __n ) const
      {
 _Self __tmp = * this;
 return __tmp += __n;
      }

      _Self &
      operator -= ( difference_type __n )
      { return * this += - __n; }

      _Self
      operator - ( difference_type __n ) const
      {
 _Self __tmp = * this;
 return __tmp -= __n;
      }

      reference
      operator [ ] ( difference_type __n ) const
      { return * ( * this + __n ); }






      void
      _M_set_node ( _Map_pointer __new_node )
      {
 _M_node = __new_node;
 _M_first = * __new_node;
 _M_last = _M_first + difference_type ( _S_buffer_size ( ) );
      }
    };
# 233 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline bool
    operator == ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
        const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    { return __x . _M_cur == __y . _M_cur; }
# 239 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline bool
    operator == ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
        const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    { return __x . _M_cur == __y . _M_cur; }
# 246 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline bool
    operator != ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
        const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    { return ! ( __x == __y ); }
# 252 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline bool
    operator != ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
        const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    { return ! ( __x == __y ); }
# 259 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline bool
    operator < ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
       const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    { return ( __x . _M_node == __y . _M_node ) ? ( __x . _M_cur < __y . _M_cur )
                                          : ( __x . _M_node < __y . _M_node ); }
# 266 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline bool
    operator < ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
       const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    { return ( __x . _M_node == __y . _M_node ) ? ( __x . _M_cur < __y . _M_cur )
                                   : ( __x . _M_node < __y . _M_node ); }
# 274 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline bool
    operator > ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
       const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    { return __y < __x; }
# 280 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline bool
    operator > ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
       const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    { return __y < __x; }
# 287 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline bool
    operator <= ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
        const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    { return ! ( __y < __x ); }
# 293 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline bool
    operator <= ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
        const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    { return ! ( __y < __x ); }
# 300 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline bool
    operator >= ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
        const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    { return ! ( __x < __y ); }
# 306 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline bool
    operator >= ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
        const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    { return ! ( __x < __y ); }
# 317 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline typename _Deque_iterator < _Tp, _Ref, _Ptr > :: difference_type
    operator - ( const _Deque_iterator < _Tp, _Ref, _Ptr > & __x,
       const _Deque_iterator < _Tp, _Ref, _Ptr > & __y )
    {
      return typename _Deque_iterator < _Tp, _Ref, _Ptr > :: difference_type
 ( _Deque_iterator < _Tp, _Ref, _Ptr > :: _S_buffer_size ( ) )
 * ( __x . _M_node - __y . _M_node - 1 ) + ( __x . _M_cur - __x . _M_first )
 + ( __y . _M_last - __y . _M_cur );
    }
# 328 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _RefL, typename _PtrL,
    typename _RefR, typename _PtrR >
    inline typename _Deque_iterator < _Tp, _RefL, _PtrL > :: difference_type
    operator - ( const _Deque_iterator < _Tp, _RefL, _PtrL > & __x,
       const _Deque_iterator < _Tp, _RefR, _PtrR > & __y )
    {
      return typename _Deque_iterator < _Tp, _RefL, _PtrL > :: difference_type
 ( _Deque_iterator < _Tp, _RefL, _PtrL > :: _S_buffer_size ( ) )
 * ( __x . _M_node - __y . _M_node - 1 ) + ( __x . _M_cur - __x . _M_first )
 + ( __y . _M_last - __y . _M_cur );
    }
# 340 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Ref, typename _Ptr >
    inline _Deque_iterator < _Tp, _Ref, _Ptr >
    operator + ( ptrdiff_t __n, const _Deque_iterator < _Tp, _Ref, _Ptr > & __x )
    { return __x + __n; }
# 345 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp >
    void
    fill ( const _Deque_iterator < _Tp, _Tp &, _Tp * > & __first,
  const _Deque_iterator < _Tp, _Tp &, _Tp * > & __last, const _Tp & __value );
# 360 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    class _Deque_base
    {
    public :
      typedef _Alloc allocator_type;

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Tp_allocator ( ) ); }

      typedef _Deque_iterator < _Tp, _Tp &, _Tp * > iterator;
      typedef _Deque_iterator < _Tp, const _Tp &, const _Tp * > const_iterator;

      _Deque_base ( )
      : _M_impl ( )
      { _M_initialize_map ( 0 ); }

      _Deque_base ( const allocator_type & __a, size_t __num_elements )
      : _M_impl ( __a )
      { _M_initialize_map ( __num_elements ); }

      _Deque_base ( const allocator_type & __a )
      : _M_impl ( __a )
      { }

      ~ _Deque_base ( );

    protected :



      typedef typename _Alloc :: template rebind < _Tp * > :: other _Map_alloc_type;

      typedef typename _Alloc :: template rebind < _Tp > :: other _Tp_alloc_type;

      struct _Deque_impl
      : public _Tp_alloc_type
      {
 _Tp * * _M_map;
 size_t _M_map_size;
 iterator _M_start;
 iterator _M_finish;

 _Deque_impl ( )
 : _Tp_alloc_type ( ), _M_map ( 0 ), _M_map_size ( 0 ),
   _M_start ( ), _M_finish ( )
 { }

 _Deque_impl ( const _Tp_alloc_type & __a )
 : _Tp_alloc_type ( __a ), _M_map ( 0 ), _M_map_size ( 0 ),
   _M_start ( ), _M_finish ( )
 { }
      };

      _Tp_alloc_type &
      _M_get_Tp_allocator ( )
      { return * static_cast < _Tp_alloc_type * > ( & this -> _M_impl ); }

      const _Tp_alloc_type &
      _M_get_Tp_allocator ( ) const
      { return * static_cast < const _Tp_alloc_type * > ( & this -> _M_impl ); }

      _Map_alloc_type
      _M_get_map_allocator ( ) const
      { return _Map_alloc_type ( _M_get_Tp_allocator ( ) ); }

      _Tp *
      _M_allocate_node ( )
      {
 return _M_impl . _Tp_alloc_type :: allocate ( __deque_buf_size ( sizeof ( _Tp ) ) );
      }

      void
      _M_deallocate_node ( _Tp * __p )
      {
 _M_impl . _Tp_alloc_type :: deallocate ( __p, __deque_buf_size ( sizeof ( _Tp ) ) );
      }

      _Tp * *
      _M_allocate_map ( size_t __n )
      { return _M_get_map_allocator ( ) . allocate ( __n ); }

      void
      _M_deallocate_map ( _Tp * * __p, size_t __n )
      { _M_get_map_allocator ( ) . deallocate ( __p, __n ); }

    protected :
      void _M_initialize_map ( size_t );
      void _M_create_nodes ( _Tp * * __nstart, _Tp * * __nfinish );
      void _M_destroy_nodes ( _Tp * * __nstart, _Tp * * __nfinish );
      enum { _S_initial_map_size = 8 };

      _Deque_impl _M_impl;
    };
# 470 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    _Deque_base < _Tp, _Alloc > ::
    ~ _Deque_base ( )
    {
      if ( this -> _M_impl . _M_map )
 {
   _M_destroy_nodes ( this -> _M_impl . _M_start . _M_node,
      this -> _M_impl . _M_finish . _M_node + 1 );
   _M_deallocate_map ( this -> _M_impl . _M_map, this -> _M_impl . _M_map_size );
 }
    }
# 490 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    void
    _Deque_base < _Tp, _Alloc > ::
    _M_initialize_map ( size_t __num_elements )
    {
      const size_t __num_nodes = ( __num_elements / __deque_buf_size ( sizeof ( _Tp ) )
      + 1 );

      this -> _M_impl . _M_map_size = std :: max ( ( size_t ) _S_initial_map_size,
        size_t ( __num_nodes + 2 ) );
      this -> _M_impl . _M_map = _M_allocate_map ( this -> _M_impl . _M_map_size );






      _Tp * * __nstart = ( this -> _M_impl . _M_map
   + ( this -> _M_impl . _M_map_size - __num_nodes ) / 2 );
      _Tp * * __nfinish = __nstart + __num_nodes;

      try
 { _M_create_nodes ( __nstart, __nfinish ); }
      catch ( ... )
 {
   _M_deallocate_map ( this -> _M_impl . _M_map, this -> _M_impl . _M_map_size );
   this -> _M_impl . _M_map = 0;
   this -> _M_impl . _M_map_size = 0;
   throw;
 }

      this -> _M_impl . _M_start . _M_set_node ( __nstart );
      this -> _M_impl . _M_finish . _M_set_node ( __nfinish - 1 );
      this -> _M_impl . _M_start . _M_cur = _M_impl . _M_start . _M_first;
      this -> _M_impl . _M_finish . _M_cur = ( this -> _M_impl . _M_finish . _M_first
     + __num_elements
     % __deque_buf_size ( sizeof ( _Tp ) ) );
    }
# 529 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    void
    _Deque_base < _Tp, _Alloc > ::
    _M_create_nodes ( _Tp * * __nstart, _Tp * * __nfinish )
    {
      _Tp * * __cur;
      try
 {
   for ( __cur = __nstart; __cur < __nfinish; ++ __cur )
     * __cur = this -> _M_allocate_node ( );
 }
      catch ( ... )
 {
   _M_destroy_nodes ( __nstart, __cur );
   throw;
 }
    }
# 547 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    void
    _Deque_base < _Tp, _Alloc > ::
    _M_destroy_nodes ( _Tp * * __nstart, _Tp * * __nfinish )
    {
      for ( _Tp * * __n = __nstart; __n < __nfinish; ++ __n )
 _M_deallocate_node ( * __n );
    }
# 637 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc = std :: allocator < _Tp > >
    class deque : protected _Deque_base < _Tp, _Alloc >
    {

      typedef typename _Alloc :: value_type _Alloc_value_type;



      typedef _Deque_base < _Tp, _Alloc > _Base;
      typedef typename _Base :: _Tp_alloc_type _Tp_alloc_type;

    public :
      typedef _Tp value_type;
      typedef typename _Tp_alloc_type :: pointer pointer;
      typedef typename _Tp_alloc_type :: const_pointer const_pointer;
      typedef typename _Tp_alloc_type :: reference reference;
      typedef typename _Tp_alloc_type :: const_reference const_reference;
      typedef typename _Base :: iterator iterator;
      typedef typename _Base :: const_iterator const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

    protected :
      typedef pointer * _Map_pointer;

      static size_t _S_buffer_size ( )
      { return __deque_buf_size ( sizeof ( _Tp ) ); }


      using _Base :: _M_initialize_map;
      using _Base :: _M_create_nodes;
      using _Base :: _M_destroy_nodes;
      using _Base :: _M_allocate_node;
      using _Base :: _M_deallocate_node;
      using _Base :: _M_allocate_map;
      using _Base :: _M_deallocate_map;
      using _Base :: _M_get_Tp_allocator;





      using _Base :: _M_impl;

    public :





      deque ( )
      : _Base ( ) { }





      explicit
      deque ( const allocator_type & __a )
      : _Base ( __a, 0 ) { }

      explicit
      deque ( size_type __n, const value_type & __value = value_type ( ),
     const allocator_type & __a = allocator_type ( ) )
      : _Base ( __a, __n )
      { _M_fill_initialize ( __value ); }

      deque ( const deque & __x )
      : _Base ( __x . _M_get_Tp_allocator ( ), __x . size ( ) )
      { std :: __uninitialized_copy_a ( __x . begin ( ), __x . end ( ),
        this -> _M_impl . _M_start,
        _M_get_Tp_allocator ( ) ); }

      template < typename _InputIterator >
        deque ( _InputIterator __first, _InputIterator __last,
       const allocator_type & __a = allocator_type ( ) )
 : _Base ( __a )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_initialize_dispatch ( __first, __last, _Integral ( ) );
 }






      ~ deque ( )
      { _M_destroy_data ( begin ( ), end ( ), _M_get_Tp_allocator ( ) ); }

      deque &
      operator = ( const deque & __x );

      void
      assign ( size_type __n, const value_type & __val )
      { _M_fill_assign ( __n, __val ); }

      template < typename _InputIterator >
        void
        assign ( _InputIterator __first, _InputIterator __last )
        {
   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_assign_dispatch ( __first, __last, _Integral ( ) );
 }

      allocator_type
      get_allocator ( ) const
      { return _Base :: get_allocator ( ); }






      iterator
      begin ( )
      { return this -> _M_impl . _M_start; }





      const_iterator
      begin ( ) const
      { return this -> _M_impl . _M_start; }






      iterator
      end ( )
      { return this -> _M_impl . _M_finish; }






      const_iterator
      end ( ) const
      { return this -> _M_impl . _M_finish; }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( this -> _M_impl . _M_finish ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( this -> _M_impl . _M_finish ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( this -> _M_impl . _M_start ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( this -> _M_impl . _M_start ); }

      size_type
      size ( ) const
      { return this -> _M_impl . _M_finish - this -> _M_impl . _M_start; }


      size_type
      max_size ( ) const
      { return _M_get_Tp_allocator ( ) . max_size ( ); }

      void
      resize ( size_type __new_size, value_type __x = value_type ( ) )
      {
 const size_type __len = size ( );
 if ( __new_size < __len )
   _M_erase_at_end ( this -> _M_impl . _M_start + difference_type ( __new_size ) );
 else
   insert ( this -> _M_impl . _M_finish, __new_size - __len, __x );
      }





      bool
      empty ( ) const
      { return this -> _M_impl . _M_finish == this -> _M_impl . _M_start; }

      reference
      operator [ ] ( size_type __n )
      { return this -> _M_impl . _M_start [ difference_type ( __n ) ]; }

      const_reference
      operator [ ] ( size_type __n ) const
      { return this -> _M_impl . _M_start [ difference_type ( __n ) ]; }

    protected :

      void
      _M_range_check ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "deque::_M_range_check" ) );
      }

    public :

      reference
      at ( size_type __n )
      {
 _M_range_check ( __n );
 return ( * this ) [ __n ];
      }

      const_reference
      at ( size_type __n ) const
      {
 _M_range_check ( __n );
 return ( * this ) [ __n ];
      }





      reference
      front ( )
      { return * begin ( ); }





      const_reference
      front ( ) const
      { return * begin ( ); }





      reference
      back ( )
      {
 iterator __tmp = end ( );
 -- __tmp;
 return * __tmp;
      }





      const_reference
      back ( ) const
      {
 const_iterator __tmp = end ( );
 -- __tmp;
 return * __tmp;
      }

      void
      push_front ( const value_type & __x )
      {
 if ( this -> _M_impl . _M_start . _M_cur != this -> _M_impl . _M_start . _M_first )
   {
     this -> _M_impl . construct ( this -> _M_impl . _M_start . _M_cur - 1, __x );
     -- this -> _M_impl . _M_start . _M_cur;
   }
 else
   _M_push_front_aux ( __x );
      }

      void
      push_back ( const value_type & __x )
      {
 if ( this -> _M_impl . _M_finish . _M_cur
     != this -> _M_impl . _M_finish . _M_last - 1 )
   {
     this -> _M_impl . construct ( this -> _M_impl . _M_finish . _M_cur, __x );
     ++ this -> _M_impl . _M_finish . _M_cur;
   }
 else
   _M_push_back_aux ( __x );
      }

      void
      pop_front ( )
      {
 if ( this -> _M_impl . _M_start . _M_cur
     != this -> _M_impl . _M_start . _M_last - 1 )
   {
     this -> _M_impl . destroy ( this -> _M_impl . _M_start . _M_cur );
     ++ this -> _M_impl . _M_start . _M_cur;
   }
 else
   _M_pop_front_aux ( );
      }

      void
      pop_back ( )
      {
 if ( this -> _M_impl . _M_finish . _M_cur
     != this -> _M_impl . _M_finish . _M_first )
   {
     -- this -> _M_impl . _M_finish . _M_cur;
     this -> _M_impl . destroy ( this -> _M_impl . _M_finish . _M_cur );
   }
 else
   _M_pop_back_aux ( );
      }

      iterator
      insert ( iterator __position, const value_type & __x );

      void
      insert ( iterator __position, size_type __n, const value_type & __x )
      { _M_fill_insert ( __position, __n, __x ); }

      template < typename _InputIterator >
        void
        insert ( iterator __position, _InputIterator __first,
        _InputIterator __last )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_insert_dispatch ( __position, __first, __last, _Integral ( ) );
 }

      iterator
      erase ( iterator __position );

      iterator
      erase ( iterator __first, iterator __last );

      void



      swap ( deque & __x )

      {
 std :: swap ( this -> _M_impl . _M_start, __x . _M_impl . _M_start );
 std :: swap ( this -> _M_impl . _M_finish, __x . _M_impl . _M_finish );
 std :: swap ( this -> _M_impl . _M_map, __x . _M_impl . _M_map );
 std :: swap ( this -> _M_impl . _M_map_size, __x . _M_impl . _M_map_size );



 std :: __alloc_swap < _Tp_alloc_type > :: _S_do_it ( _M_get_Tp_allocator ( ),
          __x . _M_get_Tp_allocator ( ) );
      }







      void
      clear ( )
      { _M_erase_at_end ( begin ( ) ); }

    protected :






      template < typename _Integer >
        void
        _M_initialize_dispatch ( _Integer __n, _Integer __x, __true_type )
        {
   _M_initialize_map ( static_cast < size_type > ( __n ) );
   _M_fill_initialize ( __x );
 }


      template < typename _InputIterator >
        void
        _M_initialize_dispatch ( _InputIterator __first, _InputIterator __last,
          __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_range_initialize ( __first, __last, _IterCategory ( ) );
 }

      template < typename _InputIterator >
        void
        _M_range_initialize ( _InputIterator __first, _InputIterator __last,
       std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_range_initialize ( _ForwardIterator __first, _ForwardIterator __last,
       std :: forward_iterator_tag );

      void
      _M_fill_initialize ( const value_type & __value );

      template < typename _Integer >
        void
        _M_assign_dispatch ( _Integer __n, _Integer __val, __true_type )
        { _M_fill_assign ( __n, __val ); }


      template < typename _InputIterator >
        void
        _M_assign_dispatch ( _InputIterator __first, _InputIterator __last,
      __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_assign_aux ( __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_assign_aux ( _InputIterator __first, _InputIterator __last,
        std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
        std :: forward_iterator_tag )
        {
   const size_type __len = std :: distance ( __first, __last );
   if ( __len > size ( ) )
     {
       _ForwardIterator __mid = __first;
       std :: advance ( __mid, size ( ) );
       std :: copy ( __first, __mid, begin ( ) );
       insert ( end ( ), __mid, __last );
     }
   else
     _M_erase_at_end ( std :: copy ( __first, __last, begin ( ) ) );
 }



      void
      _M_fill_assign ( size_type __n, const value_type & __val )
      {
 if ( __n > size ( ) )
   {
     std :: fill ( begin ( ), end ( ), __val );
     insert ( end ( ), __n - size ( ), __val );
   }
 else
   {
     _M_erase_at_end ( begin ( ) + difference_type ( __n ) );
     std :: fill ( begin ( ), end ( ), __val );
   }
      }




      void _M_push_back_aux ( const value_type & );

      void _M_push_front_aux ( const value_type & );

      void _M_pop_back_aux ( );

      void _M_pop_front_aux ( );

      template < typename _Integer >
        void
        _M_insert_dispatch ( iterator __pos,
      _Integer __n, _Integer __x, __true_type )
        { _M_fill_insert ( __pos, __n, __x ); }


      template < typename _InputIterator >
        void
        _M_insert_dispatch ( iterator __pos,
      _InputIterator __first, _InputIterator __last,
      __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
          _M_range_insert_aux ( __pos, __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_range_insert_aux ( iterator __pos, _InputIterator __first,
       _InputIterator __last, std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_range_insert_aux ( iterator __pos, _ForwardIterator __first,
       _ForwardIterator __last, std :: forward_iterator_tag );




      void
      _M_fill_insert ( iterator __pos, size_type __n, const value_type & __x );



      iterator
      _M_insert_aux ( iterator __pos, const value_type & __x );







      void
      _M_insert_aux ( iterator __pos, size_type __n, const value_type & __x );


      template < typename _ForwardIterator >
        void
        _M_insert_aux ( iterator __pos,
        _ForwardIterator __first, _ForwardIterator __last,
        size_type __n );




      void
      _M_destroy_data_aux ( iterator __first, iterator __last );



      template < typename _Alloc1 >
        void
        _M_destroy_data ( iterator __first, iterator __last, const _Alloc1 & )
        { _M_destroy_data_aux ( __first, __last ); }

      void
      _M_destroy_data ( iterator __first, iterator __last,
        const std :: allocator < _Tp > & )
      {
 if ( ! __has_trivial_destructor ( value_type ) )
   _M_destroy_data_aux ( __first, __last );
      }


      void
      _M_erase_at_begin ( iterator __pos )
      {
 _M_destroy_data ( begin ( ), __pos, _M_get_Tp_allocator ( ) );
 _M_destroy_nodes ( this -> _M_impl . _M_start . _M_node, __pos . _M_node );
 this -> _M_impl . _M_start = __pos;
      }



      void
      _M_erase_at_end ( iterator __pos )
      {
 _M_destroy_data ( __pos, end ( ), _M_get_Tp_allocator ( ) );
 _M_destroy_nodes ( __pos . _M_node + 1,
    this -> _M_impl . _M_finish . _M_node + 1 );
 this -> _M_impl . _M_finish = __pos;
      }



      iterator
      _M_reserve_elements_at_front ( size_type __n )
      {
 const size_type __vacancies = this -> _M_impl . _M_start . _M_cur
                               - this -> _M_impl . _M_start . _M_first;
 if ( __n > __vacancies )
   _M_new_elements_at_front ( __n - __vacancies );
 return this -> _M_impl . _M_start - difference_type ( __n );
      }

      iterator
      _M_reserve_elements_at_back ( size_type __n )
      {
 const size_type __vacancies = ( this -> _M_impl . _M_finish . _M_last
           - this -> _M_impl . _M_finish . _M_cur ) - 1;
 if ( __n > __vacancies )
   _M_new_elements_at_back ( __n - __vacancies );
 return this -> _M_impl . _M_finish + difference_type ( __n );
      }

      void
      _M_new_elements_at_front ( size_type __new_elements );

      void
      _M_new_elements_at_back ( size_type __new_elements );

      void
      _M_reserve_map_at_back ( size_type __nodes_to_add = 1 )
      {
 if ( __nodes_to_add + 1 > this -> _M_impl . _M_map_size
     - ( this -> _M_impl . _M_finish . _M_node - this -> _M_impl . _M_map ) )
   _M_reallocate_map ( __nodes_to_add, false );
      }

      void
      _M_reserve_map_at_front ( size_type __nodes_to_add = 1 )
      {
 if ( __nodes_to_add > size_type ( this -> _M_impl . _M_start . _M_node
           - this -> _M_impl . _M_map ) )
   _M_reallocate_map ( __nodes_to_add, true );
      }

      void
      _M_reallocate_map ( size_type __nodes_to_add, bool __add_at_front );

    };
# 1746 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator == ( const deque < _Tp, _Alloc > & __x,
                         const deque < _Tp, _Alloc > & __y )
    { return __x . size ( ) == __y . size ( )
             && std :: equal ( __x . begin ( ), __x . end ( ), __y . begin ( ) ); }
# 1764 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator < ( const deque < _Tp, _Alloc > & __x,
       const deque < _Tp, _Alloc > & __y )
    { return std :: lexicographical_compare ( __x . begin ( ), __x . end ( ),
       __y . begin ( ), __y . end ( ) ); }
# 1772 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator != ( const deque < _Tp, _Alloc > & __x,
        const deque < _Tp, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 1779 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator > ( const deque < _Tp, _Alloc > & __x,
       const deque < _Tp, _Alloc > & __y )
    { return __y < __x; }
# 1786 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator <= ( const deque < _Tp, _Alloc > & __x,
        const deque < _Tp, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 1793 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator >= ( const deque < _Tp, _Alloc > & __x,
        const deque < _Tp, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 1800 "/usr/include/c++/4.4/bits/stl_deque.h" 3
template < typename _Tp, typename _Alloc >
    inline void
    swap ( deque < _Tp, _Alloc > & __x, deque < _Tp, _Alloc > & __y )
    { __x . swap ( __y ); }
# 1817 "/usr/include/c++/4.4/bits/stl_deque.h" 3
}
# 60 "/usr/include/c++/4.4/bits/deque.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    deque < _Tp, _Alloc > &
    deque < _Tp, _Alloc > ::
    operator = ( const deque & __x )
    {
      const size_type __len = size ( );
      if ( & __x != this )
 {
   if ( __len >= __x . size ( ) )
     _M_erase_at_end ( std :: copy ( __x . begin ( ), __x . end ( ),
          this -> _M_impl . _M_start ) );
   else
     {
       const_iterator __mid = __x . begin ( ) + difference_type ( __len );
       std :: copy ( __x . begin ( ), __mid, this -> _M_impl . _M_start );
       insert ( this -> _M_impl . _M_finish, __mid, __x . end ( ) );
     }
 }
      return * this;
    }
# 118 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    typename deque < _Tp, _Alloc > :: iterator
    deque < _Tp, _Alloc > ::
    insert ( iterator __position, const value_type & __x )
    {
      if ( __position . _M_cur == this -> _M_impl . _M_start . _M_cur )
 {
   push_front ( __x );
   return this -> _M_impl . _M_start;
 }
      else if ( __position . _M_cur == this -> _M_impl . _M_finish . _M_cur )
 {
   push_back ( __x );
   iterator __tmp = this -> _M_impl . _M_finish;
   -- __tmp;
   return __tmp;
 }
      else
        return _M_insert_aux ( __position, __x );
    }
# 163 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    typename deque < _Tp, _Alloc > :: iterator
    deque < _Tp, _Alloc > ::
    erase ( iterator __position )
    {
      iterator __next = __position;
      ++ __next;
      const difference_type __index = __position - begin ( );
      if ( static_cast < size_type > ( __index ) < ( size ( ) >> 1 ) )
 {
   if ( __position != begin ( ) )
     std :: copy_backward ( begin ( ), __position, __next );
   pop_front ( );
 }
      else
 {
   if ( __next != end ( ) )
     std :: copy ( __next, end ( ), __position );
   pop_back ( );
 }
      return begin ( ) + __index;
    }
# 186 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    typename deque < _Tp, _Alloc > :: iterator
    deque < _Tp, _Alloc > ::
    erase ( iterator __first, iterator __last )
    {
      if ( __first == begin ( ) && __last == end ( ) )
 {
   clear ( );
   return end ( );
 }
      else
 {
   const difference_type __n = __last - __first;
   const difference_type __elems_before = __first - begin ( );
   if ( static_cast < size_type > ( __elems_before ) <= ( size ( ) - __n ) / 2 )
     {
       if ( __first != begin ( ) )
  std :: copy_backward ( begin ( ), __first, __last );
       _M_erase_at_begin ( begin ( ) + __n );
     }
   else
     {
       if ( __last != end ( ) )
  std :: copy ( __last, end ( ), __first );
       _M_erase_at_end ( end ( ) - __n );
     }
   return begin ( ) + __elems_before;
 }
    }
# 216 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, class _Alloc >
    template < typename _InputIterator >
      void
      deque < _Tp, _Alloc > ::
      _M_assign_aux ( _InputIterator __first, _InputIterator __last,
      std :: input_iterator_tag )
      {
        iterator __cur = begin ( );
        for (; __first != __last && __cur != end ( ); ++ __cur, ++ __first )
          * __cur = * __first;
        if ( __first == __last )
          _M_erase_at_end ( __cur );
        else
          insert ( end ( ), __first, __last );
      }
# 232 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    deque < _Tp, _Alloc > ::
    _M_fill_insert ( iterator __pos, size_type __n, const value_type & __x )
    {
      if ( __pos . _M_cur == this -> _M_impl . _M_start . _M_cur )
 {
   iterator __new_start = _M_reserve_elements_at_front ( __n );
   try
     {
       std :: __uninitialized_fill_a ( __new_start, this -> _M_impl . _M_start,
       __x, _M_get_Tp_allocator ( ) );
       this -> _M_impl . _M_start = __new_start;
     }
   catch ( ... )
     {
       _M_destroy_nodes ( __new_start . _M_node,
          this -> _M_impl . _M_start . _M_node );
       throw;
     }
 }
      else if ( __pos . _M_cur == this -> _M_impl . _M_finish . _M_cur )
 {
   iterator __new_finish = _M_reserve_elements_at_back ( __n );
   try
     {
       std :: __uninitialized_fill_a ( this -> _M_impl . _M_finish,
       __new_finish, __x,
       _M_get_Tp_allocator ( ) );
       this -> _M_impl . _M_finish = __new_finish;
     }
   catch ( ... )
     {
       _M_destroy_nodes ( this -> _M_impl . _M_finish . _M_node + 1,
          __new_finish . _M_node + 1 );
       throw;
     }
 }
      else
        _M_insert_aux ( __pos, __n, __x );
    }
# 274 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    deque < _Tp, _Alloc > ::
    _M_fill_initialize ( const value_type & __value )
    {
      _Map_pointer __cur;
      try
        {
          for ( __cur = this -> _M_impl . _M_start . _M_node;
        __cur < this -> _M_impl . _M_finish . _M_node;
        ++ __cur )
            std :: __uninitialized_fill_a ( * __cur, * __cur + _S_buffer_size ( ),
     __value, _M_get_Tp_allocator ( ) );
          std :: __uninitialized_fill_a ( this -> _M_impl . _M_finish . _M_first,
          this -> _M_impl . _M_finish . _M_cur,
          __value, _M_get_Tp_allocator ( ) );
        }
      catch ( ... )
        {
          std :: _Destroy ( this -> _M_impl . _M_start, iterator ( * __cur, __cur ),
   _M_get_Tp_allocator ( ) );
          throw;
        }
    }
# 299 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _InputIterator >
      void
      deque < _Tp, _Alloc > ::
      _M_range_initialize ( _InputIterator __first, _InputIterator __last,
                          std :: input_iterator_tag )
      {
        this -> _M_initialize_map ( 0 );
        try
          {
            for (; __first != __last; ++ __first )
              push_back ( * __first );
          }
        catch ( ... )
          {
            clear ( );
            throw;
          }
      }
# 319 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      deque < _Tp, _Alloc > ::
      _M_range_initialize ( _ForwardIterator __first, _ForwardIterator __last,
                          std :: forward_iterator_tag )
      {
        const size_type __n = std :: distance ( __first, __last );
        this -> _M_initialize_map ( __n );

        _Map_pointer __cur_node;
        try
          {
            for ( __cur_node = this -> _M_impl . _M_start . _M_node;
                 __cur_node < this -> _M_impl . _M_finish . _M_node;
                 ++ __cur_node )
       {
  _ForwardIterator __mid = __first;
  std :: advance ( __mid, _S_buffer_size ( ) );
  std :: __uninitialized_copy_a ( __first, __mid, * __cur_node,
         _M_get_Tp_allocator ( ) );
  __first = __mid;
       }
            std :: __uninitialized_copy_a ( __first, __last,
     this -> _M_impl . _M_finish . _M_first,
     _M_get_Tp_allocator ( ) );
          }
        catch ( ... )
          {
            std :: _Destroy ( this -> _M_impl . _M_start,
     iterator ( * __cur_node, __cur_node ),
     _M_get_Tp_allocator ( ) );
            throw;
          }
      }
# 356 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >






      void
      deque < _Tp, _Alloc > ::
      _M_push_back_aux ( const value_type & __t )

      {
 _M_reserve_map_at_back ( );
 * ( this -> _M_impl . _M_finish . _M_node + 1 ) = this -> _M_allocate_node ( );
 try
   {




     this -> _M_impl . construct ( this -> _M_impl . _M_finish . _M_cur, __t );

     this -> _M_impl . _M_finish . _M_set_node ( this -> _M_impl . _M_finish . _M_node
      + 1 );
     this -> _M_impl . _M_finish . _M_cur = this -> _M_impl . _M_finish . _M_first;
   }
 catch ( ... )
   {
     _M_deallocate_node ( * ( this -> _M_impl . _M_finish . _M_node + 1 ) );
     throw;
   }
      }
# 390 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >






      void
      deque < _Tp, _Alloc > ::
      _M_push_front_aux ( const value_type & __t )

      {
 _M_reserve_map_at_front ( );
 * ( this -> _M_impl . _M_start . _M_node - 1 ) = this -> _M_allocate_node ( );
 try
   {
     this -> _M_impl . _M_start . _M_set_node ( this -> _M_impl . _M_start . _M_node
            - 1 );
     this -> _M_impl . _M_start . _M_cur = this -> _M_impl . _M_start . _M_last - 1;




     this -> _M_impl . construct ( this -> _M_impl . _M_start . _M_cur, __t );

   }
 catch ( ... )
   {
     ++ this -> _M_impl . _M_start;
     _M_deallocate_node ( * ( this -> _M_impl . _M_start . _M_node - 1 ) );
     throw;
   }
      }
# 425 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void deque < _Tp, _Alloc > ::
    _M_pop_back_aux ( )
    {
      _M_deallocate_node ( this -> _M_impl . _M_finish . _M_first );
      this -> _M_impl . _M_finish . _M_set_node ( this -> _M_impl . _M_finish . _M_node - 1 );
      this -> _M_impl . _M_finish . _M_cur = this -> _M_impl . _M_finish . _M_last - 1;
      this -> _M_impl . destroy ( this -> _M_impl . _M_finish . _M_cur );
    }
# 440 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void deque < _Tp, _Alloc > ::
    _M_pop_front_aux ( )
    {
      this -> _M_impl . destroy ( this -> _M_impl . _M_start . _M_cur );
      _M_deallocate_node ( this -> _M_impl . _M_start . _M_first );
      this -> _M_impl . _M_start . _M_set_node ( this -> _M_impl . _M_start . _M_node + 1 );
      this -> _M_impl . _M_start . _M_cur = this -> _M_impl . _M_start . _M_first;
    }
# 450 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _InputIterator >
      void
      deque < _Tp, _Alloc > ::
      _M_range_insert_aux ( iterator __pos,
                          _InputIterator __first, _InputIterator __last,
                          std :: input_iterator_tag )
      { std :: copy ( __first, __last, std :: inserter ( * this, __pos ) ); }
# 459 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      deque < _Tp, _Alloc > ::
      _M_range_insert_aux ( iterator __pos,
                          _ForwardIterator __first, _ForwardIterator __last,
                          std :: forward_iterator_tag )
      {
        const size_type __n = std :: distance ( __first, __last );
        if ( __pos . _M_cur == this -> _M_impl . _M_start . _M_cur )
   {
     iterator __new_start = _M_reserve_elements_at_front ( __n );
     try
       {
  std :: __uninitialized_copy_a ( __first, __last, __new_start,
         _M_get_Tp_allocator ( ) );
  this -> _M_impl . _M_start = __new_start;
       }
     catch ( ... )
       {
  _M_destroy_nodes ( __new_start . _M_node,
     this -> _M_impl . _M_start . _M_node );
  throw;
       }
   }
        else if ( __pos . _M_cur == this -> _M_impl . _M_finish . _M_cur )
   {
     iterator __new_finish = _M_reserve_elements_at_back ( __n );
     try
       {
  std :: __uninitialized_copy_a ( __first, __last,
         this -> _M_impl . _M_finish,
         _M_get_Tp_allocator ( ) );
  this -> _M_impl . _M_finish = __new_finish;
       }
     catch ( ... )
       {
  _M_destroy_nodes ( this -> _M_impl . _M_finish . _M_node + 1,
     __new_finish . _M_node + 1 );
  throw;
       }
   }
        else
          _M_insert_aux ( __pos, __first, __last, __n );
      }
# 505 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >

    typename deque < _Tp, _Alloc > :: iterator
      deque < _Tp, _Alloc > ::
      _M_insert_aux ( iterator __pos, const value_type & __x )
      {
 value_type __x_copy = __x;

 difference_type __index = __pos - this -> _M_impl . _M_start;
 if ( static_cast < size_type > ( __index ) < size ( ) / 2 )
   {
     push_front ( ( front ( ) ) );
     iterator __front1 = this -> _M_impl . _M_start;
     ++ __front1;
     iterator __front2 = __front1;
     ++ __front2;
     __pos = this -> _M_impl . _M_start + __index;
     iterator __pos1 = __pos;
     ++ __pos1;
     std :: copy ( __front2, __pos1, __front1 );
   }
 else
   {
     push_back ( ( back ( ) ) );
     iterator __back1 = this -> _M_impl . _M_finish;
     -- __back1;
     iterator __back2 = __back1;
     -- __back2;
     __pos = this -> _M_impl . _M_start + __index;
     std :: copy_backward ( __pos, __back2, __back1 );
   }
 * __pos = ( __x_copy );
 return __pos;
      }
# 547 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    deque < _Tp, _Alloc > ::
    _M_insert_aux ( iterator __pos, size_type __n, const value_type & __x )
    {
      const difference_type __elems_before = __pos - this -> _M_impl . _M_start;
      const size_type __length = this -> size ( );
      value_type __x_copy = __x;
      if ( __elems_before < difference_type ( __length / 2 ) )
 {
   iterator __new_start = _M_reserve_elements_at_front ( __n );
   iterator __old_start = this -> _M_impl . _M_start;
   __pos = this -> _M_impl . _M_start + __elems_before;
   try
     {
       if ( __elems_before >= difference_type ( __n ) )
  {
    iterator __start_n = ( this -> _M_impl . _M_start
     + difference_type ( __n ) );
    std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
           __start_n, __new_start,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_start = __new_start;
    std :: copy ( __start_n, __pos, __old_start );
    std :: fill ( __pos - difference_type ( __n ), __pos, __x_copy );
  }
       else
  {
    std :: __uninitialized_move_fill ( this -> _M_impl . _M_start,
       __pos, __new_start,
       this -> _M_impl . _M_start,
       __x_copy,
       _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_start = __new_start;
    std :: fill ( __old_start, __pos, __x_copy );
  }
     }
   catch ( ... )
     {
       _M_destroy_nodes ( __new_start . _M_node,
          this -> _M_impl . _M_start . _M_node );
       throw;
     }
 }
      else
 {
   iterator __new_finish = _M_reserve_elements_at_back ( __n );
   iterator __old_finish = this -> _M_impl . _M_finish;
   const difference_type __elems_after =
     difference_type ( __length ) - __elems_before;
   __pos = this -> _M_impl . _M_finish - __elems_after;
   try
     {
       if ( __elems_after > difference_type ( __n ) )
  {
    iterator __finish_n = ( this -> _M_impl . _M_finish
      - difference_type ( __n ) );
    std :: __uninitialized_move_a ( __finish_n,
           this -> _M_impl . _M_finish,
           this -> _M_impl . _M_finish,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish = __new_finish;
    std :: copy_backward ( __pos, __finish_n, __old_finish );
    std :: fill ( __pos, __pos + difference_type ( __n ), __x_copy );
  }
       else
  {
    std :: __uninitialized_fill_move ( this -> _M_impl . _M_finish,
       __pos + difference_type ( __n ),
       __x_copy, __pos,
       this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish = __new_finish;
    std :: fill ( __pos, __old_finish, __x_copy );
  }
     }
   catch ( ... )
     {
       _M_destroy_nodes ( this -> _M_impl . _M_finish . _M_node + 1,
          __new_finish . _M_node + 1 );
       throw;
     }
 }
    }
# 632 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      deque < _Tp, _Alloc > ::
      _M_insert_aux ( iterator __pos,
                    _ForwardIterator __first, _ForwardIterator __last,
                    size_type __n )
      {
        const difference_type __elemsbefore = __pos - this -> _M_impl . _M_start;
        const size_type __length = size ( );
        if ( static_cast < size_type > ( __elemsbefore ) < __length / 2 )
   {
     iterator __new_start = _M_reserve_elements_at_front ( __n );
     iterator __old_start = this -> _M_impl . _M_start;
     __pos = this -> _M_impl . _M_start + __elemsbefore;
     try
       {
  if ( __elemsbefore >= difference_type ( __n ) )
    {
      iterator __start_n = ( this -> _M_impl . _M_start
       + difference_type ( __n ) );
      std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
      __start_n, __new_start,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_start = __new_start;
      std :: copy ( __start_n, __pos, __old_start );
      std :: copy ( __first, __last, __pos - difference_type ( __n ) );
    }
  else
    {
      _ForwardIterator __mid = __first;
      std :: advance ( __mid, difference_type ( __n ) - __elemsbefore );
      std :: __uninitialized_move_copy ( this -> _M_impl . _M_start,
         __pos, __first, __mid,
         __new_start,
         _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_start = __new_start;
      std :: copy ( __mid, __last, __old_start );
    }
       }
     catch ( ... )
       {
  _M_destroy_nodes ( __new_start . _M_node,
     this -> _M_impl . _M_start . _M_node );
  throw;
       }
   }
        else
        {
          iterator __new_finish = _M_reserve_elements_at_back ( __n );
          iterator __old_finish = this -> _M_impl . _M_finish;
          const difference_type __elemsafter =
            difference_type ( __length ) - __elemsbefore;
          __pos = this -> _M_impl . _M_finish - __elemsafter;
          try
            {
              if ( __elemsafter > difference_type ( __n ) )
  {
    iterator __finish_n = ( this -> _M_impl . _M_finish
      - difference_type ( __n ) );
    std :: __uninitialized_move_a ( __finish_n,
           this -> _M_impl . _M_finish,
           this -> _M_impl . _M_finish,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish = __new_finish;
    std :: copy_backward ( __pos, __finish_n, __old_finish );
    std :: copy ( __first, __last, __pos );
  }
              else
  {
    _ForwardIterator __mid = __first;
    std :: advance ( __mid, __elemsafter );
    std :: __uninitialized_copy_move ( __mid, __last, __pos,
       this -> _M_impl . _M_finish,
       this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish = __new_finish;
    std :: copy ( __first, __mid, __pos );
  }
            }
          catch ( ... )
            {
              _M_destroy_nodes ( this -> _M_impl . _M_finish . _M_node + 1,
          __new_finish . _M_node + 1 );
              throw;
            }
        }
      }
# 721 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
     void
     deque < _Tp, _Alloc > ::
     _M_destroy_data_aux ( iterator __first, iterator __last )
     {
       for ( _Map_pointer __node = __first . _M_node + 1;
     __node < __last . _M_node; ++ __node )
  std :: _Destroy ( * __node, * __node + _S_buffer_size ( ),
         _M_get_Tp_allocator ( ) );

       if ( __first . _M_node != __last . _M_node )
  {
    std :: _Destroy ( __first . _M_cur, __first . _M_last,
    _M_get_Tp_allocator ( ) );
    std :: _Destroy ( __last . _M_first, __last . _M_cur,
    _M_get_Tp_allocator ( ) );
  }
       else
  std :: _Destroy ( __first . _M_cur, __last . _M_cur,
         _M_get_Tp_allocator ( ) );
     }
# 743 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    deque < _Tp, _Alloc > ::
    _M_new_elements_at_front ( size_type __new_elems )
    {
      if ( this -> max_size ( ) - this -> size ( ) < __new_elems )
 __throw_length_error ( ( "deque::_M_new_elements_at_front" ) );

      const size_type __new_nodes = ( ( __new_elems + _S_buffer_size ( ) - 1 )
         / _S_buffer_size ( ) );
      _M_reserve_map_at_front ( __new_nodes );
      size_type __i;
      try
        {
          for ( __i = 1; __i <= __new_nodes; ++ __i )
            * ( this -> _M_impl . _M_start . _M_node - __i ) = this -> _M_allocate_node ( );
        }
      catch ( ... )
        {
          for ( size_type __j = 1; __j < __i; ++ __j )
            _M_deallocate_node ( * ( this -> _M_impl . _M_start . _M_node - __j ) );
          throw;
        }
    }
# 768 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    deque < _Tp, _Alloc > ::
    _M_new_elements_at_back ( size_type __new_elems )
    {
      if ( this -> max_size ( ) - this -> size ( ) < __new_elems )
 __throw_length_error ( ( "deque::_M_new_elements_at_back" ) );

      const size_type __new_nodes = ( ( __new_elems + _S_buffer_size ( ) - 1 )
         / _S_buffer_size ( ) );
      _M_reserve_map_at_back ( __new_nodes );
      size_type __i;
      try
        {
          for ( __i = 1; __i <= __new_nodes; ++ __i )
            * ( this -> _M_impl . _M_finish . _M_node + __i ) = this -> _M_allocate_node ( );
        }
      catch ( ... )
        {
          for ( size_type __j = 1; __j < __i; ++ __j )
            _M_deallocate_node ( * ( this -> _M_impl . _M_finish . _M_node + __j ) );
          throw;
        }
    }
# 793 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    deque < _Tp, _Alloc > ::
    _M_reallocate_map ( size_type __nodes_to_add, bool __add_at_front )
    {
      const size_type __old_num_nodes
 = this -> _M_impl . _M_finish . _M_node - this -> _M_impl . _M_start . _M_node + 1;
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;

      _Map_pointer __new_nstart;
      if ( this -> _M_impl . _M_map_size > 2 * __new_num_nodes )
 {
   __new_nstart = this -> _M_impl . _M_map + ( this -> _M_impl . _M_map_size
      - __new_num_nodes ) / 2
                  + ( __add_at_front ? __nodes_to_add : 0 );
   if ( __new_nstart < this -> _M_impl . _M_start . _M_node )
     std :: copy ( this -> _M_impl . _M_start . _M_node,
        this -> _M_impl . _M_finish . _M_node + 1,
        __new_nstart );
   else
     std :: copy_backward ( this -> _M_impl . _M_start . _M_node,
          this -> _M_impl . _M_finish . _M_node + 1,
          __new_nstart + __old_num_nodes );
 }
      else
 {
   size_type __new_map_size = this -> _M_impl . _M_map_size
                              + std :: max ( this -> _M_impl . _M_map_size,
      __nodes_to_add ) + 2;

   _Map_pointer __new_map = this -> _M_allocate_map ( __new_map_size );
   __new_nstart = __new_map + ( __new_map_size - __new_num_nodes ) / 2
                  + ( __add_at_front ? __nodes_to_add : 0 );
   std :: copy ( this -> _M_impl . _M_start . _M_node,
      this -> _M_impl . _M_finish . _M_node + 1,
      __new_nstart );
   _M_deallocate_map ( this -> _M_impl . _M_map, this -> _M_impl . _M_map_size );

   this -> _M_impl . _M_map = __new_map;
   this -> _M_impl . _M_map_size = __new_map_size;
 }

      this -> _M_impl . _M_start . _M_set_node ( __new_nstart );
      this -> _M_impl . _M_finish . _M_set_node ( __new_nstart + __old_num_nodes - 1 );
    }
# 841 "/usr/include/c++/4.4/bits/deque.tcc" 3
template < typename _Tp >
    void
    fill ( const _Deque_iterator < _Tp, _Tp &, _Tp * > & __first,
  const _Deque_iterator < _Tp, _Tp &, _Tp * > & __last, const _Tp & __value )
    {
      typedef typename _Deque_iterator < _Tp, _Tp &, _Tp * > :: _Self _Self;

      for ( typename _Self :: _Map_pointer __node = __first . _M_node + 1;
           __node < __last . _M_node; ++ __node )
 std :: fill ( * __node, * __node + _Self :: _S_buffer_size ( ), __value );

      if ( __first . _M_node != __last . _M_node )
 {
   std :: fill ( __first . _M_cur, __first . _M_last, __value );
   std :: fill ( __last . _M_first, __last . _M_cur, __value );
 }
      else
 std :: fill ( __first . _M_cur, __last . _M_cur, __value );
    }
# 861 "/usr/include/c++/4.4/bits/deque.tcc" 3
}
# 65 "/usr/include/c++/4.4/bits/stl_vector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    struct _Vector_base
    {
      typedef typename _Alloc :: template rebind < _Tp > :: other _Tp_alloc_type;

      struct _Vector_impl
      : public _Tp_alloc_type
      {
 typename _Tp_alloc_type :: pointer _M_start;
 typename _Tp_alloc_type :: pointer _M_finish;
 typename _Tp_alloc_type :: pointer _M_end_of_storage;

 _Vector_impl ( )
 : _Tp_alloc_type ( ), _M_start ( 0 ), _M_finish ( 0 ), _M_end_of_storage ( 0 )
 { }

 _Vector_impl ( _Tp_alloc_type const & __a )
 : _Tp_alloc_type ( __a ), _M_start ( 0 ), _M_finish ( 0 ), _M_end_of_storage ( 0 )
 { }
      };

    public :
      typedef _Alloc allocator_type;

      _Tp_alloc_type &
      _M_get_Tp_allocator ( )
      { return * static_cast < _Tp_alloc_type * > ( & this -> _M_impl ); }

      const _Tp_alloc_type &
      _M_get_Tp_allocator ( ) const
      { return * static_cast < const _Tp_alloc_type * > ( & this -> _M_impl ); }

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Tp_allocator ( ) ); }

      _Vector_base ( )
      : _M_impl ( ) { }

      _Vector_base ( const allocator_type & __a )
      : _M_impl ( __a ) { }

      _Vector_base ( size_t __n, const allocator_type & __a )
      : _M_impl ( __a )
      {
 this -> _M_impl . _M_start = this -> _M_allocate ( __n );
 this -> _M_impl . _M_finish = this -> _M_impl . _M_start;
 this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __n;
      }

      ~ _Vector_base ( )
      { _M_deallocate ( this -> _M_impl . _M_start, this -> _M_impl . _M_end_of_storage
        - this -> _M_impl . _M_start ); }

    public :
      _Vector_impl _M_impl;

      typename _Tp_alloc_type :: pointer
      _M_allocate ( size_t __n )
      { return __n != 0 ? _M_impl . allocate ( __n ) : 0; }

      void
      _M_deallocate ( typename _Tp_alloc_type :: pointer __p, size_t __n )
      {
 if ( __p )
   _M_impl . deallocate ( __p, __n );
      }
    };
# 169 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc = std :: allocator < _Tp > >
    class vector : protected _Vector_base < _Tp, _Alloc >
    {

      typedef typename _Alloc :: value_type _Alloc_value_type;



      typedef _Vector_base < _Tp, _Alloc > _Base;
      typedef typename _Base :: _Tp_alloc_type _Tp_alloc_type;

    public :
      typedef _Tp value_type;
      typedef typename _Tp_alloc_type :: pointer pointer;
      typedef typename _Tp_alloc_type :: const_pointer const_pointer;
      typedef typename _Tp_alloc_type :: reference reference;
      typedef typename _Tp_alloc_type :: const_reference const_reference;
      typedef __gnu_cxx :: __normal_iterator < pointer, vector > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, vector >
      const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

    protected :
      using _Base :: _M_allocate;
      using _Base :: _M_deallocate;
      using _Base :: _M_impl;
      using _Base :: _M_get_Tp_allocator;

    public :





      vector ( )
      : _Base ( ) { }





      explicit
      vector ( const allocator_type & __a )
      : _Base ( __a ) { }

      explicit
      vector ( size_type __n, const value_type & __value = value_type ( ),
      const allocator_type & __a = allocator_type ( ) )
      : _Base ( __n, __a )
      { _M_fill_initialize ( __n, __value ); }

      vector ( const vector & __x )
      : _Base ( __x . size ( ), __x . _M_get_Tp_allocator ( ) )
      { this -> _M_impl . _M_finish =
   std :: __uninitialized_copy_a ( __x . begin ( ), __x . end ( ),
          this -> _M_impl . _M_start,
          _M_get_Tp_allocator ( ) );
      }

      template < typename _InputIterator >
        vector ( _InputIterator __first, _InputIterator __last,
        const allocator_type & __a = allocator_type ( ) )
 : _Base ( __a )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_initialize_dispatch ( __first, __last, _Integral ( ) );
 }







      ~ vector ( )
      { std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
        _M_get_Tp_allocator ( ) ); }

      vector &
      operator = ( const vector & __x );

      void
      assign ( size_type __n, const value_type & __val )
      { _M_fill_assign ( __n, __val ); }

      template < typename _InputIterator >
        void
        assign ( _InputIterator __first, _InputIterator __last )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_assign_dispatch ( __first, __last, _Integral ( ) );
 }

      using _Base :: get_allocator;







      iterator
      begin ( )
      { return iterator ( this -> _M_impl . _M_start ); }






      const_iterator
      begin ( ) const
      { return const_iterator ( this -> _M_impl . _M_start ); }






      iterator
      end ( )
      { return iterator ( this -> _M_impl . _M_finish ); }






      const_iterator
      end ( ) const
      { return const_iterator ( this -> _M_impl . _M_finish ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( begin ( ) ); }

      size_type
      size ( ) const
      { return size_type ( this -> _M_impl . _M_finish - this -> _M_impl . _M_start ); }


      size_type
      max_size ( ) const
      { return _M_get_Tp_allocator ( ) . max_size ( ); }

      void
      resize ( size_type __new_size, value_type __x = value_type ( ) )
      {
 if ( __new_size < size ( ) )
   _M_erase_at_end ( this -> _M_impl . _M_start + __new_size );
 else
   insert ( end ( ), __new_size - size ( ), __x );
      }





      size_type
      capacity ( ) const
      { return size_type ( this -> _M_impl . _M_end_of_storage
    - this -> _M_impl . _M_start ); }





      bool
      empty ( ) const
      { return begin ( ) == end ( ); }

      void
      reserve ( size_type __n );

      reference
      operator [ ] ( size_type __n )
      { return * ( this -> _M_impl . _M_start + __n ); }

      const_reference
      operator [ ] ( size_type __n ) const
      { return * ( this -> _M_impl . _M_start + __n ); }

    protected :

      void
      _M_range_check ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "vector::_M_range_check" ) );
      }

    public :

      reference
      at ( size_type __n )
      {
 _M_range_check ( __n );
 return ( * this ) [ __n ];
      }

      const_reference
      at ( size_type __n ) const
      {
 _M_range_check ( __n );
 return ( * this ) [ __n ];
      }





      reference
      front ( )
      { return * begin ( ); }





      const_reference
      front ( ) const
      { return * begin ( ); }





      reference
      back ( )
      { return * ( end ( ) - 1 ); }





      const_reference
      back ( ) const
      { return * ( end ( ) - 1 ); }

      pointer
      data ( )
      { return pointer ( this -> _M_impl . _M_start ); }

      const_pointer
      data ( ) const
      { return const_pointer ( this -> _M_impl . _M_start ); }

      void
      push_back ( const value_type & __x )
      {
 if ( this -> _M_impl . _M_finish != this -> _M_impl . _M_end_of_storage )
   {
     this -> _M_impl . construct ( this -> _M_impl . _M_finish, __x );
     ++ this -> _M_impl . _M_finish;
   }
 else
   _M_insert_aux ( end ( ), __x );
      }

      void
      pop_back ( )
      {
 -- this -> _M_impl . _M_finish;
 this -> _M_impl . destroy ( this -> _M_impl . _M_finish );
      }

      iterator
      insert ( iterator __position, const value_type & __x );

      void
      insert ( iterator __position, size_type __n, const value_type & __x )
      { _M_fill_insert ( __position, __n, __x ); }

      template < typename _InputIterator >
        void
        insert ( iterator __position, _InputIterator __first,
        _InputIterator __last )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_insert_dispatch ( __position, __first, __last, _Integral ( ) );
 }

      iterator
      erase ( iterator __position );

      iterator
      erase ( iterator __first, iterator __last );

      void



      swap ( vector & __x )

      {
 std :: swap ( this -> _M_impl . _M_start, __x . _M_impl . _M_start );
 std :: swap ( this -> _M_impl . _M_finish, __x . _M_impl . _M_finish );
 std :: swap ( this -> _M_impl . _M_end_of_storage,
    __x . _M_impl . _M_end_of_storage );



 std :: __alloc_swap < _Tp_alloc_type > :: _S_do_it ( _M_get_Tp_allocator ( ),
          __x . _M_get_Tp_allocator ( ) );
      }







      void
      clear ( )
      { _M_erase_at_end ( this -> _M_impl . _M_start ); }

    protected :




      template < typename _ForwardIterator >
        pointer
        _M_allocate_and_copy ( size_type __n,
        _ForwardIterator __first, _ForwardIterator __last )
        {
   pointer __result = this -> _M_allocate ( __n );
   try
     {
       std :: __uninitialized_copy_a ( __first, __last, __result,
       _M_get_Tp_allocator ( ) );
       return __result;
     }
   catch ( ... )
     {
       _M_deallocate ( __result, __n );
       throw;
     }
 }

      template < typename _Integer >
        void
        _M_initialize_dispatch ( _Integer __n, _Integer __value, __true_type )
        {
   this -> _M_impl . _M_start = _M_allocate ( static_cast < size_type > ( __n ) );
   this -> _M_impl . _M_end_of_storage =
     this -> _M_impl . _M_start + static_cast < size_type > ( __n );
   _M_fill_initialize ( static_cast < size_type > ( __n ), __value );
 }


      template < typename _InputIterator >
        void
        _M_initialize_dispatch ( _InputIterator __first, _InputIterator __last,
          __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_range_initialize ( __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_range_initialize ( _InputIterator __first,
       _InputIterator __last, std :: input_iterator_tag )
        {
   for (; __first != __last; ++ __first )
     push_back ( * __first );
 }


      template < typename _ForwardIterator >
        void
        _M_range_initialize ( _ForwardIterator __first,
       _ForwardIterator __last, std :: forward_iterator_tag )
        {
   const size_type __n = std :: distance ( __first, __last );
   this -> _M_impl . _M_start = this -> _M_allocate ( __n );
   this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __n;
   this -> _M_impl . _M_finish =
     std :: __uninitialized_copy_a ( __first, __last,
     this -> _M_impl . _M_start,
     _M_get_Tp_allocator ( ) );
 }



      void
      _M_fill_initialize ( size_type __n, const value_type & __value )
      {
 std :: __uninitialized_fill_n_a ( this -> _M_impl . _M_start, __n, __value,
          _M_get_Tp_allocator ( ) );
 this -> _M_impl . _M_finish = this -> _M_impl . _M_end_of_storage;
      }

      template < typename _Integer >
        void
        _M_assign_dispatch ( _Integer __n, _Integer __val, __true_type )
        { _M_fill_assign ( __n, __val ); }


      template < typename _InputIterator >
        void
        _M_assign_dispatch ( _InputIterator __first, _InputIterator __last,
      __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_assign_aux ( __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_assign_aux ( _InputIterator __first, _InputIterator __last,
        std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
        std :: forward_iterator_tag );



      void
      _M_fill_assign ( size_type __n, const value_type & __val );

      template < typename _Integer >
        void
        _M_insert_dispatch ( iterator __pos, _Integer __n, _Integer __val,
      __true_type )
        { _M_fill_insert ( __pos, __n, __val ); }


      template < typename _InputIterator >
        void
        _M_insert_dispatch ( iterator __pos, _InputIterator __first,
      _InputIterator __last, __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_range_insert ( __pos, __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_range_insert ( iterator __pos, _InputIterator __first,
   _InputIterator __last, std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_range_insert ( iterator __pos, _ForwardIterator __first,
   _ForwardIterator __last, std :: forward_iterator_tag );



      void
      _M_fill_insert ( iterator __pos, size_type __n, const value_type & __x );



      void
      _M_insert_aux ( iterator __position, const value_type & __x );







      size_type
      _M_check_len ( size_type __n, const char * __s ) const
      {
 if ( max_size ( ) - size ( ) < __n )
   __throw_length_error ( ( __s ) );

 const size_type __len = size ( ) + std :: max ( size ( ), __n );
 return ( __len < size ( ) || __len > max_size ( ) ) ? max_size ( ) : __len;
      }





      void
      _M_erase_at_end ( pointer __pos )
      {
 std :: _Destroy ( __pos, this -> _M_impl . _M_finish, _M_get_Tp_allocator ( ) );
 this -> _M_impl . _M_finish = __pos;
      }
    };
# 1166 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator == ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ( __x . size ( ) == __y . size ( )
       && std :: equal ( __x . begin ( ), __x . end ( ), __y . begin ( ) ) ); }
# 1183 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator < ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return std :: lexicographical_compare ( __x . begin ( ), __x . end ( ),
       __y . begin ( ), __y . end ( ) ); }
# 1190 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator != ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 1196 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator > ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return __y < __x; }
# 1202 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator <= ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 1208 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator >= ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 1214 "/usr/include/c++/4.4/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline void
    swap ( vector < _Tp, _Alloc > & __x, vector < _Tp, _Alloc > & __y )
    { __x . swap ( __y ); }
# 1231 "/usr/include/c++/4.4/bits/stl_vector.h" 3
}
# 62 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef unsigned long _Bit_type;
# 65 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
enum { _S_word_bit = 64};
# 67 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
struct _Bit_reference {
# 69 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 70 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_type _M_mask;
# 72 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
# 73 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ }
# 75 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_reference() : _M_p((0)), _M_mask((0)) { }
# 77 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
operator bool() const
# 78 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return !(!((*(_M_p)) & (_M_mask))); }
# 81 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_reference &operator=(bool __x)
# 82 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 83 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
if (__x) {
# 84 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(*(_M_p)) |= (_M_mask); } else {
# 86 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(*(_M_p)) &= (~(_M_mask)); }
# 87 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 88 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 91 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_reference &operator=(const _Bit_reference &__x)
# 92 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return ((*this) = ((bool)__x)); }
# 95 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator==(const _Bit_reference &__x) const
# 96 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return ((bool)(*this)) == ((bool)__x); }
# 99 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator<(const _Bit_reference &__x) const
# 100 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return (!((bool)(*this))) && ((bool)__x); }
# 103 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
void flip()
# 104 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ (*(_M_p)) ^= (_M_mask); }
# 105 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
};
# 107 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
struct _Bit_iterator_base : public iterator< random_access_iterator_tag, bool> {
# 110 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 111 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
unsigned _M_offset;
# 113 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_iterator_base(_Bit_type *__x, unsigned __y) : _M_p(__x), _M_offset(__y)
# 114 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ }
# 117 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
void _M_bump_up()
# 118 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 119 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
if (((_M_offset)++) == (((int)_S_word_bit) - 1))
# 120 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 121 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(_M_offset) = (0);
# 122 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
++(_M_p);
# 123 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 124 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 127 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
void _M_bump_down()
# 128 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 129 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
if (((_M_offset)--) == (0))
# 130 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 131 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(_M_offset) = (((int)_S_word_bit) - 1);
# 132 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
--(_M_p);
# 133 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 134 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 137 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
void _M_incr(ptrdiff_t __i)
# 138 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 139 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
difference_type __n = (__i + (_M_offset));
# 140 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(_M_p) += (__n / ((int)_S_word_bit));
# 141 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
__n = (__n % ((int)_S_word_bit));
# 142 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
if (__n < (0))
# 143 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 144 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
__n += ((int)_S_word_bit);
# 145 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
--(_M_p);
# 146 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 147 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(_M_offset) = (static_cast< unsigned>(__n));
# 148 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 151 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator==(const _Bit_iterator_base &__i) const
# 152 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return ((_M_p) == (__i._M_p)) && ((_M_offset) == (__i._M_offset)); }
# 155 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator<(const _Bit_iterator_base &__i) const
# 156 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 157 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return ((_M_p) < (__i._M_p)) || (((_M_p) == (__i._M_p)) && ((_M_offset) < (__i._M_offset)));
# 159 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 162 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator!=(const _Bit_iterator_base &__i) const
# 163 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return !((*this) == __i); }
# 166 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator>(const _Bit_iterator_base &__i) const
# 167 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return (__i < (*this)); }
# 170 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator<=(const _Bit_iterator_base &__i) const
# 171 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return !(__i < (*this)); }
# 174 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
bool operator>=(const _Bit_iterator_base &__i) const
# 175 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return !((*this) < __i); }
# 176 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
};
# 179 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
inline ptrdiff_t operator-(const _Bit_iterator_base &__x, const _Bit_iterator_base &__y)
# 180 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 181 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return ((((int)_S_word_bit) * ((__x._M_p) - (__y._M_p))) + (__x._M_offset)) - (__y._M_offset);
# 183 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 185 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
struct _Bit_iterator : public _Bit_iterator_base {
# 187 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef _Bit_reference reference;
# 188 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef _Bit_reference *pointer;
# 189 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef _Bit_iterator iterator;
# 191 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_iterator() : _Bit_iterator_base(0, 0) { }
# 193 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 194 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ }
# 197 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
reference operator*() const
# 198 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return reference(_M_p, 1UL << (_M_offset)); }
# 201 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator &operator++()
# 202 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 203 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_up();
# 204 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 205 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 208 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator operator++(int)
# 209 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 210 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 211 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_up();
# 212 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return __tmp;
# 213 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 216 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator &operator--()
# 217 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 218 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_down();
# 219 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 220 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 223 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator operator--(int)
# 224 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 225 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 226 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_down();
# 227 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return __tmp;
# 228 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 231 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator &operator+=(difference_type __i)
# 232 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 233 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 234 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 235 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 238 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator &operator-=(difference_type __i)
# 239 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 240 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
((*this) += (-__i));
# 241 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 242 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 245 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator operator+(difference_type __i) const
# 246 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 247 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 248 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return (__tmp += __i);
# 249 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 252 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator operator-(difference_type __i) const
# 253 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 254 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 255 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 256 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 259 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
reference operator[](difference_type __i) const
# 260 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 261 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
};
# 264 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
inline _Bit_iterator operator+(ptrdiff_t __n, const _Bit_iterator &__x)
# 265 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 267 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
struct _Bit_const_iterator : public _Bit_iterator_base {
# 269 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef bool reference;
# 270 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef bool const_reference;
# 271 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef const bool *pointer;
# 272 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
typedef _Bit_const_iterator const_iterator;
# 274 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
# 276 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_const_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 277 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ }
# 279 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
_Bit_const_iterator(const _Bit_iterator &__x) : _Bit_iterator_base(__x._M_p, __x._M_offset)
# 280 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ }
# 283 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_reference operator*() const
# 284 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return _Bit_reference(_M_p, 1UL << (_M_offset)); }
# 287 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator &operator++()
# 288 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 289 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_up();
# 290 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 291 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 294 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator operator++(int)
# 295 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 296 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 297 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_up();
# 298 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return __tmp;
# 299 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 302 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator &operator--()
# 303 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 304 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_down();
# 305 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 306 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 309 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator operator--(int)
# 310 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 311 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 312 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_bump_down();
# 313 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return __tmp;
# 314 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 317 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator &operator+=(difference_type __i)
# 318 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 319 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 320 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 321 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 324 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator &operator-=(difference_type __i)
# 325 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 326 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
((*this) += (-__i));
# 327 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return *this;
# 328 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 331 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator operator+(difference_type __i) const
# 332 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 333 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 334 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return (__tmp += __i);
# 335 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 338 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator operator-(difference_type __i) const
# 339 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 340 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 341 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 342 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 345 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
const_reference operator[](difference_type __i) const
# 346 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 347 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
};
# 350 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
inline _Bit_const_iterator operator+(ptrdiff_t __n, const _Bit_const_iterator &__x)
# 351 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 354 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
inline void __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)
# 355 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 356 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
for (; (__first != __last); (++__first)) {
# 357 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
(((*__first)) = __x); }
# 358 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 361 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
inline void fill(_Bit_iterator __first, _Bit_iterator __last, const bool &__x)
# 362 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 363 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
if ((__first._M_p) != (__last._M_p))
# 364 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
{
# 365 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
std::fill((__first._M_p) + 1, __last._M_p, (__x ? (~0) : 0));
# 366 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
__fill_bvector(__first, _Bit_iterator((__first._M_p) + 1, 0), __x);
# 367 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
__fill_bvector(_Bit_iterator(__last._M_p, 0), __last, __x);
# 368 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
} else {
# 370 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
__fill_bvector(__first, __last, __x); }
# 371 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 373 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
template < typename _Alloc >
    struct _Bvector_base
    {
      typedef typename _Alloc :: template rebind < _Bit_type > :: other
        _Bit_alloc_type;

      struct _Bvector_impl
      : public _Bit_alloc_type
      {
 _Bit_iterator _M_start;
 _Bit_iterator _M_finish;
 _Bit_type * _M_end_of_storage;

 _Bvector_impl ( )
 : _Bit_alloc_type ( ), _M_start ( ), _M_finish ( ), _M_end_of_storage ( 0 )
 { }

 _Bvector_impl ( const _Bit_alloc_type & __a )
 : _Bit_alloc_type ( __a ), _M_start ( ), _M_finish ( ), _M_end_of_storage ( 0 )
 { }
      };

    public :
      typedef _Alloc allocator_type;

      _Bit_alloc_type &
      _M_get_Bit_allocator ( )
      { return * static_cast < _Bit_alloc_type * > ( & this -> _M_impl ); }

      const _Bit_alloc_type &
      _M_get_Bit_allocator ( ) const
      { return * static_cast < const _Bit_alloc_type * > ( & this -> _M_impl ); }

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Bit_allocator ( ) ); }

      _Bvector_base ( )
      : _M_impl ( ) { }

      _Bvector_base ( const allocator_type & __a )
      : _M_impl ( __a ) { }

      ~ _Bvector_base ( )
      { this -> _M_deallocate ( ); }

    protected :
      _Bvector_impl _M_impl;

      _Bit_type *
      _M_allocate ( size_t __n )
      { return _M_impl . allocate ( ( __n + int ( _S_word_bit ) - 1 )
    / int ( _S_word_bit ) ); }

      void
      _M_deallocate ( )
      {
 if ( _M_impl . _M_start . _M_p )
   _M_impl . deallocate ( _M_impl . _M_start . _M_p,
        _M_impl . _M_end_of_storage - _M_impl . _M_start . _M_p );
      }
    };
# 449 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 454 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 473 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
template < typename _Alloc >
  class vector < bool, _Alloc > : protected _Bvector_base < _Alloc >
  {
    typedef _Bvector_base < _Alloc > _Base;

  public :
    typedef bool value_type;
    typedef size_t size_type;
    typedef ptrdiff_t difference_type;
    typedef _Bit_reference reference;
    typedef bool const_reference;
    typedef _Bit_reference * pointer;
    typedef const bool * const_pointer;
    typedef _Bit_iterator iterator;
    typedef _Bit_const_iterator const_iterator;
    typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
    typedef std :: reverse_iterator < iterator > reverse_iterator;
    typedef _Alloc allocator_type;

    allocator_type get_allocator ( ) const
    { return _Base :: get_allocator ( ); }

  protected :
    using _Base :: _M_allocate;
    using _Base :: _M_deallocate;
    using _Base :: _M_get_Bit_allocator;

  public :
    vector ( )
    : _Base ( ) { }

    explicit
    vector ( const allocator_type & __a )
    : _Base ( __a ) { }

    explicit
    vector ( size_type __n, const bool & __value = bool ( ),
    const allocator_type & __a = allocator_type ( ) )
    : _Base ( __a )
    {
      _M_initialize ( __n );
      std :: fill ( this -> _M_impl . _M_start . _M_p, this -> _M_impl . _M_end_of_storage,
  __value ? ~ 0 : 0 );
    }

    vector ( const vector & __x )
    : _Base ( __x . _M_get_Bit_allocator ( ) )
    {
      _M_initialize ( __x . size ( ) );
      _M_copy_aligned ( __x . begin ( ), __x . end ( ), this -> _M_impl . _M_start );
    }

    template < typename _InputIterator >
      vector ( _InputIterator __first, _InputIterator __last,
      const allocator_type & __a = allocator_type ( ) )
      : _Base ( __a )
      {
 typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
 _M_initialize_dispatch ( __first, __last, _Integral ( ) );
      }

    ~ vector ( ) { }

    vector &
    operator = ( const vector & __x )
    {
      if ( & __x == this )
 return * this;
      if ( __x . size ( ) > capacity ( ) )
 {
   this -> _M_deallocate ( );
   _M_initialize ( __x . size ( ) );
 }
      this -> _M_impl . _M_finish = _M_copy_aligned ( __x . begin ( ), __x . end ( ),
      begin ( ) );
      return * this;
    }

    void
    assign ( size_type __n, const bool & __x )
    { _M_fill_assign ( __n, __x ); }

    template < typename _InputIterator >
      void
      assign ( _InputIterator __first, _InputIterator __last )
      {
 typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
 _M_assign_dispatch ( __first, __last, _Integral ( ) );
      }







    iterator
    begin ( )
    { return this -> _M_impl . _M_start; }

    const_iterator
    begin ( ) const
    { return this -> _M_impl . _M_start; }

    iterator
    end ( )
    { return this -> _M_impl . _M_finish; }

    const_iterator
    end ( ) const
    { return this -> _M_impl . _M_finish; }

    reverse_iterator
    rbegin ( )
    { return reverse_iterator ( end ( ) ); }

    const_reverse_iterator
    rbegin ( ) const
    { return const_reverse_iterator ( end ( ) ); }

    reverse_iterator
    rend ( )
    { return reverse_iterator ( begin ( ) ); }

    const_reverse_iterator
    rend ( ) const
    { return const_reverse_iterator ( begin ( ) ); }

    size_type
    size ( ) const
    { return size_type ( end ( ) - begin ( ) ); }

    size_type
    max_size ( ) const
    {
      const size_type __isize =
 __gnu_cxx :: __numeric_traits < difference_type > :: __max
 - int ( _S_word_bit ) + 1;
      const size_type __asize = _M_get_Bit_allocator ( ) . max_size ( );
      return ( __asize <= __isize / int ( _S_word_bit )
       ? __asize * int ( _S_word_bit ) : __isize );
    }

    size_type
    capacity ( ) const
    { return size_type ( const_iterator ( this -> _M_impl . _M_end_of_storage, 0 )
         - begin ( ) ); }

    bool
    empty ( ) const
    { return begin ( ) == end ( ); }

    reference
    operator [ ] ( size_type __n )
    {
      return * iterator ( this -> _M_impl . _M_start . _M_p
         + __n / int ( _S_word_bit ), __n % int ( _S_word_bit ) );
    }

    const_reference
    operator [ ] ( size_type __n ) const
    {
      return * const_iterator ( this -> _M_impl . _M_start . _M_p
        + __n / int ( _S_word_bit ), __n % int ( _S_word_bit ) );
    }

  protected :
    void
    _M_range_check ( size_type __n ) const
    {
      if ( __n >= this -> size ( ) )
        __throw_out_of_range ( ( "vector<bool>::_M_range_check" ) );
    }

  public :
    reference
    at ( size_type __n )
    { _M_range_check ( __n ); return ( * this ) [ __n ]; }

    const_reference
    at ( size_type __n ) const
    { _M_range_check ( __n ); return ( * this ) [ __n ]; }

    void
    reserve ( size_type __n );

    reference
    front ( )
    { return * begin ( ); }

    const_reference
    front ( ) const
    { return * begin ( ); }

    reference
    back ( )
    { return * ( end ( ) - 1 ); }

    const_reference
    back ( ) const
    { return * ( end ( ) - 1 ); }






    void
    data ( ) { }

    void
    push_back ( bool __x )
    {
      if ( this -> _M_impl . _M_finish . _M_p != this -> _M_impl . _M_end_of_storage )
        * this -> _M_impl . _M_finish ++ = __x;
      else
        _M_insert_aux ( end ( ), __x );
    }

    void



    swap ( vector & __x )

    {
      std :: swap ( this -> _M_impl . _M_start, __x . _M_impl . _M_start );
      std :: swap ( this -> _M_impl . _M_finish, __x . _M_impl . _M_finish );
      std :: swap ( this -> _M_impl . _M_end_of_storage,
  __x . _M_impl . _M_end_of_storage );



      std :: __alloc_swap < typename _Base :: _Bit_alloc_type > ::
 _S_do_it ( _M_get_Bit_allocator ( ), __x . _M_get_Bit_allocator ( ) );
    }


    static void
    swap ( reference __x, reference __y )
    {
      bool __tmp = __x;
      __x = __y;
      __y = __tmp;
    }

    iterator
    insert ( iterator __position, const bool & __x = bool ( ) )
    {
      const difference_type __n = __position - begin ( );
      if ( this -> _M_impl . _M_finish . _M_p != this -> _M_impl . _M_end_of_storage
   && __position == end ( ) )
        * this -> _M_impl . _M_finish ++ = __x;
      else
        _M_insert_aux ( __position, __x );
      return begin ( ) + __n;
    }

    template < typename _InputIterator >
      void
      insert ( iterator __position,
      _InputIterator __first, _InputIterator __last )
      {
 typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
 _M_insert_dispatch ( __position, __first, __last, _Integral ( ) );
      }

    void
    insert ( iterator __position, size_type __n, const bool & __x )
    { _M_fill_insert ( __position, __n, __x ); }






    void
    pop_back ( )
    { -- this -> _M_impl . _M_finish; }

    iterator
    erase ( iterator __position )
    {
      if ( __position + 1 != end ( ) )
        std :: copy ( __position + 1, end ( ), __position );
      -- this -> _M_impl . _M_finish;
      return __position;
    }

    iterator
    erase ( iterator __first, iterator __last )
    {
      _M_erase_at_end ( std :: copy ( __last, end ( ), __first ) );
      return __first;
    }

    void
    resize ( size_type __new_size, bool __x = bool ( ) )
    {
      if ( __new_size < size ( ) )
        _M_erase_at_end ( begin ( ) + difference_type ( __new_size ) );
      else
        insert ( end ( ), __new_size - size ( ), __x );
    }

    void
    flip ( )
    {
      for ( _Bit_type * __p = this -> _M_impl . _M_start . _M_p;
    __p != this -> _M_impl . _M_end_of_storage; ++ __p )
        * __p = ~ * __p;
    }

    void
    clear ( )
    { _M_erase_at_end ( begin ( ) ); }


  protected :

    iterator
    _M_copy_aligned ( const_iterator __first, const_iterator __last,
      iterator __result )
    {
      _Bit_type * __q = std :: copy ( __first . _M_p, __last . _M_p, __result . _M_p );
      return std :: copy ( const_iterator ( __last . _M_p, 0 ), __last,
         iterator ( __q, 0 ) );
    }

    void
    _M_initialize ( size_type __n )
    {
      _Bit_type * __q = this -> _M_allocate ( __n );
      this -> _M_impl . _M_end_of_storage = ( __q
      + ( ( __n + int ( _S_word_bit ) - 1 )
         / int ( _S_word_bit ) ) );
      this -> _M_impl . _M_start = iterator ( __q, 0 );
      this -> _M_impl . _M_finish = this -> _M_impl . _M_start + difference_type ( __n );
    }





    template < typename _Integer >
      void
      _M_initialize_dispatch ( _Integer __n, _Integer __x, __true_type )
      {
 _M_initialize ( static_cast < size_type > ( __n ) );
 std :: fill ( this -> _M_impl . _M_start . _M_p,
    this -> _M_impl . _M_end_of_storage, __x ? ~ 0 : 0 );
      }

    template < typename _InputIterator >
      void
      _M_initialize_dispatch ( _InputIterator __first, _InputIterator __last,
        __false_type )
      { _M_initialize_range ( __first, __last,
       std :: __iterator_category ( __first ) ); }

    template < typename _InputIterator >
      void
      _M_initialize_range ( _InputIterator __first, _InputIterator __last,
     std :: input_iterator_tag )
      {
 for (; __first != __last; ++ __first )
   push_back ( * __first );
      }

    template < typename _ForwardIterator >
      void
      _M_initialize_range ( _ForwardIterator __first, _ForwardIterator __last,
     std :: forward_iterator_tag )
      {
 const size_type __n = std :: distance ( __first, __last );
 _M_initialize ( __n );
 std :: copy ( __first, __last, this -> _M_impl . _M_start );
      }



    template < typename _Integer >
      void
      _M_assign_dispatch ( _Integer __n, _Integer __val, __true_type )
      { _M_fill_assign ( __n, __val ); }

    template < class _InputIterator >
      void
      _M_assign_dispatch ( _InputIterator __first, _InputIterator __last,
    __false_type )
      { _M_assign_aux ( __first, __last, std :: __iterator_category ( __first ) ); }

    void
    _M_fill_assign ( size_t __n, bool __x )
    {
      if ( __n > size ( ) )
 {
   std :: fill ( this -> _M_impl . _M_start . _M_p,
      this -> _M_impl . _M_end_of_storage, __x ? ~ 0 : 0 );
   insert ( end ( ), __n - size ( ), __x );
 }
      else
 {
   _M_erase_at_end ( begin ( ) + __n );
   std :: fill ( this -> _M_impl . _M_start . _M_p,
      this -> _M_impl . _M_end_of_storage, __x ? ~ 0 : 0 );
 }
    }

    template < typename _InputIterator >
      void
      _M_assign_aux ( _InputIterator __first, _InputIterator __last,
      std :: input_iterator_tag )
      {
 iterator __cur = begin ( );
 for (; __first != __last && __cur != end ( ); ++ __cur, ++ __first )
   * __cur = * __first;
 if ( __first == __last )
   _M_erase_at_end ( __cur );
 else
   insert ( end ( ), __first, __last );
      }

    template < typename _ForwardIterator >
      void
      _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
      std :: forward_iterator_tag )
      {
 const size_type __len = std :: distance ( __first, __last );
 if ( __len < size ( ) )
   _M_erase_at_end ( std :: copy ( __first, __last, begin ( ) ) );
 else
   {
     _ForwardIterator __mid = __first;
     std :: advance ( __mid, size ( ) );
     std :: copy ( __first, __mid, begin ( ) );
     insert ( end ( ), __mid, __last );
   }
      }





    template < typename _Integer >
      void
      _M_insert_dispatch ( iterator __pos, _Integer __n, _Integer __x,
    __true_type )
      { _M_fill_insert ( __pos, __n, __x ); }

    template < typename _InputIterator >
      void
      _M_insert_dispatch ( iterator __pos,
    _InputIterator __first, _InputIterator __last,
    __false_type )
      { _M_insert_range ( __pos, __first, __last,
   std :: __iterator_category ( __first ) ); }

    void
    _M_fill_insert ( iterator __position, size_type __n, bool __x );

    template < typename _InputIterator >
      void
      _M_insert_range ( iterator __pos, _InputIterator __first,
        _InputIterator __last, std :: input_iterator_tag )
      {
 for (; __first != __last; ++ __first )
   {
     __pos = insert ( __pos, * __first );
     ++ __pos;
   }
      }

    template < typename _ForwardIterator >
      void
      _M_insert_range ( iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std :: forward_iterator_tag );

    void
    _M_insert_aux ( iterator __position, bool __x );

    size_type
    _M_check_len ( size_type __n, const char * __s ) const
    {
      if ( max_size ( ) - size ( ) < __n )
 __throw_length_error ( ( __s ) );

      const size_type __len = size ( ) + std :: max ( size ( ), __n );
      return ( __len < size ( ) || __len > max_size ( ) ) ? max_size ( ) : __len;
    }

    void
    _M_erase_at_end ( iterator __pos )
    { this -> _M_impl . _M_finish = __pos; }
  };
# 1022 "/usr/include/c++/4.4/bits/stl_bvector.h" 3
}
# 60 "/usr/include/c++/4.4/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    reserve ( size_type __n )
    {
      if ( __n > this -> max_size ( ) )
 __throw_length_error ( ( "vector::reserve" ) );
      if ( this -> capacity ( ) < __n )
 {
   const size_type __old_size = size ( );
   pointer __tmp = _M_allocate_and_copy ( __n,
   ( this -> _M_impl . _M_start ),
   ( this -> _M_impl . _M_finish ) );
   std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
   _M_get_Tp_allocator ( ) );
   _M_deallocate ( this -> _M_impl . _M_start,
   this -> _M_impl . _M_end_of_storage
   - this -> _M_impl . _M_start );
   this -> _M_impl . _M_start = __tmp;
   this -> _M_impl . _M_finish = __tmp + __old_size;
   this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __n;
 }
    }
# 104 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    typename vector < _Tp, _Alloc > :: iterator
    vector < _Tp, _Alloc > ::
    insert ( iterator __position, const value_type & __x )
    {
      const size_type __n = __position - begin ( );
      if ( this -> _M_impl . _M_finish != this -> _M_impl . _M_end_of_storage
   && __position == end ( ) )
 {
   this -> _M_impl . construct ( this -> _M_impl . _M_finish, __x );
   ++ this -> _M_impl . _M_finish;
 }
      else
 {

     _M_insert_aux ( __position, __x );
 }
      return iterator ( this -> _M_impl . _M_start + __n );
    }
# 131 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    typename vector < _Tp, _Alloc > :: iterator
    vector < _Tp, _Alloc > ::
    erase ( iterator __position )
    {
      if ( __position + 1 != end ( ) )
 std :: copy ( __position + 1, end ( ), __position );
      -- this -> _M_impl . _M_finish;
      this -> _M_impl . destroy ( this -> _M_impl . _M_finish );
      return __position;
    }
# 143 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    typename vector < _Tp, _Alloc > :: iterator
    vector < _Tp, _Alloc > ::
    erase ( iterator __first, iterator __last )
    {
      if ( __last != end ( ) )
 std :: copy ( __last, end ( ), __first );
      _M_erase_at_end ( __first . base ( ) + ( end ( ) - __last ) );
      return __first;
    }
# 154 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    vector < _Tp, _Alloc > &
    vector < _Tp, _Alloc > ::
    operator = ( const vector < _Tp, _Alloc > & __x )
    {
      if ( & __x != this )
 {
   const size_type __xlen = __x . size ( );
   if ( __xlen > capacity ( ) )
     {
       pointer __tmp = _M_allocate_and_copy ( __xlen, __x . begin ( ),
         __x . end ( ) );
       std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
       _M_deallocate ( this -> _M_impl . _M_start,
       this -> _M_impl . _M_end_of_storage
       - this -> _M_impl . _M_start );
       this -> _M_impl . _M_start = __tmp;
       this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __xlen;
     }
   else if ( size ( ) >= __xlen )
     {
       std :: _Destroy ( std :: copy ( __x . begin ( ), __x . end ( ), begin ( ) ),
       end ( ), _M_get_Tp_allocator ( ) );
     }
   else
     {
       std :: copy ( __x . _M_impl . _M_start, __x . _M_impl . _M_start + size ( ),
   this -> _M_impl . _M_start );
       std :: __uninitialized_copy_a ( __x . _M_impl . _M_start + size ( ),
       __x . _M_impl . _M_finish,
       this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
     }
   this -> _M_impl . _M_finish = this -> _M_impl . _M_start + __xlen;
 }
      return * this;
    }
# 193 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    _M_fill_assign ( size_t __n, const value_type & __val )
    {
      if ( __n > capacity ( ) )
 {
   vector __tmp ( __n, __val, _M_get_Tp_allocator ( ) );
   __tmp . swap ( * this );
 }
      else if ( __n > size ( ) )
 {
   std :: fill ( begin ( ), end ( ), __val );
   std :: __uninitialized_fill_n_a ( this -> _M_impl . _M_finish,
     __n - size ( ), __val,
     _M_get_Tp_allocator ( ) );
   this -> _M_impl . _M_finish += __n - size ( );
 }
      else
        _M_erase_at_end ( std :: fill_n ( this -> _M_impl . _M_start, __n, __val ) );
    }
# 215 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _InputIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_assign_aux ( _InputIterator __first, _InputIterator __last,
      std :: input_iterator_tag )
      {
 pointer __cur ( this -> _M_impl . _M_start );
 for (; __first != __last && __cur != this -> _M_impl . _M_finish;
      ++ __cur, ++ __first )
   * __cur = * __first;
 if ( __first == __last )
   _M_erase_at_end ( __cur );
 else
   insert ( end ( ), __first, __last );
      }
# 232 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
      std :: forward_iterator_tag )
      {
 const size_type __len = std :: distance ( __first, __last );

 if ( __len > capacity ( ) )
   {
     pointer __tmp ( _M_allocate_and_copy ( __len, __first, __last ) );
     std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
     _M_get_Tp_allocator ( ) );
     _M_deallocate ( this -> _M_impl . _M_start,
     this -> _M_impl . _M_end_of_storage
     - this -> _M_impl . _M_start );
     this -> _M_impl . _M_start = __tmp;
     this -> _M_impl . _M_finish = this -> _M_impl . _M_start + __len;
     this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_finish;
   }
 else if ( size ( ) >= __len )
   _M_erase_at_end ( std :: copy ( __first, __last, this -> _M_impl . _M_start ) );
 else
   {
     _ForwardIterator __mid = __first;
     std :: advance ( __mid, size ( ) );
     std :: copy ( __first, __mid, this -> _M_impl . _M_start );
     this -> _M_impl . _M_finish =
       std :: __uninitialized_copy_a ( __mid, __last,
       this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
   }
      }
# 293 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    _M_insert_aux ( iterator __position, const _Tp & __x )

    {
      if ( this -> _M_impl . _M_finish != this -> _M_impl . _M_end_of_storage )
 {
   this -> _M_impl . construct ( this -> _M_impl . _M_finish,
      ( * ( this -> _M_impl . _M_finish - 1 ) ) );

   ++ this -> _M_impl . _M_finish;

   _Tp __x_copy = __x;

   std :: copy_backward ( __position . base ( ), this -> _M_impl . _M_finish - 2, this -> _M_impl . _M_finish - 1 );



   * __position = __x_copy;



 }
      else
 {
   const size_type __len =
     _M_check_len ( size_type ( 1 ), "vector::_M_insert_aux" );
   const size_type __elems_before = __position - begin ( );
   pointer __new_start ( this -> _M_allocate ( __len ) );
   pointer __new_finish ( __new_start );
   try
     {




       this -> _M_impl . construct ( __new_start + __elems_before,



                               __x );

       __new_finish = 0;

       __new_finish =
  std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
         __position . base ( ), __new_start,
         _M_get_Tp_allocator ( ) );
       ++ __new_finish;

       __new_finish =
  std :: __uninitialized_move_a ( __position . base ( ),
         this -> _M_impl . _M_finish,
         __new_finish,
         _M_get_Tp_allocator ( ) );
     }
          catch ( ... )
     {
       if ( ! __new_finish )
  this -> _M_impl . destroy ( __new_start + __elems_before );
       else
  std :: _Destroy ( __new_start, __new_finish, _M_get_Tp_allocator ( ) );
       _M_deallocate ( __new_start, __len );
       throw;
     }
   std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
   _M_get_Tp_allocator ( ) );
   _M_deallocate ( this -> _M_impl . _M_start,
   this -> _M_impl . _M_end_of_storage
   - this -> _M_impl . _M_start );
   this -> _M_impl . _M_start = __new_start;
   this -> _M_impl . _M_finish = __new_finish;
   this -> _M_impl . _M_end_of_storage = __new_start + __len;
 }
    }
# 370 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    _M_fill_insert ( iterator __position, size_type __n, const value_type & __x )
    {
      if ( __n != 0 )
 {
   if ( size_type ( this -> _M_impl . _M_end_of_storage
   - this -> _M_impl . _M_finish ) >= __n )
     {
       value_type __x_copy = __x;
       const size_type __elems_after = end ( ) - __position;
       pointer __old_finish ( this -> _M_impl . _M_finish );
       if ( __elems_after > __n )
  {
    std :: __uninitialized_move_a ( this -> _M_impl . _M_finish - __n,
           this -> _M_impl . _M_finish,
           this -> _M_impl . _M_finish,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish += __n;
    std :: copy_backward ( __position . base ( ), __old_finish - __n, __old_finish );

    std :: fill ( __position . base ( ), __position . base ( ) + __n,
       __x_copy );
  }
       else
  {
    std :: __uninitialized_fill_n_a ( this -> _M_impl . _M_finish,
      __n - __elems_after,
      __x_copy,
      _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish += __n - __elems_after;
    std :: __uninitialized_move_a ( __position . base ( ), __old_finish,
           this -> _M_impl . _M_finish,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish += __elems_after;
    std :: fill ( __position . base ( ), __old_finish, __x_copy );
  }
     }
   else
     {
       const size_type __len =
  _M_check_len ( __n, "vector::_M_fill_insert" );
       const size_type __elems_before = __position - begin ( );
       pointer __new_start ( this -> _M_allocate ( __len ) );
       pointer __new_finish ( __new_start );
       try
  {

    std :: __uninitialized_fill_n_a ( __new_start + __elems_before,
      __n, __x,
      _M_get_Tp_allocator ( ) );
    __new_finish = 0;

    __new_finish =
      std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
      __position . base ( ),
      __new_start,
      _M_get_Tp_allocator ( ) );
    __new_finish += __n;

    __new_finish =
      std :: __uninitialized_move_a ( __position . base ( ),
      this -> _M_impl . _M_finish,
      __new_finish,
      _M_get_Tp_allocator ( ) );
  }
       catch ( ... )
  {
    if ( ! __new_finish )
      std :: _Destroy ( __new_start + __elems_before,
      __new_start + __elems_before + __n,
      _M_get_Tp_allocator ( ) );
    else
      std :: _Destroy ( __new_start, __new_finish,
      _M_get_Tp_allocator ( ) );
    _M_deallocate ( __new_start, __len );
    throw;
  }
       std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
       _M_deallocate ( this -> _M_impl . _M_start,
       this -> _M_impl . _M_end_of_storage
       - this -> _M_impl . _M_start );
       this -> _M_impl . _M_start = __new_start;
       this -> _M_impl . _M_finish = __new_finish;
       this -> _M_impl . _M_end_of_storage = __new_start + __len;
     }
 }
    }
# 461 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _InputIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_range_insert ( iterator __pos, _InputIterator __first,
        _InputIterator __last, std :: input_iterator_tag )
      {
 for (; __first != __last; ++ __first )
   {
     __pos = insert ( __pos, * __first );
     ++ __pos;
   }
      }
# 475 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_range_insert ( iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std :: forward_iterator_tag )
      {
 if ( __first != __last )
   {
     const size_type __n = std :: distance ( __first, __last );
     if ( size_type ( this -> _M_impl . _M_end_of_storage
     - this -> _M_impl . _M_finish ) >= __n )
       {
  const size_type __elems_after = end ( ) - __position;
  pointer __old_finish ( this -> _M_impl . _M_finish );
  if ( __elems_after > __n )
    {
      std :: __uninitialized_move_a ( this -> _M_impl . _M_finish - __n,
      this -> _M_impl . _M_finish,
      this -> _M_impl . _M_finish,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_finish += __n;
      std :: copy_backward ( __position . base ( ), __old_finish - __n, __old_finish );

      std :: copy ( __first, __last, __position );
    }
  else
    {
      _ForwardIterator __mid = __first;
      std :: advance ( __mid, __elems_after );
      std :: __uninitialized_copy_a ( __mid, __last,
      this -> _M_impl . _M_finish,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_finish += __n - __elems_after;
      std :: __uninitialized_move_a ( __position . base ( ),
      __old_finish,
      this -> _M_impl . _M_finish,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_finish += __elems_after;
      std :: copy ( __first, __mid, __position );
    }
       }
     else
       {
  const size_type __len =
    _M_check_len ( __n, "vector::_M_range_insert" );
  pointer __new_start ( this -> _M_allocate ( __len ) );
  pointer __new_finish ( __new_start );
  try
    {
      __new_finish =
        std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
        __position . base ( ),
        __new_start,
        _M_get_Tp_allocator ( ) );
      __new_finish =
        std :: __uninitialized_copy_a ( __first, __last,
        __new_finish,
        _M_get_Tp_allocator ( ) );
      __new_finish =
        std :: __uninitialized_move_a ( __position . base ( ),
        this -> _M_impl . _M_finish,
        __new_finish,
        _M_get_Tp_allocator ( ) );
    }
  catch ( ... )
    {
      std :: _Destroy ( __new_start, __new_finish,
      _M_get_Tp_allocator ( ) );
      _M_deallocate ( __new_start, __len );
      throw;
    }
  std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
         _M_get_Tp_allocator ( ) );
  _M_deallocate ( this -> _M_impl . _M_start,
         this -> _M_impl . _M_end_of_storage
         - this -> _M_impl . _M_start );
  this -> _M_impl . _M_start = __new_start;
  this -> _M_impl . _M_finish = __new_finish;
  this -> _M_impl . _M_end_of_storage = __new_start + __len;
       }
   }
      }
# 562 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Alloc >
    void
    vector < bool, _Alloc > ::
    reserve ( size_type __n )
    {
      if ( __n > this -> max_size ( ) )
 __throw_length_error ( ( "vector::reserve" ) );
      if ( this -> capacity ( ) < __n )
 {
   _Bit_type * __q = this -> _M_allocate ( __n );
   this -> _M_impl . _M_finish = _M_copy_aligned ( begin ( ), end ( ),
          iterator ( __q, 0 ) );
   this -> _M_deallocate ( );
   this -> _M_impl . _M_start = iterator ( __q, 0 );
   this -> _M_impl . _M_end_of_storage = ( __q + ( __n + int ( _S_word_bit ) - 1 )
          / int ( _S_word_bit ) );
 }
    }
# 581 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Alloc >
    void
    vector < bool, _Alloc > ::
    _M_fill_insert ( iterator __position, size_type __n, bool __x )
    {
      if ( __n == 0 )
 return;
      if ( capacity ( ) - size ( ) >= __n )
 {
   std :: copy_backward ( __position, end ( ),
        this -> _M_impl . _M_finish + difference_type ( __n ) );
   std :: fill ( __position, __position + difference_type ( __n ), __x );
   this -> _M_impl . _M_finish += difference_type ( __n );
 }
      else
 {
   const size_type __len =
     _M_check_len ( __n, "vector<bool>::_M_fill_insert" );
   _Bit_type * __q = this -> _M_allocate ( __len );
   iterator __i = _M_copy_aligned ( begin ( ), __position,
      iterator ( __q, 0 ) );
   std :: fill ( __i, __i + difference_type ( __n ), __x );
   this -> _M_impl . _M_finish = std :: copy ( __position, end ( ),
           __i + difference_type ( __n ) );
   this -> _M_deallocate ( );
   this -> _M_impl . _M_end_of_storage = ( __q + ( ( __len
           + int ( _S_word_bit ) - 1 )
          / int ( _S_word_bit ) ) );
   this -> _M_impl . _M_start = iterator ( __q, 0 );
 }
    }
# 613 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Alloc >
    template < typename _ForwardIterator >
      void
      vector < bool, _Alloc > ::
      _M_insert_range ( iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std :: forward_iterator_tag )
      {
 if ( __first != __last )
   {
     size_type __n = std :: distance ( __first, __last );
     if ( capacity ( ) - size ( ) >= __n )
       {
  std :: copy_backward ( __position, end ( ),
       this -> _M_impl . _M_finish
       + difference_type ( __n ) );
  std :: copy ( __first, __last, __position );
  this -> _M_impl . _M_finish += difference_type ( __n );
       }
     else
       {
  const size_type __len =
    _M_check_len ( __n, "vector<bool>::_M_insert_range" );
  _Bit_type * __q = this -> _M_allocate ( __len );
  iterator __i = _M_copy_aligned ( begin ( ), __position,
            iterator ( __q, 0 ) );
  __i = std :: copy ( __first, __last, __i );
  this -> _M_impl . _M_finish = std :: copy ( __position, end ( ), __i );
  this -> _M_deallocate ( );
  this -> _M_impl . _M_end_of_storage = ( __q
         + ( ( __len
             + int ( _S_word_bit ) - 1 )
            / int ( _S_word_bit ) ) );
  this -> _M_impl . _M_start = iterator ( __q, 0 );
       }
   }
      }
# 650 "/usr/include/c++/4.4/bits/vector.tcc" 3
template < typename _Alloc >
    void
    vector < bool, _Alloc > ::
    _M_insert_aux ( iterator __position, bool __x )
    {
      if ( this -> _M_impl . _M_finish . _M_p != this -> _M_impl . _M_end_of_storage )
 {
   std :: copy_backward ( __position, this -> _M_impl . _M_finish,
        this -> _M_impl . _M_finish + 1 );
   * __position = __x;
   ++ this -> _M_impl . _M_finish;
 }
      else
 {
   const size_type __len =
     _M_check_len ( size_type ( 1 ), "vector<bool>::_M_insert_aux" );
   _Bit_type * __q = this -> _M_allocate ( __len );
   iterator __i = _M_copy_aligned ( begin ( ), __position,
      iterator ( __q, 0 ) );
   * __i ++ = __x;
   this -> _M_impl . _M_finish = std :: copy ( __position, end ( ), __i );
   this -> _M_deallocate ( );
   this -> _M_impl . _M_end_of_storage = ( __q + ( ( __len
           + int ( _S_word_bit ) - 1 )
          / int ( _S_word_bit ) ) );
   this -> _M_impl . _M_start = iterator ( __q, 0 );
 }
    }
# 679 "/usr/include/c++/4.4/bits/vector.tcc" 3
}
# 62 "/usr/include/c++/4.4/bits/stl_heap.h" 3
namespace std __attribute((__visibility__("default"))) {
# 69 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    _Distance
    __is_heap_until ( _RandomAccessIterator __first, _Distance __n )
    {
      _Distance __parent = 0;
      for ( _Distance __child = 1; __child < __n; ++ __child )
 {
   if ( __first [ __parent ] < __first [ __child ] )
     return __child;
   if ( ( __child & 1 ) == 0 )
     ++ __parent;
 }
      return __n;
    }
# 84 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance,
    typename _Compare >
    _Distance
    __is_heap_until ( _RandomAccessIterator __first, _Distance __n,
      _Compare __comp )
    {
      _Distance __parent = 0;
      for ( _Distance __child = 1; __child < __n; ++ __child )
 {
   if ( __comp ( __first [ __parent ], __first [ __child ] ) )
     return __child;
   if ( ( __child & 1 ) == 0 )
     ++ __parent;
 }
      return __n;
    }
# 103 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    inline bool
    __is_heap ( _RandomAccessIterator __first, _Distance __n )
    { return std :: __is_heap_until ( __first, __n ) == __n; }
# 108 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare,
    typename _Distance >
    inline bool
    __is_heap ( _RandomAccessIterator __first, _Compare __comp, _Distance __n )
    { return std :: __is_heap_until ( __first, __n, __comp ) == __n; }
# 114 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator >
    inline bool
    __is_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    { return std :: __is_heap ( __first, std :: distance ( __first, __last ) ); }
# 119 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline bool
    __is_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp )
    { return std :: __is_heap ( __first, __comp, std :: distance ( __first, __last ) ); }
# 128 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance, typename _Tp >
    void
    __push_heap ( _RandomAccessIterator __first,
  _Distance __holeIndex, _Distance __topIndex, _Tp __value )
    {
      _Distance __parent = ( __holeIndex - 1 ) / 2;
      while ( __holeIndex > __topIndex && * ( __first + __parent ) < __value )
 {
   * ( __first + __holeIndex ) = ( * ( __first + __parent ) );
   __holeIndex = __parent;
   __parent = ( __holeIndex - 1 ) / 2;
 }
      * ( __first + __holeIndex ) = ( __value );
    }
# 152 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator >
    inline void
    push_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
   _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
   _DistanceType;





      ;
      ;

      _ValueType __value = ( * ( __last - 1 ) );
      std :: __push_heap ( __first, _DistanceType ( ( __last - __first ) - 1 ),
         _DistanceType ( 0 ), ( __value ) );
    }
# 173 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance, typename _Tp,
    typename _Compare >
    void
    __push_heap ( _RandomAccessIterator __first, _Distance __holeIndex,
  _Distance __topIndex, _Tp __value, _Compare __comp )
    {
      _Distance __parent = ( __holeIndex - 1 ) / 2;
      while ( __holeIndex > __topIndex
      && __comp ( * ( __first + __parent ), __value ) )
 {
   * ( __first + __holeIndex ) = ( * ( __first + __parent ) );
   __holeIndex = __parent;
   __parent = ( __holeIndex - 1 ) / 2;
 }
      * ( __first + __holeIndex ) = ( __value );
    }
# 201 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    push_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
   _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
   _DistanceType;




      ;
      ;

      _ValueType __value = ( * ( __last - 1 ) );
      std :: __push_heap ( __first, _DistanceType ( ( __last - __first ) - 1 ),
         _DistanceType ( 0 ), ( __value ), __comp );
    }
# 222 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance, typename _Tp >
    void
    __adjust_heap ( _RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value )
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = __holeIndex;
      while ( __secondChild < ( __len - 1 ) / 2 )
 {
   __secondChild = 2 * ( __secondChild + 1 );
   if ( * ( __first + __secondChild ) < * ( __first + ( __secondChild - 1 ) ) )
     __secondChild --;
   * ( __first + __holeIndex ) = ( * ( __first + __secondChild ) );
   __holeIndex = __secondChild;
 }
      if ( ( __len & 1 ) == 0 && __secondChild == ( __len - 2 ) / 2 )
 {
   __secondChild = 2 * ( __secondChild + 1 );
   * ( __first + __holeIndex ) = ( * ( __first + ( __secondChild - 1 ) ) );

   __holeIndex = __secondChild - 1;
 }
      std :: __push_heap ( __first, __holeIndex, __topIndex,
         ( __value ) );
    }
# 248 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator >
    inline void
    __pop_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _DistanceType;

      _ValueType __value = ( * __result );
      * __result = ( * __first );
      std :: __adjust_heap ( __first, _DistanceType ( 0 ),
    _DistanceType ( __last - __first ),
    ( __value ) );
    }
# 274 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator >
    inline void
    pop_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;





      ;
      ;

      -- __last;
      std :: __pop_heap ( __first, __last, __last );
    }
# 292 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Distance,
    typename _Tp, typename _Compare >
    void
    __adjust_heap ( _RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value, _Compare __comp )
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = __holeIndex;
      while ( __secondChild < ( __len - 1 ) / 2 )
 {
   __secondChild = 2 * ( __secondChild + 1 );
   if ( __comp ( * ( __first + __secondChild ),
       * ( __first + ( __secondChild - 1 ) ) ) )
     __secondChild --;
   * ( __first + __holeIndex ) = ( * ( __first + __secondChild ) );
   __holeIndex = __secondChild;
 }
      if ( ( __len & 1 ) == 0 && __secondChild == ( __len - 2 ) / 2 )
 {
   __secondChild = 2 * ( __secondChild + 1 );
   * ( __first + __holeIndex ) = ( * ( __first + ( __secondChild - 1 ) ) );

   __holeIndex = __secondChild - 1;
 }
      std :: __push_heap ( __first, __holeIndex, __topIndex,
         ( __value ), __comp );
    }
# 320 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    __pop_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result, _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _DistanceType;

      _ValueType __value = ( * __result );
      * __result = ( * __first );
      std :: __adjust_heap ( __first, _DistanceType ( 0 ),
    _DistanceType ( __last - __first ),
    ( __value ), __comp );
    }
# 348 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    pop_heap ( _RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp )
    {



      ;
      ;

      -- __last;
      std :: __pop_heap ( __first, __last, __last, __comp );
    }
# 371 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator >
    void
    make_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
   _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
   _DistanceType;





      ;

      if ( __last - __first < 2 )
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = ( __len - 2 ) / 2;
      while ( true )
 {
   _ValueType __value = ( * ( __first + __parent ) );
   std :: __adjust_heap ( __first, __parent, __len, ( __value ) );
   if ( __parent == 0 )
     return;
   __parent --;
 }
    }
# 411 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    void
    make_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
   _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
   _DistanceType;




      ;

      if ( __last - __first < 2 )
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = ( __len - 2 ) / 2;
      while ( true )
 {
   _ValueType __value = ( * ( __first + __parent ) );
   std :: __adjust_heap ( __first, __parent, __len, ( __value ),
        __comp );
   if ( __parent == 0 )
     return;
   __parent --;
 }
    }
# 450 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator >
    void
    sort_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {





      ;
      ;

      while ( __last - __first > 1 )
 {
   -- __last;
   std :: __pop_heap ( __first, __last, __last );
 }
    }
# 479 "/usr/include/c++/4.4/bits/stl_heap.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    void
    sort_heap ( _RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp )
    {



      ;
      ;

      while ( __last - __first > 1 )
 {
   -- __last;
   std :: __pop_heap ( __first, __last, __last, __comp );
 }
    }
# 576 "/usr/include/c++/4.4/bits/stl_heap.h" 3
}
# 63 "/usr/include/c++/4.4/bits/stl_queue.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Sequence = deque < _Tp > >
    class queue
    {

      typedef typename _Sequence :: value_type _Sequence_value_type;





      template < typename _Tp1, typename _Seq1 >
        friend bool
        operator == ( const queue < _Tp1, _Seq1 > &, const queue < _Tp1, _Seq1 > & );

      template < typename _Tp1, typename _Seq1 >
        friend bool
        operator < ( const queue < _Tp1, _Seq1 > &, const queue < _Tp1, _Seq1 > & );

    public :
      typedef typename _Sequence :: value_type value_type;
      typedef typename _Sequence :: reference reference;
      typedef typename _Sequence :: const_reference const_reference;
      typedef typename _Sequence :: size_type size_type;
      typedef _Sequence container_type;

    protected :

      _Sequence c;

    public :




      explicit
      queue ( const _Sequence & __c = _Sequence ( ) )
      : c ( __c ) { }

      bool
      empty ( ) const
      { return c . empty ( ); }


      size_type
      size ( ) const
      { return c . size ( ); }





      reference
      front ( )
      {
 ;
 return c . front ( );
      }





      const_reference
      front ( ) const
      {
 ;
 return c . front ( );
      }





      reference
      back ( )
      {
 ;
 return c . back ( );
      }





      const_reference
      back ( ) const
      {
 ;
 return c . back ( );
      }

      void
      push ( const value_type & __x )
      { c . push_back ( __x ); }

      void
      pop ( )
      {
 ;
 c . pop_front ( );
      }






    };
# 268 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Seq >
    inline bool
    operator == ( const queue < _Tp, _Seq > & __x, const queue < _Tp, _Seq > & __y )
    { return __x . c == __y . c; }
# 286 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Seq >
    inline bool
    operator < ( const queue < _Tp, _Seq > & __x, const queue < _Tp, _Seq > & __y )
    { return __x . c < __y . c; }
# 292 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Seq >
    inline bool
    operator != ( const queue < _Tp, _Seq > & __x, const queue < _Tp, _Seq > & __y )
    { return ! ( __x == __y ); }
# 298 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Seq >
    inline bool
    operator > ( const queue < _Tp, _Seq > & __x, const queue < _Tp, _Seq > & __y )
    { return __y < __x; }
# 304 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Seq >
    inline bool
    operator <= ( const queue < _Tp, _Seq > & __x, const queue < _Tp, _Seq > & __y )
    { return ! ( __y < __x ); }
# 310 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Seq >
    inline bool
    operator >= ( const queue < _Tp, _Seq > & __x, const queue < _Tp, _Seq > & __y )
    { return ! ( __x < __y ); }
# 367 "/usr/include/c++/4.4/bits/stl_queue.h" 3
template < typename _Tp, typename _Sequence = vector < _Tp >,
    typename _Compare = less < typename _Sequence :: value_type > >
    class priority_queue
    {

      typedef typename _Sequence :: value_type _Sequence_value_type;







    public :
      typedef typename _Sequence :: value_type value_type;
      typedef typename _Sequence :: reference reference;
      typedef typename _Sequence :: const_reference const_reference;
      typedef typename _Sequence :: size_type size_type;
      typedef _Sequence container_type;

    protected :

      _Sequence c;
      _Compare comp;

    public :




      explicit
      priority_queue ( const _Compare & __x = _Compare ( ),
       const _Sequence & __s = _Sequence ( ) )
      : c ( __s ), comp ( __x )
      { std :: make_heap ( c . begin ( ), c . end ( ), comp ); }

      template < typename _InputIterator >
        priority_queue ( _InputIterator __first, _InputIterator __last,
         const _Compare & __x = _Compare ( ),
         const _Sequence & __s = _Sequence ( ) )
 : c ( __s ), comp ( __x )
        {
   ;
   c . insert ( c . end ( ), __first, __last );
   std :: make_heap ( c . begin ( ), c . end ( ), comp );
 }

      bool
      empty ( ) const
      { return c . empty ( ); }


      size_type
      size ( ) const
      { return c . size ( ); }





      const_reference
      top ( ) const
      {
 ;
 return c . front ( );
      }

      void
      push ( const value_type & __x )
      {
 c . push_back ( __x );
 std :: push_heap ( c . begin ( ), c . end ( ), comp );
      }

      void
      pop ( )
      {
 ;
 std :: pop_heap ( c . begin ( ), c . end ( ), comp );
 c . pop_back ( );
      }

    };
# 584 "/usr/include/c++/4.4/bits/stl_queue.h" 3
}
# 67 "/usr/include/c++/4.4/bits/stl_tree.h" 3
namespace std __attribute((__visibility__("default"))) {
# 85 "/usr/include/c++/4.4/bits/stl_tree.h" 3
enum _Rb_tree_color { _S_red, _S_black};
# 87 "/usr/include/c++/4.4/bits/stl_tree.h" 3
struct _Rb_tree_node_base {
# 89 "/usr/include/c++/4.4/bits/stl_tree.h" 3
typedef _Rb_tree_node_base *_Base_ptr;
# 90 "/usr/include/c++/4.4/bits/stl_tree.h" 3
typedef const _Rb_tree_node_base *_Const_Base_ptr;
# 92 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Rb_tree_color _M_color;
# 93 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Base_ptr _M_parent;
# 94 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Base_ptr _M_left;
# 95 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Base_ptr _M_right;
# 98 "/usr/include/c++/4.4/bits/stl_tree.h" 3
static _Base_ptr _S_minimum(_Base_ptr __x)
# 99 "/usr/include/c++/4.4/bits/stl_tree.h" 3
{
# 100 "/usr/include/c++/4.4/bits/stl_tree.h" 3
while ((__x->_M_left) != (0)) { __x = (__x->_M_left); }
# 101 "/usr/include/c++/4.4/bits/stl_tree.h" 3
return __x;
# 102 "/usr/include/c++/4.4/bits/stl_tree.h" 3
}
# 105 "/usr/include/c++/4.4/bits/stl_tree.h" 3
static _Const_Base_ptr _S_minimum(_Const_Base_ptr __x)
# 106 "/usr/include/c++/4.4/bits/stl_tree.h" 3
{
# 107 "/usr/include/c++/4.4/bits/stl_tree.h" 3
while ((__x->_M_left) != (0)) { __x = (__x->_M_left); }
# 108 "/usr/include/c++/4.4/bits/stl_tree.h" 3
return __x;
# 109 "/usr/include/c++/4.4/bits/stl_tree.h" 3
}
# 112 "/usr/include/c++/4.4/bits/stl_tree.h" 3
static _Base_ptr _S_maximum(_Base_ptr __x)
# 113 "/usr/include/c++/4.4/bits/stl_tree.h" 3
{
# 114 "/usr/include/c++/4.4/bits/stl_tree.h" 3
while ((__x->_M_right) != (0)) { __x = (__x->_M_right); }
# 115 "/usr/include/c++/4.4/bits/stl_tree.h" 3
return __x;
# 116 "/usr/include/c++/4.4/bits/stl_tree.h" 3
}
# 119 "/usr/include/c++/4.4/bits/stl_tree.h" 3
static _Const_Base_ptr _S_maximum(_Const_Base_ptr __x)
# 120 "/usr/include/c++/4.4/bits/stl_tree.h" 3
{
# 121 "/usr/include/c++/4.4/bits/stl_tree.h" 3
while ((__x->_M_right) != (0)) { __x = (__x->_M_right); }
# 122 "/usr/include/c++/4.4/bits/stl_tree.h" 3
return __x;
# 123 "/usr/include/c++/4.4/bits/stl_tree.h" 3
}
# 124 "/usr/include/c++/4.4/bits/stl_tree.h" 3
};
# 126 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template< class _Val>
# 127 "/usr/include/c++/4.4/bits/stl_tree.h" 3
struct _Rb_tree_node : public _Rb_tree_node_base {
# 129 "/usr/include/c++/4.4/bits/stl_tree.h" 3
typedef _Rb_tree_node *_Link_type;
# 130 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Val _M_value_field;
# 138 "/usr/include/c++/4.4/bits/stl_tree.h" 3
};
# 141 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Rb_tree_node_base *_Rb_tree_increment(_Rb_tree_node_base * );
# 144 "/usr/include/c++/4.4/bits/stl_tree.h" 3
const _Rb_tree_node_base *_Rb_tree_increment(const _Rb_tree_node_base * );
# 147 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Rb_tree_node_base *_Rb_tree_decrement(_Rb_tree_node_base * );
# 150 "/usr/include/c++/4.4/bits/stl_tree.h" 3
const _Rb_tree_node_base *_Rb_tree_decrement(const _Rb_tree_node_base * );
# 152 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Tp >
    struct _Rb_tree_iterator
    {
      typedef _Tp value_type;
      typedef _Tp & reference;
      typedef _Tp * pointer;

      typedef bidirectional_iterator_tag iterator_category;
      typedef ptrdiff_t difference_type;

      typedef _Rb_tree_iterator < _Tp > _Self;
      typedef _Rb_tree_node_base :: _Base_ptr _Base_ptr;
      typedef _Rb_tree_node < _Tp > * _Link_type;

      _Rb_tree_iterator ( )
      : _M_node ( ) { }

      explicit
      _Rb_tree_iterator ( _Link_type __x )
      : _M_node ( __x ) { }

      reference
      operator * ( ) const
      { return static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      pointer
      operator -> ( ) const
      { return & static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      _Self &
      operator ++ ( )
      {
 _M_node = _Rb_tree_increment ( _M_node );
 return * this;
      }

      _Self
      operator ++ ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_increment ( _M_node );
 return __tmp;
      }

      _Self &
      operator -- ( )
      {
 _M_node = _Rb_tree_decrement ( _M_node );
 return * this;
      }

      _Self
      operator -- ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_decrement ( _M_node );
 return __tmp;
      }

      bool
      operator == ( const _Self & __x ) const
      { return _M_node == __x . _M_node; }

      bool
      operator != ( const _Self & __x ) const
      { return _M_node != __x . _M_node; }

      _Base_ptr _M_node;
  };
# 222 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Tp >
    struct _Rb_tree_const_iterator
    {
      typedef _Tp value_type;
      typedef const _Tp & reference;
      typedef const _Tp * pointer;

      typedef _Rb_tree_iterator < _Tp > iterator;

      typedef bidirectional_iterator_tag iterator_category;
      typedef ptrdiff_t difference_type;

      typedef _Rb_tree_const_iterator < _Tp > _Self;
      typedef _Rb_tree_node_base :: _Const_Base_ptr _Base_ptr;
      typedef const _Rb_tree_node < _Tp > * _Link_type;

      _Rb_tree_const_iterator ( )
      : _M_node ( ) { }

      explicit
      _Rb_tree_const_iterator ( _Link_type __x )
      : _M_node ( __x ) { }

      _Rb_tree_const_iterator ( const iterator & __it )
      : _M_node ( __it . _M_node ) { }

      reference
      operator * ( ) const
      { return static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      pointer
      operator -> ( ) const
      { return & static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      _Self &
      operator ++ ( )
      {
 _M_node = _Rb_tree_increment ( _M_node );
 return * this;
      }

      _Self
      operator ++ ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_increment ( _M_node );
 return __tmp;
      }

      _Self &
      operator -- ( )
      {
 _M_node = _Rb_tree_decrement ( _M_node );
 return * this;
      }

      _Self
      operator -- ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_decrement ( _M_node );
 return __tmp;
      }

      bool
      operator == ( const _Self & __x ) const
      { return _M_node == __x . _M_node; }

      bool
      operator != ( const _Self & __x ) const
      { return _M_node != __x . _M_node; }

      _Base_ptr _M_node;
    };
# 297 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Val >
    inline bool
    operator == ( const _Rb_tree_iterator < _Val > & __x,
               const _Rb_tree_const_iterator < _Val > & __y )
    { return __x . _M_node == __y . _M_node; }
# 303 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Val >
    inline bool
    operator != ( const _Rb_tree_iterator < _Val > & __x,
               const _Rb_tree_const_iterator < _Val > & __y )
    { return __x . _M_node != __y . _M_node; }
# 310 "/usr/include/c++/4.4/bits/stl_tree.h" 3
void _Rb_tree_insert_and_rebalance(const bool , _Rb_tree_node_base * , _Rb_tree_node_base * , _Rb_tree_node_base & );
# 316 "/usr/include/c++/4.4/bits/stl_tree.h" 3
_Rb_tree_node_base *_Rb_tree_rebalance_for_erase(_Rb_tree_node_base *const , _Rb_tree_node_base & );
# 320 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc = allocator < _Val > >
    class _Rb_tree
    {
      typedef typename _Alloc :: template rebind < _Rb_tree_node < _Val > > :: other
              _Node_allocator;

    protected :
      typedef _Rb_tree_node_base * _Base_ptr;
      typedef const _Rb_tree_node_base * _Const_Base_ptr;

    public :
      typedef _Key key_type;
      typedef _Val value_type;
      typedef value_type * pointer;
      typedef const value_type * const_pointer;
      typedef value_type & reference;
      typedef const value_type & const_reference;
      typedef _Rb_tree_node < _Val > * _Link_type;
      typedef const _Rb_tree_node < _Val > * _Const_Link_type;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

      _Node_allocator &
      _M_get_Node_allocator ( )
      { return * static_cast < _Node_allocator * > ( & this -> _M_impl ); }

      const _Node_allocator &
      _M_get_Node_allocator ( ) const
      { return * static_cast < const _Node_allocator * > ( & this -> _M_impl ); }

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Node_allocator ( ) ); }

    protected :
      _Link_type
      _M_get_node ( )
      { return _M_impl . _Node_allocator :: allocate ( 1 ); }

      void
      _M_put_node ( _Link_type __p )
      { _M_impl . _Node_allocator :: deallocate ( __p, 1 ); }


      _Link_type
      _M_create_node ( const value_type & __x )
      {
 _Link_type __tmp = _M_get_node ( );
 try
   { get_allocator ( ) . construct ( & __tmp -> _M_value_field, __x ); }
 catch ( ... )
   {
     _M_put_node ( __tmp );
     throw;
   }
 return __tmp;
      }

      void
      _M_destroy_node ( _Link_type __p )
      {
 get_allocator ( ) . destroy ( & __p -> _M_value_field );
 _M_put_node ( __p );
      }

      _Link_type
      _M_clone_node ( _Const_Link_type __x )
      {
 _Link_type __tmp = _M_create_node ( __x -> _M_value_field );
 __tmp -> _M_color = __x -> _M_color;
 __tmp -> _M_left = 0;
 __tmp -> _M_right = 0;
 return __tmp;
      }

    protected :
      template < typename _Key_compare,
        bool _Is_pod_comparator = __is_pod ( _Key_compare ) >
        struct _Rb_tree_impl : public _Node_allocator
        {
   _Key_compare _M_key_compare;
   _Rb_tree_node_base _M_header;
   size_type _M_node_count;

   _Rb_tree_impl ( )
   : _Node_allocator ( ), _M_key_compare ( ), _M_header ( ),
     _M_node_count ( 0 )
   { _M_initialize ( ); }

   _Rb_tree_impl ( const _Key_compare & __comp, const _Node_allocator & __a )
   : _Node_allocator ( __a ), _M_key_compare ( __comp ), _M_header ( ),
     _M_node_count ( 0 )
   { _M_initialize ( ); }

 private :
   void
   _M_initialize ( )
   {
     this -> _M_header . _M_color = _S_red;
     this -> _M_header . _M_parent = 0;
     this -> _M_header . _M_left = & this -> _M_header;
     this -> _M_header . _M_right = & this -> _M_header;
   }
 };

      _Rb_tree_impl < _Compare > _M_impl;

    protected :
      _Base_ptr &
      _M_root ( )
      { return this -> _M_impl . _M_header . _M_parent; }

      _Const_Base_ptr
      _M_root ( ) const
      { return this -> _M_impl . _M_header . _M_parent; }

      _Base_ptr &
      _M_leftmost ( )
      { return this -> _M_impl . _M_header . _M_left; }

      _Const_Base_ptr
      _M_leftmost ( ) const
      { return this -> _M_impl . _M_header . _M_left; }

      _Base_ptr &
      _M_rightmost ( )
      { return this -> _M_impl . _M_header . _M_right; }

      _Const_Base_ptr
      _M_rightmost ( ) const
      { return this -> _M_impl . _M_header . _M_right; }

      _Link_type
      _M_begin ( )
      { return static_cast < _Link_type > ( this -> _M_impl . _M_header . _M_parent ); }

      _Const_Link_type
      _M_begin ( ) const
      {
 return static_cast < _Const_Link_type >
   ( this -> _M_impl . _M_header . _M_parent );
      }

      _Link_type
      _M_end ( )
      { return static_cast < _Link_type > ( & this -> _M_impl . _M_header ); }

      _Const_Link_type
      _M_end ( ) const
      { return static_cast < _Const_Link_type > ( & this -> _M_impl . _M_header ); }

      static const_reference
      _S_value ( _Const_Link_type __x )
      { return __x -> _M_value_field; }

      static const _Key &
      _S_key ( _Const_Link_type __x )
      { return _KeyOfValue ( ) ( _S_value ( __x ) ); }

      static _Link_type
      _S_left ( _Base_ptr __x )
      { return static_cast < _Link_type > ( __x -> _M_left ); }

      static _Const_Link_type
      _S_left ( _Const_Base_ptr __x )
      { return static_cast < _Const_Link_type > ( __x -> _M_left ); }

      static _Link_type
      _S_right ( _Base_ptr __x )
      { return static_cast < _Link_type > ( __x -> _M_right ); }

      static _Const_Link_type
      _S_right ( _Const_Base_ptr __x )
      { return static_cast < _Const_Link_type > ( __x -> _M_right ); }

      static const_reference
      _S_value ( _Const_Base_ptr __x )
      { return static_cast < _Const_Link_type > ( __x ) -> _M_value_field; }

      static const _Key &
      _S_key ( _Const_Base_ptr __x )
      { return _KeyOfValue ( ) ( _S_value ( __x ) ); }

      static _Base_ptr
      _S_minimum ( _Base_ptr __x )
      { return _Rb_tree_node_base :: _S_minimum ( __x ); }

      static _Const_Base_ptr
      _S_minimum ( _Const_Base_ptr __x )
      { return _Rb_tree_node_base :: _S_minimum ( __x ); }

      static _Base_ptr
      _S_maximum ( _Base_ptr __x )
      { return _Rb_tree_node_base :: _S_maximum ( __x ); }

      static _Const_Base_ptr
      _S_maximum ( _Const_Base_ptr __x )
      { return _Rb_tree_node_base :: _S_maximum ( __x ); }

    public :
      typedef _Rb_tree_iterator < value_type > iterator;
      typedef _Rb_tree_const_iterator < value_type > const_iterator;

      typedef std :: reverse_iterator < iterator > reverse_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;

    private :
      iterator
      _M_insert_ ( _Const_Base_ptr __x, _Const_Base_ptr __y,
   const value_type & __v );



      iterator
      _M_insert_lower ( _Base_ptr __x, _Base_ptr __y, const value_type & __v );

      iterator
      _M_insert_equal_lower ( const value_type & __x );

      _Link_type
      _M_copy ( _Const_Link_type __x, _Link_type __p );

      void
      _M_erase ( _Link_type __x );

      iterator
      _M_lower_bound ( _Link_type __x, _Link_type __y,
       const _Key & __k );

      const_iterator
      _M_lower_bound ( _Const_Link_type __x, _Const_Link_type __y,
       const _Key & __k ) const;

      iterator
      _M_upper_bound ( _Link_type __x, _Link_type __y,
       const _Key & __k );

      const_iterator
      _M_upper_bound ( _Const_Link_type __x, _Const_Link_type __y,
       const _Key & __k ) const;

    public :

      _Rb_tree ( ) { }

      _Rb_tree ( const _Compare & __comp,
        const allocator_type & __a = allocator_type ( ) )
      : _M_impl ( __comp, __a ) { }

      _Rb_tree ( const _Rb_tree & __x )
      : _M_impl ( __x . _M_impl . _M_key_compare, __x . _M_get_Node_allocator ( ) )
      {
 if ( __x . _M_root ( ) != 0 )
   {
     _M_root ( ) = _M_copy ( __x . _M_begin ( ), _M_end ( ) );
     _M_leftmost ( ) = _S_minimum ( _M_root ( ) );
     _M_rightmost ( ) = _S_maximum ( _M_root ( ) );
     _M_impl . _M_node_count = __x . _M_impl . _M_node_count;
   }
      }





      ~ _Rb_tree ( )
      { _M_erase ( _M_begin ( ) ); }

      _Rb_tree &
      operator = ( const _Rb_tree & __x );


      _Compare
      key_comp ( ) const
      { return _M_impl . _M_key_compare; }

      iterator
      begin ( )
      {
 return iterator ( static_cast < _Link_type >
   ( this -> _M_impl . _M_header . _M_left ) );
      }

      const_iterator
      begin ( ) const
      {
 return const_iterator ( static_cast < _Const_Link_type >
         ( this -> _M_impl . _M_header . _M_left ) );
      }

      iterator
      end ( )
      { return iterator ( static_cast < _Link_type > ( & this -> _M_impl . _M_header ) ); }

      const_iterator
      end ( ) const
      {
 return const_iterator ( static_cast < _Const_Link_type >
         ( & this -> _M_impl . _M_header ) );
      }

      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( end ( ) ); }

      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( end ( ) ); }

      reverse_iterator
      rend ( )
      { return reverse_iterator ( begin ( ) ); }

      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( begin ( ) ); }

      bool
      empty ( ) const
      { return _M_impl . _M_node_count == 0; }

      size_type
      size ( ) const
      { return _M_impl . _M_node_count; }

      size_type
      max_size ( ) const
      { return _M_get_Node_allocator ( ) . max_size ( ); }

      void



      swap ( _Rb_tree & __t );



      pair < iterator, bool >
      _M_insert_unique ( const value_type & __x );

      iterator
      _M_insert_equal ( const value_type & __x );

      iterator
      _M_insert_unique_ ( const_iterator __position, const value_type & __x );

      iterator
      _M_insert_equal_ ( const_iterator __position, const value_type & __x );

      template < typename _InputIterator >
        void
        _M_insert_unique ( _InputIterator __first, _InputIterator __last );

      template < typename _InputIterator >
        void
        _M_insert_equal ( _InputIterator __first, _InputIterator __last );

      void
      erase ( iterator __position );

      void
      erase ( const_iterator __position );

      size_type
      erase ( const key_type & __x );

      void
      erase ( iterator __first, iterator __last );

      void
      erase ( const_iterator __first, const_iterator __last );

      void
      erase ( const key_type * __first, const key_type * __last );

      void
      clear ( )
      {
        _M_erase ( _M_begin ( ) );
        _M_leftmost ( ) = _M_end ( );
        _M_root ( ) = 0;
        _M_rightmost ( ) = _M_end ( );
        _M_impl . _M_node_count = 0;
      }


      iterator
      find ( const key_type & __k );

      const_iterator
      find ( const key_type & __k ) const;

      size_type
      count ( const key_type & __k ) const;

      iterator
      lower_bound ( const key_type & __k )
      { return _M_lower_bound ( _M_begin ( ), _M_end ( ), __k ); }

      const_iterator
      lower_bound ( const key_type & __k ) const
      { return _M_lower_bound ( _M_begin ( ), _M_end ( ), __k ); }

      iterator
      upper_bound ( const key_type & __k )
      { return _M_upper_bound ( _M_begin ( ), _M_end ( ), __k ); }

      const_iterator
      upper_bound ( const key_type & __k ) const
      { return _M_upper_bound ( _M_begin ( ), _M_end ( ), __k ); }

      pair < iterator, iterator >
      equal_range ( const key_type & __k );

      pair < const_iterator, const_iterator >
      equal_range ( const key_type & __k ) const;


      bool
      __rb_verify ( ) const;
    };
# 770 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator == ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    {
      return __x . size ( ) == __y . size ( )
      && std :: equal ( __x . begin ( ), __x . end ( ), __y . begin ( ) );
    }
# 780 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator < ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
       const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    {
      return std :: lexicographical_compare ( __x . begin ( ), __x . end ( ),
       __y . begin ( ), __y . end ( ) );
    }
# 790 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator != ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 797 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator > ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
       const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return __y < __x; }
# 804 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator <= ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 811 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator >= ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 818 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline void
    swap ( _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
  _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { __x . swap ( __y ); }
# 849 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > &
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    operator = ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x )
    {
      if ( this != & __x )
 {

   clear ( );
   _M_impl . _M_key_compare = __x . _M_impl . _M_key_compare;
   if ( __x . _M_root ( ) != 0 )
     {
       _M_root ( ) = _M_copy ( __x . _M_begin ( ), _M_end ( ) );
       _M_leftmost ( ) = _S_minimum ( _M_root ( ) );
       _M_rightmost ( ) = _S_maximum ( _M_root ( ) );
       _M_impl . _M_node_count = __x . _M_impl . _M_node_count;
     }
 }
      return * this;
    }
# 871 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_ ( _Const_Base_ptr __x, _Const_Base_ptr __p, const _Val & __v )
    {
      bool __insert_left = ( __x != 0 || __p == _M_end ( )
       || _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
            _S_key ( __p ) ) );

      _Link_type __z = _M_create_node ( __v );

      _Rb_tree_insert_and_rebalance ( __insert_left, __z,
        const_cast < _Base_ptr > ( __p ),
        this -> _M_impl . _M_header );
      ++ _M_impl . _M_node_count;
      return iterator ( __z );
    }
# 890 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_lower ( _Base_ptr __x, _Base_ptr __p, const _Val & __v )
    {
      bool __insert_left = ( __x != 0 || __p == _M_end ( )
       || ! _M_impl . _M_key_compare ( _S_key ( __p ),
             _KeyOfValue ( ) ( __v ) ) );

      _Link_type __z = _M_create_node ( __v );

      _Rb_tree_insert_and_rebalance ( __insert_left, __z, __p,
        this -> _M_impl . _M_header );
      ++ _M_impl . _M_node_count;
      return iterator ( __z );
    }
# 908 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_equal_lower ( const _Val & __v )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   __y = __x;
   __x = ! _M_impl . _M_key_compare ( _S_key ( __x ), _KeyOfValue ( ) ( __v ) ) ?
         _S_left ( __x ) : _S_right ( __x );
 }
      return _M_insert_lower ( __x, __y, __v );
    }
# 925 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KoV,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KoV, _Compare, _Alloc > :: _Link_type
    _Rb_tree < _Key, _Val, _KoV, _Compare, _Alloc > ::
    _M_copy ( _Const_Link_type __x, _Link_type __p )
    {

      _Link_type __top = _M_clone_node ( __x );
      __top -> _M_parent = __p;

      try
 {
   if ( __x -> _M_right )
     __top -> _M_right = _M_copy ( _S_right ( __x ), __top );
   __p = __top;
   __x = _S_left ( __x );

   while ( __x != 0 )
     {
       _Link_type __y = _M_clone_node ( __x );
       __p -> _M_left = __y;
       __y -> _M_parent = __p;
       if ( __x -> _M_right )
  __y -> _M_right = _M_copy ( _S_right ( __x ), __y );
       __p = __y;
       __x = _S_left ( __x );
     }
 }
      catch ( ... )
 {
   _M_erase ( __top );
   throw;
 }
      return __top;
    }
# 961 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_erase ( _Link_type __x )
    {

      while ( __x != 0 )
 {
   _M_erase ( _S_right ( __x ) );
   _Link_type __y = _S_left ( __x );
   _M_destroy_node ( __x );
   __x = __y;
 }
    }
# 977 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_lower_bound ( _Link_type __x, _Link_type __y,
     const _Key & __k )
    {
      while ( __x != 0 )
 if ( ! _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return iterator ( __y );
    }
# 993 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: const_iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_lower_bound ( _Const_Link_type __x, _Const_Link_type __y,
     const _Key & __k ) const
    {
      while ( __x != 0 )
 if ( ! _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return const_iterator ( __y );
    }
# 1009 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_upper_bound ( _Link_type __x, _Link_type __y,
     const _Key & __k )
    {
      while ( __x != 0 )
 if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return iterator ( __y );
    }
# 1025 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: const_iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_upper_bound ( _Const_Link_type __x, _Const_Link_type __y,
     const _Key & __k ) const
    {
      while ( __x != 0 )
 if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return const_iterator ( __y );
    }
# 1041 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    pair < typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: iterator,
  typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: iterator >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    equal_range ( const _Key & __k )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   if ( _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
     __x = _S_right ( __x );
   else if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
     __y = __x, __x = _S_left ( __x );
   else
     {
       _Link_type __xu ( __x ), __yu ( __y );
       __y = __x, __x = _S_left ( __x );
       __xu = _S_right ( __xu );
       return pair < iterator,
            iterator > ( _M_lower_bound ( __x, __y, __k ),
        _M_upper_bound ( __xu, __yu, __k ) );
     }
 }
      return pair < iterator, iterator > ( iterator ( __y ),
          iterator ( __y ) );
    }
# 1072 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    pair < typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: const_iterator,
  typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: const_iterator >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    equal_range ( const _Key & __k ) const
    {
      _Const_Link_type __x = _M_begin ( );
      _Const_Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   if ( _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
     __x = _S_right ( __x );
   else if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
     __y = __x, __x = _S_left ( __x );
   else
     {
       _Const_Link_type __xu ( __x ), __yu ( __y );
       __y = __x, __x = _S_left ( __x );
       __xu = _S_right ( __xu );
       return pair < const_iterator,
            const_iterator > ( _M_lower_bound ( __x, __y, __k ),
       _M_upper_bound ( __xu, __yu, __k ) );
     }
 }
      return pair < const_iterator, const_iterator > ( const_iterator ( __y ),
        const_iterator ( __y ) );
    }
# 1103 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::



    swap ( _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __t )

    {
      if ( _M_root ( ) == 0 )
 {
   if ( __t . _M_root ( ) != 0 )
     {
       _M_root ( ) = __t . _M_root ( );
       _M_leftmost ( ) = __t . _M_leftmost ( );
       _M_rightmost ( ) = __t . _M_rightmost ( );
       _M_root ( ) -> _M_parent = _M_end ( );

       __t . _M_root ( ) = 0;
       __t . _M_leftmost ( ) = __t . _M_end ( );
       __t . _M_rightmost ( ) = __t . _M_end ( );
     }
 }
      else if ( __t . _M_root ( ) == 0 )
 {
   __t . _M_root ( ) = _M_root ( );
   __t . _M_leftmost ( ) = _M_leftmost ( );
   __t . _M_rightmost ( ) = _M_rightmost ( );
   __t . _M_root ( ) -> _M_parent = __t . _M_end ( );

   _M_root ( ) = 0;
   _M_leftmost ( ) = _M_end ( );
   _M_rightmost ( ) = _M_end ( );
 }
      else
 {
   std :: swap ( _M_root ( ), __t . _M_root ( ) );
   std :: swap ( _M_leftmost ( ), __t . _M_leftmost ( ) );
   std :: swap ( _M_rightmost ( ), __t . _M_rightmost ( ) );

   _M_root ( ) -> _M_parent = _M_end ( );
   __t . _M_root ( ) -> _M_parent = __t . _M_end ( );
 }

      std :: swap ( this -> _M_impl . _M_node_count, __t . _M_impl . _M_node_count );
      std :: swap ( this -> _M_impl . _M_key_compare, __t . _M_impl . _M_key_compare );



      std :: __alloc_swap < _Node_allocator > ::
 _S_do_it ( _M_get_Node_allocator ( ), __t . _M_get_Node_allocator ( ) );
    }
# 1157 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    pair < typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: iterator, bool >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_unique ( const _Val & __v )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      bool __comp = true;
      while ( __x != 0 )
 {
   __y = __x;
   __comp = _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ), _S_key ( __x ) );
   __x = __comp ? _S_left ( __x ) : _S_right ( __x );
 }
      iterator __j = iterator ( __y );
      if ( __comp )
 {
   if ( __j == begin ( ) )
     return pair < iterator, bool > ( _M_insert_ ( __x, __y, __v ), true );
   else
     -- __j;
 }
      if ( _M_impl . _M_key_compare ( _S_key ( __j . _M_node ), _KeyOfValue ( ) ( __v ) ) )
 return pair < iterator, bool > ( _M_insert_ ( __x, __y, __v ), true );
      return pair < iterator, bool > ( __j, false );
    }
# 1186 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_equal ( const _Val & __v )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   __y = __x;
   __x = _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ), _S_key ( __x ) ) ?
         _S_left ( __x ) : _S_right ( __x );
 }
      return _M_insert_ ( __x, __y, __v );
    }
# 1203 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_unique_ ( const_iterator __position, const _Val & __v )
    {

      if ( __position . _M_node == _M_end ( ) )
 {
   if ( size ( ) > 0
       && _M_impl . _M_key_compare ( _S_key ( _M_rightmost ( ) ),
     _KeyOfValue ( ) ( __v ) ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else
     return _M_insert_unique ( __v ) . first;
 }
      else if ( _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
          _S_key ( __position . _M_node ) ) )
 {

   const_iterator __before = __position;
   if ( __position . _M_node == _M_leftmost ( ) )
     return _M_insert_ ( _M_leftmost ( ), _M_leftmost ( ), __v );
   else if ( _M_impl . _M_key_compare ( _S_key ( ( -- __before ) . _M_node ),
       _KeyOfValue ( ) ( __v ) ) )
     {
       if ( _S_right ( __before . _M_node ) == 0 )
  return _M_insert_ ( 0, __before . _M_node, __v );
       else
  return _M_insert_ ( __position . _M_node,
      __position . _M_node, __v );
     }
   else
     return _M_insert_unique ( __v ) . first;
 }
      else if ( _M_impl . _M_key_compare ( _S_key ( __position . _M_node ),
          _KeyOfValue ( ) ( __v ) ) )
 {

   const_iterator __after = __position;
   if ( __position . _M_node == _M_rightmost ( ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else if ( _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
       _S_key ( ( ++ __after ) . _M_node ) ) )
     {
       if ( _S_right ( __position . _M_node ) == 0 )
  return _M_insert_ ( 0, __position . _M_node, __v );
       else
  return _M_insert_ ( __after . _M_node, __after . _M_node, __v );
     }
   else
     return _M_insert_unique ( __v ) . first;
 }
      else

 return iterator ( static_cast < _Link_type >
   ( const_cast < _Base_ptr > ( __position . _M_node ) ) );
    }
# 1262 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_equal_ ( const_iterator __position, const _Val & __v )
    {

      if ( __position . _M_node == _M_end ( ) )
 {
   if ( size ( ) > 0
       && ! _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
      _S_key ( _M_rightmost ( ) ) ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else
     return _M_insert_equal ( __v );
 }
      else if ( ! _M_impl . _M_key_compare ( _S_key ( __position . _M_node ),
           _KeyOfValue ( ) ( __v ) ) )
 {

   const_iterator __before = __position;
   if ( __position . _M_node == _M_leftmost ( ) )
     return _M_insert_ ( _M_leftmost ( ), _M_leftmost ( ), __v );
   else if ( ! _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
        _S_key ( ( -- __before ) . _M_node ) ) )
     {
       if ( _S_right ( __before . _M_node ) == 0 )
  return _M_insert_ ( 0, __before . _M_node, __v );
       else
  return _M_insert_ ( __position . _M_node,
      __position . _M_node, __v );
     }
   else
     return _M_insert_equal ( __v );
 }
      else
 {

   const_iterator __after = __position;
   if ( __position . _M_node == _M_rightmost ( ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else if ( ! _M_impl . _M_key_compare ( _S_key ( ( ++ __after ) . _M_node ),
        _KeyOfValue ( ) ( __v ) ) )
     {
       if ( _S_right ( __position . _M_node ) == 0 )
  return _M_insert_ ( 0, __position . _M_node, __v );
       else
  return _M_insert_ ( __after . _M_node, __after . _M_node, __v );
     }
   else
     return _M_insert_equal_lower ( __v );
 }
    }
# 1316 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KoV,
           typename _Cmp, typename _Alloc >
    template < class _II >
      void
      _Rb_tree < _Key, _Val, _KoV, _Cmp, _Alloc > ::
      _M_insert_unique ( _II __first, _II __last )
      {
 for (; __first != __last; ++ __first )
   _M_insert_unique_ ( end ( ), * __first );
      }
# 1327 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KoV,
           typename _Cmp, typename _Alloc >
    template < class _II >
      void
      _Rb_tree < _Key, _Val, _KoV, _Cmp, _Alloc > ::
      _M_insert_equal ( _II __first, _II __last )
      {
 for (; __first != __last; ++ __first )
   _M_insert_equal_ ( end ( ), * __first );
      }
# 1338 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( iterator __position )
    {
      _Link_type __y =
 static_cast < _Link_type > ( _Rb_tree_rebalance_for_erase
    ( __position . _M_node,
     this -> _M_impl . _M_header ) );
      _M_destroy_node ( __y );
      -- _M_impl . _M_node_count;
    }
# 1352 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const_iterator __position )
    {
      _Link_type __y =
 static_cast < _Link_type > ( _Rb_tree_rebalance_for_erase
    ( const_cast < _Base_ptr > ( __position . _M_node ),
     this -> _M_impl . _M_header ) );
      _M_destroy_node ( __y );
      -- _M_impl . _M_node_count;
    }
# 1366 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: size_type
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const _Key & __x )
    {
      pair < iterator, iterator > __p = equal_range ( __x );
      const size_type __old_size = size ( );
      erase ( __p . first, __p . second );
      return __old_size - size ( );
    }
# 1378 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( iterator __first, iterator __last )
    {
      if ( __first == begin ( ) && __last == end ( ) )
 clear ( );
      else
 while ( __first != __last )
   erase ( __first ++ );
    }
# 1391 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const_iterator __first, const_iterator __last )
    {
      if ( __first == begin ( ) && __last == end ( ) )
 clear ( );
      else
 while ( __first != __last )
   erase ( __first ++ );
    }
# 1404 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const _Key * __first, const _Key * __last )
    {
      while ( __first != __last )
 erase ( * __first ++ );
    }
# 1414 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    find ( const _Key & __k )
    {
      iterator __j = _M_lower_bound ( _M_begin ( ), _M_end ( ), __k );
      return ( __j == end ( )
       || _M_impl . _M_key_compare ( __k,
     _S_key ( __j . _M_node ) ) ) ? end ( ) : __j;
    }
# 1427 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: const_iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    find ( const _Key & __k ) const
    {
      const_iterator __j = _M_lower_bound ( _M_begin ( ), _M_end ( ), __k );
      return ( __j == end ( )
       || _M_impl . _M_key_compare ( __k,
     _S_key ( __j . _M_node ) ) ) ? end ( ) : __j;
    }
# 1440 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: size_type
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    count ( const _Key & __k ) const
    {
      pair < const_iterator, const_iterator > __p = equal_range ( __k );
      const size_type __n = std :: distance ( __p . first, __p . second );
      return __n;
    }
# 1452 "/usr/include/c++/4.4/bits/stl_tree.h" 3
unsigned _Rb_tree_black_count(const _Rb_tree_node_base * , const _Rb_tree_node_base * );
# 1455 "/usr/include/c++/4.4/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    bool
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: __rb_verify ( ) const
    {
      if ( _M_impl . _M_node_count == 0 || begin ( ) == end ( ) )
 return _M_impl . _M_node_count == 0 && begin ( ) == end ( )
        && this -> _M_impl . _M_header . _M_left == _M_end ( )
        && this -> _M_impl . _M_header . _M_right == _M_end ( );

      unsigned int __len = _Rb_tree_black_count ( _M_leftmost ( ), _M_root ( ) );
      for ( const_iterator __it = begin ( ); __it != end ( ); ++ __it )
 {
   _Const_Link_type __x = static_cast < _Const_Link_type > ( __it . _M_node );
   _Const_Link_type __L = _S_left ( __x );
   _Const_Link_type __R = _S_right ( __x );

   if ( __x -> _M_color == _S_red )
     if ( ( __L && __L -> _M_color == _S_red )
  || ( __R && __R -> _M_color == _S_red ) )
       return false;

   if ( __L && _M_impl . _M_key_compare ( _S_key ( __x ), _S_key ( __L ) ) )
     return false;
   if ( __R && _M_impl . _M_key_compare ( _S_key ( __R ), _S_key ( __x ) ) )
     return false;

   if ( ! __L && ! __R && _Rb_tree_black_count ( __x, _M_root ( ) ) != __len )
     return false;
 }

      if ( _M_leftmost ( ) != _Rb_tree_node_base :: _S_minimum ( _M_root ( ) ) )
 return false;
      if ( _M_rightmost ( ) != _Rb_tree_node_base :: _S_maximum ( _M_root ( ) ) )
 return false;
      return true;
    }
# 1493 "/usr/include/c++/4.4/bits/stl_tree.h" 3
}
# 64 "/usr/include/c++/4.4/bits/stl_map.h" 3
namespace std __attribute((__visibility__("default"))) {
# 84 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare = std :: less < _Key >,
            typename _Alloc = std :: allocator < std :: pair < const _Key, _Tp > > >
    class map
    {
    public :
      typedef _Key key_type;
      typedef _Tp mapped_type;
      typedef std :: pair < const _Key, _Tp > value_type;
      typedef _Compare key_compare;
      typedef _Alloc allocator_type;

    private :

      typedef typename _Alloc :: value_type _Alloc_value_type;





    public :
      class value_compare
      : public std :: binary_function < value_type, value_type, bool >
      {
 friend class map < _Key, _Tp, _Compare, _Alloc >;
      protected :
 _Compare comp;

 value_compare ( _Compare __c )
 : comp ( __c ) { }

      public :
 bool operator ( ) ( const value_type & __x, const value_type & __y ) const
 { return comp ( __x . first, __y . first ); }
      };

    private :

      typedef typename _Alloc :: template rebind < value_type > :: other
        _Pair_alloc_type;

      typedef _Rb_tree < key_type, value_type, _Select1st < value_type >,
         key_compare, _Pair_alloc_type > _Rep_type;


      _Rep_type _M_t;

    public :


      typedef typename _Pair_alloc_type :: pointer pointer;
      typedef typename _Pair_alloc_type :: const_pointer const_pointer;
      typedef typename _Pair_alloc_type :: reference reference;
      typedef typename _Pair_alloc_type :: const_reference const_reference;
      typedef typename _Rep_type :: iterator iterator;
      typedef typename _Rep_type :: const_iterator const_iterator;
      typedef typename _Rep_type :: size_type size_type;
      typedef typename _Rep_type :: difference_type difference_type;
      typedef typename _Rep_type :: reverse_iterator reverse_iterator;
      typedef typename _Rep_type :: const_reverse_iterator const_reverse_iterator;







      map ( )
      : _M_t ( ) { }






      explicit
      map ( const _Compare & __comp,
   const allocator_type & __a = allocator_type ( ) )
      : _M_t ( __comp, __a ) { }

      map ( const map & __x )
      : _M_t ( __x . _M_t ) { }

      template < typename _InputIterator >
        map ( _InputIterator __first, _InputIterator __last )
 : _M_t ( )
        { _M_t . _M_insert_unique ( __first, __last ); }

      template < typename _InputIterator >
        map ( _InputIterator __first, _InputIterator __last,
     const _Compare & __comp,
     const allocator_type & __a = allocator_type ( ) )
 : _M_t ( __comp, __a )
        { _M_t . _M_insert_unique ( __first, __last ); }

      map &
      operator = ( const map & __x )
      {
 _M_t = __x . _M_t;
 return * this;
      }

      allocator_type
      get_allocator ( ) const
      { return _M_t . get_allocator ( ); }







      iterator
      begin ( )
      { return _M_t . begin ( ); }






      const_iterator
      begin ( ) const
      { return _M_t . begin ( ); }






      iterator
      end ( )
      { return _M_t . end ( ); }






      const_iterator
      end ( ) const
      { return _M_t . end ( ); }






      reverse_iterator
      rbegin ( )
      { return _M_t . rbegin ( ); }






      const_reverse_iterator
      rbegin ( ) const
      { return _M_t . rbegin ( ); }






      reverse_iterator
      rend ( )
      { return _M_t . rend ( ); }






      const_reverse_iterator
      rend ( ) const
      { return _M_t . rend ( ); }

      bool
      empty ( ) const
      { return _M_t . empty ( ); }


      size_type
      size ( ) const
      { return _M_t . size ( ); }


      size_type
      max_size ( ) const
      { return _M_t . max_size ( ); }

      mapped_type &
      operator [ ] ( const key_type & __k )
      {



 iterator __i = lower_bound ( __k );

 if ( __i == end ( ) || key_comp ( ) ( __k, ( * __i ) . first ) )
          __i = insert ( __i, value_type ( __k, mapped_type ( ) ) );
 return ( * __i ) . second;
      }

      mapped_type &
      at ( const key_type & __k )
      {
 iterator __i = lower_bound ( __k );
 if ( __i == end ( ) || key_comp ( ) ( __k, ( * __i ) . first ) )
   __throw_out_of_range ( ( "map::at" ) );
 return ( * __i ) . second;
      }

      const mapped_type &
      at ( const key_type & __k ) const
      {
 const_iterator __i = lower_bound ( __k );
 if ( __i == end ( ) || key_comp ( ) ( __k, ( * __i ) . first ) )
   __throw_out_of_range ( ( "map::at" ) );
 return ( * __i ) . second;
      }

      std :: pair < iterator, bool >
      insert ( const value_type & __x )
      { return _M_t . _M_insert_unique ( __x ); }

      iterator
      insert ( iterator __position, const value_type & __x )
      { return _M_t . _M_insert_unique_ ( __position, __x ); }

      template < typename _InputIterator >
        void
        insert ( _InputIterator __first, _InputIterator __last )
        { _M_t . _M_insert_unique ( __first, __last ); }

      void
      erase ( iterator __position )
      { _M_t . erase ( __position ); }

      size_type
      erase ( const key_type & __x )
      { return _M_t . erase ( __x ); }

      void
      erase ( iterator __first, iterator __last )
      { _M_t . erase ( __first, __last ); }

      void



      swap ( map & __x )

      { _M_t . swap ( __x . _M_t ); }







      void
      clear ( )
      { _M_t . clear ( ); }






      key_compare
      key_comp ( ) const
      { return _M_t . key_comp ( ); }





      value_compare
      value_comp ( ) const
      { return value_compare ( _M_t . key_comp ( ) ); }

      iterator
      find ( const key_type & __x )
      { return _M_t . find ( __x ); }

      const_iterator
      find ( const key_type & __x ) const
      { return _M_t . find ( __x ); }

      size_type
      count ( const key_type & __x ) const
      { return _M_t . find ( __x ) == _M_t . end ( ) ? 0 : 1; }

      iterator
      lower_bound ( const key_type & __x )
      { return _M_t . lower_bound ( __x ); }

      const_iterator
      lower_bound ( const key_type & __x ) const
      { return _M_t . lower_bound ( __x ); }







      iterator
      upper_bound ( const key_type & __x )
      { return _M_t . upper_bound ( __x ); }







      const_iterator
      upper_bound ( const key_type & __x ) const
      { return _M_t . upper_bound ( __x ); }

      std :: pair < iterator, iterator >
      equal_range ( const key_type & __x )
      { return _M_t . equal_range ( __x ); }

      std :: pair < const_iterator, const_iterator >
      equal_range ( const key_type & __x ) const
      { return _M_t . equal_range ( __x ); }

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator == ( const map < _K1, _T1, _C1, _A1 > &,
     const map < _K1, _T1, _C1, _A1 > & );

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator < ( const map < _K1, _T1, _C1, _A1 > &,
    const map < _K1, _T1, _C1, _A1 > & );
    };
# 797 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator == ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t == __y . _M_t; }
# 814 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator < ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
              const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t < __y . _M_t; }
# 821 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator != ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 828 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator > ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
              const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __y < __x; }
# 835 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator <= ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 842 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator >= ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 849 "/usr/include/c++/4.4/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline void
    swap ( map < _Key, _Tp, _Compare, _Alloc > & __x,
  map < _Key, _Tp, _Compare, _Alloc > & __y )
    { __x . swap ( __y ); }
# 869 "/usr/include/c++/4.4/bits/stl_map.h" 3
}
# 63 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp,
     typename _Compare = std :: less < _Key >,
     typename _Alloc = std :: allocator < std :: pair < const _Key, _Tp > > >
    class multimap
    {
    public :
      typedef _Key key_type;
      typedef _Tp mapped_type;
      typedef std :: pair < const _Key, _Tp > value_type;
      typedef _Compare key_compare;
      typedef _Alloc allocator_type;

    private :

      typedef typename _Alloc :: value_type _Alloc_value_type;





    public :
      class value_compare
      : public std :: binary_function < value_type, value_type, bool >
      {
 friend class multimap < _Key, _Tp, _Compare, _Alloc >;
      protected :
 _Compare comp;

 value_compare ( _Compare __c )
 : comp ( __c ) { }

      public :
 bool operator ( ) ( const value_type & __x, const value_type & __y ) const
 { return comp ( __x . first, __y . first ); }
      };

    private :

      typedef typename _Alloc :: template rebind < value_type > :: other
        _Pair_alloc_type;

      typedef _Rb_tree < key_type, value_type, _Select1st < value_type >,
         key_compare, _Pair_alloc_type > _Rep_type;

      _Rep_type _M_t;

    public :


      typedef typename _Pair_alloc_type :: pointer pointer;
      typedef typename _Pair_alloc_type :: const_pointer const_pointer;
      typedef typename _Pair_alloc_type :: reference reference;
      typedef typename _Pair_alloc_type :: const_reference const_reference;
      typedef typename _Rep_type :: iterator iterator;
      typedef typename _Rep_type :: const_iterator const_iterator;
      typedef typename _Rep_type :: size_type size_type;
      typedef typename _Rep_type :: difference_type difference_type;
      typedef typename _Rep_type :: reverse_iterator reverse_iterator;
      typedef typename _Rep_type :: const_reverse_iterator const_reverse_iterator;






      multimap ( )
      : _M_t ( ) { }






      explicit
      multimap ( const _Compare & __comp,
        const allocator_type & __a = allocator_type ( ) )
      : _M_t ( __comp, __a ) { }

      multimap ( const multimap & __x )
      : _M_t ( __x . _M_t ) { }

      template < typename _InputIterator >
        multimap ( _InputIterator __first, _InputIterator __last )
 : _M_t ( )
        { _M_t . _M_insert_equal ( __first, __last ); }

      template < typename _InputIterator >
        multimap ( _InputIterator __first, _InputIterator __last,
   const _Compare & __comp,
   const allocator_type & __a = allocator_type ( ) )
        : _M_t ( __comp, __a )
        { _M_t . _M_insert_equal ( __first, __last ); }

      multimap &
      operator = ( const multimap & __x )
      {
 _M_t = __x . _M_t;
 return * this;
      }

      allocator_type
      get_allocator ( ) const
      { return _M_t . get_allocator ( ); }







      iterator
      begin ( )
      { return _M_t . begin ( ); }






      const_iterator
      begin ( ) const
      { return _M_t . begin ( ); }






      iterator
      end ( )
      { return _M_t . end ( ); }






      const_iterator
      end ( ) const
      { return _M_t . end ( ); }






      reverse_iterator
      rbegin ( )
      { return _M_t . rbegin ( ); }






      const_reverse_iterator
      rbegin ( ) const
      { return _M_t . rbegin ( ); }






      reverse_iterator
      rend ( )
      { return _M_t . rend ( ); }






      const_reverse_iterator
      rend ( ) const
      { return _M_t . rend ( ); }

      bool
      empty ( ) const
      { return _M_t . empty ( ); }


      size_type
      size ( ) const
      { return _M_t . size ( ); }


      size_type
      max_size ( ) const
      { return _M_t . max_size ( ); }

      iterator
      insert ( const value_type & __x )
      { return _M_t . _M_insert_equal ( __x ); }

      iterator
      insert ( iterator __position, const value_type & __x )
      { return _M_t . _M_insert_equal_ ( __position, __x ); }

      template < typename _InputIterator >
        void
        insert ( _InputIterator __first, _InputIterator __last )
        { _M_t . _M_insert_equal ( __first, __last ); }

      void
      erase ( iterator __position )
      { _M_t . erase ( __position ); }

      size_type
      erase ( const key_type & __x )
      { return _M_t . erase ( __x ); }

      void
      erase ( iterator __first, iterator __last )
      { _M_t . erase ( __first, __last ); }

      void



      swap ( multimap & __x )

      { _M_t . swap ( __x . _M_t ); }







      void
      clear ( )
      { _M_t . clear ( ); }






      key_compare
      key_comp ( ) const
      { return _M_t . key_comp ( ); }





      value_compare
      value_comp ( ) const
      { return value_compare ( _M_t . key_comp ( ) ); }

      iterator
      find ( const key_type & __x )
      { return _M_t . find ( __x ); }

      const_iterator
      find ( const key_type & __x ) const
      { return _M_t . find ( __x ); }






      size_type
      count ( const key_type & __x ) const
      { return _M_t . count ( __x ); }

      iterator
      lower_bound ( const key_type & __x )
      { return _M_t . lower_bound ( __x ); }

      const_iterator
      lower_bound ( const key_type & __x ) const
      { return _M_t . lower_bound ( __x ); }







      iterator
      upper_bound ( const key_type & __x )
      { return _M_t . upper_bound ( __x ); }







      const_iterator
      upper_bound ( const key_type & __x ) const
      { return _M_t . upper_bound ( __x ); }

      std :: pair < iterator, iterator >
      equal_range ( const key_type & __x )
      { return _M_t . equal_range ( __x ); }

      std :: pair < const_iterator, const_iterator >
      equal_range ( const key_type & __x ) const
      { return _M_t . equal_range ( __x ); }

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator == ( const multimap < _K1, _T1, _C1, _A1 > &,
     const multimap < _K1, _T1, _C1, _A1 > & );

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator < ( const multimap < _K1, _T1, _C1, _A1 > &,
    const multimap < _K1, _T1, _C1, _A1 > & );
  };
# 726 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator == ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t == __y . _M_t; }
# 743 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator < ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
              const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t < __y . _M_t; }
# 750 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator != ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 757 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator > ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
              const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __y < __x; }
# 764 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator <= ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 771 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator >= ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 778 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline void
    swap ( multimap < _Key, _Tp, _Compare, _Alloc > & __x,
         multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { __x . swap ( __y ); }
# 798 "/usr/include/c++/4.4/bits/stl_multimap.h" 3
}
# 37 "/usr/include/c++/4.4/bits/stream_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/bits/stream_iterator.h" 3
template < typename _Tp, typename _CharT = char,
           typename _Traits = char_traits < _CharT >, typename _Dist = ptrdiff_t >
    class istream_iterator
    : public iterator < input_iterator_tag, _Tp, _Dist, const _Tp *, const _Tp & >
    {
    public :
      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_istream < _CharT, _Traits > istream_type;

    private :
      istream_type * _M_stream;
      _Tp _M_value;
      bool _M_ok;

    public :

      istream_iterator ( )
      : _M_stream ( 0 ), _M_value ( ), _M_ok ( false ) { }


      istream_iterator ( istream_type & __s )
      : _M_stream ( & __s )
      { _M_read ( ); }

      istream_iterator ( const istream_iterator & __obj )
      : _M_stream ( __obj . _M_stream ), _M_value ( __obj . _M_value ),
        _M_ok ( __obj . _M_ok )
      { }

      const _Tp &
      operator * ( ) const
      {
 ;


 return _M_value;
      }

      const _Tp *
      operator -> ( ) const { return & ( operator * ( ) ); }

      istream_iterator &
      operator ++ ( )
      {
 ;


 _M_read ( );
 return * this;
      }

      istream_iterator
      operator ++ ( int )
      {
 ;


 istream_iterator __tmp = * this;
 _M_read ( );
 return __tmp;
      }

      bool
      _M_equal ( const istream_iterator & __x ) const
      { return ( _M_ok == __x . _M_ok ) && ( ! _M_ok || _M_stream == __x . _M_stream ); }

    private :
      void
      _M_read ( )
      {
 _M_ok = ( _M_stream && * _M_stream ) ? true : false;
 if ( _M_ok )
   {
     * _M_stream >> _M_value;
     _M_ok = * _M_stream ? true : false;
   }
      }
    };
# 121 "/usr/include/c++/4.4/bits/stream_iterator.h" 3
template < typename _Tp, typename _CharT, typename _Traits, typename _Dist >
    inline bool
    operator == ( const istream_iterator < _Tp, _CharT, _Traits, _Dist > & __x,
        const istream_iterator < _Tp, _CharT, _Traits, _Dist > & __y )
    { return __x . _M_equal ( __y ); }
# 128 "/usr/include/c++/4.4/bits/stream_iterator.h" 3
template < class _Tp, class _CharT, class _Traits, class _Dist >
    inline bool
    operator != ( const istream_iterator < _Tp, _CharT, _Traits, _Dist > & __x,
        const istream_iterator < _Tp, _CharT, _Traits, _Dist > & __y )
    { return ! __x . _M_equal ( __y ); }
# 145 "/usr/include/c++/4.4/bits/stream_iterator.h" 3
template < typename _Tp, typename _CharT = char,
           typename _Traits = char_traits < _CharT > >
    class ostream_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    public :


      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_ostream < _CharT, _Traits > ostream_type;


    private :
      ostream_type * _M_stream;
      const _CharT * _M_string;

    public :

      ostream_iterator ( ostream_type & __s ) : _M_stream ( & __s ), _M_string ( 0 ) { }

      ostream_iterator ( ostream_type & __s, const _CharT * __c )
      : _M_stream ( & __s ), _M_string ( __c ) { }


      ostream_iterator ( const ostream_iterator & __obj )
      : _M_stream ( __obj . _M_stream ), _M_string ( __obj . _M_string ) { }



      ostream_iterator &
      operator = ( const _Tp & __value )
      {
 ;


 * _M_stream << __value;
 if ( _M_string ) * _M_stream << _M_string;
 return * this;
      }

      ostream_iterator &
      operator * ( )
      { return * this; }

      ostream_iterator &
      operator ++ ( )
      { return * this; }

      ostream_iterator &
      operator ++ ( int )
      { return * this; }
    };
# 209 "/usr/include/c++/4.4/bits/stream_iterator.h" 3
}
# 40 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 198 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp >
    bool
    binary_search ( _FIter, _FIter, const _Tp & );
# 202 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp, typename _Compare >
    bool
    binary_search ( _FIter, _FIter, const _Tp &, _Compare );
# 206 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter> inline _OIter copy(_IIter, _IIter, _OIter);
# 210 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _BIter1, class _BIter2> inline _BIter2 copy_backward(_BIter1, _BIter1, _BIter2);
# 227 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp >
    pair < _FIter, _FIter >
    equal_range ( _FIter, _FIter, const _Tp & );
# 231 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp, typename _Compare >
    pair < _FIter, _FIter >
    equal_range ( _FIter, _FIter, const _Tp &, _Compare );
# 235 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> inline void fill(_FIter, _FIter, const _Tp &);
# 246 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _OIter, class _Size, class _Tp> inline _OIter fill_n(_OIter, _Size, const _Tp &);
# 252 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter1, typename _FIter2 >
    _FIter1
    find_end ( _FIter1, _FIter1, _FIter2, _FIter2 );
# 256 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter1, typename _FIter2, typename _BinaryPredicate >
    _FIter1
    find_end ( _FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate );
# 273 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2 >
    bool
    includes ( _IIter1, _IIter1, _IIter2, _IIter2 );
# 277 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _Compare >
    bool
    includes ( _IIter1, _IIter1, _IIter2, _IIter2, _Compare );
# 281 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter >
    void
    inplace_merge ( _BIter, _BIter, _BIter );
# 285 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter, typename _Compare >
    void
    inplace_merge ( _BIter, _BIter, _BIter, _Compare );
# 327 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> inline void iter_swap(_FIter1, _FIter2);
# 331 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp >
    _FIter
    lower_bound ( _FIter, _FIter, const _Tp & );
# 335 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp, typename _Compare >
    _FIter
    lower_bound ( _FIter, _FIter, const _Tp &, _Compare );
# 339 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter> void make_heap(_RAIter, _RAIter);
# 343 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> void make_heap(_RAIter, _RAIter, _Compare);
# 347 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _Tp> inline const _Tp &max(const _Tp &, const _Tp &);
# 351 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _Tp, class _Compare> inline const _Tp &max(const _Tp &, const _Tp &, _Compare);
# 358 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _Tp> inline const _Tp &min(const _Tp &, const _Tp &);
# 362 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _Tp, class _Compare> inline const _Tp &min(const _Tp &, const _Tp &, _Compare);
# 412 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter >
    bool
    next_permutation ( _BIter, _BIter );
# 416 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter, typename _Compare >
    bool
    next_permutation ( _BIter, _BIter, _Compare );
# 429 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _RAIter >
    _RAIter
    partial_sort_copy ( _IIter, _IIter, _RAIter, _RAIter );
# 433 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _RAIter, typename _Compare >
    _RAIter
    partial_sort_copy ( _IIter, _IIter, _RAIter, _RAIter, _Compare );
# 450 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter> inline void pop_heap(_RAIter, _RAIter);
# 454 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void pop_heap(_RAIter, _RAIter, _Compare);
# 458 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter >
    bool
    prev_permutation ( _BIter, _BIter );
# 462 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter, typename _Compare >
    bool
    prev_permutation ( _BIter, _BIter, _Compare );
# 466 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter> inline void push_heap(_RAIter, _RAIter);
# 470 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void push_heap(_RAIter, _RAIter, _Compare);
# 476 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp >
    _FIter
    remove ( _FIter, _FIter, const _Tp & );
# 480 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Predicate >
    _FIter
    remove_if ( _FIter, _FIter, _Predicate );
# 484 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _OIter, typename _Tp >
    _OIter
    remove_copy ( _IIter, _IIter, _OIter, const _Tp & );
# 488 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _OIter, typename _Predicate >
    _OIter
    remove_copy_if ( _IIter, _IIter, _OIter, _Predicate );
# 494 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _OIter, typename _Tp >
    _OIter
    replace_copy ( _IIter, _IIter, _OIter, const _Tp &, const _Tp & );
# 498 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _Iter, typename _OIter, typename _Predicate, typename _Tp >
    _OIter
    replace_copy_if ( _Iter, _Iter, _OIter, _Predicate, const _Tp & );
# 504 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter >
    void
    reverse ( _BIter, _BIter );
# 508 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter, typename _OIter >
    _OIter
    reverse_copy ( _BIter, _BIter, _OIter );
# 512 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter >
    void
    rotate ( _FIter, _FIter, _FIter );
# 516 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _OIter >
    _OIter
    rotate_copy ( _FIter, _FIter, _FIter, _OIter );
# 527 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter> void sort_heap(_RAIter, _RAIter);
# 531 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> void sort_heap(_RAIter, _RAIter, _Compare);
# 535 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter, typename _Predicate >
    _BIter
    stable_partition ( _BIter, _BIter, _Predicate );
# 539 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _Tp> inline void swap(_Tp &, _Tp &);
# 543 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _Tp, size_t _Nm> inline void swap(_Tp (&)[_Nm], _Tp (&)[_Nm]);
# 547 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> _FIter2 swap_ranges(_FIter1, _FIter1, _FIter2);
# 553 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter >
    _FIter
    unique ( _FIter, _FIter );
# 557 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _BinaryPredicate >
    _FIter
    unique ( _FIter, _FIter, _BinaryPredicate );
# 563 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp >
    _FIter
    upper_bound ( _FIter, _FIter, const _Tp & );
# 567 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp, typename _Compare >
    _FIter
    upper_bound ( _FIter, _FIter, const _Tp &, _Compare );
# 571 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
}
# 573 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 575 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter >
    _FIter
    adjacent_find ( _FIter, _FIter );
# 579 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _BinaryPredicate >
    _FIter
    adjacent_find ( _FIter, _FIter, _BinaryPredicate );
# 583 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _Tp >
    typename iterator_traits < _IIter > :: difference_type
    count ( _IIter, _IIter, const _Tp & );
# 587 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _Predicate >
    typename iterator_traits < _IIter > :: difference_type
    count_if ( _IIter, _IIter, _Predicate );
# 591 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> inline bool equal(_IIter1, _IIter1, _IIter2);
# 595 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool equal(_IIter1, _IIter1, _IIter2, _BinaryPredicate);
# 599 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _Tp >
    _IIter
    find ( _IIter, _IIter, const _Tp & );
# 603 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter1, typename _FIter2 >
    _FIter1
    find_first_of ( _FIter1, _FIter1, _FIter2, _FIter2 );
# 607 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter1, typename _FIter2, typename _BinaryPredicate >
    _FIter1
    find_first_of ( _FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate );
# 611 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _Predicate >
    _IIter
    find_if ( _IIter, _IIter, _Predicate );
# 615 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _Funct >
    _Funct
    for_each ( _IIter, _IIter, _Funct );
# 619 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Generator >
    void
    generate ( _FIter, _FIter, _Generator );
# 630 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _OIter, typename _Size, typename _Generator >
    _OIter
    generate_n ( _OIter, _Size, _Generator );
# 634 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> inline bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2);
# 638 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _Compare> bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);
# 642 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter >
    _FIter
    max_element ( _FIter, _FIter );
# 646 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Compare >
    _FIter
    max_element ( _FIter, _FIter, _Compare );
# 650 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter >
    _OIter
    merge ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter );
# 654 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare >
    _OIter
    merge ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare );
# 659 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter >
    _FIter
    min_element ( _FIter, _FIter );
# 663 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Compare >
    _FIter
    min_element ( _FIter, _FIter, _Compare );
# 667 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> pair< _IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2);
# 671 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> pair< _IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2, _BinaryPredicate);
# 675 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter >
    void
    nth_element ( _RAIter, _RAIter, _RAIter );
# 679 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter, typename _Compare >
    void
    nth_element ( _RAIter, _RAIter, _RAIter, _Compare );
# 683 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter >
    void
    partial_sort ( _RAIter, _RAIter, _RAIter );
# 687 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter, typename _Compare >
    void
    partial_sort ( _RAIter, _RAIter, _RAIter, _Compare );
# 691 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _BIter, typename _Predicate >
    _BIter
    partition ( _BIter, _BIter, _Predicate );
# 695 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter >
    void
    random_shuffle ( _RAIter, _RAIter );
# 699 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter, typename _Generator >
    void
    random_shuffle ( _RAIter, _RAIter, _Generator & );
# 703 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Tp >
    void
    replace ( _FIter, _FIter, const _Tp &, const _Tp & );
# 707 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Predicate, typename _Tp >
    void
    replace_if ( _FIter, _FIter, _Predicate, const _Tp & );
# 711 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter1, typename _FIter2 >
    _FIter1
    search ( _FIter1, _FIter1, _FIter2, _FIter2 );
# 715 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter1, typename _FIter2, typename _BinaryPredicate >
    _FIter1
    search ( _FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate );
# 719 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Size, typename _Tp >
    _FIter
    search_n ( _FIter, _FIter, _Size, const _Tp & );
# 723 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _FIter, typename _Size, typename _Tp,
    typename _BinaryPredicate >
    _FIter
    search_n ( _FIter, _FIter, _Size, const _Tp &, _BinaryPredicate );
# 728 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter >
    _OIter
    set_difference ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter );
# 732 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare >
    _OIter
    set_difference ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare );
# 737 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter >
    _OIter
    set_intersection ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter );
# 741 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare >
    _OIter
    set_intersection ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare );
# 746 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter >
    _OIter
    set_symmetric_difference ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter );
# 750 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare >
    _OIter
    set_symmetric_difference ( _IIter1, _IIter1, _IIter2, _IIter2,
        _OIter, _Compare );
# 756 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter >
    _OIter
    set_union ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter );
# 760 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare >
    _OIter
    set_union ( _IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare );
# 765 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter >
    void
    sort ( _RAIter, _RAIter );
# 769 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter, typename _Compare >
    void
    sort ( _RAIter, _RAIter, _Compare );
# 773 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter >
    void
    stable_sort ( _RAIter, _RAIter );
# 777 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _RAIter, typename _Compare >
    void
    stable_sort ( _RAIter, _RAIter, _Compare );
# 781 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _OIter, typename _UnaryOperation >
    _OIter
    transform ( _IIter, _IIter, _OIter, _UnaryOperation );
# 785 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter1, typename _IIter2, typename _OIter,
    typename _BinaryOperation >
    _OIter
    transform ( _IIter1, _IIter1, _IIter2, _OIter, _BinaryOperation );
# 790 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _OIter >
    _OIter
    unique_copy ( _IIter, _IIter, _OIter );
# 794 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
template < typename _IIter, typename _OIter, typename _BinaryPredicate >
    _OIter
    unique_copy ( _IIter, _IIter, _OIter, _BinaryPredicate );
# 798 "/usr/include/c++/4.4/bits/algorithmfwd.h" 3
}
# 64 "/usr/include/c++/4.4/bits/stl_tempbuf.h" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/4.4/bits/stl_tempbuf.h" 3
template < typename _Tp >
    pair < _Tp *, ptrdiff_t >
    get_temporary_buffer ( ptrdiff_t __len )
    {
      const ptrdiff_t __max =
 __gnu_cxx :: __numeric_traits < ptrdiff_t > :: __max / sizeof ( _Tp );
      if ( __len > __max )
 __len = __max;

      while ( __len > 0 )
 {
   _Tp * __tmp = static_cast < _Tp * > ( :: operator new ( __len * sizeof ( _Tp ),
       std :: nothrow ) );
   if ( __tmp != 0 )
     return std :: pair < _Tp *, ptrdiff_t > ( __tmp, __len );
   __len /= 2;
 }
      return std :: pair < _Tp *, ptrdiff_t > ( static_cast < _Tp * > ( 0 ), 0 );
    }
# 110 "/usr/include/c++/4.4/bits/stl_tempbuf.h" 3
template < typename _Tp >
    inline void
    return_temporary_buffer ( _Tp * __p )
    { :: operator delete ( __p, std :: nothrow ); }
# 121 "/usr/include/c++/4.4/bits/stl_tempbuf.h" 3
template < typename _ForwardIterator, typename _Tp >
    class _Temporary_buffer
    {



    public :
      typedef _Tp value_type;
      typedef value_type * pointer;
      typedef pointer iterator;
      typedef ptrdiff_t size_type;

    protected :
      size_type _M_original_len;
      size_type _M_len;
      pointer _M_buffer;

    public :

      size_type
      size ( ) const
      { return _M_len; }


      size_type
      requested_size ( ) const
      { return _M_original_len; }


      iterator
      begin ( )
      { return _M_buffer; }


      iterator
      end ( )
      { return _M_buffer + _M_len; }





      _Temporary_buffer ( _ForwardIterator __first, _ForwardIterator __last );

      ~ _Temporary_buffer ( )
      {
 std :: _Destroy ( _M_buffer, _M_buffer + _M_len );
 std :: return_temporary_buffer ( _M_buffer );
      }

    private :

      _Temporary_buffer ( const _Temporary_buffer & );

      void
      operator = ( const _Temporary_buffer & );
    };
# 179 "/usr/include/c++/4.4/bits/stl_tempbuf.h" 3
template < typename _ForwardIterator, typename _Tp >
    _Temporary_buffer < _ForwardIterator, _Tp > ::
    _Temporary_buffer ( _ForwardIterator __first, _ForwardIterator __last )
    : _M_original_len ( std :: distance ( __first, __last ) ),
      _M_len ( 0 ), _M_buffer ( 0 )
    {
      try
 {
   std :: pair < pointer, size_type > __p ( std :: get_temporary_buffer <
         value_type > ( _M_original_len ) );
   _M_buffer = __p . first;
   _M_len = __p . second;
   if ( ! __is_pod ( _Tp ) && _M_len > 0 )
     std :: uninitialized_fill_n ( _M_buffer, _M_len, * __first );
 }
      catch ( ... )
 {
   std :: return_temporary_buffer ( _M_buffer );
   _M_buffer = 0;
   _M_len = 0;
   throw;
 }
    }
# 203 "/usr/include/c++/4.4/bits/stl_tempbuf.h" 3
}
# 69 "/usr/include/c++/4.4/bits/stl_algo.h" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _Tp >
    inline const _Tp &
    __median ( const _Tp & __a, const _Tp & __b, const _Tp & __c )
    {


      if ( __a < __b )
 if ( __b < __c )
   return __b;
 else if ( __a < __c )
   return __c;
 else
   return __a;
      else if ( __a < __c )
 return __a;
      else if ( __b < __c )
 return __c;
      else
 return __b;
    }
# 117 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    __median ( const _Tp & __a, const _Tp & __b, const _Tp & __c, _Compare __comp )
    {



      if ( __comp ( __a, __b ) )
 if ( __comp ( __b, __c ) )
   return __b;
 else if ( __comp ( __a, __c ) )
   return __c;
 else
   return __a;
      else if ( __comp ( __a, __c ) )
 return __a;
      else if ( __comp ( __b, __c ) )
 return __c;
      else
 return __b;
    }
# 142 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Tp >
    inline _InputIterator
    __find ( _InputIterator __first, _InputIterator __last,
    const _Tp & __val, input_iterator_tag )
    {
      while ( __first != __last && ! ( * __first == __val ) )
 ++ __first;
      return __first;
    }
# 153 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Predicate >
    inline _InputIterator
    __find_if ( _InputIterator __first, _InputIterator __last,
       _Predicate __pred, input_iterator_tag )
    {
      while ( __first != __last && ! bool ( __pred ( * __first ) ) )
 ++ __first;
      return __first;
    }
# 164 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Tp >
    _RandomAccessIterator
    __find ( _RandomAccessIterator __first, _RandomAccessIterator __last,
    const _Tp & __val, random_access_iterator_tag )
    {
      typename iterator_traits < _RandomAccessIterator > :: difference_type
 __trip_count = ( __last - __first ) >> 2;

      for (; __trip_count > 0; -- __trip_count )
 {
   if ( * __first == __val )
     return __first;
   ++ __first;

   if ( * __first == __val )
     return __first;
   ++ __first;

   if ( * __first == __val )
     return __first;
   ++ __first;

   if ( * __first == __val )
     return __first;
   ++ __first;
 }

      switch ( __last - __first )
 {
 case 3 :
   if ( * __first == __val )
     return __first;
   ++ __first;
 case 2 :
   if ( * __first == __val )
     return __first;
   ++ __first;
 case 1 :
   if ( * __first == __val )
     return __first;
   ++ __first;
 case 0 :
 default :
   return __last;
 }
    }
# 212 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Predicate >
    _RandomAccessIterator
    __find_if ( _RandomAccessIterator __first, _RandomAccessIterator __last,
       _Predicate __pred, random_access_iterator_tag )
    {
      typename iterator_traits < _RandomAccessIterator > :: difference_type
 __trip_count = ( __last - __first ) >> 2;

      for (; __trip_count > 0; -- __trip_count )
 {
   if ( __pred ( * __first ) )
     return __first;
   ++ __first;

   if ( __pred ( * __first ) )
     return __first;
   ++ __first;

   if ( __pred ( * __first ) )
     return __first;
   ++ __first;

   if ( __pred ( * __first ) )
     return __first;
   ++ __first;
 }

      switch ( __last - __first )
 {
 case 3 :
   if ( __pred ( * __first ) )
     return __first;
   ++ __first;
 case 2 :
   if ( __pred ( * __first ) )
     return __first;
   ++ __first;
 case 1 :
   if ( __pred ( * __first ) )
     return __first;
   ++ __first;
 case 0 :
 default :
   return __last;
 }
    }
# 338 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Integer, typename _Tp >
    _ForwardIterator
    __search_n ( _ForwardIterator __first, _ForwardIterator __last,
        _Integer __count, const _Tp & __val,
        std :: forward_iterator_tag )
    {
      __first = std :: find ( __first, __last, __val );
      while ( __first != __last )
 {
   typename iterator_traits < _ForwardIterator > :: difference_type
     __n = __count;
   _ForwardIterator __i = __first;
   ++ __i;
   while ( __i != __last && __n != 1 && * __i == __val )
     {
       ++ __i;
       -- __n;
     }
   if ( __n == 1 )
     return __first;
   if ( __i == __last )
     return __last;
   __first = std :: find ( ++ __i, __last, __val );
 }
      return __last;
    }
# 370 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIter, typename _Integer, typename _Tp >
    _RandomAccessIter
    __search_n ( _RandomAccessIter __first, _RandomAccessIter __last,
        _Integer __count, const _Tp & __val,
        std :: random_access_iterator_tag )
    {

      typedef typename std :: iterator_traits < _RandomAccessIter > :: difference_type
 _DistanceType;

      _DistanceType __tailSize = __last - __first;
      const _DistanceType __pattSize = __count;

      if ( __tailSize < __pattSize )
        return __last;

      const _DistanceType __skipOffset = __pattSize - 1;
      _RandomAccessIter __lookAhead = __first + __skipOffset;
      __tailSize -= __pattSize;

      while ( 1 )
 {


   while ( ! ( * __lookAhead == __val ) )
     {
       if ( __tailSize < __pattSize )
  return __last;
       __lookAhead += __pattSize;
       __tailSize -= __pattSize;
     }
   _DistanceType __remainder = __skipOffset;
   for ( _RandomAccessIter __backTrack = __lookAhead - 1;
        * __backTrack == __val; -- __backTrack )
     {
       if ( -- __remainder == 0 )
  return ( __lookAhead - __skipOffset );
     }
   if ( __remainder > __tailSize )
     return __last;
   __lookAhead += __remainder;
   __tailSize -= __remainder;
 }
    }
# 423 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Integer, typename _Tp,
           typename _BinaryPredicate >
    _ForwardIterator
    __search_n ( _ForwardIterator __first, _ForwardIterator __last,
        _Integer __count, const _Tp & __val,
        _BinaryPredicate __binary_pred, std :: forward_iterator_tag )
    {
      while ( __first != __last && ! bool ( __binary_pred ( * __first, __val ) ) )
        ++ __first;

      while ( __first != __last )
 {
   typename iterator_traits < _ForwardIterator > :: difference_type
     __n = __count;
   _ForwardIterator __i = __first;
   ++ __i;
   while ( __i != __last && __n != 1 && bool ( __binary_pred ( * __i, __val ) ) )
     {
       ++ __i;
       -- __n;
     }
   if ( __n == 1 )
     return __first;
   if ( __i == __last )
     return __last;
   __first = ++ __i;
   while ( __first != __last
   && ! bool ( __binary_pred ( * __first, __val ) ) )
     ++ __first;
 }
      return __last;
    }
# 462 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIter, typename _Integer, typename _Tp,
    typename _BinaryPredicate >
    _RandomAccessIter
    __search_n ( _RandomAccessIter __first, _RandomAccessIter __last,
        _Integer __count, const _Tp & __val,
        _BinaryPredicate __binary_pred, std :: random_access_iterator_tag )
    {

      typedef typename std :: iterator_traits < _RandomAccessIter > :: difference_type
 _DistanceType;

      _DistanceType __tailSize = __last - __first;
      const _DistanceType __pattSize = __count;

      if ( __tailSize < __pattSize )
        return __last;

      const _DistanceType __skipOffset = __pattSize - 1;
      _RandomAccessIter __lookAhead = __first + __skipOffset;
      __tailSize -= __pattSize;

      while ( 1 )
 {


   while ( ! bool ( __binary_pred ( * __lookAhead, __val ) ) )
     {
       if ( __tailSize < __pattSize )
  return __last;
       __lookAhead += __pattSize;
       __tailSize -= __pattSize;
     }
   _DistanceType __remainder = __skipOffset;
   for ( _RandomAccessIter __backTrack = __lookAhead - 1;
        __binary_pred ( * __backTrack, __val ); -- __backTrack )
     {
       if ( -- __remainder == 0 )
  return ( __lookAhead - __skipOffset );
     }
   if ( __remainder > __tailSize )
     return __last;
   __lookAhead += __remainder;
   __tailSize -= __remainder;
 }
    }
# 509 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator1
    __find_end ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag )
    {
      if ( __first2 == __last2 )
 return __last1;
      else
 {
   _ForwardIterator1 __result = __last1;
   while ( 1 )
     {
       _ForwardIterator1 __new_result
  = std :: search ( __first1, __last1, __first2, __last2 );
       if ( __new_result == __last1 )
  return __result;
       else
  {
    __result = __new_result;
    __first1 = __new_result;
    ++ __first1;
  }
     }
 }
    }
# 536 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate >
    _ForwardIterator1
    __find_end ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag,
        _BinaryPredicate __comp )
    {
      if ( __first2 == __last2 )
 return __last1;
      else
 {
   _ForwardIterator1 __result = __last1;
   while ( 1 )
     {
       _ForwardIterator1 __new_result
  = std :: search ( __first1, __last1, __first2,
      __last2, __comp );
       if ( __new_result == __last1 )
  return __result;
       else
  {
    __result = __new_result;
    __first1 = __new_result;
    ++ __first1;
  }
     }
 }
    }
# 567 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator1, typename _BidirectionalIterator2 >
    _BidirectionalIterator1
    __find_end ( _BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag )
    {






      typedef reverse_iterator < _BidirectionalIterator1 > _RevIterator1;
      typedef reverse_iterator < _BidirectionalIterator2 > _RevIterator2;

      _RevIterator1 __rlast1 ( __first1 );
      _RevIterator2 __rlast2 ( __first2 );
      _RevIterator1 __rresult = std :: search ( _RevIterator1 ( __last1 ),
             __rlast1,
             _RevIterator2 ( __last2 ),
             __rlast2 );

      if ( __rresult == __rlast1 )
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult . base ( );
   std :: advance ( __result, - std :: distance ( __first2, __last2 ) );
   return __result;
 }
    }
# 601 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BinaryPredicate >
    _BidirectionalIterator1
    __find_end ( _BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag,
        _BinaryPredicate __comp )
    {






      typedef reverse_iterator < _BidirectionalIterator1 > _RevIterator1;
      typedef reverse_iterator < _BidirectionalIterator2 > _RevIterator2;

      _RevIterator1 __rlast1 ( __first1 );
      _RevIterator2 __rlast2 ( __first2 );
      _RevIterator1 __rresult = std :: search ( _RevIterator1 ( __last1 ), __rlast1,
         _RevIterator2 ( __last2 ), __rlast2,
         __comp );

      if ( __rresult == __rlast1 )
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult . base ( );
   std :: advance ( __result, - std :: distance ( __first2, __last2 ) );
   return __result;
 }
    }
# 661 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    inline _ForwardIterator1
    find_end ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2 )
    {






      ;
      ;

      return std :: __find_end ( __first1, __last1, __first2, __last2,
        std :: __iterator_category ( __first1 ),
        std :: __iterator_category ( __first2 ) );
    }
# 707 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate >
    inline _ForwardIterator1
    find_end ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2,
      _BinaryPredicate __comp )
    {






      ;
      ;

      return std :: __find_end ( __first1, __last1, __first2, __last2,
        std :: __iterator_category ( __first1 ),
        std :: __iterator_category ( __first2 ),
        __comp );
    }
# 886 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator, typename _Tp >
    _OutputIterator
    remove_copy ( _InputIterator __first, _InputIterator __last,
  _OutputIterator __result, const _Tp & __value )
    {






      ;

      for (; __first != __last; ++ __first )
 if ( ! ( * __first == __value ) )
   {
     * __result = * __first;
     ++ __result;
   }
      return __result;
    }
# 923 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator,
    typename _Predicate >
    _OutputIterator
    remove_copy_if ( _InputIterator __first, _InputIterator __last,
     _OutputIterator __result, _Predicate __pred )
    {






      ;

      for (; __first != __last; ++ __first )
 if ( ! bool ( __pred ( * __first ) ) )
   {
     * __result = * __first;
     ++ __result;
   }
      return __result;
    }
# 1098 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp >
    _ForwardIterator
    remove ( _ForwardIterator __first, _ForwardIterator __last,
    const _Tp & __value )
    {





      ;

      __first = std :: find ( __first, __last, __value );
      if ( __first == __last )
        return __first;
      _ForwardIterator __result = __first;
      ++ __first;
      for (; __first != __last; ++ __first )
        if ( ! ( * __first == __value ) )
          {
            * __result = ( * __first );
            ++ __result;
          }
      return __result;
    }
# 1141 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Predicate >
    _ForwardIterator
    remove_if ( _ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred )
    {





      ;

      __first = std :: find_if ( __first, __last, __pred );
      if ( __first == __last )
        return __first;
      _ForwardIterator __result = __first;
      ++ __first;
      for (; __first != __last; ++ __first )
        if ( ! bool ( __pred ( * __first ) ) )
          {
            * __result = ( * __first );
            ++ __result;
          }
      return __result;
    }
# 1181 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator >
    _ForwardIterator
    unique ( _ForwardIterator __first, _ForwardIterator __last )
    {





      ;


      __first = std :: adjacent_find ( __first, __last );
      if ( __first == __last )
 return __last;


      _ForwardIterator __dest = __first;
      ++ __first;
      while ( ++ __first != __last )
 if ( ! ( * __dest == * __first ) )
   * ++ __dest = ( * __first );
      return ++ __dest;
    }
# 1221 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _BinaryPredicate >
    _ForwardIterator
    unique ( _ForwardIterator __first, _ForwardIterator __last,
           _BinaryPredicate __binary_pred )
    {






      ;


      __first = std :: adjacent_find ( __first, __last, __binary_pred );
      if ( __first == __last )
 return __last;


      _ForwardIterator __dest = __first;
      ++ __first;
      while ( ++ __first != __last )
 if ( ! bool ( __binary_pred ( * __dest, * __first ) ) )
   * ++ __dest = ( * __first );
      return ++ __dest;
    }
# 1253 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _OutputIterator >
    _OutputIterator
    __unique_copy ( _ForwardIterator __first, _ForwardIterator __last,
    _OutputIterator __result,
    forward_iterator_tag, output_iterator_tag )
    {

      _ForwardIterator __next = __first;
      * __result = * __first;
      while ( ++ __next != __last )
 if ( ! ( * __first == * __next ) )
   {
     __first = __next;
     * ++ __result = * __first;
   }
      return ++ __result;
    }
# 1276 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator >
    _OutputIterator
    __unique_copy ( _InputIterator __first, _InputIterator __last,
    _OutputIterator __result,
    input_iterator_tag, output_iterator_tag )
    {

      typename iterator_traits < _InputIterator > :: value_type __value = * __first;
      * __result = __value;
      while ( ++ __first != __last )
 if ( ! ( __value == * __first ) )
   {
     __value = * __first;
     * ++ __result = __value;
   }
      return ++ __result;
    }
# 1299 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _ForwardIterator >
    _ForwardIterator
    __unique_copy ( _InputIterator __first, _InputIterator __last,
    _ForwardIterator __result,
    input_iterator_tag, forward_iterator_tag )
    {

      * __result = * __first;
      while ( ++ __first != __last )
 if ( ! ( * __result == * __first ) )
   * ++ __result = * __first;
      return ++ __result;
    }
# 1319 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _OutputIterator,
    typename _BinaryPredicate >
    _OutputIterator
    __unique_copy ( _ForwardIterator __first, _ForwardIterator __last,
    _OutputIterator __result, _BinaryPredicate __binary_pred,
    forward_iterator_tag, output_iterator_tag )
    {





      _ForwardIterator __next = __first;
      * __result = * __first;
      while ( ++ __next != __last )
 if ( ! bool ( __binary_pred ( * __first, * __next ) ) )
   {
     __first = __next;
     * ++ __result = * __first;
   }
      return ++ __result;
    }
# 1348 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate >
    _OutputIterator
    __unique_copy ( _InputIterator __first, _InputIterator __last,
    _OutputIterator __result, _BinaryPredicate __binary_pred,
    input_iterator_tag, output_iterator_tag )
    {





      typename iterator_traits < _InputIterator > :: value_type __value = * __first;
      * __result = __value;
      while ( ++ __first != __last )
 if ( ! bool ( __binary_pred ( __value, * __first ) ) )
   {
     __value = * __first;
     * ++ __result = __value;
   }
      return ++ __result;
    }
# 1377 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate >
    _ForwardIterator
    __unique_copy ( _InputIterator __first, _InputIterator __last,
    _ForwardIterator __result, _BinaryPredicate __binary_pred,
    input_iterator_tag, forward_iterator_tag )
    {





      * __result = * __first;
      while ( ++ __first != __last )
 if ( ! bool ( __binary_pred ( * __result, * __first ) ) )
   * ++ __result = * __first;
      return ++ __result;
    }
# 1401 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator >
    void
    __reverse ( _BidirectionalIterator __first, _BidirectionalIterator __last,
       bidirectional_iterator_tag )
    {
      while ( true )
 if ( __first == __last || __first == -- __last )
   return;
 else
   {
     std :: iter_swap ( __first, __last );
     ++ __first;
   }
    }
# 1421 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    void
    __reverse ( _RandomAccessIterator __first, _RandomAccessIterator __last,
       random_access_iterator_tag )
    {
      if ( __first == __last )
 return;
      -- __last;
      while ( __first < __last )
 {
   std :: iter_swap ( __first, __last );
   ++ __first;
   -- __last;
 }
    }
# 1449 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator >
    inline void
    reverse ( _BidirectionalIterator __first, _BidirectionalIterator __last )
    {



      ;
      std :: __reverse ( __first, __last, std :: __iterator_category ( __first ) );
    }
# 1476 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _OutputIterator >
    _OutputIterator
    reverse_copy ( _BidirectionalIterator __first, _BidirectionalIterator __last,
   _OutputIterator __result )
    {





      ;

      while ( __first != __last )
 {
   -- __last;
   * __result = * __last;
   ++ __result;
 }
      return __result;
    }
# 1501 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _EuclideanRingElement >
    _EuclideanRingElement
    __gcd ( _EuclideanRingElement __m, _EuclideanRingElement __n )
    {
      while ( __n != 0 )
 {
   _EuclideanRingElement __t = __m % __n;
   __m = __n;
   __n = __t;
 }
      return __m;
    }
# 1515 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator >
    void
    __rotate ( _ForwardIterator __first,
      _ForwardIterator __middle,
      _ForwardIterator __last,
      forward_iterator_tag )
    {
      if ( __first == __middle || __last == __middle )
 return;

      _ForwardIterator __first2 = __middle;
      do
 {
   std :: iter_swap ( __first, __first2 );
   ++ __first;
   ++ __first2;
   if ( __first == __middle )
     __middle = __first2;
 }
      while ( __first2 != __last );

      __first2 = __middle;

      while ( __first2 != __last )
 {
   std :: iter_swap ( __first, __first2 );
   ++ __first;
   ++ __first2;
   if ( __first == __middle )
     __middle = __first2;
   else if ( __first2 == __last )
     __first2 = __middle;
 }
    }
# 1551 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator >
    void
    __rotate ( _BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
       bidirectional_iterator_tag )
    {




      if ( __first == __middle || __last == __middle )
 return;

      std :: __reverse ( __first, __middle, bidirectional_iterator_tag ( ) );
      std :: __reverse ( __middle, __last, bidirectional_iterator_tag ( ) );

      while ( __first != __middle && __middle != __last )
 {
   std :: iter_swap ( __first, -- __last );
   ++ __first;
 }

      if ( __first == __middle )
 std :: __reverse ( __middle, __last, bidirectional_iterator_tag ( ) );
      else
 std :: __reverse ( __first, __middle, bidirectional_iterator_tag ( ) );
    }
# 1581 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    void
    __rotate ( _RandomAccessIterator __first,
      _RandomAccessIterator __middle,
      _RandomAccessIterator __last,
      random_access_iterator_tag )
    {




      if ( __first == __middle || __last == __middle )
 return;

      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _Distance;
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      const _Distance __n = __last - __first;
      const _Distance __k = __middle - __first;
      const _Distance __l = __n - __k;

      if ( __k == __l )
 {
   std :: swap_ranges ( __first, __middle, __middle );
   return;
 }

      const _Distance __d = std :: __gcd ( __n, __k );

      for ( _Distance __i = 0; __i < __d; __i ++ )
 {
   _ValueType __tmp = ( * __first );
   _RandomAccessIterator __p = __first;

   if ( __k < __l )
     {
       for ( _Distance __j = 0; __j < __l / __d; __j ++ )
  {
    if ( __p > __first + __l )
      {
        * __p = ( * ( __p - __l ) );
        __p -= __l;
      }

    * __p = ( * ( __p + __k ) );
    __p += __k;
  }
     }
   else
     {
       for ( _Distance __j = 0; __j < __k / __d - 1; __j ++ )
  {
    if ( __p < __last - __k )
      {
        * __p = ( * ( __p + __k ) );
        __p += __k;
      }
    * __p = ( * ( __p - __l ) );
    __p -= __l;
  }
     }

   * __p = ( __tmp );
   ++ __first;
 }
    }
# 1669 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator >
    inline void
    rotate ( _ForwardIterator __first, _ForwardIterator __middle,
    _ForwardIterator __last )
    {



      ;
      ;

      typedef typename iterator_traits < _ForwardIterator > :: iterator_category
 _IterType;
      std :: __rotate ( __first, __middle, __last, _IterType ( ) );
    }
# 1703 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _OutputIterator >
    _OutputIterator
    rotate_copy ( _ForwardIterator __first, _ForwardIterator __middle,
                _ForwardIterator __last, _OutputIterator __result )
    {




      ;
      ;

      return std :: copy ( __first, __middle,
                       std :: copy ( __middle, __last, __result ) );
    }
# 1720 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Predicate >
    _ForwardIterator
    __partition ( _ForwardIterator __first, _ForwardIterator __last,
  _Predicate __pred, forward_iterator_tag )
    {
      if ( __first == __last )
 return __first;

      while ( __pred ( * __first ) )
 if ( ++ __first == __last )
   return __first;

      _ForwardIterator __next = __first;

      while ( ++ __next != __last )
 if ( __pred ( * __next ) )
   {
     std :: iter_swap ( __first, __next );
     ++ __first;
   }

      return __first;
    }
# 1745 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Predicate >
    _BidirectionalIterator
    __partition ( _BidirectionalIterator __first, _BidirectionalIterator __last,
  _Predicate __pred, bidirectional_iterator_tag )
    {
      while ( true )
 {
   while ( true )
     if ( __first == __last )
       return __first;
     else if ( __pred ( * __first ) )
       ++ __first;
     else
       break;
   -- __last;
   while ( true )
     if ( __first == __last )
       return __first;
     else if ( ! bool ( __pred ( * __last ) ) )
       -- __last;
     else
       break;
   std :: iter_swap ( __first, __last );
   ++ __first;
 }
    }
# 1775 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Predicate, typename _Distance >
    _ForwardIterator
    __inplace_stable_partition ( _ForwardIterator __first,
          _ForwardIterator __last,
          _Predicate __pred, _Distance __len )
    {
      if ( __len == 1 )
 return __pred ( * __first ) ? __last : __first;
      _ForwardIterator __middle = __first;
      std :: advance ( __middle, __len / 2 );
      _ForwardIterator __begin = std :: __inplace_stable_partition ( __first,
         __middle,
         __pred,
         __len / 2 );
      _ForwardIterator __end = std :: __inplace_stable_partition ( __middle, __last,
              __pred,
              __len
              - __len / 2 );
      std :: rotate ( __begin, __middle, __end );
      std :: advance ( __begin, std :: distance ( __middle, __end ) );
      return __begin;
    }
# 1799 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Pointer, typename _Predicate,
    typename _Distance >
    _ForwardIterator
    __stable_partition_adaptive ( _ForwardIterator __first,
    _ForwardIterator __last,
    _Predicate __pred, _Distance __len,
    _Pointer __buffer,
    _Distance __buffer_size )
    {
      if ( __len <= __buffer_size )
 {
   _ForwardIterator __result1 = __first;
   _Pointer __result2 = __buffer;
   for (; __first != __last; ++ __first )
     if ( __pred ( * __first ) )
       {
  * __result1 = * __first;
  ++ __result1;
       }
     else
       {
  * __result2 = * __first;
  ++ __result2;
       }
   std :: copy ( __buffer, __result2, __result1 );
   return __result1;
 }
      else
 {
   _ForwardIterator __middle = __first;
   std :: advance ( __middle, __len / 2 );
   _ForwardIterator __begin =
     std :: __stable_partition_adaptive ( __first, __middle, __pred,
          __len / 2, __buffer,
          __buffer_size );
   _ForwardIterator __end =
     std :: __stable_partition_adaptive ( __middle, __last, __pred,
          __len - __len / 2,
          __buffer, __buffer_size );
   std :: rotate ( __begin, __middle, __end );
   std :: advance ( __begin, std :: distance ( __middle, __end ) );
   return __begin;
 }
    }
# 1861 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Predicate >
    _ForwardIterator
    stable_partition ( _ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred )
    {





      ;

      if ( __first == __last )
 return __first;
      else
 {
   typedef typename iterator_traits < _ForwardIterator > :: value_type
     _ValueType;
   typedef typename iterator_traits < _ForwardIterator > :: difference_type
     _DistanceType;

   _Temporary_buffer < _ForwardIterator, _ValueType > __buf ( __first,
        __last );
 if ( __buf . size ( ) > 0 )
   return
     std :: __stable_partition_adaptive ( __first, __last, __pred,
       _DistanceType ( __buf . requested_size ( ) ),
       __buf . begin ( ),
       _DistanceType ( __buf . size ( ) ) );
 else
   return
     std :: __inplace_stable_partition ( __first, __last, __pred,
      _DistanceType ( __buf . requested_size ( ) ) );
 }
    }
# 1898 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    void
    __heap_select ( _RandomAccessIterator __first,
    _RandomAccessIterator __middle,
    _RandomAccessIterator __last )
    {
      std :: make_heap ( __first, __middle );
      for ( _RandomAccessIterator __i = __middle; __i < __last; ++ __i )
 if ( * __i < * __first )
   std :: __pop_heap ( __first, __middle, __i );
    }
# 1911 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    void
    __heap_select ( _RandomAccessIterator __first,
    _RandomAccessIterator __middle,
    _RandomAccessIterator __last, _Compare __comp )
    {
      std :: make_heap ( __first, __middle, __comp );
      for ( _RandomAccessIterator __i = __middle; __i < __last; ++ __i )
 if ( __comp ( * __i, * __first ) )
   std :: __pop_heap ( __first, __middle, __i, __comp );
    }
# 1943 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _RandomAccessIterator >
    _RandomAccessIterator
    partial_sort_copy ( _InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last )
    {
      typedef typename iterator_traits < _InputIterator > :: value_type
 _InputValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _OutputValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _DistanceType;
# 1963 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      if ( __result_first == __result_last )
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while ( __first != __last && __result_real_last != __result_last )
 {
   * __result_real_last = * __first;
   ++ __result_real_last;
   ++ __first;
 }
      std :: make_heap ( __result_first, __result_real_last );
      while ( __first != __last )
 {
   if ( * __first < * __result_first )
     std :: __adjust_heap ( __result_first, _DistanceType ( 0 ),
          _DistanceType ( __result_real_last
          - __result_first ),
          _InputValueType ( * __first ) );
   ++ __first;
 }
      std :: sort_heap ( __result_first, __result_real_last );
      return __result_real_last;
    }
# 2009 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _RandomAccessIterator, typename _Compare >
    _RandomAccessIterator
    partial_sort_copy ( _InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last,
        _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator > :: value_type
 _InputValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _OutputValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _DistanceType;
# 2033 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      if ( __result_first == __result_last )
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while ( __first != __last && __result_real_last != __result_last )
 {
   * __result_real_last = * __first;
   ++ __result_real_last;
   ++ __first;
 }
      std :: make_heap ( __result_first, __result_real_last, __comp );
      while ( __first != __last )
 {
   if ( __comp ( * __first, * __result_first ) )
     std :: __adjust_heap ( __result_first, _DistanceType ( 0 ),
          _DistanceType ( __result_real_last
          - __result_first ),
          _InputValueType ( * __first ),
          __comp );
   ++ __first;
 }
      std :: sort_heap ( __result_first, __result_real_last, __comp );
      return __result_real_last;
    }
# 2061 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Tp >
    void
    __unguarded_linear_insert ( _RandomAccessIterator __last, _Tp __val )
    {
      _RandomAccessIterator __next = __last;
      -- __next;
      while ( __val < * __next )
 {
   * __last = * __next;
   __last = __next;
   -- __next;
 }
      * __last = __val;
    }
# 2077 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Tp, typename _Compare >
    void
    __unguarded_linear_insert ( _RandomAccessIterator __last, _Tp __val,
         _Compare __comp )
    {
      _RandomAccessIterator __next = __last;
      -- __next;
      while ( __comp ( __val, * __next ) )
 {
   * __last = * __next;
   __last = __next;
   -- __next;
 }
      * __last = __val;
    }
# 2094 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    void
    __insertion_sort ( _RandomAccessIterator __first,
       _RandomAccessIterator __last )
    {
      if ( __first == __last )
 return;

      for ( _RandomAccessIterator __i = __first + 1; __i != __last; ++ __i )
 {
   typename iterator_traits < _RandomAccessIterator > :: value_type
     __val = * __i;
   if ( __val < * __first )
     {
       std :: copy_backward ( __first, __i, __i + 1 );
       * __first = __val;
     }
   else
     std :: __unguarded_linear_insert ( __i, __val );
 }
    }
# 2117 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    void
    __insertion_sort ( _RandomAccessIterator __first,
       _RandomAccessIterator __last, _Compare __comp )
    {
      if ( __first == __last ) return;

      for ( _RandomAccessIterator __i = __first + 1; __i != __last; ++ __i )
 {
   typename iterator_traits < _RandomAccessIterator > :: value_type
     __val = * __i;
   if ( __comp ( __val, * __first ) )
     {
       std :: copy_backward ( __first, __i, __i + 1 );
       * __first = __val;
     }
   else
     std :: __unguarded_linear_insert ( __i, __val, __comp );
 }
    }
# 2139 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    inline void
    __unguarded_insertion_sort ( _RandomAccessIterator __first,
          _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      for ( _RandomAccessIterator __i = __first; __i != __last; ++ __i )
 std :: __unguarded_linear_insert ( __i, _ValueType ( * __i ) );
    }
# 2152 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    __unguarded_insertion_sort ( _RandomAccessIterator __first,
          _RandomAccessIterator __last, _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      for ( _RandomAccessIterator __i = __first; __i != __last; ++ __i )
 std :: __unguarded_linear_insert ( __i, _ValueType ( * __i ), __comp );
    }
# 2168 "/usr/include/c++/4.4/bits/stl_algo.h" 3
enum { _S_threshold = 16};
# 2171 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    void
    __final_insertion_sort ( _RandomAccessIterator __first,
      _RandomAccessIterator __last )
    {
      if ( __last - __first > int ( _S_threshold ) )
 {
   std :: __insertion_sort ( __first, __first + int ( _S_threshold ) );
   std :: __unguarded_insertion_sort ( __first + int ( _S_threshold ), __last );
 }
      else
 std :: __insertion_sort ( __first, __last );
    }
# 2186 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    void
    __final_insertion_sort ( _RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp )
    {
      if ( __last - __first > int ( _S_threshold ) )
 {
   std :: __insertion_sort ( __first, __first + int ( _S_threshold ), __comp );
   std :: __unguarded_insertion_sort ( __first + int ( _S_threshold ), __last,
       __comp );
 }
      else
 std :: __insertion_sort ( __first, __last, __comp );
    }
# 2202 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Tp >
    _RandomAccessIterator
    __unguarded_partition ( _RandomAccessIterator __first,
     _RandomAccessIterator __last, _Tp __pivot )
    {
      while ( true )
 {
   while ( * __first < __pivot )
     ++ __first;
   -- __last;
   while ( __pivot < * __last )
     -- __last;
   if ( ! ( __first < __last ) )
     return __first;
   std :: iter_swap ( __first, __last );
   ++ __first;
 }
    }
# 2222 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Tp, typename _Compare >
    _RandomAccessIterator
    __unguarded_partition ( _RandomAccessIterator __first,
     _RandomAccessIterator __last,
     _Tp __pivot, _Compare __comp )
    {
      while ( true )
 {
   while ( __comp ( * __first, __pivot ) )
     ++ __first;
   -- __last;
   while ( __comp ( __pivot, * __last ) )
     -- __last;
   if ( ! ( __first < __last ) )
     return __first;
   std :: iter_swap ( __first, __last );
   ++ __first;
 }
    }
# 2243 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Size >
    void
    __introsort_loop ( _RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      while ( __last - __first > int ( _S_threshold ) )
 {
   if ( __depth_limit == 0 )
     {
       std :: partial_sort ( __first, __last, __last );
       return;
     }
   -- __depth_limit;
   _RandomAccessIterator __cut =
     std :: __unguarded_partition ( __first, __last,
           _ValueType ( std :: __median ( * __first,
        * ( __first
          + ( __last
             - __first )
          / 2 ),
        * ( __last
          - 1 ) ) ) );
   std :: __introsort_loop ( __cut, __last, __depth_limit );
   __last = __cut;
 }
    }
# 2275 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Size, typename _Compare >
    void
    __introsort_loop ( _RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit, _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      while ( __last - __first > int ( _S_threshold ) )
 {
   if ( __depth_limit == 0 )
     {
       std :: partial_sort ( __first, __last, __last, __comp );
       return;
     }
   -- __depth_limit;
   _RandomAccessIterator __cut =
     std :: __unguarded_partition ( __first, __last,
           _ValueType ( std :: __median ( * __first,
        * ( __first
          + ( __last
             - __first )
          / 2 ),
        * ( __last - 1 ),
        __comp ) ),
           __comp );
   std :: __introsort_loop ( __cut, __last, __depth_limit, __comp );
   __last = __cut;
 }
    }
# 2308 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _Size >
    inline _Size
    __lg ( _Size __n )
    {
      _Size __k;
      for ( __k = 0; __n != 0; __n >>= 1 )
 ++ __k;
      return __k - 1;
    }
# 2319 "/usr/include/c++/4.4/bits/stl_algo.h" 3
inline int __lg(int __n)
# 2320 "/usr/include/c++/4.4/bits/stl_algo.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 2323 "/usr/include/c++/4.4/bits/stl_algo.h" 3
inline long __lg(long __n)
# 2324 "/usr/include/c++/4.4/bits/stl_algo.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 2327 "/usr/include/c++/4.4/bits/stl_algo.h" 3
inline long long __lg(long long __n)
# 2328 "/usr/include/c++/4.4/bits/stl_algo.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 2332 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Size >
    void
    __introselect ( _RandomAccessIterator __first, _RandomAccessIterator __nth,
    _RandomAccessIterator __last, _Size __depth_limit )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      while ( __last - __first > 3 )
 {
   if ( __depth_limit == 0 )
     {
       std :: __heap_select ( __first, __nth + 1, __last );


       std :: iter_swap ( __first, __nth );
       return;
     }
   -- __depth_limit;
   _RandomAccessIterator __cut =
     std :: __unguarded_partition ( __first, __last,
           _ValueType ( std :: __median ( * __first,
        * ( __first
          + ( __last
             - __first )
          / 2 ),
        * ( __last
          - 1 ) ) ) );
   if ( __cut <= __nth )
     __first = __cut;
   else
     __last = __cut;
 }
      std :: __insertion_sort ( __first, __last );
    }
# 2368 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Size, typename _Compare >
    void
    __introselect ( _RandomAccessIterator __first, _RandomAccessIterator __nth,
    _RandomAccessIterator __last, _Size __depth_limit,
    _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;

      while ( __last - __first > 3 )
 {
   if ( __depth_limit == 0 )
     {
       std :: __heap_select ( __first, __nth + 1, __last, __comp );

       std :: iter_swap ( __first, __nth );
       return;
     }
   -- __depth_limit;
   _RandomAccessIterator __cut =
     std :: __unguarded_partition ( __first, __last,
           _ValueType ( std :: __median ( * __first,
        * ( __first
          + ( __last
             - __first )
          / 2 ),
        * ( __last - 1 ),
        __comp ) ),
           __comp );
   if ( __cut <= __nth )
     __first = __cut;
   else
     __last = __cut;
 }
      std :: __insertion_sort ( __first, __last, __comp );
    }
# 2418 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp >
    _ForwardIterator
    lower_bound ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;




      ;

      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( * __middle < __val )
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 2469 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Compare >
    _ForwardIterator
    lower_bound ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val, _Compare __comp )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;





      ;


      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( __comp ( * __middle, __val ) )
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 2518 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp >
    _ForwardIterator
    upper_bound ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;




      ;

      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( __val < * __middle )
     __len = __half;
   else
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }
# 2569 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Compare >
    _ForwardIterator
    upper_bound ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val, _Compare __comp )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;





      ;


      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( __comp ( __val, * __middle ) )
     __len = __half;
   else
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }
# 2624 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp >
    pair < _ForwardIterator, _ForwardIterator >
    equal_range ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;





      ;
      ;

      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle, __left, __right;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( * __middle < __val )
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
   else if ( __val < * __middle )
     __len = __half;
   else
     {
       __left = std :: lower_bound ( __first, __middle, __val );
       std :: advance ( __first, __len );
       __right = std :: upper_bound ( ++ __middle, __first, __val );
       return pair < _ForwardIterator, _ForwardIterator > ( __left, __right );
     }
 }
      return pair < _ForwardIterator, _ForwardIterator > ( __first, __first );
    }
# 2686 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Compare >
    pair < _ForwardIterator, _ForwardIterator >
    equal_range ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val,
  _Compare __comp )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;







      ;

      ;


      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle, __left, __right;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( __comp ( * __middle, __val ) )
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
   else if ( __comp ( __val, * __middle ) )
     __len = __half;
   else
     {
       __left = std :: lower_bound ( __first, __middle, __val, __comp );
       std :: advance ( __first, __len );
       __right = std :: upper_bound ( ++ __middle, __first, __val, __comp );
       return pair < _ForwardIterator, _ForwardIterator > ( __left, __right );
     }
 }
      return pair < _ForwardIterator, _ForwardIterator > ( __first, __first );
    }
# 2747 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp >
    bool
    binary_search ( _ForwardIterator __first, _ForwardIterator __last,
                  const _Tp & __val )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;




      ;
      ;

      _ForwardIterator __i = std :: lower_bound ( __first, __last, __val );
      return __i != __last && ! ( __val < * __i );
    }
# 2780 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Compare >
    bool
    binary_search ( _ForwardIterator __first, _ForwardIterator __last,
                  const _Tp & __val, _Compare __comp )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;





      ;

      ;


      _ForwardIterator __i = std :: lower_bound ( __first, __last, __val, __comp );
      return __i != __last && ! bool ( __comp ( __val, * __i ) );
    }
# 2804 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3 >
    _BidirectionalIterator3
    __merge_backward ( _BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result )
    {
      if ( __first1 == __last1 )
 return std :: copy_backward ( __first2, __last2, __result );
      if ( __first2 == __last2 )
 return std :: copy_backward ( __first1, __last1, __result );
      -- __last1;
      -- __last2;
      while ( true )
 {
   if ( * __last2 < * __last1 )
     {
       * -- __result = * __last1;
       if ( __first1 == __last1 )
  return std :: copy_backward ( __first2, ++ __last2, __result );
       -- __last1;
     }
   else
     {
       * -- __result = * __last2;
       if ( __first2 == __last2 )
  return std :: copy_backward ( __first1, ++ __last1, __result );
       -- __last2;
     }
 }
    }
# 2839 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3, typename _Compare >
    _BidirectionalIterator3
    __merge_backward ( _BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result,
       _Compare __comp )
    {
      if ( __first1 == __last1 )
 return std :: copy_backward ( __first2, __last2, __result );
      if ( __first2 == __last2 )
 return std :: copy_backward ( __first1, __last1, __result );
      -- __last1;
      -- __last2;
      while ( true )
 {
   if ( __comp ( * __last2, * __last1 ) )
     {
       * -- __result = * __last1;
       if ( __first1 == __last1 )
  return std :: copy_backward ( __first2, ++ __last2, __result );
       -- __last1;
     }
   else
     {
       * -- __result = * __last2;
       if ( __first2 == __last2 )
  return std :: copy_backward ( __first1, ++ __last1, __result );
       -- __last2;
     }
 }
    }
# 2875 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _Distance >
    _BidirectionalIterator1
    __rotate_adaptive ( _BidirectionalIterator1 __first,
        _BidirectionalIterator1 __middle,
        _BidirectionalIterator1 __last,
        _Distance __len1, _Distance __len2,
        _BidirectionalIterator2 __buffer,
        _Distance __buffer_size )
    {
      _BidirectionalIterator2 __buffer_end;
      if ( __len1 > __len2 && __len2 <= __buffer_size )
 {
   __buffer_end = std :: copy ( __middle, __last, __buffer );
   std :: copy_backward ( __first, __middle, __last );
   return std :: copy ( __buffer, __buffer_end, __first );
 }
      else if ( __len1 <= __buffer_size )
 {
   __buffer_end = std :: copy ( __first, __middle, __buffer );
   std :: copy ( __middle, __last, __first );
   return std :: copy_backward ( __buffer, __buffer_end, __last );
 }
      else
 {
   std :: rotate ( __first, __middle, __last );
   std :: advance ( __first, std :: distance ( __middle, __last ) );
   return __first;
 }
    }
# 2907 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Distance,
    typename _Pointer >
    void
    __merge_adaptive ( _BidirectionalIterator __first,
                     _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size )
    {
      if ( __len1 <= __len2 && __len1 <= __buffer_size )
 {
   _Pointer __buffer_end = std :: copy ( __first, __middle, __buffer );
   std :: merge ( __buffer, __buffer_end, __middle, __last,
    __first );
 }
      else if ( __len2 <= __buffer_size )
 {
   _Pointer __buffer_end = std :: copy ( __middle, __last, __buffer );
   std :: __merge_backward ( __first, __middle, __buffer,
    __buffer_end, __last );
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if ( __len1 > __len2 )
     {
       __len11 = __len1 / 2;
       std :: advance ( __first_cut, __len11 );
       __second_cut = std :: lower_bound ( __middle, __last,
           * __first_cut );
       __len22 = std :: distance ( __middle, __second_cut );
     }
   else
     {
       __len22 = __len2 / 2;
       std :: advance ( __second_cut, __len22 );
       __first_cut = std :: upper_bound ( __first, __middle,
          * __second_cut );
       __len11 = std :: distance ( __first, __first_cut );
     }
   _BidirectionalIterator __new_middle =
     std :: __rotate_adaptive ( __first_cut, __middle, __second_cut,
       __len1 - __len11, __len22, __buffer,
       __buffer_size );
   std :: __merge_adaptive ( __first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size );
   std :: __merge_adaptive ( __new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer, __buffer_size );
 }
    }
# 2963 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Distance,
    typename _Pointer, typename _Compare >
    void
    __merge_adaptive ( _BidirectionalIterator __first,
                     _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size,
       _Compare __comp )
    {
      if ( __len1 <= __len2 && __len1 <= __buffer_size )
 {
   _Pointer __buffer_end = std :: copy ( __first, __middle, __buffer );
   std :: merge ( __buffer, __buffer_end, __middle, __last,
    __first, __comp );
 }
      else if ( __len2 <= __buffer_size )
 {
   _Pointer __buffer_end = std :: copy ( __middle, __last, __buffer );
   std :: __merge_backward ( __first, __middle, __buffer, __buffer_end,
    __last, __comp );
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if ( __len1 > __len2 )
     {
       __len11 = __len1 / 2;
       std :: advance ( __first_cut, __len11 );
       __second_cut = std :: lower_bound ( __middle, __last, * __first_cut,
           __comp );
       __len22 = std :: distance ( __middle, __second_cut );
     }
   else
     {
       __len22 = __len2 / 2;
       std :: advance ( __second_cut, __len22 );
       __first_cut = std :: upper_bound ( __first, __middle, * __second_cut,
          __comp );
       __len11 = std :: distance ( __first, __first_cut );
     }
   _BidirectionalIterator __new_middle =
     std :: __rotate_adaptive ( __first_cut, __middle, __second_cut,
       __len1 - __len11, __len22, __buffer,
       __buffer_size );
   std :: __merge_adaptive ( __first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size, __comp );
   std :: __merge_adaptive ( __new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer,
    __buffer_size, __comp );
 }
    }
# 3021 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Distance >
    void
    __merge_without_buffer ( _BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2 )
    {
      if ( __len1 == 0 || __len2 == 0 )
 return;
      if ( __len1 + __len2 == 2 )
 {
   if ( * __middle < * __first )
     std :: iter_swap ( __first, __middle );
   return;
 }
      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if ( __len1 > __len2 )
 {
   __len11 = __len1 / 2;
   std :: advance ( __first_cut, __len11 );
   __second_cut = std :: lower_bound ( __middle, __last, * __first_cut );
   __len22 = std :: distance ( __middle, __second_cut );
 }
      else
 {
   __len22 = __len2 / 2;
   std :: advance ( __second_cut, __len22 );
   __first_cut = std :: upper_bound ( __first, __middle, * __second_cut );
   __len11 = std :: distance ( __first, __first_cut );
 }
      std :: rotate ( __first_cut, __middle, __second_cut );
      _BidirectionalIterator __new_middle = __first_cut;
      std :: advance ( __new_middle, std :: distance ( __middle, __second_cut ) );
      std :: __merge_without_buffer ( __first, __first_cut, __new_middle,
      __len11, __len22 );
      std :: __merge_without_buffer ( __new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22 );
    }
# 3064 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Distance,
    typename _Compare >
    void
    __merge_without_buffer ( _BidirectionalIterator __first,
                           _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2,
      _Compare __comp )
    {
      if ( __len1 == 0 || __len2 == 0 )
 return;
      if ( __len1 + __len2 == 2 )
 {
   if ( __comp ( * __middle, * __first ) )
     std :: iter_swap ( __first, __middle );
   return;
 }
      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if ( __len1 > __len2 )
 {
   __len11 = __len1 / 2;
   std :: advance ( __first_cut, __len11 );
   __second_cut = std :: lower_bound ( __middle, __last, * __first_cut,
       __comp );
   __len22 = std :: distance ( __middle, __second_cut );
 }
      else
 {
   __len22 = __len2 / 2;
   std :: advance ( __second_cut, __len22 );
   __first_cut = std :: upper_bound ( __first, __middle, * __second_cut,
      __comp );
   __len11 = std :: distance ( __first, __first_cut );
 }
      std :: rotate ( __first_cut, __middle, __second_cut );
      _BidirectionalIterator __new_middle = __first_cut;
      std :: advance ( __new_middle, std :: distance ( __middle, __second_cut ) );
      std :: __merge_without_buffer ( __first, __first_cut, __new_middle,
      __len11, __len22, __comp );
      std :: __merge_without_buffer ( __new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22, __comp );
    }
# 3128 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator >
    void
    inplace_merge ( _BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last )
    {
      typedef typename iterator_traits < _BidirectionalIterator > :: value_type
          _ValueType;
      typedef typename iterator_traits < _BidirectionalIterator > :: difference_type
          _DistanceType;





      ;
      ;

      if ( __first == __middle || __middle == __last )
 return;

      _DistanceType __len1 = std :: distance ( __first, __middle );
      _DistanceType __len2 = std :: distance ( __middle, __last );

      _Temporary_buffer < _BidirectionalIterator, _ValueType > __buf ( __first,
          __last );
      if ( __buf . begin ( ) == 0 )
 std :: __merge_without_buffer ( __first, __middle, __last, __len1, __len2 );
      else
 std :: __merge_adaptive ( __first, __middle, __last, __len1, __len2,
         __buf . begin ( ), _DistanceType ( __buf . size ( ) ) );
    }
# 3183 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Compare >
    void
    inplace_merge ( _BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last,
    _Compare __comp )
    {
      typedef typename iterator_traits < _BidirectionalIterator > :: value_type
          _ValueType;
      typedef typename iterator_traits < _BidirectionalIterator > :: difference_type
          _DistanceType;






      ;
      ;

      if ( __first == __middle || __middle == __last )
 return;

      const _DistanceType __len1 = std :: distance ( __first, __middle );
      const _DistanceType __len2 = std :: distance ( __middle, __last );

      _Temporary_buffer < _BidirectionalIterator, _ValueType > __buf ( __first,
          __last );
      if ( __buf . begin ( ) == 0 )
 std :: __merge_without_buffer ( __first, __middle, __last, __len1,
        __len2, __comp );
      else
 std :: __merge_adaptive ( __first, __middle, __last, __len1, __len2,
         __buf . begin ( ), _DistanceType ( __buf . size ( ) ),
         __comp );
    }
# 3220 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance >
    void
    __merge_sort_loop ( _RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result,
        _Distance __step_size )
    {
      const _Distance __two_step = 2 * __step_size;

      while ( __last - __first >= __two_step )
 {
   __result = std :: merge ( __first, __first + __step_size,
        __first + __step_size,
        __first + __two_step,
        __result );
   __first += __two_step;
 }

      __step_size = std :: min ( _Distance ( __last - __first ), __step_size );
      std :: merge ( __first, __first + __step_size,
       __first + __step_size, __last,
       __result );
    }
# 3245 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance, typename _Compare >
    void
    __merge_sort_loop ( _RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result, _Distance __step_size,
        _Compare __comp )
    {
      const _Distance __two_step = 2 * __step_size;

      while ( __last - __first >= __two_step )
 {
   __result = std :: merge ( __first, __first + __step_size,
    __first + __step_size, __first + __two_step,
    __result,
    __comp );
   __first += __two_step;
 }
      __step_size = std :: min ( _Distance ( __last - __first ), __step_size );

      std :: merge ( __first, __first + __step_size,
       __first + __step_size, __last, __result, __comp );
    }
# 3269 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    void
    __chunk_insertion_sort ( _RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size )
    {
      while ( __last - __first >= __chunk_size )
 {
   std :: __insertion_sort ( __first, __first + __chunk_size );
   __first += __chunk_size;
 }
      std :: __insertion_sort ( __first, __last );
    }
# 3283 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Distance,
    typename _Compare >
    void
    __chunk_insertion_sort ( _RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size, _Compare __comp )
    {
      while ( __last - __first >= __chunk_size )
 {
   std :: __insertion_sort ( __first, __first + __chunk_size, __comp );
   __first += __chunk_size;
 }
      std :: __insertion_sort ( __first, __last, __comp );
    }
# 3298 "/usr/include/c++/4.4/bits/stl_algo.h" 3
enum { _S_chunk_size = 7};
# 3300 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Pointer >
    void
    __merge_sort_with_buffer ( _RandomAccessIterator __first,
        _RandomAccessIterator __last,
                             _Pointer __buffer )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std :: __chunk_insertion_sort ( __first, __last, __step_size );

      while ( __step_size < __len )
 {
   std :: __merge_sort_loop ( __first, __last, __buffer, __step_size );
   __step_size *= 2;
   std :: __merge_sort_loop ( __buffer, __buffer_last, __first, __step_size );
   __step_size *= 2;
 }
    }
# 3324 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Pointer, typename _Compare >
    void
    __merge_sort_with_buffer ( _RandomAccessIterator __first,
        _RandomAccessIterator __last,
                             _Pointer __buffer, _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std :: __chunk_insertion_sort ( __first, __last, __step_size, __comp );

      while ( __step_size < __len )
 {
   std :: __merge_sort_loop ( __first, __last, __buffer,
     __step_size, __comp );
   __step_size *= 2;
   std :: __merge_sort_loop ( __buffer, __buffer_last, __first,
     __step_size, __comp );
   __step_size *= 2;
 }
    }
# 3350 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Pointer,
    typename _Distance >
    void
    __stable_sort_adaptive ( _RandomAccessIterator __first,
      _RandomAccessIterator __last,
                           _Pointer __buffer, _Distance __buffer_size )
    {
      const _Distance __len = ( __last - __first + 1 ) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if ( __len > __buffer_size )
 {
   std :: __stable_sort_adaptive ( __first, __middle,
          __buffer, __buffer_size );
   std :: __stable_sort_adaptive ( __middle, __last,
          __buffer, __buffer_size );
 }
      else
 {
   std :: __merge_sort_with_buffer ( __first, __middle, __buffer );
   std :: __merge_sort_with_buffer ( __middle, __last, __buffer );
 }
      std :: __merge_adaptive ( __first, __middle, __last,
       _Distance ( __middle - __first ),
       _Distance ( __last - __middle ),
       __buffer, __buffer_size );
    }
# 3377 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Pointer,
    typename _Distance, typename _Compare >
    void
    __stable_sort_adaptive ( _RandomAccessIterator __first,
      _RandomAccessIterator __last,
                           _Pointer __buffer, _Distance __buffer_size,
                           _Compare __comp )
    {
      const _Distance __len = ( __last - __first + 1 ) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if ( __len > __buffer_size )
 {
   std :: __stable_sort_adaptive ( __first, __middle, __buffer,
          __buffer_size, __comp );
   std :: __stable_sort_adaptive ( __middle, __last, __buffer,
          __buffer_size, __comp );
 }
      else
 {
   std :: __merge_sort_with_buffer ( __first, __middle, __buffer, __comp );
   std :: __merge_sort_with_buffer ( __middle, __last, __buffer, __comp );
 }
      std :: __merge_adaptive ( __first, __middle, __last,
       _Distance ( __middle - __first ),
       _Distance ( __last - __middle ),
       __buffer, __buffer_size,
       __comp );
    }
# 3407 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    void
    __inplace_stable_sort ( _RandomAccessIterator __first,
     _RandomAccessIterator __last )
    {
      if ( __last - __first < 15 )
 {
   std :: __insertion_sort ( __first, __last );
   return;
 }
      _RandomAccessIterator __middle = __first + ( __last - __first ) / 2;
      std :: __inplace_stable_sort ( __first, __middle );
      std :: __inplace_stable_sort ( __middle, __last );
      std :: __merge_without_buffer ( __first, __middle, __last,
      __middle - __first,
      __last - __middle );
    }
# 3426 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    void
    __inplace_stable_sort ( _RandomAccessIterator __first,
     _RandomAccessIterator __last, _Compare __comp )
    {
      if ( __last - __first < 15 )
 {
   std :: __insertion_sort ( __first, __last, __comp );
   return;
 }
      _RandomAccessIterator __middle = __first + ( __last - __first ) / 2;
      std :: __inplace_stable_sort ( __first, __middle, __comp );
      std :: __inplace_stable_sort ( __middle, __last, __comp );
      std :: __merge_without_buffer ( __first, __middle, __last,
      __middle - __first,
      __last - __middle,
      __comp );
    }
# 3468 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2 >
    bool
    includes ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2 )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;






      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( * __first2 < * __first1 )
   return false;
 else if ( * __first1 < * __first2 )
   ++ __first1;
 else
   ++ __first1, ++ __first2;

      return __first2 == __last2;
    }
# 3517 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _Compare >
    bool
    includes ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2,
      _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 3536 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( __comp ( * __first2, * __first1 ) )
   return false;
 else if ( __comp ( * __first1, * __first2 ) )
   ++ __first1;
 else
   ++ __first1, ++ __first2;

      return __first2 == __last2;
    }
# 3572 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator >
    bool
    next_permutation ( _BidirectionalIterator __first,
       _BidirectionalIterator __last )
    {





      ;

      if ( __first == __last )
 return false;
      _BidirectionalIterator __i = __first;
      ++ __i;
      if ( __i == __last )
 return false;
      __i = __last;
      -- __i;

      for (;; )
 {
   _BidirectionalIterator __ii = __i;
   -- __i;
   if ( * __i < * __ii )
     {
       _BidirectionalIterator __j = __last;
       while ( ! ( * __i < * -- __j ) )
  { }
       std :: iter_swap ( __i, __j );
       std :: reverse ( __ii, __last );
       return true;
     }
   if ( __i == __first )
     {
       std :: reverse ( __first, __last );
       return false;
     }
 }
    }
# 3629 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Compare >
    bool
    next_permutation ( _BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp )
    {






      ;

      if ( __first == __last )
 return false;
      _BidirectionalIterator __i = __first;
      ++ __i;
      if ( __i == __last )
 return false;
      __i = __last;
      -- __i;

      for (;; )
 {
   _BidirectionalIterator __ii = __i;
   -- __i;
   if ( __comp ( * __i, * __ii ) )
     {
       _BidirectionalIterator __j = __last;
       while ( ! bool ( __comp ( * __i, * -- __j ) ) )
  { }
       std :: iter_swap ( __i, __j );
       std :: reverse ( __ii, __last );
       return true;
     }
   if ( __i == __first )
     {
       std :: reverse ( __first, __last );
       return false;
     }
 }
    }
# 3685 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator >
    bool
    prev_permutation ( _BidirectionalIterator __first,
       _BidirectionalIterator __last )
    {





      ;

      if ( __first == __last )
 return false;
      _BidirectionalIterator __i = __first;
      ++ __i;
      if ( __i == __last )
 return false;
      __i = __last;
      -- __i;

      for (;; )
 {
   _BidirectionalIterator __ii = __i;
   -- __i;
   if ( * __ii < * __i )
     {
       _BidirectionalIterator __j = __last;
       while ( ! ( * -- __j < * __i ) )
  { }
       std :: iter_swap ( __i, __j );
       std :: reverse ( __ii, __last );
       return true;
     }
   if ( __i == __first )
     {
       std :: reverse ( __first, __last );
       return false;
     }
 }
    }
# 3742 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _BidirectionalIterator, typename _Compare >
    bool
    prev_permutation ( _BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp )
    {






      ;

      if ( __first == __last )
 return false;
      _BidirectionalIterator __i = __first;
      ++ __i;
      if ( __i == __last )
 return false;
      __i = __last;
      -- __i;

      for (;; )
 {
   _BidirectionalIterator __ii = __i;
   -- __i;
   if ( __comp ( * __ii, * __i ) )
     {
       _BidirectionalIterator __j = __last;
       while ( ! bool ( __comp ( * -- __j, * __i ) ) )
  { }
       std :: iter_swap ( __i, __j );
       std :: reverse ( __ii, __last );
       return true;
     }
   if ( __i == __first )
     {
       std :: reverse ( __first, __last );
       return false;
     }
 }
    }
# 3802 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator, typename _Tp >
    _OutputIterator
    replace_copy ( _InputIterator __first, _InputIterator __last,
   _OutputIterator __result,
   const _Tp & __old_value, const _Tp & __new_value )
    {






      ;

      for (; __first != __last; ++ __first, ++ __result )
 if ( * __first == __old_value )
   * __result = __new_value;
 else
   * __result = * __first;
      return __result;
    }
# 3839 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator,
    typename _Predicate, typename _Tp >
    _OutputIterator
    replace_copy_if ( _InputIterator __first, _InputIterator __last,
      _OutputIterator __result,
      _Predicate __pred, const _Tp & __new_value )
    {






      ;

      for (; __first != __last; ++ __first, ++ __result )
 if ( __pred ( * __first ) )
   * __result = __new_value;
 else
   * __result = * __first;
      return __result;
    }
# 4176 "/usr/include/c++/4.4/bits/stl_algo.h" 3
}
# 4178 "/usr/include/c++/4.4/bits/stl_algo.h" 3
namespace std __attribute((__visibility__("default"))) {
# 4192 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Function >
    _Function
    for_each ( _InputIterator __first, _InputIterator __last, _Function __f )
    {


      ;
      for (; __first != __last; ++ __first )
 __f ( * __first );
      return __f;
    }
# 4213 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Tp >
    inline _InputIterator
    find ( _InputIterator __first, _InputIterator __last,
  const _Tp & __val )
    {




      ;
      return std :: __find ( __first, __last, __val,
           std :: __iterator_category ( __first ) );
    }
# 4237 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Predicate >
    inline _InputIterator
    find_if ( _InputIterator __first, _InputIterator __last,
     _Predicate __pred )
    {




      ;
      return std :: __find_if ( __first, __last, __pred,
       std :: __iterator_category ( __first ) );
    }
# 4266 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _ForwardIterator >
    _InputIterator
    find_first_of ( _InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2 )
    {






      ;
      ;

      for (; __first1 != __last1; ++ __first1 )
 for ( _ForwardIterator __iter = __first2; __iter != __last2; ++ __iter )
   if ( * __first1 == * __iter )
     return __first1;
      return __last1;
    }
# 4305 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate >
    _InputIterator
    find_first_of ( _InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2,
    _BinaryPredicate __comp )
    {






      ;
      ;

      for (; __first1 != __last1; ++ __first1 )
 for ( _ForwardIterator __iter = __first2; __iter != __last2; ++ __iter )
   if ( __comp ( * __first1, * __iter ) )
     return __first1;
      return __last1;
    }
# 4337 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator >
    _ForwardIterator
    adjacent_find ( _ForwardIterator __first, _ForwardIterator __last )
    {




      ;
      if ( __first == __last )
 return __last;
      _ForwardIterator __next = __first;
      while ( ++ __next != __last )
 {
   if ( * __first == * __next )
     return __first;
   __first = __next;
 }
      return __last;
    }
# 4369 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _BinaryPredicate >
    _ForwardIterator
    adjacent_find ( _ForwardIterator __first, _ForwardIterator __last,
    _BinaryPredicate __binary_pred )
    {





      ;
      if ( __first == __last )
 return __last;
      _ForwardIterator __next = __first;
      while ( ++ __next != __last )
 {
   if ( __binary_pred ( * __first, * __next ) )
     return __first;
   __first = __next;
 }
      return __last;
    }
# 4401 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Tp >
    typename iterator_traits < _InputIterator > :: difference_type
    count ( _InputIterator __first, _InputIterator __last, const _Tp & __value )
    {




      ;
      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      for (; __first != __last; ++ __first )
 if ( * __first == __value )
   ++ __n;
      return __n;
    }
# 4426 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _Predicate >
    typename iterator_traits < _InputIterator > :: difference_type
    count_if ( _InputIterator __first, _InputIterator __last, _Predicate __pred )
    {




      ;
      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      for (; __first != __last; ++ __first )
 if ( __pred ( * __first ) )
   ++ __n;
      return __n;
    }
# 4466 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator1
    search ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2 )
    {






      ;
      ;


      if ( __first1 == __last1 || __first2 == __last2 )
 return __first1;


      _ForwardIterator2 __p1 ( __first2 );
      if ( ++ __p1 == __last2 )
 return std :: find ( __first1, __last1, * __first2 );


      _ForwardIterator2 __p;
      _ForwardIterator1 __current = __first1;

      for (;; )
 {
   __first1 = std :: find ( __first1, __last1, * __first2 );
   if ( __first1 == __last1 )
     return __last1;

   __p = __p1;
   __current = __first1;
   if ( ++ __current == __last1 )
     return __last1;

   while ( * __current == * __p )
     {
       if ( ++ __p == __last2 )
  return __first1;
       if ( ++ __current == __last1 )
  return __last1;
     }
   ++ __first1;
 }
      return __first1;
    }
# 4537 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate >
    _ForwardIterator1
    search ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2,
    _BinaryPredicate __predicate )
    {






      ;
      ;


      if ( __first1 == __last1 || __first2 == __last2 )
 return __first1;


      _ForwardIterator2 __p1 ( __first2 );
      if ( ++ __p1 == __last2 )
 {
   while ( __first1 != __last1
   && ! bool ( __predicate ( * __first1, * __first2 ) ) )
     ++ __first1;
   return __first1;
 }


      _ForwardIterator2 __p;
      _ForwardIterator1 __current = __first1;

      for (;; )
 {
   while ( __first1 != __last1
   && ! bool ( __predicate ( * __first1, * __first2 ) ) )
     ++ __first1;
   if ( __first1 == __last1 )
     return __last1;

   __p = __p1;
   __current = __first1;
   if ( ++ __current == __last1 )
     return __last1;

   while ( __predicate ( * __current, * __p ) )
     {
       if ( ++ __p == __last2 )
  return __first1;
       if ( ++ __current == __last1 )
  return __last1;
     }
   ++ __first1;
 }
      return __first1;
    }
# 4611 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Integer, typename _Tp >
    _ForwardIterator
    search_n ( _ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp & __val )
    {




      ;

      if ( __count <= 0 )
 return __first;
      if ( __count == 1 )
 return std :: find ( __first, __last, __val );
      return std :: __search_n ( __first, __last, __count, __val,
        std :: __iterator_category ( __first ) );
    }
# 4647 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Integer, typename _Tp,
           typename _BinaryPredicate >
    _ForwardIterator
    search_n ( _ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp & __val,
      _BinaryPredicate __binary_pred )
    {




      ;

      if ( __count <= 0 )
 return __first;
      if ( __count == 1 )
 {
   while ( __first != __last && ! bool ( __binary_pred ( * __first, __val ) ) )
     ++ __first;
   return __first;
 }
      return std :: __search_n ( __first, __last, __count, __val, __binary_pred,
        std :: __iterator_category ( __first ) );
    }
# 4689 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator,
    typename _UnaryOperation >
    _OutputIterator
    transform ( _InputIterator __first, _InputIterator __last,
       _OutputIterator __result, _UnaryOperation __unary_op )
    {





      ;

      for (; __first != __last; ++ __first, ++ __result )
 * __result = __unary_op ( * __first );
      return __result;
    }
# 4725 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _BinaryOperation >
    _OutputIterator
    transform ( _InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _OutputIterator __result,
       _BinaryOperation __binary_op )
    {






      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2, ++ __result )
 * __result = __binary_op ( * __first1, * __first2 );
      return __result;
    }
# 4758 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Tp >
    void
    replace ( _ForwardIterator __first, _ForwardIterator __last,
     const _Tp & __old_value, const _Tp & __new_value )
    {







      ;

      for (; __first != __last; ++ __first )
 if ( * __first == __old_value )
   * __first = __new_value;
    }
# 4790 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Predicate, typename _Tp >
    void
    replace_if ( _ForwardIterator __first, _ForwardIterator __last,
        _Predicate __pred, const _Tp & __new_value )
    {







      ;

      for (; __first != __last; ++ __first )
 if ( __pred ( * __first ) )
   * __first = __new_value;
    }
# 4822 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Generator >
    void
    generate ( _ForwardIterator __first, _ForwardIterator __last,
      _Generator __gen )
    {




      ;

      for (; __first != __last; ++ __first )
 * __first = __gen ( );
    }
# 4850 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _OutputIterator, typename _Size, typename _Generator >
    _OutputIterator
    generate_n ( _OutputIterator __first, _Size __n, _Generator __gen )
    {





      for (; __n > 0; -- __n, ++ __first )
 * __first = __gen ( );
      return __first;
    }
# 4886 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator >
    inline _OutputIterator
    unique_copy ( _InputIterator __first, _InputIterator __last,
  _OutputIterator __result )
    {






      ;

      if ( __first == __last )
 return __result;
      return std :: __unique_copy ( __first, __last, __result,
    std :: __iterator_category ( __first ),
    std :: __iterator_category ( __result ) );
    }
# 4925 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate >
    inline _OutputIterator
    unique_copy ( _InputIterator __first, _InputIterator __last,
  _OutputIterator __result,
  _BinaryPredicate __binary_pred )
    {




      ;

      if ( __first == __last )
 return __result;
      return std :: __unique_copy ( __first, __last, __result, __binary_pred,
    std :: __iterator_category ( __first ),
    std :: __iterator_category ( __result ) );
    }
# 4957 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    inline void
    random_shuffle ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {



      ;

      if ( __first != __last )
 for ( _RandomAccessIterator __i = __first + 1; __i != __last; ++ __i )
   std :: iter_swap ( __i, __first + ( std :: rand ( ) % ( ( __i - __first ) + 1 ) ) );
    }
# 4985 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _RandomNumberGenerator >
    void
    random_shuffle ( _RandomAccessIterator __first, _RandomAccessIterator __last,
     _RandomNumberGenerator & __rand )
    {



      ;

      if ( __first == __last )
 return;
      for ( _RandomAccessIterator __i = __first + 1; __i != __last; ++ __i )
 std :: iter_swap ( __i, __first + __rand ( ( __i - __first ) + 1 ) );
    }
# 5017 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Predicate >
    inline _ForwardIterator
    partition ( _ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred )
    {





      ;

      return std :: __partition ( __first, __last, __pred,
         std :: __iterator_category ( __first ) );
    }
# 5051 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    inline void
    partial_sort ( _RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;





      ;
      ;

      std :: __heap_select ( __first, __middle, __last );
      std :: sort_heap ( __first, __middle );
    }
# 5090 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    partial_sort ( _RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last,
   _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;






      ;
      ;

      std :: __heap_select ( __first, __middle, __last, __comp );
      std :: sort_heap ( __first, __middle, __comp );
    }
# 5128 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    inline void
    nth_element ( _RandomAccessIterator __first, _RandomAccessIterator __nth,
  _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;





      ;
      ;

      if ( __first == __last || __nth == __last )
 return;

      std :: __introselect ( __first, __nth, __last,
    std :: __lg ( __last - __first ) * 2 );
    }
# 5167 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    nth_element ( _RandomAccessIterator __first, _RandomAccessIterator __nth,
  _RandomAccessIterator __last, _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;






      ;
      ;

      if ( __first == __last || __nth == __last )
 return;

      std :: __introselect ( __first, __nth, __last,
    std :: __lg ( __last - __first ) * 2, __comp );
    }
# 5205 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    inline void
    sort ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;





      ;

      if ( __first != __last )
 {
   std :: __introsort_loop ( __first, __last,
    std :: __lg ( __last - __first ) * 2 );
   std :: __final_insertion_sort ( __first, __last );
 }
    }
# 5241 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    sort ( _RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;






      ;

      if ( __first != __last )
 {
   std :: __introsort_loop ( __first, __last,
    std :: __lg ( __last - __first ) * 2, __comp );
   std :: __final_insertion_sort ( __first, __last, __comp );
 }
    }
# 5282 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator >
    _OutputIterator
    merge ( _InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5302 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 {
   if ( * __first2 < * __first1 )
     {
       * __result = * __first2;
       ++ __first2;
     }
   else
     {
       * __result = * __first1;
       ++ __first1;
     }
   ++ __result;
 }
      return std :: copy ( __first2, __last2, std :: copy ( __first1, __last1,
          __result ) );
    }
# 5345 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare >
    _OutputIterator
    merge ( _InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result, _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5366 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 {
   if ( __comp ( * __first2, * __first1 ) )
     {
       * __result = * __first2;
       ++ __first2;
     }
   else
     {
       * __result = * __first1;
       ++ __first1;
     }
   ++ __result;
 }
      return std :: copy ( __first2, __last2, std :: copy ( __first1, __last1,
          __result ) );
    }
# 5405 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator >
    inline void
    stable_sort ( _RandomAccessIterator __first, _RandomAccessIterator __last )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _DistanceType;





      ;

      _Temporary_buffer < _RandomAccessIterator, _ValueType > __buf ( __first,
         __last );
      if ( __buf . begin ( ) == 0 )
 std :: __inplace_stable_sort ( __first, __last );
      else
 std :: __stable_sort_adaptive ( __first, __last, __buf . begin ( ),
        _DistanceType ( __buf . size ( ) ) );
    }
# 5447 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _RandomAccessIterator, typename _Compare >
    inline void
    stable_sort ( _RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp )
    {
      typedef typename iterator_traits < _RandomAccessIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _RandomAccessIterator > :: difference_type
 _DistanceType;







      ;

      _Temporary_buffer < _RandomAccessIterator, _ValueType > __buf ( __first,
         __last );
      if ( __buf . begin ( ) == 0 )
 std :: __inplace_stable_sort ( __first, __last, __comp );
      else
 std :: __stable_sort_adaptive ( __first, __last, __buf . begin ( ),
        _DistanceType ( __buf . size ( ) ), __comp );
    }
# 5493 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator >
    _OutputIterator
    set_union ( _InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5514 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 {
   if ( * __first1 < * __first2 )
     {
       * __result = * __first1;
       ++ __first1;
     }
   else if ( * __first2 < * __first1 )
     {
       * __result = * __first2;
       ++ __first2;
     }
   else
     {
       * __result = * __first1;
       ++ __first1;
       ++ __first2;
     }
   ++ __result;
 }
      return std :: copy ( __first2, __last2, std :: copy ( __first1, __last1,
          __result ) );
    }
# 5560 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare >
    _OutputIterator
    set_union ( _InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5583 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 {
   if ( __comp ( * __first1, * __first2 ) )
     {
       * __result = * __first1;
       ++ __first1;
     }
   else if ( __comp ( * __first2, * __first1 ) )
     {
       * __result = * __first2;
       ++ __first2;
     }
   else
     {
       * __result = * __first1;
       ++ __first1;
       ++ __first2;
     }
   ++ __result;
 }
      return std :: copy ( __first2, __last2, std :: copy ( __first1, __last1,
          __result ) );
    }
# 5627 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator >
    _OutputIterator
    set_intersection ( _InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5646 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( * __first1 < * __first2 )
   ++ __first1;
 else if ( * __first2 < * __first1 )
   ++ __first2;
 else
   {
     * __result = * __first1;
     ++ __first1;
     ++ __first2;
     ++ __result;
   }
      return __result;
    }
# 5684 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare >
    _OutputIterator
    set_intersection ( _InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5705 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( __comp ( * __first1, * __first2 ) )
   ++ __first1;
 else if ( __comp ( * __first2, * __first1 ) )
   ++ __first2;
 else
   {
     * __result = * __first1;
     ++ __first1;
     ++ __first2;
     ++ __result;
   }
      return __result;
    }
# 5742 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator >
    _OutputIterator
    set_difference ( _InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5761 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( * __first1 < * __first2 )
   {
     * __result = * __first1;
     ++ __first1;
     ++ __result;
   }
 else if ( * __first2 < * __first1 )
   ++ __first2;
 else
   {
     ++ __first1;
     ++ __first2;
   }
      return std :: copy ( __first1, __last1, __result );
    }
# 5803 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare >
    _OutputIterator
    set_difference ( _InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result, _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5824 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( __comp ( * __first1, * __first2 ) )
   {
     * __result = * __first1;
     ++ __first1;
     ++ __result;
   }
 else if ( __comp ( * __first2, * __first1 ) )
   ++ __first2;
 else
   {
     ++ __first1;
     ++ __first2;
   }
      return std :: copy ( __first1, __last1, __result );
    }
# 5861 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator >
    _OutputIterator
    set_symmetric_difference ( _InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5882 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( * __first1 < * __first2 )
   {
     * __result = * __first1;
     ++ __first1;
     ++ __result;
   }
 else if ( * __first2 < * __first1 )
   {
     * __result = * __first2;
     ++ __first2;
     ++ __result;
   }
 else
   {
     ++ __first1;
     ++ __first2;
   }
      return std :: copy ( __first2, __last2, std :: copy ( __first1,
          __last1, __result ) );
    }
# 5927 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare >
    _OutputIterator
    set_symmetric_difference ( _InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result,
        _Compare __comp )
    {
      typedef typename iterator_traits < _InputIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _InputIterator2 > :: value_type
 _ValueType2;
# 5951 "/usr/include/c++/4.4/bits/stl_algo.h" 3
      ;
      ;

      while ( __first1 != __last1 && __first2 != __last2 )
 if ( __comp ( * __first1, * __first2 ) )
   {
     * __result = * __first1;
     ++ __first1;
     ++ __result;
   }
 else if ( __comp ( * __first2, * __first1 ) )
   {
     * __result = * __first2;
     ++ __first2;
     ++ __result;
   }
 else
   {
     ++ __first1;
     ++ __first2;
   }
      return std :: copy ( __first2, __last2,
         std :: copy ( __first1, __last1, __result ) );
    }
# 5984 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator >
    _ForwardIterator
    min_element ( _ForwardIterator __first, _ForwardIterator __last )
    {




      ;

      if ( __first == __last )
 return __first;
      _ForwardIterator __result = __first;
      while ( ++ __first != __last )
 if ( * __first < * __result )
   __result = __first;
      return __result;
    }
# 6012 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Compare >
    _ForwardIterator
    min_element ( _ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp )
    {





      ;

      if ( __first == __last )
 return __first;
      _ForwardIterator __result = __first;
      while ( ++ __first != __last )
 if ( __comp ( * __first, * __result ) )
   __result = __first;
      return __result;
    }
# 6040 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator >
    _ForwardIterator
    max_element ( _ForwardIterator __first, _ForwardIterator __last )
    {




      ;

      if ( __first == __last )
 return __first;
      _ForwardIterator __result = __first;
      while ( ++ __first != __last )
 if ( * __result < * __first )
   __result = __first;
      return __result;
    }
# 6068 "/usr/include/c++/4.4/bits/stl_algo.h" 3
template < typename _ForwardIterator, typename _Compare >
    _ForwardIterator
    max_element ( _ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp )
    {





      ;

      if ( __first == __last ) return __first;
      _ForwardIterator __result = __first;
      while ( ++ __first != __last )
 if ( __comp ( * __result, * __first ) )
   __result = __first;
      return __result;
    }
# 6088 "/usr/include/c++/4.4/bits/stl_algo.h" 3
}
# 10 "huffTree.h"
using namespace std;
# 12 "huffTree.h"
const int UniqueSymbols = (1 << 8);
# 13 "huffTree.h"
void printBits(unsigned val, int numbits)
# 14 "huffTree.h"
{
# 15 "huffTree.h"
for (int i = (numbits - 1); i >= 0; i--) {
# 16 "huffTree.h"
putchar(('0') + ((val >> i) & (1))); }
# 17 "huffTree.h"
}
# 19 "huffTree.h"
typedef std::vector< bool> HuffCode;
# 20 "huffTree.h"
typedef std::map< unsigned char, std::vector< bool> > HuffCodeMap;
# 22 "huffTree.h"
class INode { public: const int f; virtual ~INode() { }
# 25 "huffTree.h"
protected: INode(int f) : f(f) { }
# 26 "huffTree.h"
};
# 28 "huffTree.h"
class InternalNode : public INode {
# 31 "huffTree.h"
public: INode *const left;
# 32 "huffTree.h"
INode *const right;
# 34 "huffTree.h"
InternalNode(INode *c0, INode *c1) : INode((c0->f) + (c1->f)), left(c0), right(c1) { }
# 35 "huffTree.h"
virtual ~InternalNode()
# 36 "huffTree.h"
{
# 37 "huffTree.h"
delete (left);
# 38 "huffTree.h"
delete (right);
# 39 "huffTree.h"
}
# 40 "huffTree.h"
};
# 42 "huffTree.h"
class LeafNode : public INode {
# 45 "huffTree.h"
public: const char c;
# 47 "huffTree.h"
LeafNode(int f, char c) : INode(f), c(c) { }
# 48 "huffTree.h"
};
# 50 "huffTree.h"
struct NodeCmp {
# 52 "huffTree.h"
bool operator()(const INode *lhs, const INode *rhs) const { return (lhs->f) > (rhs->f); }
# 53 "huffTree.h"
};
# 55 "huffTree.h"
INode *BuildTree(unsigned (&frequencies)[UniqueSymbols])
# 56 "huffTree.h"
{
# 57 "huffTree.h"
std::priority_queue< INode *, std::vector< INode *> , NodeCmp> trees;
# 59 "huffTree.h"
for (int i = 0; i < UniqueSymbols; ++i)
# 60 "huffTree.h"
{
# 61 "huffTree.h"
if (((frequencies)[i]) != (0)) {
# 62 "huffTree.h"
trees.push((new LeafNode((frequencies)[i], (char)i))); }
# 63 "huffTree.h"
}
# 64 "huffTree.h"
while (trees.size() > (1))
# 65 "huffTree.h"
{
# 66 "huffTree.h"
INode *childR = trees.top();
# 67 "huffTree.h"
trees.pop();
# 69 "huffTree.h"
INode *childL = trees.top();
# 70 "huffTree.h"
trees.pop();
# 72 "huffTree.h"
INode *parent = (new InternalNode(childR, childL));
# 73 "huffTree.h"
trees.push(parent);
# 74 "huffTree.h"
}
# 75 "huffTree.h"
return trees.top();
# 76 "huffTree.h"
}
# 78 "huffTree.h"
void GenerateCodes(const INode *node, const HuffCode &prefix, HuffCodeMap &outCodes)
# 79 "huffTree.h"
{
# 80 "huffTree.h"
if (const LeafNode *lf = (dynamic_cast< const LeafNode *>(node)))
# 81 "huffTree.h"
{
# 82 "huffTree.h"
((outCodes[(lf->c)]) = prefix);
# 83 "huffTree.h"
} else {
# 84 "huffTree.h"
if (const InternalNode *in = (dynamic_cast< const InternalNode *>(node)))
# 85 "huffTree.h"
{
# 86 "huffTree.h"
HuffCode leftPrefix = prefix;
# 87 "huffTree.h"
leftPrefix.push_back(false);
# 88 "huffTree.h"
GenerateCodes(in->left, leftPrefix, outCodes);
# 90 "huffTree.h"
HuffCode rightPrefix = prefix;
# 91 "huffTree.h"
rightPrefix.push_back(true);
# 92 "huffTree.h"
GenerateCodes(in->right, rightPrefix, outCodes);
# 93 "huffTree.h"
} }
# 94 "huffTree.h"
}
# 8 "load_data.h"
inline void initParams(char *file_name, uint num_block_threads, uint &num_blocks, uint &num_elements, uint &mem_size, uint symbol_type_size) {
# 9 "load_data.h"
if (file_name == (__null)) {
# 10 "load_data.h"
num_elements = (num_blocks * num_block_threads);
# 11 "load_data.h"
mem_size = (num_elements * symbol_type_size);
# 12 "load_data.h"
} else
# 13 "load_data.h"
{
# 14 "load_data.h"
FILE *f = fopen(file_name, "rb");
# 15 "load_data.h"
if (!(f)) { perror(file_name); exit(1); }
# 16 "load_data.h"
fseek(f, 0, 2);
# 17 "load_data.h"
mem_size = (ftell(f));
# 18 "load_data.h"
fclose(f);
# 19 "load_data.h"
num_elements = (mem_size / symbol_type_size);
# 21 "load_data.h"
num_blocks = (num_elements / num_block_threads);
# 22 "load_data.h"
}
# 23 "load_data.h"
}
# 25 "load_data.h"
inline void loadData(char *file_name, uint *sourceData, uint *codewords, uint *codewordlens, uint num_elements, uint mem_size, double &H) {
# 26 "load_data.h"
if (file_name == (__null)) {
# 27 "load_data.h"
printf("No input file\n");
# 28 "load_data.h"
exit(-1);
# 29 "load_data.h"
} else
# 31 "load_data.h"
{
# 32 "load_data.h"
unsigned freqs[UniqueSymbols] = {(0)};
# 33 "load_data.h"
runHisto(file_name, freqs, mem_size, sourceData);
# 34 "load_data.h"
INode *root = BuildTree(freqs);
# 36 "load_data.h"
HuffCodeMap codes;
# 37 "load_data.h"
GenerateCodes(root, HuffCode(), codes);
# 38 "load_data.h"
delete root;
# 40 "load_data.h"
for (std::map< unsigned char, std::vector< bool> > ::const_iterator it = codes.begin(); (it != (codes.end())); (++it))
# 41 "load_data.h"
{
# 42 "load_data.h"
unsigned count = (distance((it->second).begin(), (it->second).end()));
# 43 "load_data.h"
for (int i = 0; i < count; i++) {
# 44 "load_data.h"
if ((it->second)[i]) {
# 45 "load_data.h"
(codewords[(unsigned)(it->first)]) += ((uint)pow((2.0F), (((int)count) - i) - 1)); } }
# 46 "load_data.h"
(codewordlens[(unsigned)(it->first)]) = count;
# 47 "load_data.h"
}
# 49 "load_data.h"
H = (0.0);
# 50 "load_data.h"
for (unsigned i = (0); i < (256); i++) {
# 51 "load_data.h"
if (((freqs)[i]) > (0)) {
# 52 "load_data.h"
double p = (((double)((freqs)[i])) / ((double)mem_size));
# 53 "load_data.h"
H += ((p * log(p)) / log((2.0)));
# 54 "load_data.h"
} }
# 55 "load_data.h"
H = (-H);
# 56 "load_data.h"
printf("\n%s, %u bytes, entropy %f\n\n", file_name, mem_size, H);
# 57 "load_data.h"
}
# 58 "load_data.h"
}
# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" { struct timezone {
# 54 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
int tz_minuteswest;
# 55 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
int tz_dsttime;
# 56 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
}; }
# 66 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int gettimeofday(timeval *__restrict__ , void *__restrict__ ) throw()
# 67 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 75 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int settimeofday(const timeval * , const struct timezone * ) throw();
# 83 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int adjtime(const timeval * , timeval * ) throw();
# 89 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
enum __itimer_which {
# 92 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
ITIMER_REAL,
# 95 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
ITIMER_VIRTUAL,
# 99 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
ITIMER_PROF
# 101 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
};
# 105 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" { struct itimerval {
# 108 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
timeval it_interval;
# 110 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
timeval it_value;
# 111 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
}; }
# 118 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" { typedef int __itimer_which_t; }
# 123 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int getitimer(__itimer_which_t , itimerval * ) throw();
# 129 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int setitimer(__itimer_which_t , const itimerval *__restrict__ , itimerval *__restrict__ ) throw();
# 136 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int utimes(const char * , const timeval [2]) throw()
# 137 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 141 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int lutimes(const char * , const timeval [2]) throw()
# 142 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 145 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int futimes(int , const timeval [2]) throw();
# 152 "/usr/include/x86_64-linux-gnu/sys/time.h" 3
extern "C" int futimesat(int , const char * , const timeval [2]) throw();
# 17 "pabio_kernels_v2.cu"
__attribute__((unused)) static void put_bits_atomic2(unsigned *out, unsigned kc, unsigned
# 18 "pabio_kernels_v2.cu"
startbit, unsigned numbits, unsigned
# 19 "pabio_kernels_v2.cu"
codeword) {int volatile ___ = 1;(void)out;(void)kc;(void)startbit;(void)numbits;(void)codeword;
# 33 "pabio_kernels_v2.cu"
::exit(___);}
# 41 "pabio_kernels_v2.cu"
__attribute__((unused)) static void put_bits_atomic2a(unsigned *out, unsigned kc, unsigned
# 42 "pabio_kernels_v2.cu"
startbit, unsigned numbits, unsigned
# 43 "pabio_kernels_v2.cu"
codeword) {int volatile ___ = 1;(void)out;(void)kc;(void)startbit;(void)numbits;(void)codeword;
# 61 "pabio_kernels_v2.cu"
::exit(___);}
# 37 "vlc_kernel_sm64huff.cu"
static void vlc_encode_kernel_sm64huff(unsigned *data, const unsigned *
# 38 "vlc_kernel_sm64huff.cu"
gm_codewords, const unsigned *gm_codewordlens, unsigned *
# 40 "vlc_kernel_sm64huff.cu"
cw32, unsigned *cw32len, unsigned *cw32idx, unsigned *
# 42 "vlc_kernel_sm64huff.cu"
out, unsigned *outidx) ;
# 75 "scanLargeArray_kernel.cu"
template< bool isNP2> __attribute__((unused)) static void
# 76 "scanLargeArray_kernel.cu"
loadSharedChunkFromMem(unsigned *s_data, const unsigned *
# 77 "scanLargeArray_kernel.cu"
g_idata, int
# 78 "scanLargeArray_kernel.cu"
n, int baseIndex, int &
# 79 "scanLargeArray_kernel.cu"
ai, int &bi, int &
# 80 "scanLargeArray_kernel.cu"
mem_ai, int &mem_bi, int &
# 81 "scanLargeArray_kernel.cu"
bankOffsetA, int &bankOffsetB)
# 82 "scanLargeArray_kernel.cu"
{int volatile ___ = 1;(void)s_data;(void)g_idata;(void)n;(void)baseIndex;(void)ai;(void)bi;(void)mem_ai;(void)mem_bi;(void)bankOffsetA;(void)bankOffsetB;
# 106 "scanLargeArray_kernel.cu"
::exit(___);}
# 108 "scanLargeArray_kernel.cu"
template< bool isNP2> __attribute__((unused)) static void
# 109 "scanLargeArray_kernel.cu"
storeSharedChunkToMem(unsigned *g_odata, const unsigned *
# 110 "scanLargeArray_kernel.cu"
s_data, int
# 111 "scanLargeArray_kernel.cu"
n, int
# 112 "scanLargeArray_kernel.cu"
ai, int bi, int
# 113 "scanLargeArray_kernel.cu"
mem_ai, int mem_bi, int
# 114 "scanLargeArray_kernel.cu"
bankOffsetA, int bankOffsetB)
# 115 "scanLargeArray_kernel.cu"
{int volatile ___ = 1;(void)g_odata;(void)s_data;(void)n;(void)ai;(void)bi;(void)mem_ai;(void)mem_bi;(void)bankOffsetA;(void)bankOffsetB;
# 129 "scanLargeArray_kernel.cu"
::exit(___);}
# 131 "scanLargeArray_kernel.cu"
template< bool storeSum> __attribute__((unused)) static void
# 132 "scanLargeArray_kernel.cu"
clearLastElement(unsigned *s_data, unsigned *
# 133 "scanLargeArray_kernel.cu"
g_blockSums, int
# 134 "scanLargeArray_kernel.cu"
blockIndex)
# 135 "scanLargeArray_kernel.cu"
{int volatile ___ = 1;(void)s_data;(void)g_blockSums;(void)blockIndex;
# 150 "scanLargeArray_kernel.cu"
::exit(___);}
# 152 "scanLargeArray_kernel.cu"
__attribute__((unused)) static unsigned buildSum(unsigned *s_data)
# 153 "scanLargeArray_kernel.cu"
{int volatile ___ = 1;(void)s_data;
# 178 "scanLargeArray_kernel.cu"
::exit(___);}
# 180 "scanLargeArray_kernel.cu"
__attribute__((unused)) static void scanRootToLeaves(unsigned *s_data, unsigned stride)
# 181 "scanLargeArray_kernel.cu"
{int volatile ___ = 1;(void)s_data;(void)stride;
# 205 "scanLargeArray_kernel.cu"
::exit(___);}
# 207 "scanLargeArray_kernel.cu"
template< bool storeSum> __attribute__((unused)) static void
# 208 "scanLargeArray_kernel.cu"
prescanBlock(unsigned *data, int blockIndex, unsigned *blockSums)
# 209 "scanLargeArray_kernel.cu"
{int volatile ___ = 1;(void)data;(void)blockIndex;(void)blockSums;
# 214 "scanLargeArray_kernel.cu"
::exit(___);}
# 216 "scanLargeArray_kernel.cu"
template< bool storeSum, bool isNP2> static void
# 217 "scanLargeArray_kernel.cu"
__wrapper__device_stub_prescan(unsigned *&g_odata, const unsigned *&
# 218 "scanLargeArray_kernel.cu"
g_idata, unsigned *&
# 219 "scanLargeArray_kernel.cu"
g_blockSums, int &
# 220 "scanLargeArray_kernel.cu"
n, int &
# 221 "scanLargeArray_kernel.cu"
blockIndex, int &
# 222 "scanLargeArray_kernel.cu"
baseIndex) {exit(1);}
# 216 "scanLargeArray_kernel.cu"
template< bool storeSum, bool isNP2> static void
# 217 "scanLargeArray_kernel.cu"
prescan(unsigned *g_odata, const unsigned *
# 218 "scanLargeArray_kernel.cu"
g_idata, unsigned *
# 219 "scanLargeArray_kernel.cu"
g_blockSums, int
# 220 "scanLargeArray_kernel.cu"
n, int
# 221 "scanLargeArray_kernel.cu"
blockIndex, int
# 222 "scanLargeArray_kernel.cu"
baseIndex)
# 223 "scanLargeArray_kernel.cu"
{__wrapper__device_stub_prescan<storeSum,isNP2>(g_odata,g_idata,g_blockSums,n,blockIndex,baseIndex);
# 239 "scanLargeArray_kernel.cu"
return;}
# 241 "scanLargeArray_kernel.cu"
static void uniformAdd(unsigned *g_data, unsigned *
# 242 "scanLargeArray_kernel.cu"
uniforms, int
# 243 "scanLargeArray_kernel.cu"
n, int
# 244 "scanLargeArray_kernel.cu"
blockOffset, int
# 245 "scanLargeArray_kernel.cu"
baseIndex) ;
# 69 "/usr/include/assert.h" 3
extern "C" void __assert_fail(const char * , const char * , unsigned , const char * ) throw()
# 71 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 74 "/usr/include/assert.h" 3
extern "C" void __assert_perror_fail(int , const char * , unsigned , const char * ) throw()
# 76 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 81 "/usr/include/assert.h" 3
extern "C" void __assert(const char * , const char * , int ) throw()
# 82 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 40 "scan.cu"
inline bool isPowerOfTwo(int n)
# 41 "scan.cu"
{
# 42 "scan.cu"
return (n & (n - 1)) == 0;
# 43 "scan.cu"
}
# 46 "scan.cu"
inline int floorPow2(int n)
# 47 "scan.cu"
{
# 55 "scan.cu"
int exp;
# 56 "scan.cu"
frexp((float)n, &exp);
# 57 "scan.cu"
return 1 << (exp - 1);
# 59 "scan.cu"
}
# 63 "scan.cu"
static unsigned **g_scanBlockSums;
# 64 "scan.cu"
static unsigned g_numEltsAllocated = (0);
# 65 "scan.cu"
static unsigned g_numLevelsAllocated = (0);
# 67 "scan.cu"
static void preallocBlockSums(unsigned maxNumElements)
# 68 "scan.cu"
{
# 69 "scan.cu"
(static_cast< bool>((g_numEltsAllocated == (0)))) ? ((void)0) : __assert_fail("g_numEltsAllocated == 0", "scan.cu", 69, __extension__ __PRETTY_FUNCTION__);
# 71 "scan.cu"
g_numEltsAllocated = maxNumElements;
# 73 "scan.cu"
unsigned blockSize = (256);
# 74 "scan.cu"
unsigned numElts = maxNumElements;
# 75 "scan.cu"
int level = 0;
# 77 "scan.cu"
do {
# 78 "scan.cu"
unsigned numBlocks = (max(1, (int)ceil(((float)numElts) / ((2.0F) * blockSize))));
# 79 "scan.cu"
if (numBlocks > (1)) { level++; }
# 80 "scan.cu"
numElts = numBlocks;
# 81 "scan.cu"
} while (numElts > (1));
# 83 "scan.cu"
g_scanBlockSums = ((unsigned **)malloc(level * sizeof(unsigned *)));
# 84 "scan.cu"
g_numLevelsAllocated = level;
# 85 "scan.cu"
numElts = maxNumElements;
# 86 "scan.cu"
level = 0;
# 88 "scan.cu"
do {
# 89 "scan.cu"
unsigned numBlocks = (max(1, (int)ceil(((float)numElts) / ((2.0F) * blockSize))));
# 90 "scan.cu"
if (numBlocks > (1))
# 91 "scan.cu"
{ cudaError err = cudaMalloc((void **)(&(g_scanBlockSums[level++])), numBlocks * sizeof(unsigned)); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "scan.cu", 91, cudaGetErrorString(err)); exit(1); } } ; ;
# 92 "scan.cu"
numElts = numBlocks;
# 93 "scan.cu"
} while (numElts > (1));
# 95 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "preallocBlockSums", "scan.cu", 95, cudaGetErrorString(err)); exit(1); } } ;
# 96 "scan.cu"
}
# 98 "scan.cu"
static void deallocBlockSums()
# 99 "scan.cu"
{
# 100 "scan.cu"
for (unsigned i = (0); i < g_numLevelsAllocated; i++)
# 101 "scan.cu"
{
# 102 "scan.cu"
cudaFree(g_scanBlockSums[i]);
# 103 "scan.cu"
}
# 105 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "deallocBlockSums", "scan.cu", 105, cudaGetErrorString(err)); exit(1); } } ;
# 107 "scan.cu"
free((void **)g_scanBlockSums);
# 109 "scan.cu"
g_scanBlockSums = (0);
# 110 "scan.cu"
g_numEltsAllocated = (0);
# 111 "scan.cu"
g_numLevelsAllocated = (0);
# 112 "scan.cu"
}
# 114 "scan.cu"
static void prescanArrayRecursive(unsigned *outArray, const unsigned *
# 115 "scan.cu"
inArray, int
# 116 "scan.cu"
numElements, int
# 117 "scan.cu"
level)
# 118 "scan.cu"
{
# 119 "scan.cu"
unsigned blockSize = (256);
# 120 "scan.cu"
unsigned numBlocks = (max(1, (int)ceil(((float)numElements) / ((2.0F) * blockSize))));
# 122 "scan.cu"
unsigned numThreads;
# 124 "scan.cu"
if (numBlocks > (1)) {
# 125 "scan.cu"
numThreads = blockSize; } else {
# 126 "scan.cu"
if (isPowerOfTwo(numElements)) {
# 127 "scan.cu"
numThreads = (numElements / 2); } else {
# 129 "scan.cu"
numThreads = (floorPow2(numElements)); } }
# 131 "scan.cu"
unsigned numEltsPerBlock = (numThreads * (2));
# 135 "scan.cu"
unsigned numEltsLastBlock = (numElements - ((numBlocks - (1)) * numEltsPerBlock));
# 137 "scan.cu"
unsigned numThreadsLastBlock = max(1, numEltsLastBlock / (2));
# 138 "scan.cu"
unsigned np2LastBlock = (0);
# 139 "scan.cu"
unsigned sharedMemLastBlock = (0);
# 141 "scan.cu"
if (numEltsLastBlock != numEltsPerBlock)
# 142 "scan.cu"
{
# 143 "scan.cu"
np2LastBlock = (1);
# 145 "scan.cu"
if (!isPowerOfTwo(numEltsLastBlock)) {
# 146 "scan.cu"
numThreadsLastBlock = (floorPow2(numEltsLastBlock)); }
# 148 "scan.cu"
unsigned extraSpace = (((2) * numThreadsLastBlock) / (16));
# 149 "scan.cu"
sharedMemLastBlock = (sizeof(unsigned) * (((2) * numThreadsLastBlock) + extraSpace));
# 151 "scan.cu"
}
# 154 "scan.cu"
unsigned extraSpace = (numEltsPerBlock / (16));
# 155 "scan.cu"
unsigned sharedMemSize = (sizeof(unsigned) * (numEltsPerBlock + extraSpace));
# 167 "scan.cu"
dim3 grid(max(1, numBlocks - np2LastBlock), 1, 1);
# 168 "scan.cu"
dim3 threads(numThreads, 1, 1);
# 171 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "prescanArrayRecursive before kernels", "scan.cu", 171, cudaGetErrorString(err)); exit(1); } } ;
# 174 "scan.cu"
if (numBlocks > (1))
# 175 "scan.cu"
{
# 176 "scan.cu"
(cudaConfigureCall(grid, threads, sharedMemSize)) ? ((void)0) : (prescan< true, false> )(outArray, inArray, g_scanBlockSums[level], numThreads * (2), 0, 0);
# 180 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "prescanWithBlockSums", "scan.cu", 180, cudaGetErrorString(err)); exit(1); } } ;
# 181 "scan.cu"
if (np2LastBlock)
# 182 "scan.cu"
{
# 183 "scan.cu"
(cudaConfigureCall(1, numThreadsLastBlock, sharedMemLastBlock)) ? ((void)0) : (prescan< true, true> )(outArray, inArray, g_scanBlockSums[level], numEltsLastBlock, numBlocks - (1), numElements - numEltsLastBlock);
# 186 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "prescanNP2WithBlockSums", "scan.cu", 186, cudaGetErrorString(err)); exit(1); } } ;
# 187 "scan.cu"
}
# 194 "scan.cu"
prescanArrayRecursive(g_scanBlockSums[level], g_scanBlockSums[level], numBlocks, level + 1);
# 199 "scan.cu"
(cudaConfigureCall(grid, threads)) ? ((void)0) : uniformAdd(outArray, g_scanBlockSums[level], numElements - numEltsLastBlock, 0, 0);
# 203 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "uniformAdd", "scan.cu", 203, cudaGetErrorString(err)); exit(1); } } ;
# 204 "scan.cu"
if (np2LastBlock)
# 205 "scan.cu"
{
# 206 "scan.cu"
(cudaConfigureCall(1, numThreadsLastBlock)) ? ((void)0) : uniformAdd(outArray, g_scanBlockSums[level], numEltsLastBlock, numBlocks - (1), numElements - numEltsLastBlock);
# 211 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "uniformAdd", "scan.cu", 211, cudaGetErrorString(err)); exit(1); } } ;
# 212 "scan.cu"
}
# 213 "scan.cu"
} else {
# 214 "scan.cu"
if (isPowerOfTwo(numElements))
# 215 "scan.cu"
{
# 216 "scan.cu"
(cudaConfigureCall(grid, threads, sharedMemSize)) ? ((void)0) : (prescan< false, false> )(outArray, inArray, 0, numThreads * (2), 0, 0);
# 218 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "prescan", "scan.cu", 218, cudaGetErrorString(err)); exit(1); } } ;
# 219 "scan.cu"
} else
# 221 "scan.cu"
{
# 222 "scan.cu"
(cudaConfigureCall(grid, threads, sharedMemSize)) ? ((void)0) : (prescan< false, true> )(outArray, inArray, 0, numElements, 0, 0);
# 224 "scan.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "prescanNP2", "scan.cu", 224, cudaGetErrorString(err)); exit(1); } } ;
# 225 "scan.cu"
} }
# 226 "scan.cu"
}
# 228 "scan.cu"
static void prescanArray(unsigned *outArray, unsigned *inArray, int numElements)
# 229 "scan.cu"
{
# 230 "scan.cu"
prescanArrayRecursive(outArray, inArray, numElements, 0);
# 231 "scan.cu"
}
# 19 "pack_kernels.cu"
static void pack2(unsigned *srcData, unsigned *cindex, unsigned *cindex2, unsigned *dstData, unsigned original_num_block_elements) ;
# 5 "cpuencode.h"
extern "C" void cpu_vlc_encode(unsigned * , unsigned , unsigned * , unsigned * , unsigned * , unsigned * );
# 32 "main_test_cu.cu"
long long get_time() {
# 33 "main_test_cu.cu"
timeval tv;
# 34 "main_test_cu.cu"
gettimeofday(&tv, __null);
# 35 "main_test_cu.cu"
return ((tv.tv_sec) * (1000000)) + (tv.tv_usec);
# 36 "main_test_cu.cu"
}
# 37 "main_test_cu.cu"
void runVLCTest(char * , uint , uint = (1));
# 39 "main_test_cu.cu"
extern "C" void cpu_vlc_encode(unsigned * , unsigned , unsigned * , unsigned * , unsigned * , unsigned * );
# 41 "main_test_cu.cu"
int main(int argc, char *argv[]) {
# 42 "main_test_cu.cu"
if (!InitCUDA()) { return 0; }
# 44 "main_test_cu.cu"
unsigned num_block_threads = (1);
# 45 "main_test_cu.cu"
if (argc > 1) {
# 46 "main_test_cu.cu"
for (int i = 1; i < argc; i++) {
# 47 "main_test_cu.cu"
runVLCTest(argv[i], num_block_threads); } } else
# 49 "main_test_cu.cu"
{ runVLCTest(__null, num_block_threads, 1024); }
# 50 "main_test_cu.cu"
{ cudaError err = cudaThreadExit(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 50, cudaGetErrorString(err)); exit(1); } } ; ;
# 51 "main_test_cu.cu"
return 0;
# 52 "main_test_cu.cu"
}
# 54 "main_test_cu.cu"
void runVLCTest(char *file_name, uint num_block_threads, uint num_blocks) {
# 55 "main_test_cu.cu"
printf("CUDA! Starting VLC Tests!\n");
# 56 "main_test_cu.cu"
unsigned num_elements;
# 57 "main_test_cu.cu"
unsigned mem_size;
# 58 "main_test_cu.cu"
unsigned symbol_type_size = (sizeof(int));
# 60 "main_test_cu.cu"
double H;
# 61 "main_test_cu.cu"
initParams(file_name, num_block_threads, num_blocks, num_elements, mem_size, symbol_type_size);
# 62 "main_test_cu.cu"
num_elements = (512);
# 63 "main_test_cu.cu"
num_blocks = (512);
# 64 "main_test_cu.cu"
printf("Parameters: num_elements: %d, num_blocks: %d, num_block_threads: %d\n----------------------------\n", num_elements, num_blocks, num_block_threads);
# 66 "main_test_cu.cu"
uint *sourceData = ((uint *)malloc(mem_size));
# 67 "main_test_cu.cu"
uint *destData = ((uint *)malloc(mem_size));
# 68 "main_test_cu.cu"
uint *crefData = ((uint *)malloc(mem_size));
# 70 "main_test_cu.cu"
uint *codewords = ((uint *)malloc((256) * symbol_type_size));
# 71 "main_test_cu.cu"
uint *codewordlens = ((uint *)malloc((256) * symbol_type_size));
# 73 "main_test_cu.cu"
uint *cw32 = ((uint *)malloc(mem_size));
# 74 "main_test_cu.cu"
uint *cw32len = ((uint *)malloc(mem_size));
# 75 "main_test_cu.cu"
uint *cw32idx = ((uint *)malloc(mem_size));
# 77 "main_test_cu.cu"
uint *cindex2 = ((uint *)malloc(num_blocks * sizeof(int)));
# 79 "main_test_cu.cu"
memset(sourceData, 0, mem_size);
# 80 "main_test_cu.cu"
memset(destData, 0, mem_size);
# 81 "main_test_cu.cu"
memset(crefData, 0, mem_size);
# 82 "main_test_cu.cu"
memset(cw32, 0, mem_size);
# 83 "main_test_cu.cu"
memset(cw32len, 0, mem_size);
# 84 "main_test_cu.cu"
memset(cw32idx, 0, mem_size);
# 85 "main_test_cu.cu"
memset(codewords, 0, (256) * symbol_type_size);
# 86 "main_test_cu.cu"
memset(codewordlens, 0, (256) * symbol_type_size);
# 87 "main_test_cu.cu"
memset(cindex2, 0, num_blocks * sizeof(int));
# 89 "main_test_cu.cu"
loadData(file_name, sourceData, codewords, codewordlens, num_elements, mem_size, H);
# 93 "main_test_cu.cu"
unsigned *d_sourceData, *d_destData, *d_destDataPacked;
# 94 "main_test_cu.cu"
unsigned *d_codewords, *d_codewordlens;
# 95 "main_test_cu.cu"
unsigned *d_cw32, *d_cw32len, *d_cw32idx, *d_cindex, *d_cindex2;
# 97 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_sourceData), mem_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 97, cudaGetErrorString(err)); exit(1); } } ; ;
# 98 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_destData), mem_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 98, cudaGetErrorString(err)); exit(1); } } ; ;
# 99 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_destDataPacked), mem_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 99, cudaGetErrorString(err)); exit(1); } } ; ;
# 101 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_codewords), (256) * symbol_type_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 101, cudaGetErrorString(err)); exit(1); } } ; ;
# 102 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_codewordlens), (256) * symbol_type_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 102, cudaGetErrorString(err)); exit(1); } } ; ;
# 104 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_cw32), mem_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 104, cudaGetErrorString(err)); exit(1); } } ; ;
# 105 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_cw32len), mem_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 105, cudaGetErrorString(err)); exit(1); } } ; ;
# 106 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_cw32idx), mem_size); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 106, cudaGetErrorString(err)); exit(1); } } ; ;
# 108 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_cindex), num_blocks * sizeof(unsigned)); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 108, cudaGetErrorString(err)); exit(1); } } ; ;
# 109 "main_test_cu.cu"
{ cudaError err = cudaMalloc((void **)(&d_cindex2), num_blocks * sizeof(unsigned)); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 109, cudaGetErrorString(err)); exit(1); } } ; ;
# 111 "main_test_cu.cu"
{ cudaError err = cudaMemcpy(d_sourceData, sourceData, mem_size, cudaMemcpyHostToDevice); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 111, cudaGetErrorString(err)); exit(1); } } ; ;
# 112 "main_test_cu.cu"
{ cudaError err = cudaMemcpy(d_codewords, codewords, (256) * symbol_type_size, cudaMemcpyHostToDevice); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 112, cudaGetErrorString(err)); exit(1); } } ; ;
# 113 "main_test_cu.cu"
{ cudaError err = cudaMemcpy(d_codewordlens, codewordlens, (256) * symbol_type_size, cudaMemcpyHostToDevice); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 113, cudaGetErrorString(err)); exit(1); } } ; ;
# 114 "main_test_cu.cu"
{ cudaError err = cudaMemcpy(d_destData, destData, mem_size, cudaMemcpyHostToDevice); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 114, cudaGetErrorString(err)); exit(1); } } ; ;
# 116 "main_test_cu.cu"
dim3 grid_size(num_blocks, 1, 1);
# 117 "main_test_cu.cu"
dim3 block_size(num_block_threads, 1, 1);
# 118 "main_test_cu.cu"
unsigned sm_size;
# 121 "main_test_cu.cu"
unsigned NT = (10);
# 124 "main_test_cu.cu"
unsigned refbytesize;
# 125 "main_test_cu.cu"
long long timer = get_time();
# 126 "main_test_cu.cu"
cpu_vlc_encode((unsigned *)sourceData, num_elements, (unsigned *)crefData, &refbytesize, codewords, codewordlens);
# 127 "main_test_cu.cu"
float msec = ((float)((get_time() - timer) / (1000.0)));
# 128 "main_test_cu.cu"
printf("CPU Encoding time (CPU): %f (ms)\n", msec);
# 129 "main_test_cu.cu"
printf("CPU Encoded to %d [B]\n", refbytesize);
# 130 "main_test_cu.cu"
unsigned num_ints = ((refbytesize / (4)) + (((refbytesize % (4)) == (0)) ? 0 : 1));
# 134 "main_test_cu.cu"
(grid_size.x) = num_blocks;
# 135 "main_test_cu.cu"
(block_size.x) = num_block_threads;
# 136 "main_test_cu.cu"
sm_size = ((block_size.x) * sizeof(unsigned));
# 138 "main_test_cu.cu"
sm_size = (((2 * 256) * sizeof(int)) + ((block_size.x) * sizeof(unsigned)));
# 140 "main_test_cu.cu"
cudaEvent_t start, stop;
# 141 "main_test_cu.cu"
cudaEventCreate(&start);
# 142 "main_test_cu.cu"
cudaEventCreate(&stop);
# 144 "main_test_cu.cu"
cudaEventRecord(start, 0);
# 145 "main_test_cu.cu"
for (int i = 0; i < NT; i++) {
# 146 "main_test_cu.cu"
(cudaConfigureCall(grid_size, block_size, sm_size)) ? ((void)0) : vlc_encode_kernel_sm64huff(d_sourceData, d_codewords, d_codewordlens, d_cw32, d_cw32len, d_cw32idx, d_destData, d_cindex);
# 151 "main_test_cu.cu"
}
# 152 "main_test_cu.cu"
cudaThreadSynchronize();
# 153 "main_test_cu.cu"
cudaEventRecord(stop, 0);
# 154 "main_test_cu.cu"
cudaEventSynchronize(stop);
# 155 "main_test_cu.cu"
float elapsedTime;
# 156 "main_test_cu.cu"
cudaEventElapsedTime(&elapsedTime, start, stop);
# 159 "main_test_cu.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "Kernel execution failed\n", "main_test_cu.cu", 159, cudaGetErrorString(err)); exit(1); } } ;
# 160 "main_test_cu.cu"
printf("GPU Encoding time (SM64HUFF): %f (ms)\n", elapsedTime / NT);
# 164 "main_test_cu.cu"
unsigned num_scan_elements = (grid_size.x);
# 165 "main_test_cu.cu"
preallocBlockSums(num_scan_elements);
# 166 "main_test_cu.cu"
cudaMemset(d_destDataPacked, 0, mem_size);
# 167 "main_test_cu.cu"
printf("Num_blocks to be passed to scan is %d.\n", num_scan_elements);
# 168 "main_test_cu.cu"
prescanArray(d_cindex2, d_cindex, num_scan_elements);
# 170 "main_test_cu.cu"
(cudaConfigureCall(num_scan_elements / (16), 16)) ? ((void)0) : pack2((unsigned *)d_destData, d_cindex, d_cindex2, (unsigned *)d_destDataPacked, num_elements / num_scan_elements);
# 171 "main_test_cu.cu"
{ cudaError_t err = cudaGetLastError(); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i : %s.\n", "Pack2 Kernel execution failed\n", "main_test_cu.cu", 171, cudaGetErrorString(err)); exit(1); } } ;
# 172 "main_test_cu.cu"
deallocBlockSums();
# 174 "main_test_cu.cu"
{ cudaError err = cudaMemcpy(destData, d_destDataPacked, mem_size, cudaMemcpyDeviceToHost); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 174, cudaGetErrorString(err)); exit(1); } } ; ;
# 175 "main_test_cu.cu"
compare_vectors((unsigned *)crefData, (unsigned *)destData, num_ints);
# 178 "main_test_cu.cu"
free(sourceData); free(destData); free(codewords); free(codewordlens); free(cw32); free(cw32len); free(crefData);
# 179 "main_test_cu.cu"
{ cudaError err = cudaFree(d_sourceData); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 179, cudaGetErrorString(err)); exit(1); } } ; ; { cudaError err = cudaFree(d_destData); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 179, cudaGetErrorString(err)); exit(1); } } ; ; { cudaError err = cudaFree(d_destDataPacked); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 179, cudaGetErrorString(err)); exit(1); } } ; ;
# 180 "main_test_cu.cu"
{ cudaError err = cudaFree(d_codewords); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 180, cudaGetErrorString(err)); exit(1); } } ; ; { cudaError err = cudaFree(d_codewordlens); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 180, cudaGetErrorString(err)); exit(1); } } ; ;
# 181 "main_test_cu.cu"
{ cudaError err = cudaFree(d_cw32); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 181, cudaGetErrorString(err)); exit(1); } } ; ; { cudaError err = cudaFree(d_cw32len); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 181, cudaGetErrorString(err)); exit(1); } } ; ; { cudaError err = cudaFree(d_cw32idx); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 181, cudaGetErrorString(err)); exit(1); } } ; ;
# 182 "main_test_cu.cu"
{ cudaError err = cudaFree(d_cindex); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 182, cudaGetErrorString(err)); exit(1); } } ; ; { cudaError err = cudaFree(d_cindex2); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "main_test_cu.cu", 182, cudaGetErrorString(err)); exit(1); } } ; ;
# 183 "main_test_cu.cu"
free(cindex2);
# 184 "main_test_cu.cu"
}
# 1 "tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
# 1 "tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c" 1 3

# 1 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 3
template <typename T>
static inline void *__cudaAddressOf(T &val)
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}
# 121 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 3
extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *);
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";

}




extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda-5.0//include/common_functions.h" 1 3
# 162 "/usr/local/cuda-5.0//include/common_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/math_functions.h" 1 3
# 8226 "/usr/local/cuda-5.0//include/math_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/math_constants.h" 1 3
# 8227 "/usr/local/cuda-5.0//include/math_functions.h" 2 3
# 10909 "/usr/local/cuda-5.0//include/math_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/crt/func_macro.h" 1 3
# 10910 "/usr/local/cuda-5.0//include/math_functions.h" 2 3
# 12662 "/usr/local/cuda-5.0//include/math_functions.h" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 12980 "/usr/local/cuda-5.0//include/math_functions.h" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 13152 "/usr/local/cuda-5.0//include/math_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/math_functions_dbl_ptx3.h" 1 3
# 13153 "/usr/local/cuda-5.0//include/math_functions.h" 2 3
# 163 "/usr/local/cuda-5.0//include/common_functions.h" 2 3
# 215 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 2 3







#pragma pack()
# 3 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c" 2 3
# 1 "/tmp/tmpxft_00016add_00000000-1_main_test_cu.fatbin.c" 1 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000005d90,0x0000005001010002,0x00000000000041a8\n"
".quad 0x0000000000000000,0x0000001400010006,0x0000000f00000040,0x0000000000000015\n"
".quad 0x0000000000000000,0x0000000000000000,0x7365745f6e69616d,0x0075632e75635f74\n"
".quad 0x33010102464c457f,0x0000000000000006,0x0000000100be0002,0x0000000000000000\n"
".quad 0x0000000000004100,0x00000000000036c0,0x0038004000140514,0x0001002900400003\n"
".quad 0x7472747368732e00,0x747274732e006261,0x746d79732e006261,0x747865742e006261\n"
".quad 0x696e7530315a5f2e,0x506464416d726f66,0x2e006969695f536a,0x2e6f666e692e766e\n"
".quad 0x66696e7530315a5f,0x6a506464416d726f,0x6e2e006969695f53,0x6465726168732e76\n"
".quad 0x696e7530315a5f2e,0x506464416d726f66,0x2e006969695f536a,0x006f666e692e766e\n"
".quad 0x736e6f632e766e2e,0x5a5f2e30746e6174,0x726f66696e753031,0x5f536a506464416d\n"
".quad 0x7865742e00696969,0x657270375a5f2e74,0x30624c496e616373,0x5076454531624c45\n"
".quad 0x695f30536a4b506a,0x692e766e2e006969,0x70375a5f2e6f666e,0x4c496e6163736572\n"
".quad 0x454531624c453062,0x30536a4b506a5076,0x766e2e006969695f,0x2e6465726168732e\n"
".quad 0x6373657270375a5f,0x4c4530624c496e61,0x506a507645453162,0x6969695f30536a4b\n"
".quad 0x6e6f632e766e2e00,0x5f2e30746e617473,0x616373657270375a,0x624c4530624c496e\n"
".quad 0x4b506a5076454531,0x006969695f30536a,0x5a5f2e747865742e,0x5f6f747369683231\n"
".quad 0x68506c656e72656b,0x2e766e2e006a506c,0x315a5f2e6f666e69,0x6b5f6f7473696832\n"
".quad 0x6c68506c656e7265,0x732e766e2e006a50,0x5a5f2e6465726168,0x5f6f747369683231\n"
".quad 0x68506c656e72656b,0x2e766e2e006a506c,0x746e6174736e6f63,0x696832315a5f2e30\n"
".quad 0x6e72656b5f6f7473,0x006a506c68506c65,0x5a5f2e747865742e,0x6e61637365727037\n"
".quad 0x31624c4531624c49,0x6a4b506a50764545,0x2e006969695f3053,0x2e6f666e692e766e\n"
".quad 0x6373657270375a5f,0x4c4531624c496e61,0x506a507645453162,0x6969695f30536a4b\n"
".quad 0x6168732e766e2e00,0x70375a5f2e646572,0x4c496e6163736572,0x454531624c453162\n"
".quad 0x30536a4b506a5076,0x766e2e006969695f,0x6e6174736e6f632e,0x7270375a5f2e3074\n"
".quad 0x624c496e61637365,0x76454531624c4531,0x5f30536a4b506a50,0x7865742e00696969\n"
".quad 0x657270375a5f2e74,0x31624c496e616373,0x5076454530624c45,0x695f30536a4b506a\n"
".quad 0x692e766e2e006969,0x70375a5f2e6f666e,0x4c496e6163736572,0x454530624c453162\n"
".quad 0x30536a4b506a5076,0x766e2e006969695f,0x2e6465726168732e,0x6373657270375a5f\n"
".quad 0x4c4531624c496e61,0x506a507645453062,0x6969695f30536a4b,0x6e6f632e766e2e00\n"
".quad 0x5f2e30746e617473,0x616373657270375a,0x624c4531624c496e,0x4b506a5076454530\n"
".quad 0x006969695f30536a,0x5a5f2e747865742e,0x6a50326b63617035,0x006a5f535f535f53\n"
".quad 0x6f666e692e766e2e,0x6b636170355a5f2e,0x535f535f536a5032,0x732e766e2e006a5f\n"
".quad 0x5a5f2e6465726168,0x6a50326b63617035,0x006a5f535f535f53,0x736e6f632e766e2e\n"
".quad 0x5a5f2e30746e6174,0x6a50326b63617035,0x006a5f535f535f53,0x5a5f2e747865742e\n"
".quad 0x6e655f636c763632,0x72656b5f65646f63,0x34366d735f6c656e,0x4b506a5066667568\n"
".quad 0x5f535f535f31536a,0x2e005f535f535f53,0x2e6f666e692e766e,0x5f636c7636325a5f\n"
".quad 0x6b5f65646f636e65,0x6d735f6c656e7265,0x6a50666675683436,0x5f535f31536a4b50\n"
".quad 0x5f535f535f535f53,0x6168732e766e2e00,0x36325a5f2e646572,0x6f636e655f636c76\n"
".quad 0x656e72656b5f6564,0x756834366d735f6c,0x536a4b506a506666,0x5f535f535f535f31\n"
".quad 0x766e2e005f535f53,0x6e6174736e6f632e,0x36325a5f2e363174,0x6f636e655f636c76\n"
".quad 0x656e72656b5f6564,0x756834366d735f6c,0x536a4b506a506666,0x5f535f535f535f31\n"
".quad 0x766e2e005f535f53,0x6e6174736e6f632e,0x7636325a5f2e3074,0x646f636e655f636c\n"
".quad 0x6c656e72656b5f65,0x66756834366d735f,0x31536a4b506a5066,0x535f535f535f535f\n"
".quad 0x7865742e005f535f,0x657270375a5f2e74,0x30624c496e616373,0x5076454530624c45\n"
".quad 0x695f30536a4b506a,0x692e766e2e006969,0x70375a5f2e6f666e,0x4c496e6163736572\n"
".quad 0x454530624c453062,0x30536a4b506a5076,0x766e2e006969695f,0x2e6465726168732e\n"
".quad 0x6373657270375a5f,0x4c4530624c496e61,0x506a507645453062,0x6969695f30536a4b\n"
".quad 0x6e6f632e766e2e00,0x5f2e30746e617473,0x616373657270375a,0x624c4530624c496e\n"
".quad 0x4b506a5076454530,0x006969695f30536a,0x626f6c672e766e2e,0x632e766e2e006c61\n"
".quad 0x31746e6174736e6f,0x6e2e6c65722e0034,0x6174736e6f632e76,0x732e00003431746e\n"
".quad 0x0062617472747368,0x006261747274732e,0x006261746d79732e,0x66696e7530315a5f\n"
".quad 0x6a506464416d726f,0x742e006969695f53,0x30315a5f2e747865,0x416d726f66696e75\n"
".quad 0x69695f536a506464,0x6e692e766e2e0069,0x7530315a5f2e6f66,0x64416d726f66696e\n"
".quad 0x6969695f536a5064,0x6168732e766e2e00,0x30315a5f2e646572,0x416d726f66696e75\n"
".quad 0x69695f536a506464,0x6e692e766e2e0069,0x6475635f5f006f66,0x5f6c61636f6c5f61\n"
".quad 0x363537365f726176,0x6e6f6e5f32345f37,0x755f74736e6f635f,0x5f73006d7300696e\n"
".quad 0x766e2e0061746164,0x6e6174736e6f632e,0x7530315a5f2e3074,0x64416d726f66696e\n"
".quad 0x6969695f536a5064,0x006d617261705f00,0x6373657270375a5f,0x4c4530624c496e61\n"
".quad 0x506a507645453162,0x6969695f30536a4b,0x5f2e747865742e00,0x616373657270375a\n"
".quad 0x624c4530624c496e,0x4b506a5076454531,0x006969695f30536a,0x6f666e692e766e2e\n"
".quad 0x73657270375a5f2e,0x4530624c496e6163,0x6a5076454531624c,0x69695f30536a4b50\n"
".quad 0x68732e766e2e0069,0x375a5f2e64657261,0x496e616373657270,0x4531624c4530624c\n"
".quad 0x536a4b506a507645,0x5f24006969695f30,0x616373657270375a,0x624c4530624c496e\n"
".quad 0x4b506a5076454531,0x246969695f30536a,0x70375a5f24006d73,0x4c496e6163736572\n"
".quad 0x454531624c453062,0x30536a4b506a5076,0x645f73246969695f,0x2e766e2e00617461\n"
".quad 0x746e6174736e6f63,0x657270375a5f2e30,0x30624c496e616373,0x5076454531624c45\n"
".quad 0x695f30536a4b506a,0x6832315a5f006969,0x72656b5f6f747369,0x6a506c68506c656e\n"
".quad 0x5f2e747865742e00,0x6f7473696832315a,0x506c656e72656b5f,0x766e2e006a506c68\n"
".quad 0x5a5f2e6f666e692e,0x5f6f747369683231,0x68506c656e72656b,0x2e766e2e006a506c\n"
".quad 0x5f2e646572616873,0x6f7473696832315a,0x506c656e72656b5f,0x635f5f006a506c68\n"
".quad 0x61636f6c5f616475,0x34355f7261765f6c,0x6e5f32345f313039,0x74736e6f635f6e6f\n"
".quad 0x5f2400706d65745f,0x6f7473696832315a,0x506c656e72656b5f,0x006d73246a506c68\n"
".quad 0x73696832315a5f24,0x656e72656b5f6f74,0x73246a506c68506c,0x6e2e00617461645f\n"
".quad 0x6174736e6f632e76,0x32315a5f2e30746e,0x656b5f6f74736968,0x506c68506c656e72\n"
".quad 0x657270375a5f006a,0x31624c496e616373,0x5076454531624c45,0x695f30536a4b506a\n"
".quad 0x747865742e006969,0x73657270375a5f2e,0x4531624c496e6163,0x6a5076454531624c\n"
".quad 0x69695f30536a4b50,0x6e692e766e2e0069,0x7270375a5f2e6f66,0x624c496e61637365\n"
".quad 0x76454531624c4531,0x5f30536a4b506a50,0x2e766e2e00696969,0x5f2e646572616873\n"
".quad 0x616373657270375a,0x624c4531624c496e,0x4b506a5076454531,0x006969695f30536a\n"
".quad 0x73657270375a5f24,0x4531624c496e6163,0x6a5076454531624c,0x69695f30536a4b50\n"
".quad 0x5a5f24006d732469,0x6e61637365727037,0x31624c4531624c49,0x6a4b506a50764545\n"
".quad 0x73246969695f3053,0x6e2e00617461645f,0x6174736e6f632e76,0x70375a5f2e30746e\n"
".quad 0x4c496e6163736572,0x454531624c453162,0x30536a4b506a5076,0x375a5f006969695f\n"
".quad 0x496e616373657270,0x4530624c4531624c,0x536a4b506a507645,0x742e006969695f30\n"
".quad 0x70375a5f2e747865,0x4c496e6163736572,0x454530624c453162,0x30536a4b506a5076\n"
".quad 0x766e2e006969695f,0x5a5f2e6f666e692e,0x6e61637365727037,0x30624c4531624c49\n"
".quad 0x6a4b506a50764545,0x2e006969695f3053,0x65726168732e766e,0x657270375a5f2e64\n"
".quad 0x31624c496e616373,0x5076454530624c45,0x695f30536a4b506a,0x70375a5f24006969\n"
".quad 0x4c496e6163736572,0x454530624c453162,0x30536a4b506a5076,0x006d73246969695f\n"
".quad 0x73657270375a5f24,0x4531624c496e6163,0x6a5076454530624c,0x69695f30536a4b50\n"
".quad 0x617461645f732469,0x6e6f632e766e2e00,0x5f2e30746e617473,0x616373657270375a\n"
".quad 0x624c4531624c496e,0x4b506a5076454530,0x006969695f30536a,0x326b636170355a5f\n"
".quad 0x5f535f535f536a50,0x2e747865742e006a,0x326b636170355a5f,0x5f535f535f536a50\n"
".quad 0x6e692e766e2e006a,0x6170355a5f2e6f66,0x535f536a50326b63,0x766e2e006a5f535f\n"
".quad 0x2e6465726168732e,0x326b636170355a5f,0x5f535f535f536a50,0x6170355a5f24006a\n"
".quad 0x535f536a50326b63,0x006d73246a5f535f,0x6b636170355a5f24,0x535f535f536a5032\n"
".quad 0x7461645f73246a5f,0x6f632e766e2e0061,0x2e30746e6174736e,0x326b636170355a5f\n"
".quad 0x5f535f535f536a50,0x6c7636325a5f006a,0x65646f636e655f63,0x5f6c656e72656b5f\n"
".quad 0x6666756834366d73,0x5f31536a4b506a50,0x5f535f535f535f53,0x747865742e005f53\n"
".quad 0x636c7636325a5f2e,0x5f65646f636e655f,0x735f6c656e72656b,0x506666756834366d\n"
".quad 0x535f31536a4b506a,0x535f535f535f535f,0x6e692e766e2e005f,0x7636325a5f2e6f66\n"
".quad 0x646f636e655f636c,0x6c656e72656b5f65,0x66756834366d735f,0x31536a4b506a5066\n"
".quad 0x535f535f535f535f,0x2e766e2e005f535f,0x5f2e646572616873,0x655f636c7636325a\n"
".quad 0x656b5f65646f636e,0x366d735f6c656e72,0x506a506666756834,0x535f535f31536a4b\n"
".quad 0x005f535f535f535f,0x736e6f632e766e2e,0x5f2e3631746e6174,0x655f636c7636325a\n"
".quad 0x656b5f65646f636e,0x366d735f6c656e72,0x506a506666756834,0x535f535f31536a4b\n"
".quad 0x005f535f535f535f,0x5f5f0074736e6f63,0x636f6c5f61647563,0x365f7261765f6c61\n"
".quad 0x5f39335f30393237,0x736e6f635f6e6f6e,0x0078616d636b5f74,0x636c7636325a5f24\n"
".quad 0x5f65646f636e655f,0x735f6c656e72656b,0x506666756834366d,0x535f31536a4b506a\n"
".quad 0x535f535f535f535f,0x5a5f24006d73245f,0x6e655f636c763632,0x72656b5f65646f63\n"
".quad 0x34366d735f6c656e,0x4b506a5066667568,0x5f535f535f31536a,0x73245f535f535f53\n"
".quad 0x6e2e00617461645f,0x6174736e6f632e76,0x36325a5f2e30746e,0x6f636e655f636c76\n"
".quad 0x656e72656b5f6564,0x756834366d735f6c,0x536a4b506a506666,0x5f535f535f535f31\n"
".quad 0x375a5f005f535f53,0x496e616373657270,0x4530624c4530624c,0x536a4b506a507645\n"
".quad 0x742e006969695f30,0x70375a5f2e747865,0x4c496e6163736572,0x454530624c453062\n"
".quad 0x30536a4b506a5076,0x766e2e006969695f,0x5a5f2e6f666e692e,0x6e61637365727037\n"
".quad 0x30624c4530624c49,0x6a4b506a50764545,0x2e006969695f3053,0x65726168732e766e\n"
".quad 0x657270375a5f2e64,0x30624c496e616373,0x5076454530624c45,0x695f30536a4b506a\n"
".quad 0x70375a5f24006969,0x4c496e6163736572,0x454530624c453062,0x30536a4b506a5076\n"
".quad 0x006d73246969695f,0x73657270375a5f24,0x4530624c496e6163,0x6a5076454530624c\n"
".quad 0x69695f30536a4b50,0x617461645f732469,0x6e6f632e766e2e00,0x5f2e30746e617473\n"
".quad 0x616373657270375a,0x624c4530624c496e,0x4b506a5076454530,0x006969695f30536a\n"
".quad 0x626f6c672e766e2e,0x4e56545a5f006c61,0x617878635f5f3031,0x5f5f373131766962\n"
".quad 0x79745f7373616c63,0x456f666e695f6570,0x6e6f632e766e2e00,0x003431746e617473\n"
".quad 0x5353455244444124,0x30314e56545a5f24,0x6962617878635f5f,0x6c635f5f37313176\n"
".quad 0x657079745f737361,0x2e00456f666e695f,0x632e766e2e6c6572,0x31746e6174736e6f\n"
".quad 0x314e56545a5f0034,0x62617878635f5f30,0x735f5f3032317669,0x5f7373616c635f69\n"
".quad 0x666e695f65707974,0x524444412400456f,0x56545a5f24535345,0x7878635f5f30314e\n"
".quad 0x5f30323176696261,0x73616c635f69735f,0x695f657079745f73,0x545a5f00456f666e\n"
".quad 0x0065646f4e493556,0x5353455244444124,0x4e493556545a5f24,0x56545a5f0065646f\n"
".quad 0x6e7265746e493231,0x240065646f4e6c61,0x2453534552444441,0x6e49323156545a5f\n"
".quad 0x6f4e6c616e726574,0x3856545a5f006564,0x65646f4e6661654c,0x5345524444412400\n"
".quad 0x4c3856545a5f2453,0x0065646f4e666165,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x001c10020000001b,0x0000000000000000,0x0000000000000140\n"
".quad 0x001c000300000031,0x0000000000000000,0x0000000000000000,0x002600030000006c\n"
".quad 0x0000000000000000,0x0000000000000000,0x00170003000000c8,0x0000000000000000\n"
".quad 0x0000000000000000,0x001f1002000000f3,0x0000000000000000,0x00000000000003c8\n"
".quad 0x001f000300000114,0x0000000000000000,0x0000000000000000,0x00110003000001df\n"
".quad 0x0000000000000000,0x0000000000000000,0x0018000300000224,0x0000000000000000\n"
".quad 0x0000000000000000,0x002300030000025f,0x0000000000000000,0x0000000000000000\n"
".quad 0x00140003000002e1,0x0000000000000000,0x0000000000000000,0x001e100200000305\n"
".quad 0x0000000000000000,0x0000000000000408,0x001e000300000326,0x0000000000000000\n"
".quad 0x0000000000000000,0x00130003000003f1,0x0000000000000000,0x0000000000000000\n"
".quad 0x001a100200000420,0x0000000000000000,0x00000000000003c8,0x001a000300000441\n"
".quad 0x0000000000000000,0x0000000000000000,0x001600030000050c,0x0000000000000000\n"
".quad 0x0000000000000000,0x001d10020000053b,0x0000000000000000,0x00000000000003a8\n"
".quad 0x001d00030000054d,0x0000000000000000,0x0000000000000000,0x00120003000005cd\n"
".quad 0x0000000000000000,0x0000000000000000,0x00191002000005ed,0x0000000000000000\n"
".quad 0x00000000000006d0,0x001900030000061e,0x0000000000000000,0x0000000000000000\n"
".quad 0x002400030000068f,0x0000000000000000,0x0000000000000000,0x00150003000006cb\n"
".quad 0x0000000000000000,0x0000000000000000,0x000f0003000007a9,0x0000000000000000\n"
".quad 0x0000000000000000,0x001b1002000007e8,0x0000000000000000,0x0000000000000380\n"
".quad 0x001b000300000809,0x0000000000000000,0x0000000000000000,0x00100003000008d4\n"
".quad 0x0000000000000000,0x0000000000000000,0x0028000300000903,0x0000000000000000\n"
".quad 0x0000000000000000,0x002800010000090e,0x0000000000000000,0x0000000000000008\n"
".quad 0x000e000300000934,0x0000000000000000,0x0000000000000000,0x0028000100000985\n"
".quad 0x0000000000000008,0x0000000000000008,0x00280001000009e0,0x0000000000000030\n"
".quad 0x0000000000000020,0x00280001000009ff,0x0000000000000050,0x0000000000000020\n"
".quad 0x0028000100000a2e,0x0000000000000010,0x0000000000000020,0x001810120000020e\n"
".quad 0x0000000000000000,0x0000000000000140,0x0000001b00080a04,0x0024190300240020\n"
".quad 0x00000000000c1704,0x0011f00000200005,0x00000000000c1704,0x0011f000001c0004\n"
".quad 0x00000000000c1704,0x0011f00000180003,0x00000000000c1704,0x0021f00000100002\n"
".quad 0x00000000000c1704,0x0021f00000080001,0x00000000000c1704,0x0021f00000000000\n"
".quad 0x0002001800080d04,0x0008120400000001,0x0000000000000019,0x0000001900081104\n"
".quad 0x0008120400000000,0x0000000000000014,0x0000001400081104,0x0008120400000000\n"
".quad 0x0000000000000011,0x0000001100081104,0x0008120400000000,0x000000000000000e\n"
".quad 0x0000000e00081104,0x0008120400000000,0x000000000000000b,0x0000000b00081104\n"
".quad 0x0008120400000000,0x0000000000000023,0x0000002300081104,0x0008120400000000\n"
".quad 0x0000000000000005,0x0000000500081104,0x0008120400000000,0x0000000000000001\n"
".quad 0x0000000100081104,0x00080a0400000000,0x001c002000000004,0x000c1704001c1903\n"
".quad 0x0018000400000000,0x000c17040011f000,0x0014000300000000,0x000c17040011f000\n"
".quad 0x0010000200000000,0x000c17040011f000,0x0008000100000000,0x000c17040021f000\n"
".quad 0x0000000000000000,0x00080d040021f000,0x0000000100020018,0x0000000d00080a04\n"
".quad 0x0024190300240020,0x00000000000c1704,0x0011f00000200005,0x00000000000c1704\n"
".quad 0x0011f000001c0004,0x00000000000c1704,0x0011f00000180003,0x00000000000c1704\n"
".quad 0x0021f00000100002,0x00000000000c1704,0x0021f00000080001,0x00000000000c1704\n"
".quad 0x0021f00000000000,0x0002001800080d04,0x00080a0400000001,0x0024002000000007\n"
".quad 0x000c170400241903,0x0020000500000000,0x000c17040011f000,0x001c000400000000\n"
".quad 0x000c17040011f000,0x0018000300000000,0x000c17040011f000,0x0010000200000000\n"
".quad 0x000c17040021f000,0x0008000100000000,0x000c17040021f000,0x0000000000000000\n"
".quad 0x00080d040021f000,0x0000000100020018,0x0000001300080a04,0x0024190300240020\n"
".quad 0x00000000000c1704,0x0011f00000200004,0x00000000000c1704,0x0021f00000180003\n"
".quad 0x00000000000c1704,0x0021f00000100002,0x00000000000c1704,0x0021f00000080001\n"
".quad 0x00000000000c1704,0x0021f00000000000,0x0022019800080d04,0x00080a0400000020\n"
".quad 0x001800200000000a,0x000c170400181903,0x0010000200000000,0x000c17040021f000\n"
".quad 0x0008000100000000,0x000c17040021f000,0x0000000000000000,0x00080d040021f000\n"
".quad 0x0000002000220198,0x0000001800080a04,0x0040190300400020,0x00000000000c1704\n"
".quad 0x0021f00000380007,0x00000000000c1704,0x0021f00000300006,0x00000000000c1704\n"
".quad 0x0021f00000280005,0x00000000000c1704,0x0021f00000200004,0x00000000000c1704\n"
".quad 0x0021f00000180003,0x00000000000c1704,0x0021f00000100002,0x00000000000c1704\n"
".quad 0x0021f00000080001,0x00000000000c1704,0x0021f00000000000,0x0021018c00080d04\n"
".quad 0x00080a0400000020,0x0024002000000010,0x000c170400241903,0x0020000500000000\n"
".quad 0x000c17040011f000,0x001c000400000000,0x000c17040011f000,0x0018000300000000\n"
".quad 0x000c17040011f000,0x0010000200000000,0x000c17040021f000,0x0008000100000000\n"
".quad 0x000c17040021f000,0x0000000000000000,0x00080d040021f000,0x0000000100020018\n"
".quad 0x0000000000000020,0x0000002200000002,0x0000000000000018,0x0000002100000002\n"
".quad 0x0000000000000010,0x0000002000000002,0x0000000000000008,0x0000001f00000002\n"
".quad 0x0000000000000000,0x0000001d00000002,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000000ff,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00005de400000000,0x8400dc0428004404,0xfc1fdc032c000000,0x08311e03207e0000\n"
".quad 0x004fdc856000c000,0xffffdc04c9000000,0x94001c0450ee0000,0x50015de42c000000\n"
".quad 0x20001ca328004000,0xa00fdd0320064000,0xa000000748014000,0x7c009c2360000002\n"
".quad 0xb021dc637000c004,0x20509ca31b0e4000,0x000001e750004000,0x7c015c2340000002\n"
".quad 0x80019c037000c004,0x9051dc4348014000,0x0061dc0548004000,0x08715c0384000000\n"
".quad 0xa00000076000c000,0x00519c8560000000,0x04618003c4000000,0x005180854800c000\n"
".quad 0x800021e7cc000000,0x00001df44003ffff,0x08001c0340000000,0xa00fdd0348000000\n"
".quad 0x7c015c2348014000,0xb051dc637000c004,0x000001e7188e4000,0xfc2fdc134003fffe\n"
".quad 0xffffdc04207e0000,0xc0001de450ee0000,0x78309c0328004000,0x10319c035800c000\n"
".quad 0x00401c852001c000,0xd021dc43c1000000,0x00601c0548004000,0x00001de714000000\n"
".quad 0x00005de480000000,0x84009c0428004404,0x94001c042c000000,0x8001dde42c000000\n"
".quad 0x08219e0328004000,0x10211c436000c000,0x2000dca35000c000,0xa0629c0320044000\n"
".quad 0xfc1fdc0348014000,0x10315c43207e0000,0xb042dc435000c000,0xc0621c0348004000\n"
".quad 0x00a29c8548014000,0xd0425c4384000000,0x10331c0348004000,0x40611c03200fc000\n"
".quad 0x0081dc854800c000,0x90535c4384000000,0x00c15c8548004000,0x40629c8584000000\n"
".quad 0x4061dc85c9000000,0xffffdc04c9000010,0x40521c0350ee0000,0x6051dc035800c000\n"
".quad 0x20525c035800c000,0xfc529c035800c000,0xfc815c036800c003,0x08739e036800c003\n"
".quad 0xfc921c036000c000,0x0853de036800c003,0x40e1dc856000c000,0x08a45e03c1000010\n"
".quad 0x40f35c856000c000,0x08841e03c1000010,0x40e29c856000c000,0x40f15c85c1000000\n"
".quad 0x41031c85c1000000,0x4112dc85c1000010,0x41121c85c1000010,0xfcd35c03c1000000\n"
".quad 0xfc739c036800c003,0x41025c856800c003,0x80d3de03c1000000,0x80d1dc034800c000\n"
".quad 0x38d45c03198ec000,0xfcc31c0348000000,0x34a39c036800c003,0x3ca41c0360000000\n"
".quad 0x80d3e00358000000,0x14e39c434800ffff,0x80c35e0368000000,0x80c3dc034800c000\n"
".quad 0x3ca42003198ec000,0x34e3dc0360000000,0x44c15c0358000000,0x30e29c0348000000\n"
".quad 0x80c3640360000000,0x31031c034800ffff,0xfcb2dc0360000000,0x24a29c436800c003\n"
".quad 0x3cc25c0368000000,0x80b1de0348000000,0x34e264034800c000,0x80b5dc0360000000\n"
".quad 0x1ca35c03198ec000,0x2c925c0358000000,0x14b15c0360000000,0x2ca31c0348000000\n"
".quad 0x80b1e80360000000,0x34925c034800ffff,0x40615c8548000000,0x20c21c43c9000020\n"
".quad 0x1ca2680368000000,0xffffdc0460000000,0x20019de450ee0000,0x0461dc0328004000\n"
".quad 0x04019de25800c000,0xfc71dc2318000000,0x800001e7190e0000,0x04019de240000002\n"
".quad 0x04229c2318000000,0x0822dc234000c000,0xffffdc044000c000,0x1c21dc0350ee0000\n"
".quad 0x400081e71b0e0000,0x046360a340000001,0x046320a320148000,0xfcd3600320168000\n"
".quad 0xfcc320036800c003,0x08d3e0036800c003,0x40c3a0436000c000,0x40f320854000c020\n"
".quad 0x00e36085c1000020,0x30d32003c1000000,0x00e3208548000000,0x0471dc03c9000000\n"
".quad 0x04619c035800c000,0xfc71dc236000c000,0xe00001e71a8e0000,0xfc21dc234003fffd\n"
".quad 0x800081e71a8e0000,0x2001e1e440000000,0xfc71e00328004000,0x0871e2034800ffff\n"
".quad 0x407fe0856000c000,0x2001dde4c9000020,0x0871dc0328004000,0xe00001e7188ec000\n"
".quad 0x0401dde240000002,0x04229c2318000000,0x0822dc234000c000,0x04619c034000c000\n"
".quad 0xffffdc045800c000,0x1c21dc0350ee0000,0xa00081e71b0e0000,0x046320a340000001\n"
".quad 0xfcc3600320168000,0x046320a36800c003,0x08d3e20320148000,0xfcc320036000c000\n"
".quad 0x40f3a0856800c003,0x40c46043c1000020,0x40f420034000c020,0x011320854800c020\n"
".quad 0x0113a085c1000000,0x40f36085c9000000,0x30d32003c1000020,0x0103208548000000\n"
".quad 0x0471dc03c9000000,0x2071dc036000c000,0x800001e7188e4000,0xffffdc044003fffd\n"
".quad 0x20019de450ee0000,0x00429c8528004000,0xfc619c03c1000020,0x1821dc234800ffff\n"
".quad 0x000081e71a8e0000,0x6001a1e440000001,0x1001e04328004001,0x14a2e0035000c000\n"
".quad 0x1001a00348000000,0x14b02003200dc000,0x7071e0435800c000,0x03f0208548004001\n"
".quad 0x0062e085c9000000,0x004fdc8594000000,0x14a01c03c9000020,0xffffdc045800c000\n"
".quad 0x7ca19c0350ee0000,0x8061de036800c000,0x14729c034800c000,0x28519d03080e0000\n"
".quad 0xe000000748000000,0x2872dd0360000001,0x0801de0348000000,0x80631e036000c000\n"
".quad 0x8061dc034800c000,0x18835c03198ec000,0x30939c0358000000,0x8063200360000000\n"
".quad 0x38d35c034800ffff,0x3093600348000000,0x2cd2dc0358000000,0x40731c8560000000\n"
".quad 0x2cc30043c4000020,0x4073008568000000,0x800021e7cc000020,0x2851dc334003ffff\n"
".quad 0xe0000007190e0000,0xa00001e760000002,0x80615c0340000002,0x0401dde2080ec000\n"
".quad 0x14619d0318000000,0x1471dc0348000000,0x8062de0360000000,0x8061dc034800c000\n"
".quad 0x18831c03198ec000,0x2c935c0358000000,0x8062e00360000000,0xfc729c034800ffff\n"
".quad 0x34c31c034800ffff,0x2c93200348000000,0x0401dc0358000000,0x8052de034800c000\n"
".quad 0x28c25c034800c000,0x08715e0368000000,0x2c91dc036000c000,0x40525c8560000000\n"
".quad 0x1c924043c4000020,0x4052408568000000,0x800021e7cc000020,0xfc61dc334003ffff\n"
".quad 0xc0000007190e0000,0x800001e760000001,0x04015de240000001,0x08001c0318000000\n"
".quad 0x18515c034800c000,0x80619e0360000000,0x08001e034800c000,0xfc515c036000c000\n"
".quad 0x20515c034800ffff,0x18515c0368000000,0x40019c8560000000,0x14618043c4000020\n"
".quad 0x4001808568000000,0x800021e7cc000020,0x00001df44003ffff,0xffffdc0440000000\n"
".quad 0x03f01c8550ee0000,0x0021dc03c1000000,0xc00081e71a0e0000,0x400021e440000000\n"
".quad 0x7830a00328004001,0x1031a0035800c000,0x004020852001c000,0x5021e043c1000020\n"
".quad 0x0060208548004001,0x00001de794000000,0x00005de480000000,0x20011de428004404\n"
".quad 0x94001c0428004000,0x03f1dc232c000000,0x0440dc03190e4001,0x00009c236000c000\n"
".quad 0xa0025de47000c060,0x0030dc2328004000,0x0c20dca37000c060,0x84009c0450000000\n"
".quad 0x0030dc042c000000,0x20235c0320004001,0x0441dc2348004000,0x0c215c03188ec000\n"
".quad 0x10d39c2348000000,0x1051dce35800c000,0x10519ca35000c000,0x2050dc032013c000\n"
".quad 0xb071dc4348004000,0x10321ce348004000,0x10341ca35000c000,0x0062dc852013c000\n"
".quad 0x04025de284000000,0xb0845c4318000000,0x10221c2348004000,0x34e1dc035800c000\n"
".quad 0x01029c8548000000,0x08831c0384000000,0x0871de0348000000,0x04021de26000c000\n"
".quad 0x08c19e0318000000,0x0062dc856000c000,0x00729c85c9000000,0x600001e7c9000000\n"
".quad 0x20011de440000003,0x101fdc0328004000,0xffffdc04207e0000,0x1021dc0350ee0000\n"
".quad 0x200081e71b0e0000,0x0082602340000002,0x0022a0237000c060,0x049262037000c060\n"
".quad 0x009260236000c000,0x289260a37000c060,0xfc92600320100000,0x2092a0034800ffff\n"
".quad 0x1093202348000000,0x10a2e0235800c000,0x24c260035800c000,0x28b2a00348000000\n"
".quad 0x0892620348000000,0x08a2e2036000c000,0x009260856000c000,0x00b2a085c1000000\n"
".quad 0x24a2a003c1000000,0x00b2a08548000000,0x04411c23c9000000,0x04825c035800c000\n"
".quad 0xfc41dc236000c000,0x24021de41a0e0000,0xc00001e728000000,0xf3f1dc234003fffc\n"
".quad 0xfc23dc23190e4000,0xf0001c041a8e0000,0x800085e720004000,0x200125e440000001\n"
".quad 0xc002a5e428004000,0xfc41242328004000,0x1002a4a34000ffff,0x104224232015c000\n"
".quad 0x108124035800c000,0x0842260348000000,0x100124e36000c000,0x008024855000c000\n"
".quad 0xd042e443c1000000,0x008fe48548004000,0x00a02485c9000000,0x23f1dc2394000000\n"
".quad 0x04001de2190e4000,0x600001e718000000,0x04925c0340000003,0xfc1fdc035800c000\n"
".quad 0xffffdc04207e0000,0x0021dc0350ee0000,0x600081e71b0e0000,0x0091202340000002\n"
".quad 0x002220237000c060,0x044122037000c060,0x004120236000c000,0x204120a37000c060\n"
".quad 0xfc41200320120000,0x244220034800ffff,0x1082a02348000000,0x20a2a0035800c000\n"
".quad 0x1042202348000000,0x08a322035800c000,0x108120036000c000,0x00c2a08548000000\n"
".quad 0x0842e203c1000000,0x00b120856000c000,0x00b2a085c1000000,0x00c22085c9000000\n"
".quad 0x10812003c1000000,0x00c1208548000000,0x04001c03c9000000,0x2001dc036000c000\n"
".quad 0xa00001e7198e4000,0xfc1fdc034003fffc,0xffffdc04207e0000,0x80025de450ee0000\n"
".quad 0x78501c2328004000,0x00609c855800c000,0x10511c03c1000000,0x78321c232013c000\n"
".quad 0x90015c435800c000,0x10329c0348004000,0x00701c852013c000,0x00409c85c1000000\n"
".quad 0x9082dc4394000000,0x00a01c8548004000,0x00001de794000000,0x00005de480000000\n"
".quad 0x20009de428004404,0x9400dc0428004000,0x03f1dc232c000000,0x04201c03190e4001\n"
".quad 0x0030dc236000c000,0xa0025de47000c060,0x00011c2328004000,0x10311ca37000c060\n"
".quad 0x8400dc0450000000,0x00411c042c000000,0x20335c0320004001,0x0421dc2348004000\n"
".quad 0x10315c03188ec000,0x10d39c2348000000,0x1051dce35800c000,0x10519ca35000c000\n"
".quad 0x20511c032013c000,0xb071dc4348004000,0x10421ce348004000,0x10441ca35000c000\n"
".quad 0x0062dc852013c000,0x04025de284000000,0xb0845c4318000000,0x10321c2348004000\n"
".quad 0x34e1dc035800c000,0x01029c8548000000,0x0c831c0384000000,0x0871de0348000000\n"
".quad 0x04021de26000c000,0x08c19e0318000000,0x0062dc856000c000,0x00729c85c9000000\n"
".quad 0x600001e7c9000000,0x20009de440000003,0x081fdc0328004000,0xffffdc04207e0000\n"
".quad 0x0831dc0350ee0000,0x200081e71b0e0000,0x0082602340000002,0x0032a0237000c060\n"
".quad 0x049262037000c060,0x009260236000c000,0x289260a37000c060,0xfc92600320100000\n"
".quad 0x2092a0034800ffff,0x1093202348000000,0x10a2e0235800c000,0x24c260035800c000\n"
".quad 0x28b2a00348000000,0x0892620348000000,0x08a2e2036000c000,0x009260856000c000\n"
".quad 0x00b2a085c1000000,0x24a2a003c1000000,0x00b2a08548000000,0x04209c23c9000000\n"
".quad 0x04825c035800c000,0xfc21dc236000c000,0x24021de41a0e0000,0xc00001e728000000\n"
".quad 0xfc31dc234003fffc,0xa00081e71a8e0000,0xfc00200340000000,0x1000a0234800ffff\n"
".quad 0x002020035800c000,0x0800220348000000,0x000fe0856000c000,0x23f1dc23c9000000\n"
".quad 0x04001de2190e4000,0x600001e718000000,0x04925c0340000003,0xfc1fdc035800c000\n"
".quad 0xffffdc04207e0000,0x0031dc0350ee0000,0x600081e71b0e0000,0x0090a02340000002\n"
".quad 0x003220237000c060,0x0420a2037000c060,0x0020a0236000c000,0x2020a0a37000c060\n"
".quad 0xfc20a00320120000,0x242220034800ffff,0x1082a02348000000,0x20a2a0035800c000\n"
".quad 0x1022202348000000,0x08a322035800c000,0x0880a0036000c000,0x00c2a08548000000\n"
".quad 0x0822e203c1000000,0x00b0a0856000c000,0x00b2a085c1000000,0x00c22085c9000000\n"
".quad 0x0880a003c1000000,0x00c0a08548000000,0x04001c03c9000000,0x2001dc036000c000\n"
".quad 0xa00001e7198e4000,0xfc1fdc034003fffc,0xffffdc04207e0000,0x80025de450ee0000\n"
".quad 0x78501c2328004000,0x78421c235800c000,0x10509c035800c000,0x00615c852013c000\n"
".quad 0x9000dc43c1000000,0x10429c0348004000,0x00701c852013c000,0x00215c85c1000000\n"
".quad 0x9082dc4394000000,0x00a01c8548004000,0x00001de794000000,0x00005de480000000\n"
".quad 0x84001c0428004404,0x94009c042c000000,0xfc01dc232c000000,0xe00081e71a8e0000\n"
".quad 0xd020e00340000000,0xa00121e448004000,0x1031200328004000,0x1030e0432009c000\n"
".quad 0xb03160435000c000,0x0040e08548004000,0x03f0e08584000000,0x2000dde4c9000000\n"
".quad 0x00209c2328004000,0xfc1fdc037000c060,0x0430dc03207e0000,0x0030dc236000c000\n"
".quad 0xe0209ca37000c060,0x00211c0320068000,0xffffdc0448000000,0x80021de450ee0000\n"
".quad 0x1040dc4328004000,0x03f1dc855000c000,0x10409c03c1000000,0x20415c032011c000\n"
".quad 0x20001c0348004000,0x9030dc4348004000,0x10511c0348004000,0x10515c432011c000\n"
".quad 0x00219c855000c000,0xc001dc0384000000,0x90515c43188e4000,0xfff01c0448004000\n"
".quad 0x1c001c032010ffff,0x1c619c0368000000,0x00219c8548000000,0x00419c8594000000\n"
".quad 0x18001c0384000000,0x00401c8548000000,0x00001de794000000,0x00005de480000000\n"
".quad 0x94001c0428004404,0x84009c042c000000,0x10039de22c000000,0x04021de218000000\n"
".quad 0x20011ca318000000,0xc000000720044000,0x10401c4360000009,0xa0409c035000c000\n"
".quad 0x0042dca3201d8000,0xb000dc4350004001,0xc0419c0348004000,0x00229c85201d8000\n"
".quad 0xd001dc4384000000,0x10b01c4348004000,0x80b31c035000c000,0x00625c85201d8000\n"
".quad 0x90035c4384000000,0x00c15c8548004000,0x00a1dc0384000000,0x14931c03188ec001\n"
".quad 0x7c935c035800c000,0xe0c09c036800c000,0x10c01c43201d8000,0x34519c035000c000\n"
".quad 0x80d39e0358000000,0xf000dc434800c000,0x14a01c0348004000,0x3853dc035800c000\n"
".quad 0x00219cc560000000,0x000001f414000000,0x0801dc0340000000,0x04009de21a0ec000\n"
".quad 0x04021de218000000,0x04c41c0318000000,0x00445ca34800c000,0x600021e720044001\n"
".quad 0x10049de240000004,0x0000000718000000,0x11109c4360000004,0x81119c035000c000\n"
".quad 0x1100dc4320258000,0x05111c035000c000,0x9021dc434800c000,0xe1009c0348004000\n"
".quad 0x10415c4320258000,0x0064dc855000c000,0xf030dc4384000000,0x80411c0348004000\n"
".quad 0x08821c0320258000,0x09145c034800c000,0x90515c434800c000,0x0081dc0348004000\n"
".quad 0x35319c03188e0000,0x3934dc0358000000,0x3c63dc4360000000,0x05019c0368000000\n"
".quad 0x09041c034800c000,0x0023dc854800c000,0x00411c8594000000,0x1061dc4384000000\n"
".quad 0xe0619c035000c000,0x0480dc0320258000,0xf071dc434800c000,0x0031dc0348004000\n"
".quad 0x34409c0318800000,0x3843dc0358000000,0x4c209c4360000000,0x00609c8568000000\n"
".quad 0x200001e794000000,0x0081dc134003fffc,0x000021f4188e0000,0x10011de240000000\n"
".quad 0x11101c4318000000,0x11015c435000c000,0x81109c035000c000,0x04821c0320098000\n"
".quad 0x9000dc434800c000,0xe1011c0348004000,0x00201c8520098000,0xf0515c4384000000\n"
".quad 0x34009c0348004000,0x3c209c4358000000,0x00409c8568000000,0x3803dc1394000000\n"
".quad 0x28901c4360000000,0x7c001c0368000000,0xfc01dc236800c000,0xc00081e7190e0000\n"
".quad 0x3080200340000000,0xe000a1e448000000,0x1000a00328004000,0x100020432005c000\n"
".quad 0xf000e0435000c000,0x0023e0c548004000,0x7ca01c0314000000,0xfc01dc236800c000\n"
".quad 0x400081e7190e0000,0x2c80200340000002,0x100261e248000000,0x3080e00318000000\n"
".quad 0x1000a04348000000,0x8001a0035000c000,0x1031204320138000,0x043160035000c000\n"
".quad 0x9021e0434800c000,0xe030a00348004000,0x0060208520138000,0xf040e04384000000\n"
".quad 0x1051204348004000,0xe051a0035000c000,0xf041e04320138000,0x3401200348004000\n"
".quad 0x3800200358000000,0x002120c560000000,0x006020c514000000,0x00001de714000000\n"
".quad 0x00005de480000000,0x20001de428004404,0x94009c0428004000,0x03f1dc232c000000\n"
".quad 0x0400dc03190e4001,0x00201c236000c000,0xa0011de47000c060,0x0030dc2328004000\n"
".quad 0xfc025de47000c060,0x0c00dca328000000,0x84001c0450000000,0x0030dc042c000000\n"
".quad 0x10015c2320004001,0x0c00dc035800c000,0x00515c0348000000,0x10329ca348000000\n"
".quad 0x10311ce32009c000,0x08519e035000c000,0x20315c036000c000,0xb042dc4348004000\n"
".quad 0x20011c0348004000,0x00a21c8548004000,0xe041dc2384000000,0x1041dc231b0e4000\n"
".quad 0x00621c855800c000,0xa00081e7c9000000,0xa00261e440000000,0x105220e328004000\n"
".quad 0x1052a0a35000c000,0xb082e0432013c000,0x00a2608548004000,0x1071dc0384000000\n"
".quad 0x20021de448000000,0x04029de228004000,0x0871de0318000000,0x0481dc236000c000\n"
".quad 0x04021de2188ec000,0x00725c8518000000,0x600001e7c9000000,0x20025de440000003\n"
".quad 0x141fdc0328004000,0xffffdc0420120000,0x2401dc0350ee0000,0x200081e71b0e0000\n"
".quad 0x0082a02340000002,0x0002e0237000c060,0x04a2a2037000c060,0x00a2a0236000c000\n"
".quad 0x2ca2a0a37000c060,0xfca2a00320100000,0x20a2e0034800ffff,0x10a3602348000000\n"
".quad 0x10b320235800c000,0x28d2a0035800c000,0x2cc2e00348000000,0x08a2a20348000000\n"
".quad 0x08b322036000c000,0x00a2a0856000c000,0x00c2e085c1000000,0x28b2e003c1000000\n"
".quad 0x00c2e08548000000,0x04925c23c9000000,0x04829c035800c000,0xfc91dc236000c000\n"
".quad 0x28021de41a0e0000,0xc00001e728000000,0xf3f1dc234003fffc,0xfc03dc23190e4000\n"
".quad 0xf0209c041a8e0000,0x800085e720004000,0x200225e440000001,0xc00325e428004000\n"
".quad 0xfc82242328004000,0x108264234000ffff,0x209224035800c000,0x102264e348000000\n"
".quad 0x0882e6035000c000,0x102224a36000c000,0x00b0a4852019c000,0xd0926443c1000000\n"
".quad 0x00bfe48548004000,0x0080a485c9000000,0x23f1dc2394000000,0x04009de2190e4000\n"
".quad 0x600001e718000000,0x04a29c0340000003,0x141fdc035800c000,0xffffdc04207e0000\n"
".quad 0x0801dc0350ee0000,0x600081e71b0e0000,0x00a2202340000002,0x000260237000c060\n"
".quad 0x048222037000c060,0x008220236000c000,0x248220a37000c060,0xfc82200320140000\n"
".quad 0x288260034800ffff,0x1092e02348000000,0x24b2e0035800c000,0x1082602348000000\n"
".quad 0x08b362035800c000,0x209220036000c000,0x00d2e08548000000,0x08832203c1000000\n"
".quad 0x00c220856000c000,0x00c2e085c1000000,0x00d26085c9000000,0x20922003c1000000\n"
".quad 0x00d2208548000000,0x04209c03c9000000,0x2021dc036000c000,0xa00001e7198e4000\n"
".quad 0xe041dc234003fffc,0x141fdc03188e4000,0x07ffdc04207e0000,0xffffdc043000c000\n"
".quad 0x80011de450ee0000,0x78309c2328004000,0x00601c855800c000,0x10321c03c1000000\n"
".quad 0x800101e42009c000,0x1050c0e328004000,0x90225c435000c000,0x105100a348004000\n"
".quad 0x007080852009c000,0x00801c85c1000000,0x9031404394000000,0x0040808548004000\n"
".quad 0x00001de794000000,0x00005de480000000,0x20009de428004404,0x94001c0428004000\n"
".quad 0x03f1dc232c000000,0x04209c03190e4001,0x00001c236000c000,0xa000dde47000c060\n"
".quad 0x00209c2328004000,0xfc021de47000c060,0x08009ca328000000,0x84001c0450000000\n"
".quad 0x00209c042c000000,0x10011c2320004001,0x08009c035800c000,0x00411c0348000000\n"
".quad 0x10229ca348000000,0x1020dce32007c000,0x08415e035000c000,0x20211c036000c000\n"
".quad 0xb032dc4348004000,0x2000dc0348004000,0x00a1dc8548004000,0xe031dc2384000000\n"
".quad 0x10319c231b0e4000,0x0051dc855800c000,0xa00081e7c9000000,0xa00221e440000000\n"
".quad 0x1041e0e328004000,0x104220a35000c000,0xb07260432011c000,0x0082208548004000\n"
".quad 0x0c619c0384000000,0x2001dde448000000,0x04025de228004000,0x08619e0318000000\n"
".quad 0x0471dc236000c000,0x0401dde2188ec000,0x00621c8518000000,0x600001e7c9000000\n"
".quad 0x20021de440000003,0x101fdc0328004000,0xffffdc0420100000,0x2001dc0350ee0000\n"
".quad 0x200081e71b0e0000,0x0072602340000002,0x0002a0237000c060,0x049262037000c060\n"
".quad 0x009260236000c000,0x289260a37000c060,0xfc926003200e0000,0x1c92a0034800ffff\n"
".quad 0x1093202348000000,0x10a2e0235800c000,0x24c260035800c000,0x28b2a00348000000\n"
".quad 0x0892620348000000,0x08a2e2036000c000,0x009260856000c000,0x00b2a085c1000000\n"
".quad 0x24a2a003c1000000,0x00b2a08548000000,0x04821c23c9000000,0x04725c035800c000\n"
".quad 0xfc81dc236000c000,0x2401dde41a0e0000,0xc00001e728000000,0xfc01dc234003fffc\n"
".quad 0xc00081e71a8e0000,0x2001e1e440000000,0xfc71e02328004000,0x107220234000ffff\n"
".quad 0x1c81e0035800c000,0x0871e20348000000,0x007fe0856000c000,0x23f1dc23c9000000\n"
".quad 0x0401dde2190e4000,0x600001e718000000,0x04925c0340000003,0x101fdc035800c000\n"
".quad 0xffffdc04207e0000,0x1c01dc0350ee0000,0x600081e71b0e0000,0x0092202340000002\n"
".quad 0x0002a0237000c060,0x048222037000c060,0x008220236000c000,0x288220a37000c060\n"
".quad 0xfc82200320120000,0x2482a0034800ffff,0x10a2e02348000000,0x28b2e0035800c000\n"
".quad 0x1082a02348000000,0x08b362035800c000,0x20a220036000c000,0x00d2e08548000000\n"
".quad 0x08832203c1000000,0x00c220856000c000,0x00c2e085c1000000,0x00d2a085c9000000\n"
".quad 0x20a22003c1000000,0x00d2208548000000,0x0471dc03c9000000,0x2071dc036000c000\n"
".quad 0xa00001e7198e4000,0xe031dc234003fffc,0x101fdc03188e4000,0x07ffdc04207e0000\n"
".quad 0xffffdc043000c000,0x8000dde450ee0000,0x7821dc2328004000,0x00501c855800c000\n"
".quad 0x10221c03c1000000,0x800081e42007c000,0x1040c0e328004000,0x90725c435000c000\n"
".quad 0x104100a348004000,0x006080852005c000,0x00801c85c1000000,0x9031404394000000\n"
".quad 0x0040808548004000,0x00001de794000000,0x0000000080000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000300000001,0x0000000000000000,0x0000000000000000,0x0000000000000040\n"
".quad 0x000000000000059d,0x0000000000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000030000000b,0x0000000000000000,0x0000000000000000,0x00000000000005dd\n"
".quad 0x0000000000000a53,0x0000000000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000200000013,0x0000000000000000,0x0000000000000000,0x0000000000001030\n"
".quad 0x0000000000000360,0x0000002200000002,0x0000000000000008,0x0000000000000018\n"
".quad 0x70000000000004eb,0x0000000000000000,0x0000000000000000,0x0000000000001390\n"
".quad 0x000000000000007c,0x0000001b00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x7000000000000077,0x0000000000000000,0x0000000000000000,0x000000000000140c\n"
".quad 0x00000000000000c0,0x0000000000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x7000000000000037,0x0000000000000000,0x0000000000000000,0x00000000000014cc\n"
".quad 0x000000000000006c,0x0000001c00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x70000000000001f7,0x0000000000000000,0x0000000000000000,0x0000000000001538\n"
".quad 0x000000000000007c,0x0000001e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x70000000000000cb,0x0000000000000000,0x0000000000000000,0x00000000000015b4\n"
".quad 0x000000000000007c,0x0000001f00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x7000000000000340,0x0000000000000000,0x0000000000000000,0x0000000000001630\n"
".quad 0x000000000000006c,0x0000001d00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x700000000000016c,0x0000000000000000,0x0000000000000000,0x000000000000169c\n"
".quad 0x000000000000004c,0x0000001800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x70000000000003cf,0x0000000000000000,0x0000000000000000,0x00000000000016e8\n"
".quad 0x000000000000009c,0x0000001900000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x70000000000002a3,0x0000000000000000,0x0000000000000000,0x0000000000001784\n"
".quad 0x000000000000007c,0x0000001a00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000090000058a,0x0000000000000000,0x0000000000000000,0x0000000000001800\n"
".quad 0x0000000000000050,0x0000000e00000003,0x0000000000000008,0x0000000000000010\n"
".quad 0x000000010000057b,0x0000000000000002,0x0000000000000000,0x0000000000001850\n"
".quad 0x0000000000000028,0x0000000000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000485,0x0000000000000002,0x0000000000000000,0x0000000000001878\n"
".quad 0x0000000000000060,0x0000001900000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000541,0x0000000000000002,0x0000000000000000,0x00000000000018d8\n"
".quad 0x0000000000000044,0x0000001b00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000121,0x0000000000000002,0x0000000000000000,0x000000000000191c\n"
".quad 0x0000000000000044,0x0000001f00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000378,0x0000000000000002,0x0000000000000000,0x0000000000001960\n"
".quad 0x0000000000000044,0x0000001d00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000024d,0x0000000000000002,0x0000000000000000,0x00000000000019a4\n"
".quad 0x0000000000000044,0x0000001e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000001ac,0x0000000000000002,0x0000000000000000,0x00000000000019e8\n"
".quad 0x0000000000000038,0x0000001800000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000445,0x0000000000000002,0x0000000000000000,0x0000000000001a20\n"
".quad 0x0000000000000004,0x0000001900000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000002f9,0x0000000000000002,0x0000000000000000,0x0000000000001a24\n"
".quad 0x0000000000000044,0x0000001a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000080,0x0000000000000002,0x0000000000000000,0x0000000000001a68\n"
".quad 0x000000000000003c,0x0000001c00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000150,0x0000000000100006,0x0000000000000000,0x0000000000001aa4\n"
".quad 0x0000000000000140,0x0800002300000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000398,0x0000000000100006,0x0000000000000000,0x0000000000001be4\n"
".quad 0x00000000000006d0,0x1200001400000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000027c,0x0000000000100006,0x0000000000000000,0x00000000000022b4\n"
".quad 0x00000000000003c8,0x1200000e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000004c4,0x0000000000100006,0x0000000000000000,0x000000000000267c\n"
".quad 0x0000000000000380,0x1200001900000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000001b,0x0000000000100006,0x0000000000000000,0x00000000000029fc\n"
".quad 0x0000000000000140,0x0900000100000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000328,0x0000000000000006,0x0000000000000000,0x0000000000002b3c\n"
".quad 0x00000000000003a8,0x1400001100000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000001d0,0x0000000000100006,0x0000000000000000,0x0000000000002ee4\n"
".quad 0x0000000000000408,0x0e00000b00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000000a4,0x0000000000100006,0x0000000000000000,0x00000000000032ec\n"
".quad 0x00000000000003c8,0x0e00000500000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000800000221,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000000,0x0000001e00000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x00000008000000f5,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000000,0x0000001f00000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x000000080000035b,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000000,0x0000001d00000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x000000080000018b,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000400,0x0000001800000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x0000000800000409,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000010,0x0000001900000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x00000008000002cd,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000000,0x0000001a00000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x0000000800000056,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000010,0x0000001c00000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x0000000800000515,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000000,0x0000001b00000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x0000000800000570,0x0000000000000003,0x0000000000000000,0x00000000000036c0\n"
".quad 0x0000000000000070,0x0000000000000000,0x0000000000000008,0x0000000000000000\n"
".quad 0x0000000500000006,0x0000000000004100,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000000a8,0x00000000000000a8,0x0000000000000008,0x0000000500000001\n"
".quad 0x0000000000001850,0x0000000000000000,0x0000000000000000,0x0000000000001e64\n"
".quad 0x0000000000001e64,0x0000000000000008,0x0000000600000001,0x00000000000036c0\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000400\n"
".quad 0x0000000000000008,0x0000005801010001,0x0000000000001b40,0x0000004000000000\n"
".quad 0x0000001400030001,0x0000000f00000048,0x0000000000001015,0x0000000000000000\n"
".quad 0x0000000000008242,0x0000000000000000,0x7365745f6e69616d,0x0075632e75635f74\n"
".quad 0x37236f6d5dbd9c78,0x0102dd0aff1cfe92,0x071ddef9b91a3176,0x18b05c10f900dd87\n"
".quad 0x6d90408370fb8b20,0x767924fb2d894679,0xc91564dbeffb8772,0x4ec12e4cedab5be2\n"
".quad 0xaab22c59362cd566,0x567fd85c5f643e1e,0x10bf71eee387b69f,0xb61f0e6d3ab1762b\n"
".quad 0xd58bbbcd61f1c5a7,0xc7d71e3db0f6f6e6,0xef858e5a176cffdd,0x974fe2d8afdbf776\n"
".quad 0xa777cfbffb2787a7,0x5fed458f4c75d775,0xb766c3f5876f3fdc,0x79e6fad3c7b69f5f\n"
".quad 0xa13fbb5624f4f375,0x2f6c3e3e3fa51f34,0xbb7e6f5d4af92faf,0xb7c7771edc7d387c\n"
".quad 0xa7cb9bfb6fe3fbcf,0xf2f1d39bdb2fe3c3,0x9f6fb7b69e3e7874,0xfdfbb7c7d3dd87b6\n"
".quad 0xdbc787b7e7a787e5,0xddbe79bcb9b77edd,0xecd87bbbbe7c7e5c,0xb3cdd5a78eee3f2f\n"
".quad 0x5c3c7cf1df18877f,0xb7c95dee6cde3fde,0xb87a7d3fee5dd56a,0xe7fb9bfb77add9bc\n"
".quad 0xe5eb2f2fa3eaeddb,0xd6c60fa8e5e0b12f,0xf77d66eec3e3d39b,0x79463b1a8d39bfbc\n"
".quad 0xfacdfdd3e9f447f5,0x1f1f5fbdbf61edd7,0xe23fea2e933fb4b4,0x026b47fecd9bc795\n"
".quad 0xc9dbe1bf361c3b7f,0xcdcda7d2f11fcd4b,0x667f577923aaf8af,0x18b1b58fa7361e4c\n"
".quad 0x52e6f379bb97ce50,0x7d0b18158de5e4ae,0x9b562fdcdebc7fb8,0xaeac5fa2fd87ddfb\n"
".quad 0x7f9ff1febffac5fb,0xe6f3f9f37d7add67,0x7efdfe333189f77a,0x68eda7b7e9feda33\n"
".quad 0xbe7fefbfdf8f7730,0x2f771fbfc7ce299a,0xeddbc7f7f0fd41ac,0xfec3fe310aa7c17b\n"
".quad 0xff70a33f736aea34,0x77f38dcb177376e3,0x9b8fc7562f0ad9fb,0x7c7127484bd6f6c3\n"
".quad 0x6edf59974d0b6f78,0x5ddc7769f7281b4e,0xf874feedab176fdf,0xe23e1a76e3217c6d\n"
".quad 0x3f97eeff78fbbe58,0x62c3cd87369eac5f,0x5815dac8bd65acf5,0xfca2fcd945d9cb77\n"
".quad 0x6c3ab17bff172fe2,0x3f5f37b64f562c3f,0x0a397f0afdfe2b7d,0x97f1332df0faf8be\n"
".quad 0x6ef2dfb70fafbeb1,0x61c60eaaabe2e9fc,0x69fd72eced718d1e,0xf92d6c74392b5873\n"
".quad 0x78c68cdf5fb8ff7a,0xe3acf7a787be971a,0x5aeb9a16feea6ad2,0xaa93f78b97aed63b\n"
".quad 0x5586467519728518,0x9f37136b1919cc64,0x4bc84d11e9d59b4e,0xb1eee63d6f93a5b2\n"
".quad 0xb217c1612a36951e,0x67ab4fc7878bb05b,0x3eaeddda7d2b50a7,0x15856e0f842b793b\n"
".quad 0x7fabf7cf0f175764,0x2097ef7f1815c6ee,0x9cb0cd781aa0af26,0xd1f901d18babebad\n"
".quad 0x86915f35b6944b93,0x035e8f46d2ef8a8d,0xb67f856f7895d886,0x39bd762c6c6fa472\n"
".quad 0x67d245c546faecac,0xdb6afe3a763d83db,0x51db9bcfe0da7370,0x42b94a25e98e8d16\n"
".quad 0xb3b32a9962be2956,0x404a85cd464ac735,0xde51abca29ab9d9d,0x3285bb9606d47dea\n"
".quad 0x7d5a7a7b71d5ec6c,0xe9e19c609eaa82d8,0xe2d3f8ebf8babaad,0xe6b75df77c59b0fa\n"
".quad 0xd5426fb2ffdae9a3,0x60119355f33552ba,0xbd34ce6327f02160,0x5defe9b1b7eef509\n"
".quad 0xd757ef1f8f06d1c1,0x46b4f31f67630828,0x0638edec4995064d,0x1fb35d61750bd0bd\n"
".quad 0x3d16f8e3ba852b49,0xeae1bb19b0d12a0e,0x9a35698a7f014326,0xd3f6235427f78d44\n"
".quad 0xe46a8646a0f23510,0xa6b2949babaa8d41,0xd436f8e4588a6a36,0xd4b6e74ce514cc94\n"
".quad 0xc27aabecfe086a13,0x19c1a7a8527a2091,0x0e2fc17c505a8b3f,0x80cf59ffc5d5d3db\n"
".quad 0x6feed93636d73d0b,0x797eef288792d746,0x853fd6c4fcbf1ff7,0x7b96e932f01f737f\n"
".quad 0x2d5578e7852d5578,0xf22d48be22d48bfc,0x8bfa2d48bea2d48b,0x67c2f19b2e2a62d4\n"
".quad 0xdb4e1a236d385e0b,0xb743e1b449e1795a,0xe2318ebf24f10316,0xfd36dd9d7ec3a6e7\n"
".quad 0xfaff5d52b80cebf2,0x74eafaf93aa578ea,0x93e334259d797033,0xceab33e154400921\n"
".quad 0xb863dfc71bc4cb98,0xd1412a30ae68b892,0xb0978f9d4b866f03,0x780e4164f6db9a3d\n"
".quad 0x1d6257d29ca2ee4a,0x492ce2688684b399,0x2cad21f1c35d647c,0x5b98700cabac4fb8\n"
".quad 0xc9c0fa46766eb9e3,0x92d4058977784677,0xfab06c07835aeaba,0xcd76322e3782dab9\n"
".quad 0x2f125c3a246be218,0xade08c065570d53a,0xd04c3434ca6508ed,0xbfcb6d61dc7cd365\n"
".quad 0x130dbbf8f1dcd558,0x3ad529d25e0f1f8e,0xae7671b5f48b195c,0x7064bbc6db4f16d9\n"
".quad 0x9cb7fbf1574d82a2,0x4a543a9a47795341,0xd7c38cc1be0be50a,0x0d7576fecd89e36b\n"
".quad 0xb354ae696c6e9ce5,0xa497b4e992f63d97,0x7793d5d05b5da71e,0x0beeb285b341bb9f\n"
".quad 0xec3b253ba7ce7dda,0xee918d25d53bc894,0x6090890c6bb4b66d,0x0d155762da353ace\n"
".quad 0x1043c7fab189c57b,0x219f4cabcbd35084,0x4b4c201a1972946e,0xa53e96fb42a152a1\n"
".quad 0xb361ba7d2d549f7b,0x19cd3e89f67d3285,0x6e9f467f6bec1a7d,0x40a9309f42e96d70\n"
".quad 0xeb31f853e8a8723b,0x745e5094580a7d13,0x6c806829182a7d2d,0x12ca6b0d3f714b69\n"
".quad 0x9f189159162aa9ee,0xc67109570a7c6338,0x09654a255b1b94f8,0x4b2a567dbae81e30\n"
".quad 0xb6f1525acaa477f9,0xcbd42859ebe32ded,0x6ef64ef0decb4a6a,0xc0deab1bed6a8dbd\n"
".quad 0xfa8ce6e7dc65f312,0x273642659ac7664c,0x274b5210b437feda,0x1e0b2b5b257925dd\n"
".quad 0xe7e41b55b06b9ca1,0x1344c977c9c87a1d,0x8c2525425a751cce,0x58d8990b2d09012f\n"
".quad 0xa03e7f7c20943792,0x8a4953b1c78e4169,0x68461251eb32d6c7,0x392a68d37d7084d0\n"
".quad 0xc35690bac8bd022e,0x5a35740d51a63549,0xd66175a2bdbda0f7,0x8c87b3d38b162ba8\n"
".quad 0x24b2a25b7048ca32,0x0950b3cbb2d99848,0xf6bfda52387d2c66,0xfcd1c54ce300ad69\n"
".quad 0x7113291ece38b687,0x16aad04d705a0678,0x42ad0612ba97f880,0x579d44ab13e8ab46\n"
".quad 0xf10c3ff62798be4d,0x82e6c882e716fd81,0xb39785524de39608,0x207b6897905ed82e\n"
".quad 0x4462077689b4832d,0x0db815b7db4e0309,0xa51306e0221e927c,0x8151c46a4039925b\n"
".quad 0x9acd152a30aa4ad8,0x9ce90ce761d359a8,0x51f2c4e13fbb9df6,0x938c73a1539d7736\n"
".quad 0x0baa2312192eb1de,0xe088408471317585,0xbae932d28ac84e3c,0x4818b17111ad410a\n"
".quad 0xf5d60bb75ecf53e3,0x68a8b143758535f5,0x9ff63affae0ca8b2,0xb4972303d64ffde5\n"
".quad 0x2bcb4add0750690d,0x8cd8e279e5e65e5a,0xad9d2b2f0d91986b,0xbec854b05124229b\n"
".quad 0xf3f3aa21860d6f39,0x6bf6702da440b436,0x3208a60ac411415a,0x18f416d5c7c03a21\n"
".quad 0x6fb15a505bee28a4,0x6095946d2795d2dd,0xa77a9cd1857917a1,0xc9c55f54cf0c1ef4\n"
".quad 0xe18cc9631cda14ab,0xbd6dca8e208d5d3d,0x65c6771492ccb132,0x3217d14dfe0d7182\n"
".quad 0xf48e6486cb861a66,0x30e5af0cbe2d2c86,0x1ac50f60c581e7cc,0x3ed8d71bd0a987d7\n"
".quad 0x31a445e15fe204ce,0xab4a7a9b8301bdd0,0x495185b9aca91dc0,0xaf9e2b054667eb9f\n"
".quad 0x471ba5592471ba45,0x621ea47790384305,0x6cd27d2d2d8dce80,0x8b136bf064bdca70\n"
".quad 0x4d920dbc95718b3e,0xe25922121b236f06,0x6e94820e301739b9,0xfe507773275c6cad\n"
".quad 0x20c171879f5922dd,0x38d7cf414e1337a1,0x833d2dc1abb38394,0xc49f6105ef6ef56d\n"
".quad 0x1067913c132c11a4,0x06502bfa1c41bb6d,0xa36d87e074a4208e,0xd0201f3e3824e05c\n"
".quad 0x5ae2066aadd49a50,0xb09bca08199b5560,0x32c657771a8790ea,0x3b175dc5b457ab56\n"
".quad 0x819d73bcd30e4d06,0x96483f9022e58d96,0xc3708501ecd8786d,0x8a866477e4007743\n"
".quad 0x1afa243e8c42e730,0x320ba8dce710dce7,0x7d069c707193ac02,0x93a7ffc106d592b5\n"
".quad 0xd6071cdc2c4038c9,0xb274ef5ba9d34cc1,0xea3d60a6891bc1d4,0x65841de7f1237874\n"
".quad 0xee8e91a2ae5d8cb6,0x482f2396395f1978,0x9f37071cd0060c33,0x0d0a30ace5c604db\n"
".quad 0xca8ec0a355e6ac41,0xc0a268384e00518a,0x9b19db7d0b0057d0,0xc522c3490f7e1667\n"
".quad 0x6964405c74405858,0xb89312c7686db81f,0x920e240d6f481a2e,0x636034a920c8290d\n"
".quad 0x0553d0c326321a00,0x2051a5b7996d5f43,0x482d9003d19227a6,0x47e0de8d9166f21a\n"
".quad 0x42408be50f46578f,0xfc43d18bcf030c43,0xfb67a3a71e8cafb9,0x330aa60ada375d49\n"
".quad 0x1e39ddc3d1fb8f47,0x6d6374a7a38faf46,0xcff2877331cd7d56,0x011687d8df7e3af6\n"
".quad 0x9f04c469815576ca,0x88460d89eebfc0db,0xca2d10694e48fb59,0xac302b08f3034a53\n"
".quad 0xec8918f3c798ec8c,0x5a87d0ea386d3732,0x93b36d5dd43a8bbc,0xe1e1e3ddddfbcf75\n"
".quad 0xbd69f97eefb7b76f,0xc9a4594b560aeddb,0x6b63937ba516696a,0xa2fcc545f9f28aa7\n"
".quad 0x1bb6c5f786570e72,0x04a4da5376db2f63,0xec01374d9541b18e,0x3a13577b9b6ab695\n"
".quad 0x4bc2233bc300644e,0x8ce6229444467d11,0x1c54d311c5433c88,0x2e2df6415cc69f3f\n"
".quad 0x610d6c252431284e,0x4619d00d25a92c57,0xf74d21d7c79c29fd,0x92ba12ac3ce09355\n"
".quad 0x632eeeb644a12dc2,0x2e8509837db954af,0x9bad41068699b6d3,0xf71dcb6381003cfc\n"
".quad 0x91077e2846c52a22,0x3e6e5716784be02e,0x2125c6fb1ee171c8,0xc8efa55e3cb208f7\n"
".quad 0x177072ae254406b1,0x03ede15b5169129f,0x76a976860d55095d,0xe7aed4b425873131\n"
".quad 0xf7535756573ff481,0x1dbc1dde27255518,0x08d321945b537ff8,0x920743294bb6621b\n"
".quad 0x0cbe5cb34b1e4f19,0xc1c27fbdb55e6c05,0x4b6975ed1d432ee2,0x966a3830dc01e0d1\n"
".quad 0x2c5a5922f08b9e68,0x75b9df9ebec51204,0xa96e8950dd950e7f,0x6a96d8291b02f44b\n"
".quad 0xd3141b55b0bac94e,0xdd4b6b9719945cd7,0xd78ffdf66bc7e1fd,0xaef54d827fdff7dd\n"
".quad 0x2cd71cb74ba6ade6,0x6770aa4b335f82a9,0xbe4a4b36cf0aa4b3,0x1bee5d2938d54a4a\n"
".quad 0xa5a5a96146f85107,0x8c9a206f3077036f,0xc5f3d7115223798f,0x22b2e2f9c98fde2b\n"
".quad 0x3f5504f3abbe82fe,0x7577eb2af6e97831,0x2a6b2f4171606b2f,0xdfa2e21fd16b63dd\n"
".quad 0xa5738cc6b6d5d567,0x0b1d3c0d900ac174,0xabd4a7b8517a6a86,0xa1b81b8b0ace69f7\n"
".quad 0x07592c6374fa2ae8,0x916750242d3ea163,0x70ac31c7e6e3a91c,0xa46b3b710e316dee\n"
".quad 0x9361522fa76b2284,0x455a7d3f79a68b62,0x3ac5672bb213a658,0x2d655dd6ac342b8d\n"
".quad 0xce966846a2cbd896,0xe9f118e3808eca09,0x8f15b2743fd2f366,0xc059f85563382880\n"
".quad 0x1554b2759bad1fb2,0x4b1de95ad2bc9580,0xb024c09ffb457fd6,0x63902552a907e02b\n"
".quad 0xc36e8d69e92be04b,0x7c68884780409926,0xc5f0f46d767a0e98,0x1589d92c0ebf75a4\n"
".quad 0xf69a35b290996f6e,0xd391f17b46367d85,0xe1aafe4dab3d1f51,0x8926db74ae5c7315\n"
".quad 0x64c13b709e7ec812,0x021aad4ec5974a9a,0x8f2660c1ae8021e8,0x13a74c7e9d2af141\n"
".quad 0x03274225417df619,0xae2b7ac0431e740b,0x62843681e840f153,0x909058236187327d\n"
".quad 0xe9121f15d4067e1d,0xa833f041682e9521,0xcc2877c769461f11,0x1d890f6672daa210\n"
".quad 0x2725956d6180d29a,0xce20b2a5d9cc212b,0x9e96282559c6f460,0x21806c1da1243799\n"
".quad 0xcf0b039f0cd7483f,0xe7b137e536ce4762,0xe51f539d0d022729,0x757ed1f5ca218966\n"
".quad 0x9d36f60913f07d22,0x58221dc988e7c9db,0xc22d57b8166dd902,0x0d359a58dce8f55e\n"
".quad 0xa13e53c3a9949f9d,0x4f69b698711e1d49,0x38d4ff22e85eb62a,0xf04dc4549f64bae9\n"
".quad 0x800c32c8fdbb77d2,0xdba912fa25d541dd,0x522389d2c5448d83,0x9f8236ca211d869b\n"
".quad 0x54b034a30f839d81,0x971aa9151784cb73,0xe4911ca7b9366589,0x802de2956d81af73\n"
".quad 0x3cae26975c2562ad,0x219c6e3501564e49,0x82ba4bf5499764ab,0x2a80a001ce509802\n"
".quad 0x49502e039c4c073f,0xdc6bc6a63a6fc86d,0xf6e6fb014dad9218,0x3b47b9dd2fa93d2f\n"
".quad 0x92200e1a1fa00d4d,0xb362c924f003829b,0xcecd00b8977d7c72,0xa191ad8021d800ba\n"
".quad 0x02e6785912005c2b,0x41698e865c941a72,0xc96a73ec1ab611ad,0xd03a286e700a4719\n"
".quad 0x32a35a91e0c49bbe,0xa9d2243fdcb00783,0x201a4ceb5cd80103,0xb3575dce4630ff5d\n"
".quad 0x5c84891b81557863,0x114300f5055a196b,0x0337351df6b4f811,0xefa7047688a6577b\n"
".quad 0xaf20e278da081510,0xc01a411bd0907607,0xa8a21aa4d1bcf02b,0xe000bea9bdb0bb40\n"
".quad 0x253992eb14a7e36d,0xe5419c7c6d8163a9,0x61432c3eb6f7bbc4,0x86bfcc338e126c96\n"
".quad 0x7bf68446eab0d7c5,0xfd039543867084fe,0x21c18273dc447dc8,0xfb436d2990920baa\n"
".quad 0xf164ed5866f26e5d,0xaa066d215cdf4d66,0x77464cde1acdfd47,0xb822f61ae1e717f4\n"
".quad 0x839d4ba9ae0abd86,0xd4ba9ae0e752ea6b,0xa9ae0e752ea6b839,0x50d108e29ae1554b\n"
".quad 0x1154d70aa188656e,0x1bccc08f3440c68f,0x782a68634d70b991,0x7c45518c6a2c154b\n"
".quad 0x8621dc7b415e2f98,0xcac1c27b44d6a3b9,0x3c3a389abc3da117,0xcf847e8783a01663\n"
".quad 0xd124a4009d1027b3,0xbc45cbc830d1d0c9,0xf14f21e5c1d04547,0xf035288e43de1925\n"
".quad 0xde194f51e424c89e,0xa891ee1364a19623,0x7c18f681a9da7733,0x634c8e9851ed1357\n"
".quad 0x6fbd6b265d16f03d,0xe85b03c9217eea67,0x81bab60c0406f413,0x8de8aac37a05f507\n"
".quad 0x9ba7dae9ff0cb43f,0x0b26b9e9e78faa86,0x506084247e2474de,0x455965d208209f75\n"
".quad 0x6892bda590e03c0f,0x4a7a196ee98eb904,0xed437fb57021aee6,0x54bc518e200fce01\n"
".quad 0x4fd42dd0d641e879,0x2b238d16000d5f95,0xfe962282b4b78eb0,0xe92e951724b0a480\n"
".quad 0xe714947d865613cb,0x85479c1afa467de9,0x29d6b964e427d549,0xb188013ce3ce63ce\n"
".quad 0x0450c1021e712a7d,0x582cc5d092c09d26,0x2b3c1e7026610352,0xc5f08f385a1b7cc5\n"
".quad 0xce36c3c92e46a452,0x1390f1c4e794f603,0xb13914f3839ac61c,0x794f38daf6d079c7\n"
".quad 0xa663ce2ac9518a58,0x2589e0f38aa19e70,0x9b6f28f38130ed68,0x3813b63f18f38dba\n"
".quad 0xa920f4073fbfb40f,0x06f98a4b30477729,0x374c60e9153040c6,0x96b2f3f28f50dacd\n"
".quad 0xc2e23b83d4390fa6,0x399e3d824e0b1d3f,0x16e5bc74b5d925d0,0x92921e0051ab23d8\n"
".quad 0xb029c9625e8f6093,0x4d72abd9e54d75c7,0xeaf6453d81e70ff5,0xb0f6032fcf341ec1\n"
".quad 0xd0b30cf68f3ced12,0xed00bf8555b9219e,0xfc7b44986b4d1cd1,0x5414d3fcc72e95e9\n"
".quad 0x6ea925f573dbadae,0x3dc357aaad80f706,0x422068a80b4b9fcc,0x03cea1b442a7384a\n"
".quad 0x9663e025516c143e,0x5fa7c073295910a1,0x4a4880c484e9ae86,0x90a065d050f8093f\n"
".quad 0xa8e74f1b00f80a4d,0x03e026c3fcf1903d,0x43873f02902874c7,0xca63e00668487036\n"
".quad 0x8f806a65325d9d13,0xc4911bf853e0217a,0xc87c02ccc7c05582,0x0a469009f0157546\n"
".quad 0x7abf91c07b10f4f8,0xe31567ef66e105a4,0x7c015093baa7c06d,0x4edca2a631cc7f90\n"
".quad 0x80b26fbc4c26f009,0x078977fec9efb22e,0xcc112483443657d5,0xac0da8650b80a2f1\n"
".quad 0x7e36c0ad9c9fc266,0xf20dc9e0db0ea70b,0x5916ffafe8c76e6a,0x5f7f8ff54777636e\n"
".quad 0x648bbdfff077ef3d,0x089ad8da8b86eb64,0x3fbd81aa67861557,0x9e04a692aa5d89a6\n"
".quad 0x2ce65b641dbe3219,0x3d29542588bdd4ec,0x6d4ec14d4b6a7603,0x3b05352da9d829a9\n"
".quad 0x0d54b6a760a6a5b5,0xea25d7a9d4721a76,0x8c4cfb8153a8aa24,0xc15203799996f343\n"
".quad 0x6867dfa26ad00a7d,0x32d4dc079fd3043a,0x61411c74b14e5ec3,0x6bbd4af0ef074d1e\n"
".quad 0x444816508aa3a69b,0x68481d343dfd3fc6,0x0bca1d34e666b644,0xa68a773d3c74d26a\n"
".quad 0x9840e9a0d36ae3c3,0x761ad0d874d166ce,0x85f6be455a4cbe58,0xe491542536557b83\n"
".quad 0x709d24ea5af03cb8,0x4e9229f0f3064f53,0x66da05cf00ba8af5,0xa74936a74243a493\n"
".quad 0x274c0d59b916b4ab,0x16a21c2e602da09e,0xad3d2542e48bc360,0xa482723d75c3aa90\n"
".quad 0xfe3c1d24b9ad1143,0xc63a48ca8e92132a,0x0c7492567d85f61b,0xa49ca8e92097f179\n"
".quad 0x634417503783cfc3,0x936a1609910ec065,0x3a4849f7c8194074,0x415081d24533e481\n"
".quad 0xf299c41bc03436fb,0x329eb2824be2952c,0x43e28a663c5806f0,0x2729bd03783af712\n"
".quad 0x53c5f70561d89f76,0x92849c5fc7bd05bc,0xb52577272467ab95,0x14888d9b3d2c3c18\n"
".quad 0x6ef440de0ab26260,0x3e9d24db36ce3c19,0xf0d3c1d2431fed8c,0x42a8c0204b043fb9\n"
".quad 0x8857801d24228e92,0x3dfc5c853293f0a0,0xc9afca2a75025d45,0x04d8099a61e91371\n"
".quad 0x8055706359c9f3ef,0x08180e4507a1987f,0x64d1b6f0a52bf53b,0x3e28212a166c51ed\n"
".quad 0xe8950d745070cea7,0xebe633a0e84a8f3b,0x41abc4187050736b,0xc0a1375ec03a9f09\n"
".quad 0x2310d3cea2839ca8,0x9000e3f9d81b064a,0x298e83040050714d,0x4538092026c9075d\n"
".quad 0xd2838c96fa7b450d,0x7c08c005072962f9,0x1a03970200a0e6d8,0x124069c3a2a36494\n"
".quad 0x8e6274a75cba4d4e,0x839f544cfb544c95,0x17eb7ea6c4b87824,0x5c2dc9a1de54c3be\n"
".quad 0xa9b4424296078b15,0x26ec10d5207a1241,0xede017d537b64200,0xeee050724c0a7e2f\n"
".quad 0x61432fd1241ceee2,0x75ea28390ac22096,0xd0298159a77f141c,0xa7d10270e2bc3d23\n"
".quad 0x8283929f3c14290e,0x55cde4e66f152757,0x44009050724f49c4,0x52839f3018167746\n"
".quad 0xa50739780c133d29,0xa50739780c0e752d,0x850701780c0e752d,0xa097db16f2941c15\n"
".quad 0x0e6034552839f301,0x9167c573cd242507,0xae84c1a5f6f42648,0x840b1e6288b89996\n"
".quad 0x8160a39b25e1921c,0x40b14da81a57dee0,0xb077ec67616acc44,0x8a638a706145fc40\n"
".quad 0xc40b057d2e9d9205,0xff3848164eff8e6f,0xc93d0940e785c0d8,0x461290d408c20bfc\n"
".quad 0xb8f2918453b1edc2,0x0955ddec92309d4f,0x3ed3cb22308a6623,0x4ebab36493118493\n"
".quad 0xd104c14d0f482118,0x0099ca479260ed48,0x61da102308ce88c2,0xab7bde54773f5d4e\n"
".quad 0x9f8212866354fd12,0x7b80f9a72ae9184d,0x5f2046119d22f242,0xd824923092c7d863\n"
".quad 0xf9c8c273a230805f,0xe6256067f27a424d,0xf4cf04613680e040,0xc2298100d7b89f30\n"
".quad 0x464d0e13450cb748,0xf8f2921fc6796118,0xe9b42e0f08398db0,0x9d25039813eb4426\n"
".quad 0xc79439873b0398a4,0xa6a0e62ac5ed922f,0x306de01cc7530730,0x4061cc79c1f7aa83\n"
".quad 0x7fb63f308c209cdb,0xc2df314967046114,0x4d73625bcc1d3bb9,0x07614cbcfc18761b\n"
".quad 0xf4c93d58734c264f,0xe982676478fa7ba8,0xf9c23d314cec4e11,0xa122b23920b2149d\n"
".quad 0x643ce7b0516414fd,0xa164097e85906ac1,0xb9e27f0a44d3e551,0x2913da51e695f338\n"
".quad 0x5e1fb0c6029114f4,0x884ebd5f13c4598d,0xced2ebb851a73a1c,0x7bbdc3ca9f3a28d0\n"
".quad 0xc228d04c080263f9,0x98120d6eff707cad,0x894f68a19723373a,0xa43e6cf2a1661910\n"
".quad 0x402c00b31b61f1ea,0x6601b90dd4f4d2e6,0xc7b13a718928b30a,0xd928b310bc31661a\n"
".quad 0xd9fc2cc35c2ac94d,0xfabffd90c2cc699c,0xa66dc22cc75919b9,0x4d4e7e16636956c0\n"
".quad 0xd2cfaf64c0e028d1,0x90d252cd2865ba28,0x3120a34d3d0a34f6,0x0d0f93d1a403ffe1\n"
".quad 0x092c15ac820d2135,0x19e84967b424b19d,0xa73d3a8d6116092c,0xe90e134950e44964\n"
".quad 0xd7eca1249e77a47d,0x7c5bfec99cbdb908,0xc5ea3e42dc7b2ebf,0x50bcf8ac5ea3a80a\n"
".quad 0x6ed58bd4660158bd,0x4b9bcba10c3952f5,0x6a1ab95bad5f45dc,0xacf347d0d5c8de68\n"
".quad 0x0d0d31c3cd31434c,0x7a13355434a3cf35,0x533d2ef07e9e0b30,0xb51a21f2a6717d92\n"
".quad 0xa19279c206717c6c,0xdc97029df1e5fd87,0x1995e69946586548,0x3e8c2126ac776978\n"
".quad 0xaf228b89dcfa04d3,0x1f487177e4ed698d,0xcf7e1c95c94ebdc2,0xa3ac73f616b9fdbf\n"
".quad 0x897908f57f12624f,0x880b01a47e2c84bb,0x5102a1111d608aa6,0xd4a6aee1df8f7afd\n"
".quad 0xbb1175cd875299bc,0xe160df5805d24420,0xbb1c8281b510dd8e,0xe3afd214b22bc624\n"
".quad 0x495ee155b1257b91,0x0920e12f178e3fe1,0xee716d8ef55720aa,0x770fa27da9725c2d\n"
".quad 0xc9c48e9037efc56e,0xa80c624418eef402,0xa5c9d03e18bc9bf2,0xfd722eb115f09af4\n"
".quad 0xad0f8c279f0b599c,0x80c157084d1fa575,0x94c72bd39a89b379,0x84c471875c171bbf\n"
".quad 0xd430e1c9748847ea,0xc4db8ff8a2b72a26,0x7c3acccfef8d10af,0x2fbd1a8c38e9c6d7\n"
".quad 0x7de963350fd69343,0xd5f67f01463f5c80,0x85271951aee0c7ab,0x0d901284d5742f4c\n"
".quad 0xb224a0af3b508935,0x8aa9581f21be8dc6,0x34dfeb95fa32bcc0,0x27238e0cb0785c81\n"
".quad 0xe9551c66b07d09be,0x23c7bed41f970657,0x90ff3afb402c9b8a,0x4c95f031351f8983\n"
".quad 0x72a5cac4d89bf392,0xf1a3334114c56278,0x3ecb4a7ce7fefd5a,0xa2a034e1f6f1619c\n"
".quad 0x95909f4a36b24c06,0x613a3fc86685853d,0xbbae4b2dac601f22,0xa1f878c94dcad3d8\n"
".quad 0xc9d1719a3b8f8bb5,0x4a3d6d36c384932e,0x4791a5d3b567fd9f,0x2a6264dc5ef1283f\n"
".quad 0x89921cb58b2123cf,0xa8f4f58ba73ff989,0x0db155a160341b84,0xf559d9771ecbbd2a\n"
".quad 0x0ce04caaf3f0699e,0xaa9b1311004e9fed,0x30f39e101bd535e7,0xd041fa5018264068\n"
".quad 0x9fc5ee1dfb6809f0,0xc7acbfb32b6a3c7d,0xe8c65fddf7369f82,0x3f3f6c3bba93a7f4\n"
".quad 0x702ed78bbb23bddd,0xc085dafa80ca8f25,0x95f1756b89561165,0xa3b97f6776bdb8c8\n"
".quad 0x942e71a6e81f5c7c,0xca084ab0d2b2b083,0x59e5c622cc43651a,0x5a3b7ab11f5f9559\n"
".quad 0x7195a9fb7a487e77,0xd0fe0bbb69611369,0x3fecefaebaeeec96,0x4b346b0444018089\n"
".quad 0x8614abbf27777568,0x208935b4b09fefda,0xb6de9871a3ac0912,0x71de6310ebc93ad4\n"
".quad 0x301f38aeb6e4975a,0xe83d30dcfdc9e22c,0xeb8e5ef856404647,0x6c3b2f7dc0585dcc\n"
".quad 0xaa68d758e5cd6578,0x24fd2b20caeeda38,0x3bc2d2378faa1592,0x8e80b69b86c8a2ad\n"
".quad 0xe4613defb9252772,0xdbd2d4814e832ac2,0xe5bf5ec1279f8c01,0x32227b3aa0dd0c4c\n"
".quad 0x4ee34e32b238234c,0x0ab7972e1d4b41e9,0x2bae8f5df0553d36,0xdc3eb8a01afdcda6\n"
".quad 0xf4363426702d0b4f,0x7cb2e4f238c1c82e,0x5ae3e2a0b89cfac0,0x82af1e1e0fa3ac23\n"
".quad 0xe9ef57fe983fde77,0xfadf3bfe92e37dbc,0x17fe9f8738766131,0x0000ffecd59902ff\n"
".text");

extern "C" {

extern const unsigned long long fatbinData[2996];

}


extern "C" {

static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 4 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c" 2 3
extern void __device_stub__Z12histo_kernelPhlPj(unsigned char *, long, unsigned *);
static void __device_stub__Z26vlc_encode_kernel_sm64huffPjPKjS1_S_S_S_S_S_(unsigned *, const unsigned *, const unsigned *, unsigned *, unsigned *, unsigned *, unsigned *, unsigned *);
static void __device_stub__Z10uniformAddPjS_iii(unsigned *, unsigned *, int, int, int);
static void __device_stub__Z7prescanILb1ELb0EEvPjPKjS0_iii(unsigned *, const unsigned *, unsigned *, int, int, int);
static void __device_stub__Z7prescanILb1ELb1EEvPjPKjS0_iii(unsigned *, const unsigned *, unsigned *, int, int, int);
static void __device_stub__Z7prescanILb0ELb0EEvPjPKjS0_iii(unsigned *, const unsigned *, unsigned *, int, int, int);
static void __device_stub__Z7prescanILb0ELb1EEvPjPKjS0_iii(unsigned *, const unsigned *, unsigned *, int, int, int);
static void __device_stub__Z5pack2PjS_S_S_j(unsigned *, unsigned *, unsigned *, unsigned *, unsigned);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_47_tmpxft_00016add_00000000_6_main_test_cu_cpp1_ii_29d55712(void) __attribute__((__constructor__));
void __device_stub__Z12histo_kernelPhlPj(unsigned char *__par0, long __par1, unsigned *__par2){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned char *, long, unsigned *))histo_kernel)); (void)cudaLaunch(((char *)((void ( *)(unsigned char *, long, unsigned *))histo_kernel))); };}
# 34 "hist.cu"
void histo_kernel( unsigned char *__cuda_0,long __cuda_1,unsigned *__cuda_2)
# 36 "hist.cu"
{__device_stub__Z12histo_kernelPhlPj( __cuda_0,__cuda_1,__cuda_2);
# 52 "hist.cu"
}
# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
static void __device_stub__Z26vlc_encode_kernel_sm64huffPjPKjS1_S_S_S_S_S_( unsigned *__par0, const unsigned *__par1, const unsigned *__par2, unsigned *__par3, unsigned *__par4, unsigned *__par5, unsigned *__par6, unsigned *__par7) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, const unsigned *, const unsigned *, unsigned *, unsigned *, unsigned *, unsigned *, unsigned *))vlc_encode_kernel_sm64huff)); (void)cudaLaunch(((char *)((void ( *)(unsigned *, const unsigned *, const unsigned *, unsigned *, unsigned *, unsigned *, unsigned *, unsigned *))vlc_encode_kernel_sm64huff))); }; }
# 37 "vlc_kernel_sm64huff.cu"
static void vlc_encode_kernel_sm64huff( unsigned *__cuda_0,const unsigned *__cuda_1,const unsigned *__cuda_2,unsigned *__cuda_3,unsigned *__cuda_4,unsigned *__cuda_5,unsigned *__cuda_6,unsigned *__cuda_7)
# 42 "vlc_kernel_sm64huff.cu"
{__device_stub__Z26vlc_encode_kernel_sm64huffPjPKjS1_S_S_S_S_S_( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
# 160 "vlc_kernel_sm64huff.cu"
}
# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
static void __device_stub__Z10uniformAddPjS_iii( unsigned *__par0, unsigned *__par1, int __par2, int __par3, int __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, unsigned *, int, int, int))uniformAdd)); (void)cudaLaunch(((char *)((void ( *)(unsigned *, unsigned *, int, int, int))uniformAdd))); }; }
# 241 "scanLargeArray_kernel.cu"
static void uniformAdd( unsigned *__cuda_0,unsigned *__cuda_1,int __cuda_2,int __cuda_3,int __cuda_4)
# 246 "scanLargeArray_kernel.cu"
{__device_stub__Z10uniformAddPjS_iii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 258 "scanLargeArray_kernel.cu"
}
# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
static void __device_stub__Z7prescanILb1ELb0EEvPjPKjS0_iii( unsigned *__par0, const unsigned *__par1, unsigned *__par2, int __par3, int __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)1, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)1, (bool)0> ))); }; }
template<> void __wrapper__device_stub_prescan<true,false>( unsigned *&__cuda_0,const unsigned *&__cuda_1,unsigned *&__cuda_2,int &__cuda_3,int &__cuda_4,int &__cuda_5){__device_stub__Z7prescanILb1ELb0EEvPjPKjS0_iii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);}
static void __device_stub__Z7prescanILb1ELb1EEvPjPKjS0_iii( unsigned *__par0, const unsigned *__par1, unsigned *__par2, int __par3, int __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)1, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)1, (bool)1> ))); }; }
template<> void __wrapper__device_stub_prescan<true,true>( unsigned *&__cuda_0,const unsigned *&__cuda_1,unsigned *&__cuda_2,int &__cuda_3,int &__cuda_4,int &__cuda_5){__device_stub__Z7prescanILb1ELb1EEvPjPKjS0_iii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);}
static void __device_stub__Z7prescanILb0ELb0EEvPjPKjS0_iii( unsigned *__par0, const unsigned *__par1, unsigned *__par2, int __par3, int __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)0, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)0, (bool)0> ))); }; }
template<> void __wrapper__device_stub_prescan<false,false>( unsigned *&__cuda_0,const unsigned *&__cuda_1,unsigned *&__cuda_2,int &__cuda_3,int &__cuda_4,int &__cuda_5){__device_stub__Z7prescanILb0ELb0EEvPjPKjS0_iii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);}
static void __device_stub__Z7prescanILb0ELb1EEvPjPKjS0_iii( unsigned *__par0, const unsigned *__par1, unsigned *__par2, int __par3, int __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)0, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)0, (bool)1> ))); }; }
template<> void __wrapper__device_stub_prescan<false,true>( unsigned *&__cuda_0,const unsigned *&__cuda_1,unsigned *&__cuda_2,int &__cuda_3,int &__cuda_4,int &__cuda_5){__device_stub__Z7prescanILb0ELb1EEvPjPKjS0_iii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);}
static void __device_stub__Z5pack2PjS_S_S_j( unsigned *__par0, unsigned *__par1, unsigned *__par2, unsigned *__par3, unsigned __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(unsigned *, unsigned *, unsigned *, unsigned *, unsigned))pack2)); (void)cudaLaunch(((char *)((void ( *)(unsigned *, unsigned *, unsigned *, unsigned *, unsigned))pack2))); }; }
# 19 "pack_kernels.cu"
static void pack2( unsigned *__cuda_0,unsigned *__cuda_1,unsigned *__cuda_2,unsigned *__cuda_3,unsigned __cuda_4)
# 19 "pack_kernels.cu"
{__device_stub__Z5pack2PjS_S_S_j( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 52 "pack_kernels.cu"
}
# 1 "/tmp/tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T2522) { { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T2522; }; __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, unsigned *, unsigned *, unsigned *, unsigned))pack2), (char*)"_Z5pack2PjS_S_S_j", "_Z5pack2PjS_S_S_j", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)0, (bool)1> ), (char*)"_Z7prescanILb0ELb1EEvPjPKjS0_iii", "_Z7prescanILb0ELb1EEvPjPKjS0_iii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)0, (bool)0> ), (char*)"_Z7prescanILb0ELb0EEvPjPKjS0_iii", "_Z7prescanILb0ELb0EEvPjPKjS0_iii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)1, (bool)1> ), (char*)"_Z7prescanILb1ELb1EEvPjPKjS0_iii", "_Z7prescanILb1ELb1EEvPjPKjS0_iii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, const unsigned *, unsigned *, int, int, int))prescan<(bool)1, (bool)0> ), (char*)"_Z7prescanILb1ELb0EEvPjPKjS0_iii", "_Z7prescanILb1ELb0EEvPjPKjS0_iii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, unsigned *, int, int, int))uniformAdd), (char*)"_Z10uniformAddPjS_iii", "_Z10uniformAddPjS_iii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned *, const unsigned *, const unsigned *, unsigned *, unsigned *, unsigned *, unsigned *, unsigned *))vlc_encode_kernel_sm64huff), (char*)"_Z26vlc_encode_kernel_sm64huffPjPKjS1_S_S_S_S_S_", "_Z26vlc_encode_kernel_sm64huffPjPKjS1_S_S_S_S_S_", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T2522, (const char*)((void ( *)(unsigned char *, long, unsigned *))histo_kernel), (char*)"_Z12histo_kernelPhlPj", "_Z12histo_kernelPhlPj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); }
static void __sti____cudaRegisterAll_47_tmpxft_00016add_00000000_6_main_test_cu_cpp1_ii_29d55712(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil); }
# 2 "tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c" 2
# 1 "tmpxft_00016add_00000000-3_main_test_cu.cudafe1.stub.c"
