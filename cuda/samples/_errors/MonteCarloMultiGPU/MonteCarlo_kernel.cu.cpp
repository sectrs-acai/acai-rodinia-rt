# 1 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.cpp"
# 1 "MonteCarlo_kernel.cu"
# 61 "/usr/local/cuda-5.0//include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda-5.0//include/builtin_types.h" 1 3
# 56 "/usr/local/cuda-5.0//include/builtin_types.h" 3
# 1 "/usr/local/cuda-5.0//include/device_types.h" 1 3
# 53 "/usr/local/cuda-5.0//include/device_types.h" 3
# 1 "/usr/local/cuda-5.0//include/host_defines.h" 1 3
# 54 "/usr/local/cuda-5.0//include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/driver_types.h" 1 3
# 123 "/usr/local/cuda-5.0//include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 158 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 167 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 177 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 186 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 201 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 282 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 291 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 300 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 309 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 358 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 393 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 455 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 481 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 606 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorSyncDepthExceeded = 68,
# 618 "/usr/local/cuda-5.0//include/driver_types.h" 3
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};





struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};





struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};





struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 938 "/usr/local/cuda-5.0//include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
};
# 1265 "/usr/local/cuda-5.0//include/driver_types.h" 3
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1287 "/usr/local/cuda-5.0//include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 58 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/surface_types.h" 1 3
# 84 "/usr/local/cuda-5.0//include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 59 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/texture_types.h" 1 3
# 84 "/usr/local/cuda-5.0//include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-5.0//include/vector_types.h" 1 3
# 59 "/usr/local/cuda-5.0//include/vector_types.h" 3
# 1 "/usr/local/cuda-5.0//include/builtin_types.h" 1 3
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 3
# 1 "/usr/local/cuda-5.0//include/vector_types.h" 1 3
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 60 "/usr/local/cuda-5.0//include/vector_types.h" 2 3
# 94 "/usr/local/cuda-5.0//include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};

struct __attribute__((aligned(8))) float2 { float x; float y; };

struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 338 "/usr/local/cuda-5.0//include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda-5.0//include/builtin_types.h" 2 3
# 70 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda-5.0//include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h" 2 3
# 123 "/usr/local/cuda-5.0//include/driver_types.h"
# 648 "/usr/local/cuda-5.0//include/driver_types.h"
# 659 "/usr/local/cuda-5.0//include/driver_types.h"
# 671 "/usr/local/cuda-5.0//include/driver_types.h"
typedef struct cudaArray *cudaArray_t;
# 676 "/usr/local/cuda-5.0//include/driver_types.h"
typedef const cudaArray *cudaArray_const_t;
# 678 "/usr/local/cuda-5.0//include/driver_types.h"
struct cudaArray;
# 683 "/usr/local/cuda-5.0//include/driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 688 "/usr/local/cuda-5.0//include/driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 690 "/usr/local/cuda-5.0//include/driver_types.h"
struct cudaMipmappedArray;
# 695 "/usr/local/cuda-5.0//include/driver_types.h"
# 704 "/usr/local/cuda-5.0//include/driver_types.h"
# 717 "/usr/local/cuda-5.0//include/driver_types.h"
# 729 "/usr/local/cuda-5.0//include/driver_types.h"
# 740 "/usr/local/cuda-5.0//include/driver_types.h"
# 750 "/usr/local/cuda-5.0//include/driver_types.h"
# 767 "/usr/local/cuda-5.0//include/driver_types.h"
# 785 "/usr/local/cuda-5.0//include/driver_types.h"
struct cudaGraphicsResource;
# 790 "/usr/local/cuda-5.0//include/driver_types.h"
# 802 "/usr/local/cuda-5.0//include/driver_types.h"
# 812 "/usr/local/cuda-5.0//include/driver_types.h"
# 825 "/usr/local/cuda-5.0//include/driver_types.h"
# 836 "/usr/local/cuda-5.0//include/driver_types.h"
# 878 "/usr/local/cuda-5.0//include/driver_types.h"
# 906 "/usr/local/cuda-5.0//include/driver_types.h"
# 921 "/usr/local/cuda-5.0//include/driver_types.h"
# 956 "/usr/local/cuda-5.0//include/driver_types.h"
# 1006 "/usr/local/cuda-5.0//include/driver_types.h"
# 1018 "/usr/local/cuda-5.0//include/driver_types.h"
# 1028 "/usr/local/cuda-5.0//include/driver_types.h"
# 1039 "/usr/local/cuda-5.0//include/driver_types.h"
# 1051 "/usr/local/cuda-5.0//include/driver_types.h"
# 1060 "/usr/local/cuda-5.0//include/driver_types.h"
# 1143 "/usr/local/cuda-5.0//include/driver_types.h"
# 1268 "/usr/local/cuda-5.0//include/driver_types.h"
# 1276 "/usr/local/cuda-5.0//include/driver_types.h"
# 1287 "/usr/local/cuda-5.0//include/driver_types.h"
# 1292 "/usr/local/cuda-5.0//include/driver_types.h"
# 1297 "/usr/local/cuda-5.0//include/driver_types.h"
# 1302 "/usr/local/cuda-5.0//include/driver_types.h"
# 1307 "/usr/local/cuda-5.0//include/driver_types.h"
# 1312 "/usr/local/cuda-5.0//include/driver_types.h"
# 84 "/usr/local/cuda-5.0//include/surface_types.h"
# 94 "/usr/local/cuda-5.0//include/surface_types.h"
# 103 "/usr/local/cuda-5.0//include/surface_types.h"
# 114 "/usr/local/cuda-5.0//include/surface_types.h"
# 84 "/usr/local/cuda-5.0//include/texture_types.h"
# 95 "/usr/local/cuda-5.0//include/texture_types.h"
# 104 "/usr/local/cuda-5.0//include/texture_types.h"
# 113 "/usr/local/cuda-5.0//include/texture_types.h"
# 161 "/usr/local/cuda-5.0//include/texture_types.h"
# 208 "/usr/local/cuda-5.0//include/texture_types.h"
# 94 "/usr/local/cuda-5.0//include/vector_types.h"
# 99 "/usr/local/cuda-5.0//include/vector_types.h"
# 105 "/usr/local/cuda-5.0//include/vector_types.h"
# 110 "/usr/local/cuda-5.0//include/vector_types.h"
# 115 "/usr/local/cuda-5.0//include/vector_types.h"
# 120 "/usr/local/cuda-5.0//include/vector_types.h"
# 125 "/usr/local/cuda-5.0//include/vector_types.h"
# 130 "/usr/local/cuda-5.0//include/vector_types.h"
# 135 "/usr/local/cuda-5.0//include/vector_types.h"
# 140 "/usr/local/cuda-5.0//include/vector_types.h"
# 145 "/usr/local/cuda-5.0//include/vector_types.h"
# 150 "/usr/local/cuda-5.0//include/vector_types.h"
# 155 "/usr/local/cuda-5.0//include/vector_types.h"
# 160 "/usr/local/cuda-5.0//include/vector_types.h"
# 165 "/usr/local/cuda-5.0//include/vector_types.h"
# 166 "/usr/local/cuda-5.0//include/vector_types.h"
# 168 "/usr/local/cuda-5.0//include/vector_types.h"
# 173 "/usr/local/cuda-5.0//include/vector_types.h"
# 178 "/usr/local/cuda-5.0//include/vector_types.h"
# 179 "/usr/local/cuda-5.0//include/vector_types.h"
# 181 "/usr/local/cuda-5.0//include/vector_types.h"
# 186 "/usr/local/cuda-5.0//include/vector_types.h"
# 191 "/usr/local/cuda-5.0//include/vector_types.h"
# 196 "/usr/local/cuda-5.0//include/vector_types.h"
# 201 "/usr/local/cuda-5.0//include/vector_types.h"
# 206 "/usr/local/cuda-5.0//include/vector_types.h"
# 216 "/usr/local/cuda-5.0//include/vector_types.h"
# 221 "/usr/local/cuda-5.0//include/vector_types.h"
# 228 "/usr/local/cuda-5.0//include/vector_types.h"
# 233 "/usr/local/cuda-5.0//include/vector_types.h"
# 238 "/usr/local/cuda-5.0//include/vector_types.h"
# 243 "/usr/local/cuda-5.0//include/vector_types.h"
# 248 "/usr/local/cuda-5.0//include/vector_types.h"
# 253 "/usr/local/cuda-5.0//include/vector_types.h"
# 255 "/usr/local/cuda-5.0//include/vector_types.h"
# 260 "/usr/local/cuda-5.0//include/vector_types.h"
# 265 "/usr/local/cuda-5.0//include/vector_types.h"
# 270 "/usr/local/cuda-5.0//include/vector_types.h"
# 275 "/usr/local/cuda-5.0//include/vector_types.h"
# 280 "/usr/local/cuda-5.0//include/vector_types.h"
# 285 "/usr/local/cuda-5.0//include/vector_types.h"
# 290 "/usr/local/cuda-5.0//include/vector_types.h"
# 295 "/usr/local/cuda-5.0//include/vector_types.h"
# 300 "/usr/local/cuda-5.0//include/vector_types.h"
# 305 "/usr/local/cuda-5.0//include/vector_types.h"
# 310 "/usr/local/cuda-5.0//include/vector_types.h"
# 315 "/usr/local/cuda-5.0//include/vector_types.h"
# 320 "/usr/local/cuda-5.0//include/vector_types.h"
# 338 "/usr/local/cuda-5.0//include/vector_types.h"
# 339 "/usr/local/cuda-5.0//include/vector_types.h"
# 340 "/usr/local/cuda-5.0//include/vector_types.h"
# 341 "/usr/local/cuda-5.0//include/vector_types.h"
# 342 "/usr/local/cuda-5.0//include/vector_types.h"
# 343 "/usr/local/cuda-5.0//include/vector_types.h"
# 344 "/usr/local/cuda-5.0//include/vector_types.h"
# 345 "/usr/local/cuda-5.0//include/vector_types.h"
# 346 "/usr/local/cuda-5.0//include/vector_types.h"
# 347 "/usr/local/cuda-5.0//include/vector_types.h"
# 348 "/usr/local/cuda-5.0//include/vector_types.h"
# 349 "/usr/local/cuda-5.0//include/vector_types.h"
# 350 "/usr/local/cuda-5.0//include/vector_types.h"
# 351 "/usr/local/cuda-5.0//include/vector_types.h"
# 352 "/usr/local/cuda-5.0//include/vector_types.h"
# 353 "/usr/local/cuda-5.0//include/vector_types.h"
# 354 "/usr/local/cuda-5.0//include/vector_types.h"
# 355 "/usr/local/cuda-5.0//include/vector_types.h"
# 356 "/usr/local/cuda-5.0//include/vector_types.h"
# 357 "/usr/local/cuda-5.0//include/vector_types.h"
# 358 "/usr/local/cuda-5.0//include/vector_types.h"
# 359 "/usr/local/cuda-5.0//include/vector_types.h"
# 360 "/usr/local/cuda-5.0//include/vector_types.h"
# 361 "/usr/local/cuda-5.0//include/vector_types.h"
# 362 "/usr/local/cuda-5.0//include/vector_types.h"
# 363 "/usr/local/cuda-5.0//include/vector_types.h"
# 364 "/usr/local/cuda-5.0//include/vector_types.h"
# 365 "/usr/local/cuda-5.0//include/vector_types.h"
# 366 "/usr/local/cuda-5.0//include/vector_types.h"
# 367 "/usr/local/cuda-5.0//include/vector_types.h"
# 368 "/usr/local/cuda-5.0//include/vector_types.h"
# 369 "/usr/local/cuda-5.0//include/vector_types.h"
# 370 "/usr/local/cuda-5.0//include/vector_types.h"
# 371 "/usr/local/cuda-5.0//include/vector_types.h"
# 372 "/usr/local/cuda-5.0//include/vector_types.h"
# 373 "/usr/local/cuda-5.0//include/vector_types.h"
# 374 "/usr/local/cuda-5.0//include/vector_types.h"
# 375 "/usr/local/cuda-5.0//include/vector_types.h"
# 376 "/usr/local/cuda-5.0//include/vector_types.h"
# 377 "/usr/local/cuda-5.0//include/vector_types.h"
# 378 "/usr/local/cuda-5.0//include/vector_types.h"
# 379 "/usr/local/cuda-5.0//include/vector_types.h"
# 380 "/usr/local/cuda-5.0//include/vector_types.h"
# 381 "/usr/local/cuda-5.0//include/vector_types.h"
# 382 "/usr/local/cuda-5.0//include/vector_types.h"
# 383 "/usr/local/cuda-5.0//include/vector_types.h"
# 384 "/usr/local/cuda-5.0//include/vector_types.h"
# 385 "/usr/local/cuda-5.0//include/vector_types.h"
# 393 "/usr/local/cuda-5.0//include/vector_types.h"
# 403 "/usr/local/cuda-5.0//include/vector_types.h"
# 89 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetAttribute(int * , cudaDeviceAttr , int );
# 90 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 91 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 92 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * );
# 93 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 94 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 95 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 96 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 97 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 98 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 99 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaStreamCreateWithFlags(cudaStream_t * , unsigned );
# 100 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 101 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 102 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 103 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t );
# 104 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 105 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const void * );
# 106 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 107 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 108 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t );
# 109 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t );
# 110 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t );
# 111 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t );
# 112 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t );
# 113 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t );
# 114 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 116 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" { __attribute__((unused)) extern void *cudaGetParameterBuffer(size_t , size_t ); }
# 117 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
extern "C" { __attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * , void * , dim3 , dim3 , unsigned , cudaStream_t ); }
# 119 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
template< class T> inline cudaError_t cudaMalloc(T ** , size_t );
# 120 "/usr/local/cuda-5.0//include/cuda_device_runtime_api.h"
template< class T> inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , T * );
# 193 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceReset();
# 210 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 295 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit , size_t );
# 324 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 354 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 395 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache );
# 424 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * );
# 466 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig );
# 489 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * , char * );
# 516 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * , int , int );
# 558 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t );
# 593 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t );
# 631 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * );
# 678 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t , unsigned );
# 708 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcCloseMemHandle(void * );
# 744 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 768 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 827 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit , size_t );
# 858 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t * , cudaLimit );
# 893 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * );
# 939 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache );
# 989 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 1030 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 1044 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 1074 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 1283 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * , int );
# 1428 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetAttribute(int * , cudaDeviceAttr , int );
# 1447 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int * , const cudaDeviceProp * );
# 1480 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int );
# 1497 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 1526 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int * , int );
# 1586 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned );
# 1612 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * );
# 1634 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreateWithFlags(cudaStream_t * , unsigned );
# 1655 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 1691 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 1705 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" { typedef void (*cudaStreamCallback_t)(cudaStream_t , cudaError_t , void * ); }
# 1743 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamAddCallback(cudaStream_t , cudaStreamCallback_t , void * , unsigned );
# 1763 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t );
# 1781 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t );
# 1813 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * );
# 1847 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 1880 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t = 0);
# 1909 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t );
# 1941 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t );
# 1966 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 2007 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t );
# 2049 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3 , dim3 , size_t = (0), cudaStream_t = 0);
# 2076 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void * , size_t , size_t );
# 2122 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const void * , cudaFuncCache );
# 2173 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetSharedMemConfig(const void * , cudaSharedMemConfig );
# 2208 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const void * );
# 2241 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const void * );
# 2263 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double * );
# 2285 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double * );
# 2320 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 2349 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void ** , size_t );
# 2388 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void ** , size_t * , size_t , size_t );
# 2430 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray_t * , const cudaChannelFormatDesc * , size_t , size_t = (0), unsigned = (0));
# 2454 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 2474 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void * );
# 2496 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray_t );
# 2518 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t );
# 2577 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void ** , size_t , unsigned );
# 2630 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostRegister(void * , size_t , unsigned );
# 2649 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostUnregister(void * );
# 2676 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void ** , void * , unsigned );
# 2695 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned * , void * );
# 2730 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * , cudaExtent );
# 2830 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray_t * , const cudaChannelFormatDesc * , cudaExtent , unsigned = (0));
# 2922 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * , const cudaChannelFormatDesc * , cudaExtent , unsigned , unsigned = (0));
# 2948 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * , cudaMipmappedArray_const_t , unsigned );
# 3045 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * );
# 3073 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * );
# 3177 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t = 0);
# 3199 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t = 0);
# 3218 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t * , size_t * );
# 3239 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * , cudaExtent * , unsigned * , cudaArray_t );
# 3274 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind );
# 3306 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeer(void * , int , const void * , int , size_t );
# 3340 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray_t , size_t , size_t , const void * , size_t , cudaMemcpyKind );
# 3374 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void * , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind );
# 3409 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray_t , size_t , size_t , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind = (cudaMemcpyDeviceToDevice));
# 3451 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3493 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray_t , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3535 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void * , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind );
# 3575 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t , size_t , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind = (cudaMemcpyDeviceToDevice));
# 3610 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const void * , const void * , size_t , size_t = (0), cudaMemcpyKind = (cudaMemcpyHostToDevice));
# 3645 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void * , const void * , size_t , size_t = (0), cudaMemcpyKind = (cudaMemcpyDeviceToHost));
# 3687 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3718 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t = 0);
# 3759 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray_t , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3800 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3851 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3901 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3950 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3992 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const void * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 4034 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 4060 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void * , int , size_t );
# 4090 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void * , size_t , int , size_t , size_t );
# 4133 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr , int , cudaExtent );
# 4161 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t = 0);
# 4194 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t = 0);
# 4240 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t = 0);
# 4263 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void ** , const void * );
# 4285 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t * , const void * );
# 4429 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * , const void * );
# 4463 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * , int , int );
# 4500 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int , unsigned );
# 4519 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int );
# 4573 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t );
# 4605 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned );
# 4640 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4671 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4700 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t );
# 4734 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * , cudaGraphicsResource_t , unsigned , unsigned );
# 4759 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * , cudaGraphicsResource_t );
# 4795 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * , cudaArray_const_t );
# 4830 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind );
# 4877 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t = (((2147483647) * 2U) + 1U));
# 4928 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t );
# 4956 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * , cudaArray_const_t , const cudaChannelFormatDesc * );
# 4984 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToMipmappedArray(const textureReference * , cudaMipmappedArray_const_t , const cudaChannelFormatDesc * );
# 5005 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference * );
# 5030 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * , const textureReference * );
# 5055 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** , const void * );
# 5091 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * , cudaArray_const_t , const cudaChannelFormatDesc * );
# 5110 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** , const void * );
# 5321 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaCreateTextureObject(cudaTextureObject_t * , const cudaResourceDesc * , const cudaTextureDesc * , const cudaResourceViewDesc * );
# 5336 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDestroyTextureObject(cudaTextureObject_t );
# 5352 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * , cudaTextureObject_t );
# 5368 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * , cudaTextureObject_t );
# 5385 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * , cudaTextureObject_t );
# 5418 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * , const cudaResourceDesc * );
# 5433 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t );
# 5448 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * , cudaSurfaceObject_t );
# 5475 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int * );
# 5492 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 5497 "/usr/local/cuda-5.0//include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void ** , const cudaUUID_t * );
# 107 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 109 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 112 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 114 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 119 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 121 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 126 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 128 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 133 "/usr/local/cuda-5.0//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 135 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 140 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 142 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 151 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 153 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 158 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 160 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 165 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 167 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 172 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 174 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 179 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 181 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 186 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 188 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 193 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 195 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 200 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 202 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 207 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 209 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 214 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 216 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 221 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 223 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 228 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 230 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 235 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 237 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 242 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 244 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 249 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 251 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 256 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 258 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 263 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 265 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 270 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 272 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 277 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 279 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 284 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 286 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 291 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 293 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 298 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 300 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 305 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 307 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 312 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 314 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 379 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 381 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 386 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 388 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 393 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 395 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 400 "/usr/local/cuda-5.0//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda-5.0//include/channel_descriptor.h"
{
# 402 "/usr/local/cuda-5.0//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda-5.0//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda-5.0//include/channel_descriptor.h"
}
# 79 "/usr/local/cuda-5.0//include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda-5.0//include/driver_functions.h"
{
# 81 "/usr/local/cuda-5.0//include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda-5.0//include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda-5.0//include/driver_functions.h"
return s;
# 89 "/usr/local/cuda-5.0//include/driver_functions.h"
}
# 106 "/usr/local/cuda-5.0//include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda-5.0//include/driver_functions.h"
{
# 108 "/usr/local/cuda-5.0//include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda-5.0//include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda-5.0//include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda-5.0//include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda-5.0//include/driver_functions.h"
return p;
# 115 "/usr/local/cuda-5.0//include/driver_functions.h"
}
# 132 "/usr/local/cuda-5.0//include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda-5.0//include/driver_functions.h"
{
# 134 "/usr/local/cuda-5.0//include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda-5.0//include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda-5.0//include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda-5.0//include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda-5.0//include/driver_functions.h"
return e;
# 141 "/usr/local/cuda-5.0//include/driver_functions.h"
}
# 69 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 70 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 71 "/usr/local/cuda-5.0//include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 72 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 74 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 75 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 76 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 77 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 79 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 80 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 81 "/usr/local/cuda-5.0//include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 82 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 84 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 85 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 86 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 87 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 89 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 90 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 91 "/usr/local/cuda-5.0//include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 92 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 94 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 95 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 96 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 97 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 99 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 100 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 101 "/usr/local/cuda-5.0//include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 102 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 104 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 105 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 106 "/usr/local/cuda-5.0//include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 107 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 109 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short1 make_short1(short x)
# 110 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 111 "/usr/local/cuda-5.0//include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 112 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 114 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 115 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 116 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 117 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 119 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 120 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 121 "/usr/local/cuda-5.0//include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 122 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 124 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 125 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 126 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 127 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 129 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 130 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 131 "/usr/local/cuda-5.0//include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 132 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 134 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 135 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 136 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 137 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 139 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 140 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 141 "/usr/local/cuda-5.0//include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 142 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 144 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 145 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 146 "/usr/local/cuda-5.0//include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 147 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 149 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int1 make_int1(int x)
# 150 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 151 "/usr/local/cuda-5.0//include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 152 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 154 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 155 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 156 "/usr/local/cuda-5.0//include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 157 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 159 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 160 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 161 "/usr/local/cuda-5.0//include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 162 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 164 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 165 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 166 "/usr/local/cuda-5.0//include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 167 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 169 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 170 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 171 "/usr/local/cuda-5.0//include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 172 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 174 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 175 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 176 "/usr/local/cuda-5.0//include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 177 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 179 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 180 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 181 "/usr/local/cuda-5.0//include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 182 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 184 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 185 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 186 "/usr/local/cuda-5.0//include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 187 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 189 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long1 make_long1(long x)
# 190 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 191 "/usr/local/cuda-5.0//include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 192 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 194 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 195 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 196 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 197 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 199 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 200 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 201 "/usr/local/cuda-5.0//include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 202 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 204 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 205 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 206 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 207 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 209 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 210 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 211 "/usr/local/cuda-5.0//include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 212 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 214 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 215 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 216 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 217 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 219 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 220 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 221 "/usr/local/cuda-5.0//include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 222 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 224 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 225 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 226 "/usr/local/cuda-5.0//include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 227 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 229 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float1 make_float1(float x)
# 230 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 231 "/usr/local/cuda-5.0//include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 232 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 234 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 235 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 236 "/usr/local/cuda-5.0//include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 237 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 239 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 240 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 241 "/usr/local/cuda-5.0//include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 242 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 244 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 245 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 246 "/usr/local/cuda-5.0//include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 247 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 249 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 250 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 251 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 252 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 254 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 255 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 256 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 257 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 259 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 260 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 261 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 262 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 264 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 265 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 266 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 267 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 269 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 270 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 271 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 272 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 274 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 275 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 276 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 277 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 279 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 280 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 281 "/usr/local/cuda-5.0//include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 282 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 284 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 285 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 286 "/usr/local/cuda-5.0//include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 287 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 289 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double1 make_double1(double x)
# 290 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 291 "/usr/local/cuda-5.0//include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 292 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 294 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 295 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 296 "/usr/local/cuda-5.0//include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 297 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 299 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 300 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 301 "/usr/local/cuda-5.0//include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 302 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 304 "/usr/local/cuda-5.0//include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 305 "/usr/local/cuda-5.0//include/vector_functions.h"
{
# 306 "/usr/local/cuda-5.0//include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 307 "/usr/local/cuda-5.0//include/vector_functions.h"
}
# 43 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *memcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 44 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 47 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *memmove(void * , const void * , size_t ) throw()
# 48 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 54 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ , const void *__restrict__ , int , size_t ) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 61 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *memset(void * , int , size_t ) throw() __attribute((__nonnull__(1))); }
# 64 "/usr/include/string.h" 3
extern "C" int memcmp(const void * , const void * , size_t ) throw()
# 65 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 71 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memchr(void * , int , size_t ) throw() __asm__("memchr")
# 72 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 73 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const void *memchr(const void * , int , size_t ) throw() __asm__("memchr")
# 74 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 77 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline void *
# 78 "/usr/include/string.h" 3
memchr(void *__s, int __c, size_t __n) throw()
# 79 "/usr/include/string.h" 3
{
# 80 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 81 "/usr/include/string.h" 3
}
# 83 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const void *
# 84 "/usr/include/string.h" 3
memchr(const void *__s, int __c, size_t __n) throw()
# 85 "/usr/include/string.h" 3
{
# 86 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 87 "/usr/include/string.h" 3
}
# 99 "/usr/include/string.h" 3
void *rawmemchr(void * , int ) throw() __asm__("rawmemchr")
# 100 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 101 "/usr/include/string.h" 3
const void *rawmemchr(const void * , int ) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 110 "/usr/include/string.h" 3
void *memrchr(void * , int , size_t ) throw() __asm__("memrchr")
# 111 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
const void *memrchr(const void * , int , size_t ) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 122 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 123 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 125 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 127 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 130 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strcat(char *__restrict__ , const char *__restrict__ ) throw()
# 131 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 133 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *strncat(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 137 "/usr/include/string.h" 3
extern "C" int strcmp(const char * , const char * ) throw()
# 138 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern "C" int strncmp(const char * , const char * , size_t ) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 144 "/usr/include/string.h" 3
extern "C" int strcoll(const char * , const char * ) throw()
# 145 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 149 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
extern "C" { struct __locale_struct {
# 31 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
struct __locale_data *__locales[13];
# 34 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const char *__names[13];
# 40 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
}; }
# 42 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
extern "C" { typedef __locale_struct *__locale_t; }
# 24 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3
extern "C" { typedef __locale_t locale_t; }
# 156 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * , const char * , locale_t ) throw()
# 157 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 160 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * , const char * , size_t , locale_t ) throw()
# 161 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 167 "/usr/include/string.h" 3
extern "C" char *strdup(const char * ) throw()
# 168 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 175 "/usr/include/string.h" 3
extern "C" char *strndup(const char * , size_t ) throw()
# 176 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 206 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strchr(char * , int ) throw() __asm__("strchr")
# 207 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 208 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strchr(const char * , int ) throw() __asm__("strchr")
# 209 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 212 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 213 "/usr/include/string.h" 3
strchr(char *__s, int __c) throw()
# 214 "/usr/include/string.h" 3
{
# 215 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 216 "/usr/include/string.h" 3
}
# 218 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 219 "/usr/include/string.h" 3
strchr(const char *__s, int __c) throw()
# 220 "/usr/include/string.h" 3
{
# 221 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 222 "/usr/include/string.h" 3
}
# 233 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strrchr(char * , int ) throw() __asm__("strrchr")
# 234 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 235 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strrchr(const char * , int ) throw() __asm__("strrchr")
# 236 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 239 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 240 "/usr/include/string.h" 3
strrchr(char *__s, int __c) throw()
# 241 "/usr/include/string.h" 3
{
# 242 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 243 "/usr/include/string.h" 3
}
# 245 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 246 "/usr/include/string.h" 3
strrchr(const char *__s, int __c) throw()
# 247 "/usr/include/string.h" 3
{
# 248 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 249 "/usr/include/string.h" 3
}
# 261 "/usr/include/string.h" 3
char *strchrnul(char * , int ) throw() __asm__("strchrnul")
# 262 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 263 "/usr/include/string.h" 3
const char *strchrnul(const char * , int ) throw() __asm__("strchrnul")
# 264 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 273 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * , const char * ) throw()
# 274 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 277 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * , const char * ) throw()
# 278 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 283 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strpbrk(char * , const char * ) throw() __asm__("strpbrk")
# 284 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 285 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strpbrk(const char * , const char * ) throw() __asm__("strpbrk")
# 286 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 289 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 290 "/usr/include/string.h" 3
strpbrk(char *__s, const char *__accept) throw()
# 291 "/usr/include/string.h" 3
{
# 292 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 293 "/usr/include/string.h" 3
}
# 295 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 296 "/usr/include/string.h" 3
strpbrk(const char *__s, const char *__accept) throw()
# 297 "/usr/include/string.h" 3
{
# 298 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 299 "/usr/include/string.h" 3
}
# 310 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strstr(char * , const char * ) throw() __asm__("strstr")
# 311 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 312 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strstr(const char * , const char * ) throw() __asm__("strstr")
# 313 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 316 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 317 "/usr/include/string.h" 3
strstr(char *__haystack, const char *__needle) throw()
# 318 "/usr/include/string.h" 3
{
# 319 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 320 "/usr/include/string.h" 3
}
# 322 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 323 "/usr/include/string.h" 3
strstr(const char *__haystack, const char *__needle) throw()
# 324 "/usr/include/string.h" 3
{
# 325 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 326 "/usr/include/string.h" 3
}
# 336 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ , const char *__restrict__ ) throw()
# 337 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 341 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 344 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 346 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 348 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 354 "/usr/include/string.h" 3
char *strcasestr(char * , const char * ) throw() __asm__("strcasestr")
# 355 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 356 "/usr/include/string.h" 3
const char *strcasestr(const char * , const char * ) throw() __asm__("strcasestr")
# 358 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 369 "/usr/include/string.h" 3
extern "C" void *memmem(const void * , size_t , const void * , size_t ) throw()
# 371 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 375 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 377 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 378 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 380 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 385 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * ) throw()
# 386 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 391 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * , size_t ) throw()
# 392 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 397 "/usr/include/string.h" 3
extern "C" char *strerror(int ) throw();
# 421 "/usr/include/string.h" 3
extern "C" char *strerror_r(int , char * , size_t ) throw()
# 422 "/usr/include/string.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 428 "/usr/include/string.h" 3
extern "C" char *strerror_l(int , locale_t ) throw();
# 34 "/usr/include/strings.h" 3
extern "C" int bcmp(const void * , const void * , size_t ) throw()
# 35 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 38 "/usr/include/strings.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void bcopy(const void * , void * , size_t ) throw()
# 39 "/usr/include/strings.h" 3
 __attribute((__nonnull__(1, 2))); }
# 42 "/usr/include/strings.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void bzero(void * , size_t ) throw() __attribute((__nonnull__(1))); }
# 48 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline char *index(char * , int ) throw() __asm__("index")
# 49 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 50 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline const char *index(const char * , int ) throw() __asm__("index")
# 51 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 54 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 55 "/usr/include/strings.h" 3
index(char *__s, int __c) throw()
# 56 "/usr/include/strings.h" 3
{
# 57 "/usr/include/strings.h" 3
return __builtin_index(__s, __c);
# 58 "/usr/include/strings.h" 3
}
# 60 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 61 "/usr/include/strings.h" 3
index(const char *__s, int __c) throw()
# 62 "/usr/include/strings.h" 3
{
# 63 "/usr/include/strings.h" 3
return __builtin_index(__s, __c);
# 64 "/usr/include/strings.h" 3
}
# 76 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline char *rindex(char * , int ) throw() __asm__("rindex")
# 77 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 78 "/usr/include/strings.h" 3
extern __attribute((gnu_inline)) inline const char *rindex(const char * , int ) throw() __asm__("rindex")
# 79 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 82 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 83 "/usr/include/strings.h" 3
rindex(char *__s, int __c) throw()
# 84 "/usr/include/strings.h" 3
{
# 85 "/usr/include/strings.h" 3
return __builtin_rindex(__s, __c);
# 86 "/usr/include/strings.h" 3
}
# 88 "/usr/include/strings.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 89 "/usr/include/strings.h" 3
rindex(const char *__s, int __c) throw()
# 90 "/usr/include/strings.h" 3
{
# 91 "/usr/include/strings.h" 3
return __builtin_rindex(__s, __c);
# 92 "/usr/include/strings.h" 3
}
# 104 "/usr/include/strings.h" 3
extern "C" int ffs(int ) throw() __attribute((const));
# 110 "/usr/include/strings.h" 3
extern "C" int ffsl(long ) throw() __attribute((const));
# 111 "/usr/include/strings.h" 3
__extension__ extern "C" int ffsll(long long ) throw()
# 112 "/usr/include/strings.h" 3
 __attribute((const));
# 116 "/usr/include/strings.h" 3
extern "C" int strcasecmp(const char * , const char * ) throw()
# 117 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 120 "/usr/include/strings.h" 3
extern "C" int strncasecmp(const char * , const char * , size_t ) throw()
# 121 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/strings.h" 3
extern "C" int strcasecmp_l(const char * , const char * , locale_t ) throw()
# 129 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 133 "/usr/include/strings.h" 3
extern "C" int strncasecmp_l(const char * , const char * , size_t , locale_t ) throw()
# 135 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 23 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
extern "C" {
# 22 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 23 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
bcopy(const void *__src, void *__dest, size_t __len) throw()
# 24 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
{
# 25 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
(void)__builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 26 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
} }
# 29 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
extern "C" {
# 28 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 29 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
bzero(void *__dest, size_t __len) throw()
# 30 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
{
# 31 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
(void)__builtin___memset_chk(__dest, '\000', __len, __builtin_object_size(__dest, 0));
# 32 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3
} }
# 436 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void explicit_bzero(void * , size_t ) throw() __attribute((__nonnull__(1))); }
# 440 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ , const char *__restrict__ ) throw()
# 442 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/string.h" 3
extern "C" char *strsignal(int ) throw();
# 450 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 451 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 452 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 453 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 457 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 459 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 460 "/usr/include/string.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 462 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))); }
# 467 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * , const char * ) throw()
# 468 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 471 "/usr/include/string.h" 3
extern "C" char *strfry(char * ) throw() __attribute((__nonnull__(1)));
# 474 "/usr/include/string.h" 3
extern "C" void *memfrob(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 482 "/usr/include/string.h" 3
char *basename(char * ) throw() __asm__("basename")
# 483 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 484 "/usr/include/string.h" 3
const char *basename(const char * ) throw() __asm__("basename")
# 485 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 26 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" void __warn_memset_zero_len() __attribute((__warning__("memset used with constant zero length parameter; this could be due to transposed parameters")));
# 31 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 30 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 31 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __len) throw()
# 33 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 34 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___memcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 35 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 38 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 37 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 38 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
memmove(void *__dest, const void *__src, size_t __len) throw()
# 39 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 40 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 41 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 45 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 44 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 45 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __len) throw()
# 47 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 48 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___mempcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 49 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 59 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 58 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void *
# 59 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
memset(void *__dest, int __ch, size_t __len) throw()
# 60 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 64 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
if (((0) && (__len == (0))) && ((!(0)) || (__ch != 0)))
# 66 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 67 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__warn_memset_zero_len();
# 68 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __dest;
# 69 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
}
# 71 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___memset_chk(__dest, __ch, __len, __builtin_object_size(__dest, 0));
# 72 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 77 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" void __explicit_bzero_chk(void * , size_t , size_t ) throw()
# 78 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
 __attribute((__nonnull__(1)));
# 81 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 80 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 81 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
explicit_bzero(void *__dest, size_t __len) throw()
# 82 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 83 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__explicit_bzero_chk(__dest, __len, __builtin_object_size(__dest, 0));
# 84 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 88 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 87 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 88 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 89 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 90 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 91 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 95 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 94 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 95 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 96 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 97 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___stpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 98 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 103 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 102 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 103 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __len) throw()
# 105 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 106 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strncpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 107 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 110 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" char *__stpncpy_chk(char * , const char * , size_t , size_t ) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" char *__stpncpy_alias(char * , const char * , size_t ) throw() __asm__("stpncpy");
# 116 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 115 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 116 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
stpncpy(char *__dest, const char *__src, size_t __n) throw()
# 117 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 118 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
if ((__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) && ((!(0)) || (__n > __builtin_object_size(__dest, 2 > 1)))) {
# 120 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __stpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1)); }
# 121 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __stpncpy_alias(__dest, __src, __n);
# 122 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 126 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 125 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 126 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 127 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 128 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strcat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 129 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 133 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
extern "C" {
# 132 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline char *
# 133 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __len) throw()
# 135 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
{
# 136 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
return __builtin___strncat_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 137 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3
} }
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 34 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 42 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int8_t __int_least8_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint8_t __uint_least8_t;
# 54 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int16_t __int_least16_t;
# 55 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint16_t __uint_least16_t;
# 56 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int32_t __int_least32_t;
# 57 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint32_t __uint_least32_t;
# 58 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int64_t __int_least64_t;
# 59 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint64_t __uint_least64_t;
# 63 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 64 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 72 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intmax_t;
# 73 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uintmax_t;
# 145 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 146 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 148 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 149 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 151 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 152 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 154 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 155 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 156 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 157 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 160 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 161 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 164 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 165 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 168 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 171 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 174 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 179 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 180 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 183 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 184 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 187 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 188 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 191 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 193 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 196 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 198 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 202 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 203 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 206 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 209 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 214 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __sig_atomic_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
struct timeval {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__time_t tv_sec;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__suseconds_t tv_usec;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
};
# 26 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 46 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 48 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 54 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 78 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" int clock_adjtime(__clockid_t , timex * ) throw();
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 3
typedef __clock_t clock_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3
typedef __time_t time_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
struct tm {
# 9 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_sec;
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_min;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_hour;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mday;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mon;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_year;
# 15 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_wday;
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_yday;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_isdst;
# 20 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
long tm_gmtoff;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
const char *tm_zone;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
};
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
struct timespec {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__time_t tv_sec;
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__syscall_slong_t tv_nsec;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
};
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 3
typedef __clockid_t clockid_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 3
typedef __timer_t timer_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
struct itimerspec {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_interval;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_value;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
};
# 49 "/usr/include/time.h" 3
struct sigevent;
# 54 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 72 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 75 "/usr/include/time.h" 3
extern "C" time_t time(time_t * ) throw();
# 78 "/usr/include/time.h" 3
extern "C" double difftime(time_t , time_t ) throw()
# 79 "/usr/include/time.h" 3
 __attribute((const));
# 82 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * ) throw();
# 88 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ ) throw();
# 95 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ , const char *__restrict__ , tm * ) throw();
# 104 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ , locale_t ) throw();
# 111 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ , const char *__restrict__ , tm * , locale_t ) throw();
# 119 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * ) throw();
# 123 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * ) throw();
# 128 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 133 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 139 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * ) throw();
# 142 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * ) throw();
# 149 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ , char *__restrict__ ) throw();
# 153 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ , char *__restrict__ ) throw();
# 159 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 160 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 161 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 166 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 170 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 174 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 175 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 190 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * ) throw();
# 193 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * ) throw();
# 196 "/usr/include/time.h" 3
extern "C" int dysize(int ) throw() __attribute((const));
# 205 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * , timespec * );
# 210 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t , timespec * ) throw();
# 213 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t , timespec * ) throw();
# 216 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t , const timespec * ) throw();
# 224 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t , int , const timespec * , timespec * );
# 229 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t , clockid_t * ) throw();
# 234 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t , sigevent *__restrict__ , timer_t *__restrict__ ) throw();
# 239 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t ) throw();
# 242 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t , int , const itimerspec *__restrict__ , itimerspec *__restrict__ ) throw();
# 247 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t , itimerspec * ) throw();
# 251 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t ) throw();
# 257 "/usr/include/time.h" 3
extern "C" int timespec_get(timespec * , int ) throw()
# 258 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 274 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 283 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * );
# 297 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ , tm *__restrict__ );
# 69 "/usr/local/cuda-5.0//include/common_functions.h"
extern "C" clock_t clock() throw();
# 70 "/usr/local/cuda-5.0//include/common_functions.h"
extern "C" { extern __attribute((gnu_inline)) inline void *memset(void *, int, size_t) throw(); }
# 71 "/usr/local/cuda-5.0//include/common_functions.h"
extern "C" { extern __attribute((gnu_inline)) inline void *memcpy(void *, const void *, size_t) throw(); }
# 136 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int abs(int) throw();
# 137 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long labs(long) throw();
# 138 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llabs(long long) throw();
# 180 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fabs(double ) throw();
# 221 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fabsf(float ) throw();
# 222 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int min(int, int);
# 223 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned umin(unsigned, unsigned);
# 224 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llmin(long long, long long);
# 225 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned long long ullmin(unsigned long long, unsigned long long);
# 241 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fminf(float , float ) throw();
# 257 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fmin(double , double ) throw();
# 258 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int max(int, int);
# 259 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned umax(unsigned, unsigned);
# 260 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llmax(long long, long long);
# 261 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" unsigned long long ullmax(unsigned long long, unsigned long long);
# 277 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fmaxf(float , float ) throw();
# 293 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fmax(double, double) throw();
# 334 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sin(double ) throw();
# 367 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cos(double ) throw();
# 382 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincos(double , double * , double * ) throw();
# 398 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincosf(float , float * , float * ) throw();
# 439 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double tan(double ) throw();
# 508 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sqrt(double ) throw();
# 577 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double rsqrt(double );
# 646 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float rsqrtf(float );
# 697 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log2(double ) throw();
# 718 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double exp2(double ) throw();
# 739 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float exp2f(float ) throw();
# 760 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double exp10(double ) throw();
# 782 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float exp10f(float ) throw();
# 823 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double expm1(double ) throw();
# 864 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float expm1f(float ) throw();
# 915 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float log2f(float ) throw();
# 966 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log10(double ) throw();
# 1037 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log(double ) throw();
# 1130 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double log1p(double ) throw();
# 1223 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float log1pf(float ) throw();
# 1295 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double floor(double ) throw();
# 1334 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double exp(double ) throw();
# 1365 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cosh(double ) throw();
# 1395 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sinh(double ) throw();
# 1425 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double tanh(double ) throw();
# 1459 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double acosh(double ) throw();
# 1493 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float acoshf(float ) throw();
# 1505 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double asinh(double ) throw();
# 1517 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float asinhf(float ) throw();
# 1567 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double atanh(double ) throw();
# 1617 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float atanhf(float ) throw();
# 1673 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double ldexp(double , int ) throw();
# 1729 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float ldexpf(float , int ) throw();
# 1780 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double logb(double ) throw();
# 1831 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float logbf(float ) throw();
# 1857 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int ilogb(double ) throw();
# 1883 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int ilogbf(float ) throw();
# 1955 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double scalbn(double , int ) throw();
# 2027 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float scalbnf(float , int ) throw();
# 2099 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double scalbln(double , long ) throw();
# 2171 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float scalblnf(float , long ) throw();
# 2246 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double frexp(double , int * ) throw();
# 2321 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float frexpf(float , int * ) throw();
# 2334 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double round(double ) throw();
# 2347 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float roundf(float ) throw();
# 2361 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lround(double ) throw();
# 2375 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lroundf(float ) throw();
# 2389 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llround(double ) throw();
# 2403 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llroundf(float ) throw();
# 2414 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double rint(double ) throw();
# 2425 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float rintf(float ) throw();
# 2437 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lrint(double ) throw();
# 2449 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long lrintf(float ) throw();
# 2461 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llrint(double ) throw();
# 2473 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" long long llrintf(float ) throw();
# 2522 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double nearbyint(double ) throw();
# 2571 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float nearbyintf(float ) throw();
# 2630 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double ceil(double ) throw();
# 2641 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double trunc(double ) throw();
# 2652 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float truncf(float ) throw();
# 2674 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fdim(double , double ) throw();
# 2696 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fdimf(float , float ) throw();
# 2729 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double atan2(double , double ) throw();
# 2760 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double atan(double ) throw();
# 2783 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double acos(double ) throw();
# 2815 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double asin(double ) throw();
# 2855 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double hypot(double , double ) throw();
# 2898 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float hypotf(float , float ) throw();
# 2983 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cbrt(double ) throw();
# 3065 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float cbrtf(float ) throw();
# 3114 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double rcbrt(double );
# 3163 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float rcbrtf(float );
# 3223 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double sinpi(double );
# 3283 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sinpif(float );
# 3335 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double cospi(double );
# 3387 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float cospif(float );
# 3417 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincospi(double , double * , double * );
# 3447 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" void sincospif(float , float * , float * );
# 3755 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double pow(double , double ) throw();
# 3811 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double modf(double , double * ) throw();
# 3870 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fmod(double , double ) throw();
# 3955 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double remainder(double , double ) throw();
# 4041 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float remainderf(float , float ) throw();
# 4091 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double remquo(double , double , int * ) throw();
# 4141 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float remquof(float , float , int * ) throw();
# 4179 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double j0(double ) throw();
# 4217 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float j0f(float ) throw();
# 4274 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double j1(double ) throw();
# 4331 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float j1f(float ) throw();
# 4370 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double jn(int , double ) throw();
# 4409 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float jnf(int , float ) throw();
# 4457 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double y0(double ) throw();
# 4505 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float y0f(float ) throw();
# 4553 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double y1(double ) throw();
# 4601 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float y1f(float ) throw();
# 4650 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double yn(int , double ) throw();
# 4699 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float ynf(int , float ) throw();
# 4777 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erf(double ) throw();
# 4855 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erff(float ) throw();
# 4912 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfinv(double );
# 4969 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfinvf(float );
# 5003 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfc(double ) throw();
# 5037 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfcf(float ) throw();
# 5161 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double lgamma(double ) throw();
# 5217 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfcinv(double );
# 5273 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfcinvf(float );
# 5331 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double normcdfinv(double );
# 5389 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float normcdfinvf(float );
# 5432 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double normcdf(double );
# 5475 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float normcdff(float );
# 5550 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double erfcx(double );
# 5625 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float erfcxf(float );
# 5754 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float lgammaf(float ) throw();
# 5859 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double tgamma(double ) throw();
# 5964 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float tgammaf(float ) throw();
# 5973 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double copysign(double , double ) throw();
# 5982 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float copysignf(float , float ) throw();
# 6015 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double nextafter(double , double ) throw();
# 6048 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float nextafterf(float , float ) throw();
# 6060 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double nan(const char * ) throw();
# 6072 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float nanf(const char * ) throw();
# 6073 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isinff(float) throw();
# 6074 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isnanf(float) throw();
# 6083 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __finite(double) throw();
# 6084 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __finitef(float) throw();
# 6085 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __signbit(double) throw();
# 6086 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isnan(double) throw();
# 6087 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isinf(double) throw();
# 6090 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __signbitf(float) throw();
# 6244 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" double fma(double , double , double ) throw();
# 6398 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fmaf(float , float , float ) throw();
# 6403 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __signbitl(long double) throw();
# 6409 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __finitel(long double) throw();
# 6410 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isinfl(long double) throw();
# 6411 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" int __isnanl(long double) throw();
# 6458 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float acosf(float ) throw();
# 6498 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float asinf(float ) throw();
# 6538 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float atanf(float ) throw();
# 6571 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float atan2f(float , float ) throw();
# 6595 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float cosf(float ) throw();
# 6637 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sinf(float ) throw();
# 6679 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float tanf(float ) throw();
# 6703 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float coshf(float ) throw();
# 6744 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sinhf(float ) throw();
# 6774 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float tanhf(float ) throw();
# 6825 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float logf(float ) throw();
# 6875 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float expf(float ) throw();
# 6926 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float log10f(float ) throw();
# 6981 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float modff(float , float * ) throw();
# 7289 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float powf(float , float ) throw();
# 7358 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float sqrtf(float ) throw();
# 7417 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float ceilf(float ) throw();
# 7489 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float floorf(float ) throw();
# 7548 "/usr/local/cuda-5.0//include/math_functions.h"
extern "C" float fmodf(float , float ) throw();
# 214 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef float _Float32; }
# 251 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef double _Float64; }
# 268 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef double _Float32x; }
# 285 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
extern "C" { typedef long double _Float64x; }
# 149 "/usr/include/math.h" 3
extern "C" { typedef float float_t; }
# 150 "/usr/include/math.h" 3
extern "C" { typedef double double_t; }
# 238 "/usr/include/math.h" 3
enum {
# 239 "/usr/include/math.h" 3
FP_INT_UPWARD,
# 242 "/usr/include/math.h" 3
FP_INT_DOWNWARD,
# 245 "/usr/include/math.h" 3
FP_INT_TOWARDZERO,
# 248 "/usr/include/math.h" 3
FP_INT_TONEARESTFROMZERO,
# 251 "/usr/include/math.h" 3
FP_INT_TONEAREST
# 254 "/usr/include/math.h" 3
};
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __fpclassify(double ) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __signbit(double ) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isinf(double ) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __finite(double ) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isnan(double ) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __iseqsig(double , double ) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __issignaling(double ) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double acos(double ) throw(); extern "C" double __acos(double ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double asin(double ) throw(); extern "C" double __asin(double ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atan(double ) throw(); extern "C" double __atan(double ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atan2(double , double ) throw(); extern "C" double __atan2(double , double ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cos(double ) throw(); extern "C" double __cos(double ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sin(double ) throw(); extern "C" double __sin(double ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tan(double ) throw(); extern "C" double __tan(double ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cosh(double ) throw(); extern "C" double __cosh(double ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sinh(double ) throw(); extern "C" double __sinh(double ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tanh(double ) throw(); extern "C" double __tanh(double ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincos(double , double * , double * ) throw(); extern "C" void __sincos(double , double * , double * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double acosh(double ) throw(); extern "C" double __acosh(double ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double asinh(double ) throw(); extern "C" double __asinh(double ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double atanh(double ) throw(); extern "C" double __atanh(double ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp(double ) throw(); extern "C" double __exp(double ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double frexp(double , int * ) throw(); extern "C" double __frexp(double , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double ldexp(double , int ) throw(); extern "C" double __ldexp(double , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log(double ) throw(); extern "C" double __log(double ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log10(double ) throw(); extern "C" double __log10(double ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double modf(double , double * ) throw(); extern "C" double __modf(double , double * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp10(double ) throw(); extern "C" double __exp10(double ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double expm1(double ) throw(); extern "C" double __expm1(double ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log1p(double ) throw(); extern "C" double __log1p(double ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double logb(double ) throw(); extern "C" double __logb(double ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double exp2(double ) throw(); extern "C" double __exp2(double ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double log2(double ) throw(); extern "C" double __log2(double ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double pow(double , double ) throw(); extern "C" double __pow(double , double ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double sqrt(double ) throw(); extern "C" double __sqrt(double ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double hypot(double , double ) throw(); extern "C" double __hypot(double , double ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double cbrt(double ) throw(); extern "C" double __cbrt(double ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double ceil(double ) throw() __attribute((const)); extern "C" double __ceil(double ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fabs(double ) throw() __attribute((const)); extern "C" double __fabs(double ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double floor(double ) throw() __attribute((const)); extern "C" double __floor(double ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmod(double , double ) throw(); extern "C" double __fmod(double , double ) throw();
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinf(double ) throw() __attribute((const));
# 182 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finite(double ) throw() __attribute((const));
# 185 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double drem(double , double ) throw(); extern "C" double __drem(double , double ) throw();
# 189 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double significand(double ) throw(); extern "C" double __significand(double ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double copysign(double , double ) throw() __attribute((const)); extern "C" double __copysign(double , double ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nan(const char * ) throw(); extern "C" double __nan(const char * ) throw();
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnan(double ) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * ) throw(); extern "C" double __lgamma_r(double, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double rint(double ) throw(); extern "C" double __rint(double ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextafter(double , double ) throw(); extern "C" double __nextafter(double , double ) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nexttoward(double , long double ) throw(); extern "C" double __nexttoward(double , long double ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextdown(double ) throw(); extern "C" double __nextdown(double ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nextup(double ) throw(); extern "C" double __nextup(double ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double remainder(double , double ) throw(); extern "C" double __remainder(double , double ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalbn(double , int ) throw(); extern "C" double __scalbn(double , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogb(double ) throw(); extern "C" int __ilogb(double ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogb(double ) throw(); extern "C" long __llogb(double ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalbln(double , long ) throw(); extern "C" double __scalbln(double , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double nearbyint(double ) throw(); extern "C" double __nearbyint(double ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double round(double ) throw() __attribute((const)); extern "C" double __round(double ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double trunc(double ) throw() __attribute((const)); extern "C" double __trunc(double ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double remquo(double , double , int * ) throw(); extern "C" double __remquo(double , double , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrint(double ) throw(); extern "C" long __lrint(double ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrint(double ) throw(); extern "C" long long __llrint(double ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lround(double ) throw(); extern "C" long __lround(double ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llround(double ) throw(); extern "C" long long __llround(double ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fdim(double , double ) throw(); extern "C" double __fdim(double , double ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmax(double , double ) throw() __attribute((const)); extern "C" double __fmax(double , double ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmin(double , double ) throw() __attribute((const)); extern "C" double __fmin(double , double ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fma(double , double , double ) throw(); extern "C" double __fma(double , double , double ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double roundeven(double ) throw() __attribute((const)); extern "C" double __roundeven(double ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfp(double , int , unsigned ) throw(); extern "C" __intmax_t __fromfp(double , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfp(double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfp(double , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpx(double , int , unsigned ) throw(); extern "C" __intmax_t __fromfpx(double , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpx(double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpx(double , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fmaxmag(double , double ) throw() __attribute((const)); extern "C" double __fmaxmag(double , double ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double fminmag(double , double ) throw() __attribute((const)); extern "C" double __fminmag(double , double ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalize(double * , const double * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorder(const double * , const double * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermag(const double * , const double * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double getpayload(const double * ) throw(); extern "C" double __getpayload(const double * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayload(double * , double ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsig(double * , double ) throw();
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" double scalb(double , double ) throw(); extern "C" double __scalb(double , double ) throw();
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __fpclassifyf(float ) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __signbitf(float ) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isinff(float ) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __finitef(float ) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isnanf(float ) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __iseqsigf(float , float ) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __issignalingf(float ) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float acosf(float ) throw(); extern "C" float __acosf(float ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float asinf(float ) throw(); extern "C" float __asinf(float ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atanf(float ) throw(); extern "C" float __atanf(float ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atan2f(float , float ) throw(); extern "C" float __atan2f(float , float ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float cosf(float ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sinf(float ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tanf(float ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float coshf(float ) throw(); extern "C" float __coshf(float ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sinhf(float ) throw(); extern "C" float __sinhf(float ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tanhf(float ) throw(); extern "C" float __tanhf(float ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf(float , float * , float * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float acoshf(float ) throw(); extern "C" float __acoshf(float ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float asinhf(float ) throw(); extern "C" float __asinhf(float ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float atanhf(float ) throw(); extern "C" float __atanhf(float ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float expf(float ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float frexpf(float , int * ) throw(); extern "C" float __frexpf(float , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ldexpf(float , int ) throw(); extern "C" float __ldexpf(float , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float logf(float ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log10f(float ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float modff(float , float * ) throw(); extern "C" float __modff(float , float * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float exp10f(float ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float expm1f(float ) throw(); extern "C" float __expm1f(float ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log1pf(float ) throw(); extern "C" float __log1pf(float ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float logbf(float ) throw(); extern "C" float __logbf(float ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float exp2f(float ) throw(); extern "C" float __exp2f(float ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float log2f(float ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float powf(float , float ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float sqrtf(float ) throw(); extern "C" float __sqrtf(float ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float hypotf(float , float ) throw(); extern "C" float __hypotf(float , float ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float cbrtf(float ) throw(); extern "C" float __cbrtf(float ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ceilf(float ) throw() __attribute((const)); extern "C" float __ceilf(float ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fabsf(float ) throw() __attribute((const)); extern "C" float __fabsf(float ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float floorf(float ) throw() __attribute((const)); extern "C" float __floorf(float ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmodf(float , float ) throw(); extern "C" float __fmodf(float , float ) throw();
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinff(float ) throw() __attribute((const));
# 182 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finitef(float ) throw() __attribute((const));
# 185 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float dremf(float , float ) throw(); extern "C" float __dremf(float , float ) throw();
# 189 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float significandf(float ) throw(); extern "C" float __significandf(float ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float copysignf(float , float ) throw() __attribute((const)); extern "C" float __copysignf(float , float ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nanf(const char * ) throw(); extern "C" float __nanf(const char * ) throw();
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnanf(float ) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * ) throw(); extern "C" float __lgammaf_r(float, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float rintf(float ) throw(); extern "C" float __rintf(float ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextafterf(float , float ) throw(); extern "C" float __nextafterf(float , float ) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nexttowardf(float , long double ) throw(); extern "C" float __nexttowardf(float , long double ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextdownf(float ) throw(); extern "C" float __nextdownf(float ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nextupf(float ) throw(); extern "C" float __nextupf(float ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float remainderf(float , float ) throw(); extern "C" float __remainderf(float , float ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalbnf(float , int ) throw(); extern "C" float __scalbnf(float , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf(float ) throw(); extern "C" int __ilogbf(float ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf(float ) throw(); extern "C" long __llogbf(float ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalblnf(float , long ) throw(); extern "C" float __scalblnf(float , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float nearbyintf(float ) throw(); extern "C" float __nearbyintf(float ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float roundf(float ) throw() __attribute((const)); extern "C" float __roundf(float ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float truncf(float ) throw() __attribute((const)); extern "C" float __truncf(float ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float remquof(float , float , int * ) throw(); extern "C" float __remquof(float , float , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf(float ) throw(); extern "C" long __lrintf(float ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf(float ) throw(); extern "C" long long __llrintf(float ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf(float ) throw(); extern "C" long __lroundf(float ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf(float ) throw(); extern "C" long long __llroundf(float ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fdimf(float , float ) throw(); extern "C" float __fdimf(float , float ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaxf(float , float ) throw() __attribute((const)); extern "C" float __fmaxf(float , float ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fminf(float , float ) throw() __attribute((const)); extern "C" float __fminf(float , float ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaf(float , float , float ) throw(); extern "C" float __fmaf(float , float , float ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float roundevenf(float ) throw() __attribute((const)); extern "C" float __roundevenf(float ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf(float , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf(float , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf(float , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf(float , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf(float , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf(float , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf(float , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf(float , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fmaxmagf(float , float ) throw() __attribute((const)); extern "C" float __fmaxmagf(float , float ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float fminmagf(float , float ) throw() __attribute((const)); extern "C" float __fminmagf(float , float ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef(float * , const float * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf(const float * , const float * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf(const float * , const float * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float getpayloadf(const float * ) throw(); extern "C" float __getpayloadf(const float * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf(float * , float ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf(float * , float ) throw();
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" float scalbf(float , float ) throw(); extern "C" float __scalbf(float , float ) throw();
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __fpclassifyl(long double ) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __signbitl(long double ) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isinfl(long double ) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __finitel(long double ) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __isnanl(long double ) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __iseqsigl(long double , long double ) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern "C" int __issignalingl(long double ) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double acosl(long double ) throw(); extern "C" long double __acosl(long double ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double asinl(long double ) throw(); extern "C" long double __asinl(long double ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atanl(long double ) throw(); extern "C" long double __atanl(long double ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atan2l(long double , long double ) throw(); extern "C" long double __atan2l(long double , long double ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double cosl(long double ) throw(); extern "C" long double __cosl(long double ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sinl(long double ) throw(); extern "C" long double __sinl(long double ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tanl(long double ) throw(); extern "C" long double __tanl(long double ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double coshl(long double ) throw(); extern "C" long double __coshl(long double ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sinhl(long double ) throw(); extern "C" long double __sinhl(long double ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tanhl(long double ) throw(); extern "C" long double __tanhl(long double ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosl(long double , long double * , long double * ) throw(); extern "C" void __sincosl(long double , long double * , long double * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double acoshl(long double ) throw(); extern "C" long double __acoshl(long double ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double asinhl(long double ) throw(); extern "C" long double __asinhl(long double ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double atanhl(long double ) throw(); extern "C" long double __atanhl(long double ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double expl(long double ) throw(); extern "C" long double __expl(long double ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double frexpl(long double , int * ) throw(); extern "C" long double __frexpl(long double , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double , int ) throw(); extern "C" long double __ldexpl(long double , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double logl(long double ) throw(); extern "C" long double __logl(long double ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log10l(long double ) throw(); extern "C" long double __log10l(long double ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double modfl(long double , long double * ) throw(); extern "C" long double __modfl(long double , long double * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double exp10l(long double ) throw(); extern "C" long double __exp10l(long double ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double expm1l(long double ) throw(); extern "C" long double __expm1l(long double ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log1pl(long double ) throw(); extern "C" long double __log1pl(long double ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double logbl(long double ) throw(); extern "C" long double __logbl(long double ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double exp2l(long double ) throw(); extern "C" long double __exp2l(long double ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double log2l(long double ) throw(); extern "C" long double __log2l(long double ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double powl(long double , long double ) throw(); extern "C" long double __powl(long double , long double ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double ) throw(); extern "C" long double __sqrtl(long double ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double hypotl(long double , long double ) throw(); extern "C" long double __hypotl(long double , long double ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double ) throw(); extern "C" long double __cbrtl(long double ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ceill(long double ) throw() __attribute((const)); extern "C" long double __ceill(long double ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fabsl(long double ) throw() __attribute((const)); extern "C" long double __fabsl(long double ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double floorl(long double ) throw() __attribute((const)); extern "C" long double __floorl(long double ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmodl(long double , long double ) throw(); extern "C" long double __fmodl(long double , long double ) throw();
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isinfl(long double ) throw() __attribute((const));
# 182 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int finitel(long double ) throw() __attribute((const));
# 185 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double dreml(long double , long double ) throw(); extern "C" long double __dreml(long double , long double ) throw();
# 189 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double significandl(long double ) throw(); extern "C" long double __significandl(long double ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double copysignl(long double , long double ) throw() __attribute((const)); extern "C" long double __copysignl(long double , long double ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nanl(const char * ) throw(); extern "C" long double __nanl(const char * ) throw();
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int isnanl(long double ) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * ) throw(); extern "C" long double __lgammal_r(long double, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double rintl(long double ) throw(); extern "C" long double __rintl(long double ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double , long double ) throw(); extern "C" long double __nextafterl(long double , long double ) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double , long double ) throw(); extern "C" long double __nexttowardl(long double , long double ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextdownl(long double ) throw(); extern "C" long double __nextdownl(long double ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nextupl(long double ) throw(); extern "C" long double __nextupl(long double ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double remainderl(long double , long double ) throw(); extern "C" long double __remainderl(long double , long double ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double , int ) throw(); extern "C" long double __scalbnl(long double , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbl(long double ) throw(); extern "C" int __ilogbl(long double ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbl(long double ) throw(); extern "C" long __llogbl(long double ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double , long ) throw(); extern "C" long double __scalblnl(long double , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double ) throw(); extern "C" long double __nearbyintl(long double ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double roundl(long double ) throw() __attribute((const)); extern "C" long double __roundl(long double ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double truncl(long double ) throw() __attribute((const)); extern "C" long double __truncl(long double ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double remquol(long double , long double , int * ) throw(); extern "C" long double __remquol(long double , long double , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintl(long double ) throw(); extern "C" long __lrintl(long double ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintl(long double ) throw(); extern "C" long long __llrintl(long double ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundl(long double ) throw(); extern "C" long __lroundl(long double ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundl(long double ) throw(); extern "C" long long __llroundl(long double ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fdiml(long double , long double ) throw(); extern "C" long double __fdiml(long double , long double ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double , long double ) throw() __attribute((const)); extern "C" long double __fmaxl(long double , long double ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fminl(long double , long double ) throw() __attribute((const)); extern "C" long double __fminl(long double , long double ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmal(long double , long double , long double ) throw(); extern "C" long double __fmal(long double , long double , long double ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double roundevenl(long double ) throw() __attribute((const)); extern "C" long double __roundevenl(long double ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpl(long double , int , unsigned ) throw(); extern "C" __intmax_t __fromfpl(long double , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpl(long double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpl(long double , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxl(long double , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxl(long double , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxl(long double , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxl(long double , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fmaxmagl(long double , long double ) throw() __attribute((const)); extern "C" long double __fmaxmagl(long double , long double ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double fminmagl(long double , long double ) throw() __attribute((const)); extern "C" long double __fminmagl(long double , long double ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizel(long double * , const long double * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderl(const long double * , const long double * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagl(const long double * , const long double * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double getpayloadl(const long double * ) throw(); extern "C" long double __getpayloadl(const long double * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadl(long double * , long double ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigl(long double * , long double ) throw();
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long double scalbl(long double , long double ) throw(); extern "C" long double __scalbl(long double , long double ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 acosf32(_Float32 ) throw(); extern "C" _Float32 __acosf32(_Float32 ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 asinf32(_Float32 ) throw(); extern "C" _Float32 __asinf32(_Float32 ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 atanf32(_Float32 ) throw(); extern "C" _Float32 __atanf32(_Float32 ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 atan2f32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __atan2f32(_Float32 , _Float32 ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 cosf32(_Float32 ) throw(); extern "C" _Float32 __cosf32(_Float32 ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 sinf32(_Float32 ) throw(); extern "C" _Float32 __sinf32(_Float32 ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 tanf32(_Float32 ) throw(); extern "C" _Float32 __tanf32(_Float32 ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 coshf32(_Float32 ) throw(); extern "C" _Float32 __coshf32(_Float32 ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 sinhf32(_Float32 ) throw(); extern "C" _Float32 __sinhf32(_Float32 ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 tanhf32(_Float32 ) throw(); extern "C" _Float32 __tanhf32(_Float32 ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf32(_Float32 , _Float32 * , _Float32 * ) throw(); extern "C" void __sincosf32(_Float32 , _Float32 * , _Float32 * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 acoshf32(_Float32 ) throw(); extern "C" _Float32 __acoshf32(_Float32 ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 asinhf32(_Float32 ) throw(); extern "C" _Float32 __asinhf32(_Float32 ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 atanhf32(_Float32 ) throw(); extern "C" _Float32 __atanhf32(_Float32 ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 expf32(_Float32 ) throw(); extern "C" _Float32 __expf32(_Float32 ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 frexpf32(_Float32 , int * ) throw(); extern "C" _Float32 __frexpf32(_Float32 , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 ldexpf32(_Float32 , int ) throw(); extern "C" _Float32 __ldexpf32(_Float32 , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 logf32(_Float32 ) throw(); extern "C" _Float32 __logf32(_Float32 ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 log10f32(_Float32 ) throw(); extern "C" _Float32 __log10f32(_Float32 ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 modff32(_Float32 , _Float32 * ) throw(); extern "C" _Float32 __modff32(_Float32 , _Float32 * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 exp10f32(_Float32 ) throw(); extern "C" _Float32 __exp10f32(_Float32 ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 expm1f32(_Float32 ) throw(); extern "C" _Float32 __expm1f32(_Float32 ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 log1pf32(_Float32 ) throw(); extern "C" _Float32 __log1pf32(_Float32 ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 logbf32(_Float32 ) throw(); extern "C" _Float32 __logbf32(_Float32 ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 exp2f32(_Float32 ) throw(); extern "C" _Float32 __exp2f32(_Float32 ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 log2f32(_Float32 ) throw(); extern "C" _Float32 __log2f32(_Float32 ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 powf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __powf32(_Float32 , _Float32 ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 sqrtf32(_Float32 ) throw(); extern "C" _Float32 __sqrtf32(_Float32 ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 hypotf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __hypotf32(_Float32 , _Float32 ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 cbrtf32(_Float32 ) throw(); extern "C" _Float32 __cbrtf32(_Float32 ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 ceilf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __ceilf32(_Float32 ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fabsf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __fabsf32(_Float32 ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 floorf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __floorf32(_Float32 ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmodf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __fmodf32(_Float32 , _Float32 ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 copysignf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __copysignf32(_Float32 , _Float32 ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nanf32(const char * ) throw(); extern "C" _Float32 __nanf32(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 j0f32(_Float32) throw(); extern "C" _Float32 __j0f32(_Float32) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 j1f32(_Float32) throw(); extern "C" _Float32 __j1f32(_Float32) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 jnf32(int, _Float32) throw(); extern "C" _Float32 __jnf32(int, _Float32) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 y0f32(_Float32) throw(); extern "C" _Float32 __y0f32(_Float32) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 y1f32(_Float32) throw(); extern "C" _Float32 __y1f32(_Float32) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 ynf32(int, _Float32) throw(); extern "C" _Float32 __ynf32(int, _Float32) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 erff32(_Float32) throw(); extern "C" _Float32 __erff32(_Float32) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 erfcf32(_Float32) throw(); extern "C" _Float32 __erfcf32(_Float32) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 lgammaf32(_Float32) throw(); extern "C" _Float32 __lgammaf32(_Float32) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 tgammaf32(_Float32) throw(); extern "C" _Float32 __tgammaf32(_Float32) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 lgammaf32_r(_Float32, int * ) throw(); extern "C" _Float32 __lgammaf32_r(_Float32, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 rintf32(_Float32 ) throw(); extern "C" _Float32 __rintf32(_Float32 ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nextafterf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __nextafterf32(_Float32 , _Float32 ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nextdownf32(_Float32 ) throw(); extern "C" _Float32 __nextdownf32(_Float32 ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nextupf32(_Float32 ) throw(); extern "C" _Float32 __nextupf32(_Float32 ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 remainderf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __remainderf32(_Float32 , _Float32 ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 scalbnf32(_Float32 , int ) throw(); extern "C" _Float32 __scalbnf32(_Float32 , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf32(_Float32 ) throw(); extern "C" int __ilogbf32(_Float32 ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf32(_Float32 ) throw(); extern "C" long __llogbf32(_Float32 ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 scalblnf32(_Float32 , long ) throw(); extern "C" _Float32 __scalblnf32(_Float32 , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 nearbyintf32(_Float32 ) throw(); extern "C" _Float32 __nearbyintf32(_Float32 ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 roundf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __roundf32(_Float32 ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 truncf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __truncf32(_Float32 ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 remquof32(_Float32 , _Float32 , int * ) throw(); extern "C" _Float32 __remquof32(_Float32 , _Float32 , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf32(_Float32 ) throw(); extern "C" long __lrintf32(_Float32 ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf32(_Float32 ) throw(); extern "C" long long __llrintf32(_Float32 ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf32(_Float32 ) throw(); extern "C" long __lroundf32(_Float32 ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf32(_Float32 ) throw(); extern "C" long long __llroundf32(_Float32 ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fdimf32(_Float32 , _Float32 ) throw(); extern "C" _Float32 __fdimf32(_Float32 , _Float32 ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmaxf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fmaxf32(_Float32 , _Float32 ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fminf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fminf32(_Float32 , _Float32 ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmaf32(_Float32 , _Float32 , _Float32 ) throw(); extern "C" _Float32 __fmaf32(_Float32 , _Float32 , _Float32 ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 roundevenf32(_Float32 ) throw() __attribute((const)); extern "C" _Float32 __roundevenf32(_Float32 ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf32(_Float32 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf32(_Float32 , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf32(_Float32 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf32(_Float32 , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf32(_Float32 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf32(_Float32 , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf32(_Float32 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf32(_Float32 , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fmaxmagf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fmaxmagf32(_Float32 , _Float32 ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 fminmagf32(_Float32 , _Float32 ) throw() __attribute((const)); extern "C" _Float32 __fminmagf32(_Float32 , _Float32 ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef32(_Float32 * , const _Float32 * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf32(const _Float32 * , const _Float32 * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf32(const _Float32 * , const _Float32 * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32 getpayloadf32(const _Float32 * ) throw(); extern "C" _Float32 __getpayloadf32(const _Float32 * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf32(_Float32 * , _Float32 ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf32(_Float32 * , _Float32 ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 acosf64(_Float64 ) throw(); extern "C" _Float64 __acosf64(_Float64 ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 asinf64(_Float64 ) throw(); extern "C" _Float64 __asinf64(_Float64 ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 atanf64(_Float64 ) throw(); extern "C" _Float64 __atanf64(_Float64 ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 atan2f64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __atan2f64(_Float64 , _Float64 ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 cosf64(_Float64 ) throw(); extern "C" _Float64 __cosf64(_Float64 ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 sinf64(_Float64 ) throw(); extern "C" _Float64 __sinf64(_Float64 ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 tanf64(_Float64 ) throw(); extern "C" _Float64 __tanf64(_Float64 ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 coshf64(_Float64 ) throw(); extern "C" _Float64 __coshf64(_Float64 ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 sinhf64(_Float64 ) throw(); extern "C" _Float64 __sinhf64(_Float64 ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 tanhf64(_Float64 ) throw(); extern "C" _Float64 __tanhf64(_Float64 ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf64(_Float64 , _Float64 * , _Float64 * ) throw(); extern "C" void __sincosf64(_Float64 , _Float64 * , _Float64 * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 acoshf64(_Float64 ) throw(); extern "C" _Float64 __acoshf64(_Float64 ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 asinhf64(_Float64 ) throw(); extern "C" _Float64 __asinhf64(_Float64 ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 atanhf64(_Float64 ) throw(); extern "C" _Float64 __atanhf64(_Float64 ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 expf64(_Float64 ) throw(); extern "C" _Float64 __expf64(_Float64 ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 frexpf64(_Float64 , int * ) throw(); extern "C" _Float64 __frexpf64(_Float64 , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 ldexpf64(_Float64 , int ) throw(); extern "C" _Float64 __ldexpf64(_Float64 , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 logf64(_Float64 ) throw(); extern "C" _Float64 __logf64(_Float64 ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 log10f64(_Float64 ) throw(); extern "C" _Float64 __log10f64(_Float64 ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 modff64(_Float64 , _Float64 * ) throw(); extern "C" _Float64 __modff64(_Float64 , _Float64 * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 exp10f64(_Float64 ) throw(); extern "C" _Float64 __exp10f64(_Float64 ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 expm1f64(_Float64 ) throw(); extern "C" _Float64 __expm1f64(_Float64 ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 log1pf64(_Float64 ) throw(); extern "C" _Float64 __log1pf64(_Float64 ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 logbf64(_Float64 ) throw(); extern "C" _Float64 __logbf64(_Float64 ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 exp2f64(_Float64 ) throw(); extern "C" _Float64 __exp2f64(_Float64 ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 log2f64(_Float64 ) throw(); extern "C" _Float64 __log2f64(_Float64 ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 powf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __powf64(_Float64 , _Float64 ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 sqrtf64(_Float64 ) throw(); extern "C" _Float64 __sqrtf64(_Float64 ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 hypotf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __hypotf64(_Float64 , _Float64 ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 cbrtf64(_Float64 ) throw(); extern "C" _Float64 __cbrtf64(_Float64 ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 ceilf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __ceilf64(_Float64 ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fabsf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __fabsf64(_Float64 ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 floorf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __floorf64(_Float64 ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmodf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __fmodf64(_Float64 , _Float64 ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 copysignf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __copysignf64(_Float64 , _Float64 ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nanf64(const char * ) throw(); extern "C" _Float64 __nanf64(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 j0f64(_Float64) throw(); extern "C" _Float64 __j0f64(_Float64) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 j1f64(_Float64) throw(); extern "C" _Float64 __j1f64(_Float64) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 jnf64(int, _Float64) throw(); extern "C" _Float64 __jnf64(int, _Float64) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 y0f64(_Float64) throw(); extern "C" _Float64 __y0f64(_Float64) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 y1f64(_Float64) throw(); extern "C" _Float64 __y1f64(_Float64) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 ynf64(int, _Float64) throw(); extern "C" _Float64 __ynf64(int, _Float64) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 erff64(_Float64) throw(); extern "C" _Float64 __erff64(_Float64) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 erfcf64(_Float64) throw(); extern "C" _Float64 __erfcf64(_Float64) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 lgammaf64(_Float64) throw(); extern "C" _Float64 __lgammaf64(_Float64) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 tgammaf64(_Float64) throw(); extern "C" _Float64 __tgammaf64(_Float64) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 lgammaf64_r(_Float64, int * ) throw(); extern "C" _Float64 __lgammaf64_r(_Float64, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 rintf64(_Float64 ) throw(); extern "C" _Float64 __rintf64(_Float64 ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nextafterf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __nextafterf64(_Float64 , _Float64 ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nextdownf64(_Float64 ) throw(); extern "C" _Float64 __nextdownf64(_Float64 ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nextupf64(_Float64 ) throw(); extern "C" _Float64 __nextupf64(_Float64 ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 remainderf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __remainderf64(_Float64 , _Float64 ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 scalbnf64(_Float64 , int ) throw(); extern "C" _Float64 __scalbnf64(_Float64 , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf64(_Float64 ) throw(); extern "C" int __ilogbf64(_Float64 ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf64(_Float64 ) throw(); extern "C" long __llogbf64(_Float64 ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 scalblnf64(_Float64 , long ) throw(); extern "C" _Float64 __scalblnf64(_Float64 , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 nearbyintf64(_Float64 ) throw(); extern "C" _Float64 __nearbyintf64(_Float64 ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 roundf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __roundf64(_Float64 ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 truncf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __truncf64(_Float64 ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 remquof64(_Float64 , _Float64 , int * ) throw(); extern "C" _Float64 __remquof64(_Float64 , _Float64 , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf64(_Float64 ) throw(); extern "C" long __lrintf64(_Float64 ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf64(_Float64 ) throw(); extern "C" long long __llrintf64(_Float64 ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf64(_Float64 ) throw(); extern "C" long __lroundf64(_Float64 ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf64(_Float64 ) throw(); extern "C" long long __llroundf64(_Float64 ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fdimf64(_Float64 , _Float64 ) throw(); extern "C" _Float64 __fdimf64(_Float64 , _Float64 ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmaxf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fmaxf64(_Float64 , _Float64 ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fminf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fminf64(_Float64 , _Float64 ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmaf64(_Float64 , _Float64 , _Float64 ) throw(); extern "C" _Float64 __fmaf64(_Float64 , _Float64 , _Float64 ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 roundevenf64(_Float64 ) throw() __attribute((const)); extern "C" _Float64 __roundevenf64(_Float64 ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf64(_Float64 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf64(_Float64 , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf64(_Float64 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf64(_Float64 , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf64(_Float64 , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf64(_Float64 , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf64(_Float64 , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf64(_Float64 , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fmaxmagf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fmaxmagf64(_Float64 , _Float64 ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 fminmagf64(_Float64 , _Float64 ) throw() __attribute((const)); extern "C" _Float64 __fminmagf64(_Float64 , _Float64 ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef64(_Float64 * , const _Float64 * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf64(const _Float64 * , const _Float64 * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf64(const _Float64 * , const _Float64 * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64 getpayloadf64(const _Float64 * ) throw(); extern "C" _Float64 __getpayloadf64(const _Float64 * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf64(_Float64 * , _Float64 ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf64(_Float64 * , _Float64 ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x acosf32x(_Float32x ) throw(); extern "C" _Float32x __acosf32x(_Float32x ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x asinf32x(_Float32x ) throw(); extern "C" _Float32x __asinf32x(_Float32x ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x atanf32x(_Float32x ) throw(); extern "C" _Float32x __atanf32x(_Float32x ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x atan2f32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __atan2f32x(_Float32x , _Float32x ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x cosf32x(_Float32x ) throw(); extern "C" _Float32x __cosf32x(_Float32x ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x sinf32x(_Float32x ) throw(); extern "C" _Float32x __sinf32x(_Float32x ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x tanf32x(_Float32x ) throw(); extern "C" _Float32x __tanf32x(_Float32x ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x coshf32x(_Float32x ) throw(); extern "C" _Float32x __coshf32x(_Float32x ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x sinhf32x(_Float32x ) throw(); extern "C" _Float32x __sinhf32x(_Float32x ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x tanhf32x(_Float32x ) throw(); extern "C" _Float32x __tanhf32x(_Float32x ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf32x(_Float32x , _Float32x * , _Float32x * ) throw(); extern "C" void __sincosf32x(_Float32x , _Float32x * , _Float32x * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x acoshf32x(_Float32x ) throw(); extern "C" _Float32x __acoshf32x(_Float32x ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x asinhf32x(_Float32x ) throw(); extern "C" _Float32x __asinhf32x(_Float32x ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x atanhf32x(_Float32x ) throw(); extern "C" _Float32x __atanhf32x(_Float32x ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x expf32x(_Float32x ) throw(); extern "C" _Float32x __expf32x(_Float32x ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x frexpf32x(_Float32x , int * ) throw(); extern "C" _Float32x __frexpf32x(_Float32x , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x ldexpf32x(_Float32x , int ) throw(); extern "C" _Float32x __ldexpf32x(_Float32x , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x logf32x(_Float32x ) throw(); extern "C" _Float32x __logf32x(_Float32x ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x log10f32x(_Float32x ) throw(); extern "C" _Float32x __log10f32x(_Float32x ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x modff32x(_Float32x , _Float32x * ) throw(); extern "C" _Float32x __modff32x(_Float32x , _Float32x * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x exp10f32x(_Float32x ) throw(); extern "C" _Float32x __exp10f32x(_Float32x ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x expm1f32x(_Float32x ) throw(); extern "C" _Float32x __expm1f32x(_Float32x ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x log1pf32x(_Float32x ) throw(); extern "C" _Float32x __log1pf32x(_Float32x ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x logbf32x(_Float32x ) throw(); extern "C" _Float32x __logbf32x(_Float32x ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x exp2f32x(_Float32x ) throw(); extern "C" _Float32x __exp2f32x(_Float32x ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x log2f32x(_Float32x ) throw(); extern "C" _Float32x __log2f32x(_Float32x ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x powf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __powf32x(_Float32x , _Float32x ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x sqrtf32x(_Float32x ) throw(); extern "C" _Float32x __sqrtf32x(_Float32x ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x hypotf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __hypotf32x(_Float32x , _Float32x ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x cbrtf32x(_Float32x ) throw(); extern "C" _Float32x __cbrtf32x(_Float32x ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x ceilf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __ceilf32x(_Float32x ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fabsf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __fabsf32x(_Float32x ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x floorf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __floorf32x(_Float32x ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmodf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __fmodf32x(_Float32x , _Float32x ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x copysignf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __copysignf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nanf32x(const char * ) throw(); extern "C" _Float32x __nanf32x(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x j0f32x(_Float32x) throw(); extern "C" _Float32x __j0f32x(_Float32x) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x j1f32x(_Float32x) throw(); extern "C" _Float32x __j1f32x(_Float32x) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x jnf32x(int, _Float32x) throw(); extern "C" _Float32x __jnf32x(int, _Float32x) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x y0f32x(_Float32x) throw(); extern "C" _Float32x __y0f32x(_Float32x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x y1f32x(_Float32x) throw(); extern "C" _Float32x __y1f32x(_Float32x) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x ynf32x(int, _Float32x) throw(); extern "C" _Float32x __ynf32x(int, _Float32x) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x erff32x(_Float32x) throw(); extern "C" _Float32x __erff32x(_Float32x) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x erfcf32x(_Float32x) throw(); extern "C" _Float32x __erfcf32x(_Float32x) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x lgammaf32x(_Float32x) throw(); extern "C" _Float32x __lgammaf32x(_Float32x) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x tgammaf32x(_Float32x) throw(); extern "C" _Float32x __tgammaf32x(_Float32x) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x lgammaf32x_r(_Float32x, int * ) throw(); extern "C" _Float32x __lgammaf32x_r(_Float32x, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x rintf32x(_Float32x ) throw(); extern "C" _Float32x __rintf32x(_Float32x ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nextafterf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __nextafterf32x(_Float32x , _Float32x ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nextdownf32x(_Float32x ) throw(); extern "C" _Float32x __nextdownf32x(_Float32x ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nextupf32x(_Float32x ) throw(); extern "C" _Float32x __nextupf32x(_Float32x ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x remainderf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __remainderf32x(_Float32x , _Float32x ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x scalbnf32x(_Float32x , int ) throw(); extern "C" _Float32x __scalbnf32x(_Float32x , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf32x(_Float32x ) throw(); extern "C" int __ilogbf32x(_Float32x ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf32x(_Float32x ) throw(); extern "C" long __llogbf32x(_Float32x ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x scalblnf32x(_Float32x , long ) throw(); extern "C" _Float32x __scalblnf32x(_Float32x , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x nearbyintf32x(_Float32x ) throw(); extern "C" _Float32x __nearbyintf32x(_Float32x ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x roundf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __roundf32x(_Float32x ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x truncf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __truncf32x(_Float32x ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x remquof32x(_Float32x , _Float32x , int * ) throw(); extern "C" _Float32x __remquof32x(_Float32x , _Float32x , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf32x(_Float32x ) throw(); extern "C" long __lrintf32x(_Float32x ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf32x(_Float32x ) throw(); extern "C" long long __llrintf32x(_Float32x ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf32x(_Float32x ) throw(); extern "C" long __lroundf32x(_Float32x ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf32x(_Float32x ) throw(); extern "C" long long __llroundf32x(_Float32x ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fdimf32x(_Float32x , _Float32x ) throw(); extern "C" _Float32x __fdimf32x(_Float32x , _Float32x ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmaxf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fmaxf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fminf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fminf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmaf32x(_Float32x , _Float32x , _Float32x ) throw(); extern "C" _Float32x __fmaf32x(_Float32x , _Float32x , _Float32x ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x roundevenf32x(_Float32x ) throw() __attribute((const)); extern "C" _Float32x __roundevenf32x(_Float32x ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf32x(_Float32x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf32x(_Float32x , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf32x(_Float32x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf32x(_Float32x , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf32x(_Float32x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf32x(_Float32x , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf32x(_Float32x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf32x(_Float32x , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fmaxmagf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fmaxmagf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x fminmagf32x(_Float32x , _Float32x ) throw() __attribute((const)); extern "C" _Float32x __fminmagf32x(_Float32x , _Float32x ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef32x(_Float32x * , const _Float32x * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf32x(const _Float32x * , const _Float32x * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf32x(const _Float32x * , const _Float32x * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float32x getpayloadf32x(const _Float32x * ) throw(); extern "C" _Float32x __getpayloadf32x(const _Float32x * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf32x(_Float32x * , _Float32x ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf32x(_Float32x * , _Float32x ) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x acosf64x(_Float64x ) throw(); extern "C" _Float64x __acosf64x(_Float64x ) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x asinf64x(_Float64x ) throw(); extern "C" _Float64x __asinf64x(_Float64x ) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x atanf64x(_Float64x ) throw(); extern "C" _Float64x __atanf64x(_Float64x ) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x atan2f64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __atan2f64x(_Float64x , _Float64x ) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x cosf64x(_Float64x ) throw(); extern "C" _Float64x __cosf64x(_Float64x ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x sinf64x(_Float64x ) throw(); extern "C" _Float64x __sinf64x(_Float64x ) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x tanf64x(_Float64x ) throw(); extern "C" _Float64x __tanf64x(_Float64x ) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x coshf64x(_Float64x ) throw(); extern "C" _Float64x __coshf64x(_Float64x ) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x sinhf64x(_Float64x ) throw(); extern "C" _Float64x __sinhf64x(_Float64x ) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x tanhf64x(_Float64x ) throw(); extern "C" _Float64x __tanhf64x(_Float64x ) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" void sincosf64x(_Float64x , _Float64x * , _Float64x * ) throw(); extern "C" void __sincosf64x(_Float64x , _Float64x * , _Float64x * ) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x acoshf64x(_Float64x ) throw(); extern "C" _Float64x __acoshf64x(_Float64x ) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x asinhf64x(_Float64x ) throw(); extern "C" _Float64x __asinhf64x(_Float64x ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x atanhf64x(_Float64x ) throw(); extern "C" _Float64x __atanhf64x(_Float64x ) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x expf64x(_Float64x ) throw(); extern "C" _Float64x __expf64x(_Float64x ) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x frexpf64x(_Float64x , int * ) throw(); extern "C" _Float64x __frexpf64x(_Float64x , int * ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x ldexpf64x(_Float64x , int ) throw(); extern "C" _Float64x __ldexpf64x(_Float64x , int ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x logf64x(_Float64x ) throw(); extern "C" _Float64x __logf64x(_Float64x ) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x log10f64x(_Float64x ) throw(); extern "C" _Float64x __log10f64x(_Float64x ) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x modff64x(_Float64x , _Float64x * ) throw(); extern "C" _Float64x __modff64x(_Float64x , _Float64x * ) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x exp10f64x(_Float64x ) throw(); extern "C" _Float64x __exp10f64x(_Float64x ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x expm1f64x(_Float64x ) throw(); extern "C" _Float64x __expm1f64x(_Float64x ) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x log1pf64x(_Float64x ) throw(); extern "C" _Float64x __log1pf64x(_Float64x ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x logbf64x(_Float64x ) throw(); extern "C" _Float64x __logbf64x(_Float64x ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x exp2f64x(_Float64x ) throw(); extern "C" _Float64x __exp2f64x(_Float64x ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x log2f64x(_Float64x ) throw(); extern "C" _Float64x __log2f64x(_Float64x ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x powf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __powf64x(_Float64x , _Float64x ) throw();
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x sqrtf64x(_Float64x ) throw(); extern "C" _Float64x __sqrtf64x(_Float64x ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x hypotf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __hypotf64x(_Float64x , _Float64x ) throw();
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x cbrtf64x(_Float64x ) throw(); extern "C" _Float64x __cbrtf64x(_Float64x ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x ceilf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __ceilf64x(_Float64x ) throw() __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fabsf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __fabsf64x(_Float64x ) throw() __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x floorf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __floorf64x(_Float64x ) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmodf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __fmodf64x(_Float64x , _Float64x ) throw();
# 196 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x copysignf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __copysignf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 201 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nanf64x(const char * ) throw(); extern "C" _Float64x __nanf64x(const char * ) throw();
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x j0f64x(_Float64x) throw(); extern "C" _Float64x __j0f64x(_Float64x) throw();
# 218 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x j1f64x(_Float64x) throw(); extern "C" _Float64x __j1f64x(_Float64x) throw();
# 219 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x jnf64x(int, _Float64x) throw(); extern "C" _Float64x __jnf64x(int, _Float64x) throw();
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x y0f64x(_Float64x) throw(); extern "C" _Float64x __y0f64x(_Float64x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x y1f64x(_Float64x) throw(); extern "C" _Float64x __y1f64x(_Float64x) throw();
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x ynf64x(int, _Float64x) throw(); extern "C" _Float64x __ynf64x(int, _Float64x) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x erff64x(_Float64x) throw(); extern "C" _Float64x __erff64x(_Float64x) throw();
# 229 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x erfcf64x(_Float64x) throw(); extern "C" _Float64x __erfcf64x(_Float64x) throw();
# 230 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x lgammaf64x(_Float64x) throw(); extern "C" _Float64x __lgammaf64x(_Float64x) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x tgammaf64x(_Float64x) throw(); extern "C" _Float64x __tgammaf64x(_Float64x) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x lgammaf64x_r(_Float64x, int * ) throw(); extern "C" _Float64x __lgammaf64x_r(_Float64x, int * ) throw();
# 256 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x rintf64x(_Float64x ) throw(); extern "C" _Float64x __rintf64x(_Float64x ) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nextafterf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __nextafterf64x(_Float64x , _Float64x ) throw();
# 266 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nextdownf64x(_Float64x ) throw(); extern "C" _Float64x __nextdownf64x(_Float64x ) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nextupf64x(_Float64x ) throw(); extern "C" _Float64x __nextupf64x(_Float64x ) throw();
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x remainderf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __remainderf64x(_Float64x , _Float64x ) throw();
# 276 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x scalbnf64x(_Float64x , int ) throw(); extern "C" _Float64x __scalbnf64x(_Float64x , int ) throw();
# 280 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int ilogbf64x(_Float64x ) throw(); extern "C" int __ilogbf64x(_Float64x ) throw();
# 285 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long llogbf64x(_Float64x ) throw(); extern "C" long __llogbf64x(_Float64x ) throw();
# 290 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x scalblnf64x(_Float64x , long ) throw(); extern "C" _Float64x __scalblnf64x(_Float64x , long ) throw();
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x nearbyintf64x(_Float64x ) throw(); extern "C" _Float64x __nearbyintf64x(_Float64x ) throw();
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x roundf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __roundf64x(_Float64x ) throw() __attribute((const));
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x truncf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __truncf64x(_Float64x ) throw() __attribute((const));
# 307 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x remquof64x(_Float64x , _Float64x , int * ) throw(); extern "C" _Float64x __remquof64x(_Float64x , _Float64x , int * ) throw();
# 314 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lrintf64x(_Float64x ) throw(); extern "C" long __lrintf64x(_Float64x ) throw();
# 316 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llrintf64x(_Float64x ) throw(); extern "C" long long __llrintf64x(_Float64x ) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" long lroundf64x(_Float64x ) throw(); extern "C" long __lroundf64x(_Float64x ) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern "C" long long llroundf64x(_Float64x ) throw(); extern "C" long long __llroundf64x(_Float64x ) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fdimf64x(_Float64x , _Float64x ) throw(); extern "C" _Float64x __fdimf64x(_Float64x , _Float64x ) throw();
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmaxf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fmaxf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fminf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fminf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmaf64x(_Float64x , _Float64x , _Float64x ) throw(); extern "C" _Float64x __fmaf64x(_Float64x , _Float64x , _Float64x ) throw();
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x roundevenf64x(_Float64x ) throw() __attribute((const)); extern "C" _Float64x __roundevenf64x(_Float64x ) throw() __attribute((const));
# 344 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpf64x(_Float64x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpf64x(_Float64x , int , unsigned ) throw();
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpf64x(_Float64x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpf64x(_Float64x , int , unsigned ) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __intmax_t fromfpxf64x(_Float64x , int , unsigned ) throw(); extern "C" __intmax_t __fromfpxf64x(_Float64x , int , unsigned ) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" __uintmax_t ufromfpxf64x(_Float64x , int , unsigned ) throw(); extern "C" __uintmax_t __ufromfpxf64x(_Float64x , int , unsigned ) throw();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fmaxmagf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fmaxmagf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 368 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x fminmagf64x(_Float64x , _Float64x ) throw() __attribute((const)); extern "C" _Float64x __fminmagf64x(_Float64x , _Float64x ) throw() __attribute((const));
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int canonicalizef64x(_Float64x * , const _Float64x * ) throw();
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalorderf64x(const _Float64x * , const _Float64x * ) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int totalordermagf64x(const _Float64x * , const _Float64x * ) throw()
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 386 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" _Float64x getpayloadf64x(const _Float64x * ) throw(); extern "C" _Float64x __getpayloadf64x(const _Float64x * ) throw();
# 389 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadf64x(_Float64x * , _Float64x ) throw();
# 392 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern "C" int setpayloadsigf64x(_Float64x * , _Float64x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fadd(double , double ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fdiv(double , double ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fmul(double , double ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fsub(double , double ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float faddl(long double , long double ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fdivl(long double , long double ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fmull(long double , long double ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" float fsubl(long double , long double ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double daddl(long double , long double ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double ddivl(long double , long double ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double dmull(long double , long double ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" double dsubl(long double , long double ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32addf32x(_Float32x , _Float32x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32divf32x(_Float32x , _Float32x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32mulf32x(_Float32x , _Float32x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32subf32x(_Float32x , _Float32x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32addf64(_Float64 , _Float64 ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32divf64(_Float64 , _Float64 ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32mulf64(_Float64 , _Float64 ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32subf64(_Float64 , _Float64 ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32addf64x(_Float64x , _Float64x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32divf64x(_Float64x , _Float64x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32mulf64x(_Float64x , _Float64x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32 f32subf64x(_Float64x , _Float64x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xaddf64(_Float64 , _Float64 ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xdivf64(_Float64 , _Float64 ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xmulf64(_Float64 , _Float64 ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xsubf64(_Float64 , _Float64 ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xaddf64x(_Float64x , _Float64x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xdivf64x(_Float64x , _Float64x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xmulf64x(_Float64x , _Float64x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float32x f32xsubf64x(_Float64x , _Float64x ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64addf64x(_Float64x , _Float64x ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64divf64x(_Float64x , _Float64x ) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64mulf64x(_Float64x , _Float64x ) throw();
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern "C" _Float64 f64subf64x(_Float64x , _Float64x ) throw();
# 773 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 854 "/usr/include/math.h" 3
enum {
# 855 "/usr/include/math.h" 3
FP_NAN,
# 858 "/usr/include/math.h" 3
FP_INFINITE,
# 861 "/usr/include/math.h" 3
FP_ZERO,
# 864 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 867 "/usr/include/math.h" 3
FP_NORMAL
# 870 "/usr/include/math.h" 3
};
# 23 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
extern "C" int __iscanonicall(long double ) throw()
# 24 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
 __attribute((const));
# 47 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(float __val) { return ((void)((__typeof__(__val))__val)), 1; }
# 48 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(double __val) { return ((void)((__typeof__(__val))__val)), 1; }
# 49 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(long double __val) { return __iscanonicall(__val); }
# 986 "/usr/include/math.h" 3
inline int issignaling(float __val) { return __issignalingf(__val); }
# 987 "/usr/include/math.h" 3
inline int issignaling(double __val) { return __issignaling(__val); }
# 989 "/usr/include/math.h" 3
inline int issignaling(long double __val)
# 990 "/usr/include/math.h" 3
{
# 994 "/usr/include/math.h" 3
return __issignalingl(__val);
# 996 "/usr/include/math.h" 3
}
# 1047 "/usr/include/math.h" 3
template < class __T > inline bool
iszero ( __T __val )
{
  return __val == 0;
}
# 1279 "/usr/include/math.h" 3
template< class > struct __iseqsig_type;
# 1281 "/usr/include/math.h" 3
template<> struct __iseqsig_type< float> {
# 1283 "/usr/include/math.h" 3
static int __call(float __x, float __y) throw()
# 1284 "/usr/include/math.h" 3
{
# 1285 "/usr/include/math.h" 3
return __iseqsigf(__x, __y);
# 1286 "/usr/include/math.h" 3
}
# 1287 "/usr/include/math.h" 3
};
# 1289 "/usr/include/math.h" 3
template<> struct __iseqsig_type< double> {
# 1291 "/usr/include/math.h" 3
static int __call(double __x, double __y) throw()
# 1292 "/usr/include/math.h" 3
{
# 1293 "/usr/include/math.h" 3
return __iseqsig(__x, __y);
# 1294 "/usr/include/math.h" 3
}
# 1295 "/usr/include/math.h" 3
};
# 1297 "/usr/include/math.h" 3
template<> struct __iseqsig_type< long double> {
# 1299 "/usr/include/math.h" 3
static int __call(long double __x, long double __y) throw()
# 1300 "/usr/include/math.h" 3
{
# 1302 "/usr/include/math.h" 3
return __iseqsigl(__x, __y);
# 1306 "/usr/include/math.h" 3
}
# 1307 "/usr/include/math.h" 3
};
# 1321 "/usr/include/math.h" 3
template < typename _T1, typename _T2 >
inline int
iseqsig ( _T1 __x, _T2 __y ) throw ( )
{



  typedef __typeof__ ( ( ( __x ) + ( __y ) + (0.0F) ) ) _T3;

  return __iseqsig_type < _T3 > :: __call ( __x, __y );
}
# 57 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
extern "C" { typedef
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 56 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 57 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t; }
# 62 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 59 "/usr/include/stdlib.h" 3
struct {
# 60 "/usr/include/stdlib.h" 3
int quot;
# 61 "/usr/include/stdlib.h" 3
int rem;
# 62 "/usr/include/stdlib.h" 3
} div_t; }
# 70 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 67 "/usr/include/stdlib.h" 3
struct {
# 68 "/usr/include/stdlib.h" 3
long quot;
# 69 "/usr/include/stdlib.h" 3
long rem;
# 70 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 80 "/usr/include/stdlib.h" 3
__extension__ extern "C" { typedef
# 77 "/usr/include/stdlib.h" 3
struct {
# 78 "/usr/include/stdlib.h" 3
long long quot;
# 79 "/usr/include/stdlib.h" 3
long long rem;
# 80 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 97 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw() __attribute((__warn_unused_result__));
# 101 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline double atof(const char * ) throw()
# 102 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 104 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int atoi(const char * ) throw()
# 105 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 107 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline long atol(const char * ) throw()
# 108 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 112 "/usr/include/stdlib.h" 3
__extension__ extern "C" { extern __attribute((gnu_inline)) inline long long atoll(const char * ) throw()
# 113 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 117 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ , char **__restrict__ ) throw()
# 119 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 123 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ , char **__restrict__ ) throw()
# 124 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 126 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ , char **__restrict__ ) throw()
# 128 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 140 "/usr/include/stdlib.h" 3
extern "C" _Float32 strtof32(const char *__restrict__ , char **__restrict__ ) throw()
# 142 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 146 "/usr/include/stdlib.h" 3
extern "C" _Float64 strtof64(const char *__restrict__ , char **__restrict__ ) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" _Float32x strtof32x(const char *__restrict__ , char **__restrict__ ) throw()
# 160 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 164 "/usr/include/stdlib.h" 3
extern "C" _Float64x strtof64x(const char *__restrict__ , char **__restrict__ ) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ , char **__restrict__ , int ) throw()
# 178 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 180 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ , char **__restrict__ , int ) throw()
# 182 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 192 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtouq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 194 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoll(const char *__restrict__ , char **__restrict__ , int ) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 205 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtoull(const char *__restrict__ , char **__restrict__ , int ) throw()
# 207 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 212 "/usr/include/stdlib.h" 3
extern "C" int strfromd(char * , size_t , const char * , double ) throw()
# 214 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 216 "/usr/include/stdlib.h" 3
extern "C" int strfromf(char * , size_t , const char * , float ) throw()
# 218 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 220 "/usr/include/stdlib.h" 3
extern "C" int strfroml(char * , size_t , const char * , long double ) throw()
# 222 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 232 "/usr/include/stdlib.h" 3
extern "C" int strfromf32(char * , size_t , const char * , _Float32 ) throw()
# 234 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 238 "/usr/include/stdlib.h" 3
extern "C" int strfromf64(char * , size_t , const char * , _Float64 ) throw()
# 240 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 250 "/usr/include/stdlib.h" 3
extern "C" int strfromf32x(char * , size_t , const char * , _Float32x ) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 256 "/usr/include/stdlib.h" 3
extern "C" int strfromf64x(char * , size_t , const char * , _Float64x ) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 274 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 276 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 278 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 281 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 284 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long strtoll_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 287 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 290 "/usr/include/stdlib.h" 3
__extension__ extern "C" unsigned long long strtoull_l(const char *__restrict__ , char **__restrict__ , int , locale_t ) throw()
# 293 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 295 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 297 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 299 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 301 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 303 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 306 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 316 "/usr/include/stdlib.h" 3
extern "C" _Float32 strtof32_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 319 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 323 "/usr/include/stdlib.h" 3
extern "C" _Float64 strtof64_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 326 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 337 "/usr/include/stdlib.h" 3
extern "C" _Float32x strtof32x_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 340 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 344 "/usr/include/stdlib.h" 3
extern "C" _Float64x strtof64x_l(const char *__restrict__ , char **__restrict__ , locale_t ) throw()
# 347 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 361 "/usr/include/stdlib.h" 3
extern "C" {
# 360 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline int
# 361 "/usr/include/stdlib.h" 3
atoi(const char *__nptr) throw()
# 362 "/usr/include/stdlib.h" 3
{
# 363 "/usr/include/stdlib.h" 3
return (int)strtol(__nptr, (char **)__null, 10);
# 364 "/usr/include/stdlib.h" 3
} }
# 366 "/usr/include/stdlib.h" 3
extern "C" {
# 365 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long
# 366 "/usr/include/stdlib.h" 3
atol(const char *__nptr) throw()
# 367 "/usr/include/stdlib.h" 3
{
# 368 "/usr/include/stdlib.h" 3
return strtol(__nptr, (char **)__null, 10);
# 369 "/usr/include/stdlib.h" 3
} }
# 373 "/usr/include/stdlib.h" 3
__extension__ extern "C" {
# 372 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long long
# 373 "/usr/include/stdlib.h" 3
atoll(const char *__nptr) throw()
# 374 "/usr/include/stdlib.h" 3
{
# 375 "/usr/include/stdlib.h" 3
return strtoll(__nptr, (char **)__null, 10);
# 376 "/usr/include/stdlib.h" 3
} }
# 385 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long ) throw() __attribute((__warn_unused_result__));
# 388 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * ) throw()
# 389 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 42 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 47 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 54 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 64 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 69 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 74 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 79 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 85 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 92 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 103 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 108 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 114 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 121 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 134 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 138 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 148 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 149 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int8_t int8_t; }
# 25 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int16_t int16_t; }
# 26 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int32_t int32_t; }
# 27 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
extern "C" { typedef __int64_t int64_t; }
# 158 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint8_t u_int8_t; }
# 159 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint16_t u_int16_t; }
# 160 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint32_t u_int32_t; }
# 161 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __uint64_t u_int64_t; }
# 164 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 34 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
extern "C" { static inline __uint16_t __bswap_16(__uint16_t __bsx)
# 35 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 39 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return (__uint16_t)(((__bsx >> 8) & 255) | ((__bsx & 255) << 8));
# 41 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 49 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
extern "C" { static inline __uint32_t __bswap_32(__uint32_t __bsx)
# 50 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 52 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 56 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 70 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
__extension__ extern "C" { static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 71 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 73 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 77 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
} }
# 33 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
extern "C" { static inline __uint16_t __uint16_identity(__uint16_t __x)
# 34 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 35 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 36 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
} }
# 39 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
extern "C" { static inline __uint32_t __uint32_identity(__uint32_t __x)
# 40 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 41 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 42 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
} }
# 45 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
extern "C" { static inline __uint64_t __uint64_identity(__uint64_t __x)
# 46 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 48 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
} }
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
extern "C" { typedef
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
struct {
# 7 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
} __sigset_t; }
# 7 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 49 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef
# 60 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 64 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set; }
# 77 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" int select(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , timeval *__restrict__ );
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" int pselect(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , const timespec *__restrict__ , const __sigset_t *__restrict__ );
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern "C" long __fdelt_chk(long );
# 25 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern "C" long __fdelt_warn(long )
# 26 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
 __attribute((__warning__("bit outside of fd_set selected")));
# 185 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 192 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 220 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 221 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 53 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
extern "C" { typedef
# 49 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_list {
# 51 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__prev;
# 52 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__next;
# 53 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_list_t; }
# 58 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
extern "C" { typedef
# 55 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_slist {
# 57 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_slist *__next;
# 58 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_slist_t; }
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
extern "C" { struct __pthread_mutex_s {
# 24 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __lock;
# 25 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
unsigned __count;
# 26 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __owner;
# 28 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
unsigned __nusers;
# 32 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __kind;
# 34 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
short __spins;
# 35 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
short __elision;
# 36 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
__pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
}; }
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
extern "C" { struct __pthread_rwlock_arch_t {
# 25 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __readers;
# 26 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __writers;
# 27 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __wrphase_futex;
# 28 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __writers_futex;
# 29 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __pad3;
# 30 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __pad4;
# 32 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
int __cur_writer;
# 33 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
int __shared;
# 34 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
signed char __rwelision;
# 39 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned char __pad1[7];
# 42 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned long __pad2;
# 45 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
}; }
# 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
extern "C" { struct __pthread_cond_s {
# 95 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
union {
# 96 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__extension__ unsigned long long __wseq;
# 98 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 99 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __low;
# 100 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __high;
# 101 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __wseq32;
# 102 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 104 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
union {
# 105 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__extension__ unsigned long long __g1_start;
# 107 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 108 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __low;
# 109 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __high;
# 110 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __g1_start32;
# 111 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 112 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_refs[2];
# 113 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_size[2];
# 114 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g1_orig_size;
# 115 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __wrefs;
# 116 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_signals[2];
# 117 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
}; }
# 27 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 33 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 34 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 35 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 42 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 43 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 44 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 49 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 53 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 56 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { union pthread_attr_t {
# 58 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 59 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
}; }
# 62 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef pthread_attr_t pthread_attr_t; }
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 68 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_mutex_s __data;
# 70 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 71 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 76 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_cond_s __data;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 87 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 88 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_rwlock_arch_t __data;
# 89 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 90 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 103 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 109 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 110 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 111 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
extern "C" { typedef
# 115 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 116 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 117 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 401 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 404 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned ) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned , char * , size_t ) throw()
# 411 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 415 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * ) throw() __attribute((__nonnull__(1)));
# 423 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 425 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 426 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 427 "/usr/include/stdlib.h" 3
int32_t *state;
# 428 "/usr/include/stdlib.h" 3
int rand_type;
# 429 "/usr/include/stdlib.h" 3
int rand_deg;
# 430 "/usr/include/stdlib.h" 3
int rand_sep;
# 431 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 432 "/usr/include/stdlib.h" 3
}; }
# 434 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ , int32_t *__restrict__ ) throw()
# 435 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 437 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned , random_data * ) throw()
# 438 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 440 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned , char *__restrict__ , size_t , random_data *__restrict__ ) throw()
# 443 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 445 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ , random_data *__restrict__ ) throw()
# 447 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 455 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned ) throw();
# 459 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * ) throw();
# 467 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 468 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute((__nonnull__(1)));
# 471 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 472 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw()
# 473 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 476 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 477 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw()
# 478 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 481 "/usr/include/stdlib.h" 3
extern "C" void srand48(long ) throw();
# 482 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw()
# 483 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 484 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute((__nonnull__(1)));
# 490 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 492 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 493 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 494 "/usr/include/stdlib.h" 3
unsigned short __c;
# 495 "/usr/include/stdlib.h" 3
unsigned short __init;
# 496 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 498 "/usr/include/stdlib.h" 3
}; }
# 501 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ , double *__restrict__ ) throw()
# 502 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 503 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__ , double *__restrict__ ) throw()
# 505 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 508 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 510 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 511 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 514 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 517 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 519 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 520 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 523 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 526 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long , drand48_data * ) throw()
# 527 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 529 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data * ) throw()
# 530 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 532 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data * ) throw()
# 534 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 539 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__))
# 540 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(1))) __attribute((__warn_unused_result__));
# 542 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 543 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(1, 2))) __attribute((__warn_unused_result__));
# 550 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 551 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__)) __attribute((__alloc_size__(2)));
# 559 "/usr/include/stdlib.h" 3
extern "C" void *reallocarray(void * , size_t , size_t ) throw()
# 560 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__))
# 561 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(2, 3)));
# 565 "/usr/include/stdlib.h" 3
extern "C" void free(void * ) throw();
# 32 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t ) throw();
# 574 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__))
# 575 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(1))) __attribute((__warn_unused_result__));
# 580 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** , size_t , size_t ) throw()
# 581 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 586 "/usr/include/stdlib.h" 3
extern "C" void *aligned_alloc(size_t , size_t ) throw()
# 587 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2))) __attribute((__warn_unused_result__));
# 591 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 595 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* )(void)) throw() __attribute((__nonnull__(1)));
# 600 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* )(void)) throw() __asm__("at_quick_exit")
# 601 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 610 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* )(int , void * ), void * ) throw()
# 611 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 617 "/usr/include/stdlib.h" 3
extern "C" void exit(int ) throw() __attribute((__noreturn__));
# 623 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int ) throw() __attribute((__noreturn__));
# 629 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int ) throw() __attribute((__noreturn__));
# 634 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 639 "/usr/include/stdlib.h" 3
extern "C" char *secure_getenv(const char * ) throw()
# 640 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 647 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * ) throw() __attribute((__nonnull__(1)));
# 653 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * , const char * , int ) throw()
# 654 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 657 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * ) throw() __attribute((__nonnull__(1)));
# 664 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 675 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * ) throw() __attribute((__nonnull__(1)));
# 688 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 698 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 710 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * , int ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 720 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * , int )
# 721 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 731 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 742 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * , int ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 752 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * , int ) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 762 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * , int , int )
# 763 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 774 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * , int , int )
# 775 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 784 "/usr/include/stdlib.h" 3
extern "C" int system(const char * ) __attribute((__warn_unused_result__));
# 790 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * ) throw()
# 791 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 800 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *realpath(const char *__restrict__ , char *__restrict__ ) throw()
# 801 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__)); }
# 808 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 811 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 815 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 820 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline void *bsearch(const void * , const void * , size_t , size_t , __compar_fn_t )
# 822 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5))) __attribute((__warn_unused_result__)); }
# 20 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
extern "C" {
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__attribute((__gnu_inline__)) extern inline void *
# 20 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t
# 21 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__compar)
# 22 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
size_t __l, __u, __idx;
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
const void *__p;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
int __comparison;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (0);
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __nmemb;
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
while (__l < __u)
# 30 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 31 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__idx = ((__l + __u) / (2));
# 32 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__p = ((void *)(((const char *)__base) + (__idx * __size)));
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__comparison = (*__compar)(__key, __p);
# 34 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison < 0) {
# 35 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __idx; } else {
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison > 0) {
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (__idx + (1)); } else {
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return (void *)__p; } }
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
}
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return __null;
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
} }
# 830 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * , size_t , size_t , __compar_fn_t )
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 833 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * , size_t , size_t , __compar_d_fn_t , void * )
# 835 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 840 "/usr/include/stdlib.h" 3
extern "C" int abs(int ) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 841 "/usr/include/stdlib.h" 3
extern "C" long labs(long ) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 844 "/usr/include/stdlib.h" 3
__extension__ extern "C" long long llabs(long long ) throw()
# 845 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 852 "/usr/include/stdlib.h" 3
extern "C" div_t div(int , int ) throw()
# 853 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 854 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long , long ) throw()
# 855 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 858 "/usr/include/stdlib.h" 3
__extension__ extern "C" lldiv_t lldiv(long long , long long ) throw()
# 860 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 872 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 873 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 878 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 879 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 884 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double , int , char * ) throw()
# 885 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 890 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 892 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 893 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 895 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 896 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double , int , char * ) throw()
# 897 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 902 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 904 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 905 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 907 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 909 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 912 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 913 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 916 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 922 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * , size_t ) throw();
# 925 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 929 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int wctomb(char * , wchar_t ) throw(); }
# 933 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbstowcs(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw(); }
# 936 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcstombs(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 946 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 957 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ , char *const *__restrict__ , char **__restrict__ ) throw()
# 960 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3))) __attribute((__warn_unused_result__));
# 968 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int ) __attribute((__warn_unused_result__));
# 976 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int ) throw();
# 980 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int ) throw();
# 985 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int ) throw() __attribute((__warn_unused_result__));
# 992 "/usr/include/stdlib.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int ptsname_r(int , char * , size_t ) throw()
# 993 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2))); }
# 996 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 1003 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int ) throw()
# 1004 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
extern "C" {
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
__attribute((__gnu_inline__)) extern inline double
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
atof(const char *__nptr) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
{
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
return strtod(__nptr, (char **)__null);
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
} }
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" char *__realpath_chk(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" char *__realpath_alias(const char *__restrict__ , char *__restrict__ ) throw() __asm__("realpath") __attribute((__warn_unused_result__));
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" char *__realpath_chk_warn(const char *__restrict__ , char *__restrict__ , size_t ) throw() __asm__("__realpath_chk") __attribute((__warn_unused_result__))
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("second argument of realpath must be either NULL or at least PATH_MAX bytes long buffer")));
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw()
# 38 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) != ((size_t)(-1)))
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) < (4096)) {
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk_warn(__name, __resolved, __builtin_object_size(__resolved, 2 > 1)); }
# 45 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk(__name, __resolved, __builtin_object_size(__resolved, 2 > 1));
# 46 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 48 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_alias(__name, __resolved);
# 49 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 52 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __ptsname_r_chk(int , char * , size_t , size_t ) throw()
# 53 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 54 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __ptsname_r_alias(int , char * , size_t ) throw() __asm__("ptsname_r")
# 56 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 57 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __ptsname_r_chk_warn(int , char * , size_t , size_t ) throw() __asm__("__ptsname_r_chk")
# 60 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2))) __attribute((__warning__("ptsname_r called with buflen bigger than size of buf")));
# 64 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 63 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 64 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
ptsname_r(int __fd, char *__buf, size_t __buflen) throw()
# 65 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 66 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 67 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 68 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 69 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 70 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 71 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk_warn(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 72 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_alias(__fd, __buf, __buflen);
# 74 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 77 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __wctomb_chk(char * , wchar_t , size_t ) throw()
# 78 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 79 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" int __wctomb_alias(char * , wchar_t ) throw() __asm__("wctomb") __attribute((__warn_unused_result__));
# 83 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 82 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline int
# 83 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
wctomb(char *__s, wchar_t __wchar) throw()
# 84 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 92 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 93 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_chk(__s, __wchar, __builtin_object_size(__s, 2 > 1)); }
# 94 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_alias(__s, __wchar);
# 95 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 98 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __mbstowcs_chk(wchar_t *__restrict__ , const char *__restrict__ , size_t , size_t ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __mbstowcs_alias(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw() __asm__("mbstowcs");
# 105 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __mbstowcs_chk_warn(wchar_t *__restrict__ , const char *__restrict__ , size_t , size_t ) throw() __asm__("__mbstowcs_chk")
# 109 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("mbstowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 113 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 112 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 113 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
mbstowcs(wchar_t *__restrict__ __dst, const char *__restrict__ __src, size_t __len) throw()
# 115 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 116 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 117 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 118 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 119 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 122 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 123 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 125 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 126 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_alias(__dst, __src, __len);
# 127 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 130 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __wcstombs_chk(char *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __wcstombs_alias(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcstombs");
# 137 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" size_t __wcstombs_chk_warn(char *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wcstombs_chk")
# 141 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("wcstombs called with dst buffer smaller than len")));
# 144 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern "C" {
# 143 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 144 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
wcstombs(char *__restrict__ __dst, const wchar_t *__restrict__ __src, size_t __len) throw()
# 146 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 147 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 148 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 149 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 150 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 151 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 152 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 153 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 154 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_alias(__dst, __src, __len);
# 155 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
} }
# 69 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator;
# 74 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 95 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.4/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp> ::__type __type1;
# 171 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up> ::__type __type2;
# 174 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp> ::__type __type1;
# 182 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up> ::__type __type2;
# 183 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp> ::__type __type3;
# 186 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp> ::__type __type1;
# 194 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up> ::__type __type2;
# 195 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp> ::__type __type3;
# 196 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Wp> ::__type __type4;
# 199 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.4/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.4/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.4/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.4/cmath" 3
using ::acos;
# 108 "/usr/include/c++/4.4/cmath" 3
inline float acos(float __x)
# 109 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosf(__x); }
# 112 "/usr/include/c++/4.4/cmath" 3
inline long double acos(long double __x)
# 113 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosl(__x); }
# 115 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 121 "/usr/include/c++/4.4/cmath" 3
using ::asin;
# 124 "/usr/include/c++/4.4/cmath" 3
inline float asin(float __x)
# 125 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinf(__x); }
# 128 "/usr/include/c++/4.4/cmath" 3
inline long double asin(long double __x)
# 129 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinl(__x); }
# 131 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 137 "/usr/include/c++/4.4/cmath" 3
using ::atan;
# 140 "/usr/include/c++/4.4/cmath" 3
inline float atan(float __x)
# 141 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanf(__x); }
# 144 "/usr/include/c++/4.4/cmath" 3
inline long double atan(long double __x)
# 145 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanl(__x); }
# 147 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 153 "/usr/include/c++/4.4/cmath" 3
using ::atan2;
# 156 "/usr/include/c++/4.4/cmath" 3
inline float atan2(float __y, float __x)
# 157 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 160 "/usr/include/c++/4.4/cmath" 3
inline long double atan2(long double __y, long double __x)
# 161 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 163 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 175 "/usr/include/c++/4.4/cmath" 3
using ::ceil;
# 178 "/usr/include/c++/4.4/cmath" 3
inline float ceil(float __x)
# 179 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceilf(__x); }
# 182 "/usr/include/c++/4.4/cmath" 3
inline long double ceil(long double __x)
# 183 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceill(__x); }
# 185 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 191 "/usr/include/c++/4.4/cmath" 3
using ::cos;
# 194 "/usr/include/c++/4.4/cmath" 3
inline float cos(float __x)
# 195 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosf(__x); }
# 198 "/usr/include/c++/4.4/cmath" 3
inline long double cos(long double __x)
# 199 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosl(__x); }
# 201 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 207 "/usr/include/c++/4.4/cmath" 3
using ::cosh;
# 210 "/usr/include/c++/4.4/cmath" 3
inline float cosh(float __x)
# 211 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshf(__x); }
# 214 "/usr/include/c++/4.4/cmath" 3
inline long double cosh(long double __x)
# 215 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshl(__x); }
# 217 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 223 "/usr/include/c++/4.4/cmath" 3
using ::exp;
# 226 "/usr/include/c++/4.4/cmath" 3
inline float exp(float __x)
# 227 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expf(__x); }
# 230 "/usr/include/c++/4.4/cmath" 3
inline long double exp(long double __x)
# 231 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expl(__x); }
# 233 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 239 "/usr/include/c++/4.4/cmath" 3
using ::fabs;
# 242 "/usr/include/c++/4.4/cmath" 3
inline float fabs(float __x)
# 243 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 246 "/usr/include/c++/4.4/cmath" 3
inline long double fabs(long double __x)
# 247 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 255 "/usr/include/c++/4.4/cmath" 3
using ::floor;
# 258 "/usr/include/c++/4.4/cmath" 3
inline float floor(float __x)
# 259 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorf(__x); }
# 262 "/usr/include/c++/4.4/cmath" 3
inline long double floor(long double __x)
# 263 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorl(__x); }
# 265 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 271 "/usr/include/c++/4.4/cmath" 3
using ::fmod;
# 274 "/usr/include/c++/4.4/cmath" 3
inline float fmod(float __x, float __y)
# 275 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 278 "/usr/include/c++/4.4/cmath" 3
inline long double fmod(long double __x, long double __y)
# 279 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 281 "/usr/include/c++/4.4/cmath" 3
using ::frexp;
# 284 "/usr/include/c++/4.4/cmath" 3
inline float frexp(float __x, int *__exp)
# 285 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 288 "/usr/include/c++/4.4/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 289 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 291 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 297 "/usr/include/c++/4.4/cmath" 3
using ::ldexp;
# 300 "/usr/include/c++/4.4/cmath" 3
inline float ldexp(float __x, int __exp)
# 301 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 304 "/usr/include/c++/4.4/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 305 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 307 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 313 "/usr/include/c++/4.4/cmath" 3
using ::log;
# 316 "/usr/include/c++/4.4/cmath" 3
inline float log(float __x)
# 317 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logf(__x); }
# 320 "/usr/include/c++/4.4/cmath" 3
inline long double log(long double __x)
# 321 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logl(__x); }
# 323 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 329 "/usr/include/c++/4.4/cmath" 3
using ::log10;
# 332 "/usr/include/c++/4.4/cmath" 3
inline float log10(float __x)
# 333 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10f(__x); }
# 336 "/usr/include/c++/4.4/cmath" 3
inline long double log10(long double __x)
# 337 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10l(__x); }
# 339 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 345 "/usr/include/c++/4.4/cmath" 3
using ::modf;
# 348 "/usr/include/c++/4.4/cmath" 3
inline float modf(float __x, float *__iptr)
# 349 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 352 "/usr/include/c++/4.4/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 353 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 355 "/usr/include/c++/4.4/cmath" 3
using ::pow;
# 358 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, float __y)
# 359 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powf(__x, __y); }
# 362 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, long double __y)
# 363 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powl(__x, __y); }
# 369 "/usr/include/c++/4.4/cmath" 3
inline double pow(double __x, int __i)
# 370 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powi(__x, __i); }
# 373 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, int __n)
# 374 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powif(__x, __n); }
# 377 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, int __n)
# 378 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powil(__x, __n); }
# 381 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 393 "/usr/include/c++/4.4/cmath" 3
using ::sin;
# 396 "/usr/include/c++/4.4/cmath" 3
inline float sin(float __x)
# 397 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinf(__x); }
# 400 "/usr/include/c++/4.4/cmath" 3
inline long double sin(long double __x)
# 401 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinl(__x); }
# 403 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 409 "/usr/include/c++/4.4/cmath" 3
using ::sinh;
# 412 "/usr/include/c++/4.4/cmath" 3
inline float sinh(float __x)
# 413 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhf(__x); }
# 416 "/usr/include/c++/4.4/cmath" 3
inline long double sinh(long double __x)
# 417 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhl(__x); }
# 419 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 425 "/usr/include/c++/4.4/cmath" 3
using ::sqrt;
# 428 "/usr/include/c++/4.4/cmath" 3
inline float sqrt(float __x)
# 429 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtf(__x); }
# 432 "/usr/include/c++/4.4/cmath" 3
inline long double sqrt(long double __x)
# 433 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtl(__x); }
# 435 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 441 "/usr/include/c++/4.4/cmath" 3
using ::tan;
# 444 "/usr/include/c++/4.4/cmath" 3
inline float tan(float __x)
# 445 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanf(__x); }
# 448 "/usr/include/c++/4.4/cmath" 3
inline long double tan(long double __x)
# 449 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanl(__x); }
# 451 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 457 "/usr/include/c++/4.4/cmath" 3
using ::tanh;
# 460 "/usr/include/c++/4.4/cmath" 3
inline float tanh(float __x)
# 461 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhf(__x); }
# 464 "/usr/include/c++/4.4/cmath" 3
inline long double tanh(long double __x)
# 465 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhl(__x); }
# 467 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 473 "/usr/include/c++/4.4/cmath" 3
}
# 492 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 494 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( 0, 1, 4,
      3, 2, __type ( __f ) );
    }
# 504 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 513 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 522 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 531 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 540 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 549 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 558 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 567 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 576 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 585 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 594 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 603 "/usr/include/c++/4.4/cmath" 3
}
# 35 "/usr/include/c++/4.4/bits/cmath.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 37 "/usr/include/c++/4.4/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.4/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.4/cstddef" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.4/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.4/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.4/cstddef" 3
}
# 100 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 102 "/usr/include/c++/4.4/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.4/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.4/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.4/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.4/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.4/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.4/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.4/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.4/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.4/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.4/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.4/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.4/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.4/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.4/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.4/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.4/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.4/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.4/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.4/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.4/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.4/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.4/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.4/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.4/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.4/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.4/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.4/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.4/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.4/cstdlib" 3
}
# 157 "/usr/include/c++/4.4/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 160 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.4/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.4/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.4/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.4/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.4/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.4/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.4/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.4/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.4/cstdlib" 3
}
# 199 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 202 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.4/cstdlib" 3
}
# 7604 "/usr/local/cuda-5.0//include/math_functions.h"
namespace __gnu_cxx {
# 7606 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline long long abs(long long);
# 7607 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7609 "/usr/local/cuda-5.0//include/math_functions.h"
namespace std {
# 7611 "/usr/local/cuda-5.0//include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 7612 "/usr/local/cuda-5.0//include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 7613 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7615 "/usr/local/cuda-5.0//include/math_functions.h"
using std::abs;
# 7616 "/usr/local/cuda-5.0//include/math_functions.h"
using std::fabs;
# 7617 "/usr/local/cuda-5.0//include/math_functions.h"
using std::ceil;
# 7618 "/usr/local/cuda-5.0//include/math_functions.h"
using std::floor;
# 7619 "/usr/local/cuda-5.0//include/math_functions.h"
using std::sqrt;
# 7620 "/usr/local/cuda-5.0//include/math_functions.h"
using std::pow;
# 7621 "/usr/local/cuda-5.0//include/math_functions.h"
using std::log;
# 7622 "/usr/local/cuda-5.0//include/math_functions.h"
using std::log10;
# 7623 "/usr/local/cuda-5.0//include/math_functions.h"
using std::fmod;
# 7624 "/usr/local/cuda-5.0//include/math_functions.h"
using std::modf;
# 7625 "/usr/local/cuda-5.0//include/math_functions.h"
using std::exp;
# 7626 "/usr/local/cuda-5.0//include/math_functions.h"
using std::frexp;
# 7627 "/usr/local/cuda-5.0//include/math_functions.h"
using std::ldexp;
# 7628 "/usr/local/cuda-5.0//include/math_functions.h"
using std::asin;
# 7629 "/usr/local/cuda-5.0//include/math_functions.h"
using std::sin;
# 7630 "/usr/local/cuda-5.0//include/math_functions.h"
using std::sinh;
# 7631 "/usr/local/cuda-5.0//include/math_functions.h"
using std::acos;
# 7632 "/usr/local/cuda-5.0//include/math_functions.h"
using std::cos;
# 7633 "/usr/local/cuda-5.0//include/math_functions.h"
using std::cosh;
# 7634 "/usr/local/cuda-5.0//include/math_functions.h"
using std::atan;
# 7635 "/usr/local/cuda-5.0//include/math_functions.h"
using std::atan2;
# 7636 "/usr/local/cuda-5.0//include/math_functions.h"
using std::tan;
# 7637 "/usr/local/cuda-5.0//include/math_functions.h"
using std::tanh;
# 7807 "/usr/local/cuda-5.0//include/math_functions.h"
namespace std {
# 7810 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline long abs(long);
# 7811 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float abs(float);
# 7812 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline double abs(double);
# 7813 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float fabs(float);
# 7814 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float ceil(float);
# 7815 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float floor(float);
# 7816 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float sqrt(float);
# 7817 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float pow(float, float);
# 7818 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float pow(float, int);
# 7819 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline double pow(double, int);
# 7820 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float log(float);
# 7821 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float log10(float);
# 7822 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float fmod(float, float);
# 7823 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float modf(float, float *);
# 7824 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float exp(float);
# 7825 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float frexp(float, int *);
# 7826 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float ldexp(float, int);
# 7827 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float asin(float);
# 7828 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float sin(float);
# 7829 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float sinh(float);
# 7830 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float acos(float);
# 7831 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float cos(float);
# 7832 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float cosh(float);
# 7833 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float atan(float);
# 7834 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float atan2(float, float);
# 7835 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float tan(float);
# 7836 "/usr/local/cuda-5.0//include/math_functions.h"
extern inline float tanh(float);
# 7839 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7842 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float logb(float a)
# 7843 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7844 "/usr/local/cuda-5.0//include/math_functions.h"
return logbf(a);
# 7845 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7847 "/usr/local/cuda-5.0//include/math_functions.h"
static inline int ilogb(float a)
# 7848 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7849 "/usr/local/cuda-5.0//include/math_functions.h"
return ilogbf(a);
# 7850 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7852 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float scalbn(float a, int b)
# 7853 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7854 "/usr/local/cuda-5.0//include/math_functions.h"
return scalbnf(a, b);
# 7855 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7857 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float scalbln(float a, long b)
# 7858 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7859 "/usr/local/cuda-5.0//include/math_functions.h"
return scalblnf(a, b);
# 7860 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7862 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float exp2(float a)
# 7863 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7864 "/usr/local/cuda-5.0//include/math_functions.h"
return exp2f(a);
# 7865 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7867 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float exp10(float a)
# 7868 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7869 "/usr/local/cuda-5.0//include/math_functions.h"
return exp10f(a);
# 7870 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7872 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float expm1(float a)
# 7873 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7874 "/usr/local/cuda-5.0//include/math_functions.h"
return expm1f(a);
# 7875 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7877 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float log2(float a)
# 7878 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7879 "/usr/local/cuda-5.0//include/math_functions.h"
return log2f(a);
# 7880 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7882 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float log1p(float a)
# 7883 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7884 "/usr/local/cuda-5.0//include/math_functions.h"
return log1pf(a);
# 7885 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7887 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float rsqrt(float a)
# 7888 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7889 "/usr/local/cuda-5.0//include/math_functions.h"
return rsqrtf(a);
# 7890 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7892 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float acosh(float a)
# 7893 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7894 "/usr/local/cuda-5.0//include/math_functions.h"
return acoshf(a);
# 7895 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7897 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float asinh(float a)
# 7898 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7899 "/usr/local/cuda-5.0//include/math_functions.h"
return asinhf(a);
# 7900 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7902 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float atanh(float a)
# 7903 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7904 "/usr/local/cuda-5.0//include/math_functions.h"
return atanhf(a);
# 7905 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7907 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float hypot(float a, float b)
# 7908 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7909 "/usr/local/cuda-5.0//include/math_functions.h"
return hypotf(a, b);
# 7910 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7912 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float cbrt(float a)
# 7913 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7914 "/usr/local/cuda-5.0//include/math_functions.h"
return cbrtf(a);
# 7915 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7917 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float rcbrt(float a)
# 7918 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7919 "/usr/local/cuda-5.0//include/math_functions.h"
return rcbrtf(a);
# 7920 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7922 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float sinpi(float a)
# 7923 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7924 "/usr/local/cuda-5.0//include/math_functions.h"
return sinpif(a);
# 7925 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7927 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float cospi(float a)
# 7928 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7929 "/usr/local/cuda-5.0//include/math_functions.h"
return cospif(a);
# 7930 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7932 "/usr/local/cuda-5.0//include/math_functions.h"
static inline void sincospi(float a, float *sptr, float *cptr)
# 7933 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7934 "/usr/local/cuda-5.0//include/math_functions.h"
sincospif(a, sptr, cptr);
# 7935 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7937 "/usr/local/cuda-5.0//include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 7938 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7939 "/usr/local/cuda-5.0//include/math_functions.h"
sincosf(a, sptr, cptr);
# 7940 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7942 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float j0(float a)
# 7943 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7944 "/usr/local/cuda-5.0//include/math_functions.h"
return j0f(a);
# 7945 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7947 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float j1(float a)
# 7948 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7949 "/usr/local/cuda-5.0//include/math_functions.h"
return j1f(a);
# 7950 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7952 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float jn(int n, float a)
# 7953 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7954 "/usr/local/cuda-5.0//include/math_functions.h"
return jnf(n, a);
# 7955 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7957 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float y0(float a)
# 7958 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7959 "/usr/local/cuda-5.0//include/math_functions.h"
return y0f(a);
# 7960 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7962 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float y1(float a)
# 7963 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7964 "/usr/local/cuda-5.0//include/math_functions.h"
return y1f(a);
# 7965 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7967 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float yn(int n, float a)
# 7968 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7969 "/usr/local/cuda-5.0//include/math_functions.h"
return ynf(n, a);
# 7970 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7972 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erf(float a)
# 7973 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7974 "/usr/local/cuda-5.0//include/math_functions.h"
return erff(a);
# 7975 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7977 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfinv(float a)
# 7978 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7979 "/usr/local/cuda-5.0//include/math_functions.h"
return erfinvf(a);
# 7980 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7982 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfc(float a)
# 7983 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7984 "/usr/local/cuda-5.0//include/math_functions.h"
return erfcf(a);
# 7985 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7987 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfcinv(float a)
# 7988 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7989 "/usr/local/cuda-5.0//include/math_functions.h"
return erfcinvf(a);
# 7990 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7992 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float normcdfinv(float a)
# 7993 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7994 "/usr/local/cuda-5.0//include/math_functions.h"
return normcdfinvf(a);
# 7995 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 7997 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float normcdf(float a)
# 7998 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 7999 "/usr/local/cuda-5.0//include/math_functions.h"
return normcdff(a);
# 8000 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8002 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float erfcx(float a)
# 8003 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8004 "/usr/local/cuda-5.0//include/math_functions.h"
return erfcxf(a);
# 8005 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8007 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float lgamma(float a)
# 8008 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8009 "/usr/local/cuda-5.0//include/math_functions.h"
return lgammaf(a);
# 8010 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8012 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float tgamma(float a)
# 8013 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8014 "/usr/local/cuda-5.0//include/math_functions.h"
return tgammaf(a);
# 8015 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8017 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float copysign(float a, float b)
# 8018 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8019 "/usr/local/cuda-5.0//include/math_functions.h"
return copysignf(a, b);
# 8020 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8022 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double copysign(double a, float b)
# 8023 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8024 "/usr/local/cuda-5.0//include/math_functions.h"
return copysign(a, (double)b);
# 8025 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8027 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float copysign(float a, double b)
# 8028 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8029 "/usr/local/cuda-5.0//include/math_functions.h"
return copysignf(a, (float)b);
# 8030 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8032 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float nextafter(float a, float b)
# 8033 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8034 "/usr/local/cuda-5.0//include/math_functions.h"
return nextafterf(a, b);
# 8035 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8037 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float remainder(float a, float b)
# 8038 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8039 "/usr/local/cuda-5.0//include/math_functions.h"
return remainderf(a, b);
# 8040 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8042 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 8043 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8044 "/usr/local/cuda-5.0//include/math_functions.h"
return remquof(a, b, quo);
# 8045 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8047 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float round(float a)
# 8048 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8049 "/usr/local/cuda-5.0//include/math_functions.h"
return roundf(a);
# 8050 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8052 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long lround(float a)
# 8053 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8054 "/usr/local/cuda-5.0//include/math_functions.h"
return lroundf(a);
# 8055 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8057 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long llround(float a)
# 8058 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8059 "/usr/local/cuda-5.0//include/math_functions.h"
return llroundf(a);
# 8060 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8062 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float trunc(float a)
# 8063 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8064 "/usr/local/cuda-5.0//include/math_functions.h"
return truncf(a);
# 8065 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8067 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float rint(float a)
# 8068 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8069 "/usr/local/cuda-5.0//include/math_functions.h"
return rintf(a);
# 8070 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8072 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long lrint(float a)
# 8073 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8074 "/usr/local/cuda-5.0//include/math_functions.h"
return lrintf(a);
# 8075 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8077 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long llrint(float a)
# 8078 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8079 "/usr/local/cuda-5.0//include/math_functions.h"
return llrintf(a);
# 8080 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8082 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float nearbyint(float a)
# 8083 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8084 "/usr/local/cuda-5.0//include/math_functions.h"
return nearbyintf(a);
# 8085 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8087 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fdim(float a, float b)
# 8088 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8089 "/usr/local/cuda-5.0//include/math_functions.h"
return fdimf(a, b);
# 8090 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8092 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fma(float a, float b, float c)
# 8093 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8094 "/usr/local/cuda-5.0//include/math_functions.h"
return fmaf(a, b, c);
# 8095 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8097 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fmax(float a, float b)
# 8098 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8099 "/usr/local/cuda-5.0//include/math_functions.h"
return fmaxf(a, b);
# 8100 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8102 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float fmin(float a, float b)
# 8103 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8104 "/usr/local/cuda-5.0//include/math_functions.h"
return fminf(a, b);
# 8105 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8107 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 8108 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8109 "/usr/local/cuda-5.0//include/math_functions.h"
return umin(a, b);
# 8110 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8112 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 8113 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8114 "/usr/local/cuda-5.0//include/math_functions.h"
return umin((unsigned)a, b);
# 8115 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8117 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 8118 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8119 "/usr/local/cuda-5.0//include/math_functions.h"
return umin(a, (unsigned)b);
# 8120 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8122 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long min(long long a, long long b)
# 8123 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8124 "/usr/local/cuda-5.0//include/math_functions.h"
return llmin(a, b);
# 8125 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8127 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 8128 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8129 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmin(a, b);
# 8130 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8132 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 8133 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8134 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 8135 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8137 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 8138 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8139 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 8140 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8142 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float min(float a, float b)
# 8143 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8144 "/usr/local/cuda-5.0//include/math_functions.h"
return fminf(a, b);
# 8145 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8147 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double min(double a, double b)
# 8148 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8149 "/usr/local/cuda-5.0//include/math_functions.h"
return fmin(a, b);
# 8150 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8152 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double min(float a, double b)
# 8153 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8154 "/usr/local/cuda-5.0//include/math_functions.h"
return fmin((double)a, b);
# 8155 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8157 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double min(double a, float b)
# 8158 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8159 "/usr/local/cuda-5.0//include/math_functions.h"
return fmin(a, (double)b);
# 8160 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8162 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 8163 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8164 "/usr/local/cuda-5.0//include/math_functions.h"
return umax(a, b);
# 8165 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8167 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 8168 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8169 "/usr/local/cuda-5.0//include/math_functions.h"
return umax((unsigned)a, b);
# 8170 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8172 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 8173 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8174 "/usr/local/cuda-5.0//include/math_functions.h"
return umax(a, (unsigned)b);
# 8175 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8177 "/usr/local/cuda-5.0//include/math_functions.h"
static inline long long max(long long a, long long b)
# 8178 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8179 "/usr/local/cuda-5.0//include/math_functions.h"
return llmax(a, b);
# 8180 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8182 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 8183 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8184 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmax(a, b);
# 8185 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8187 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 8188 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8189 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 8190 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8192 "/usr/local/cuda-5.0//include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 8193 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8194 "/usr/local/cuda-5.0//include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 8195 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8197 "/usr/local/cuda-5.0//include/math_functions.h"
static inline float max(float a, float b)
# 8198 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8199 "/usr/local/cuda-5.0//include/math_functions.h"
return fmaxf(a, b);
# 8200 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8202 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double max(double a, double b)
# 8203 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8204 "/usr/local/cuda-5.0//include/math_functions.h"
return fmax(a, b);
# 8205 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8207 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double max(float a, double b)
# 8208 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8209 "/usr/local/cuda-5.0//include/math_functions.h"
return fmax((double)a, b);
# 8210 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 8212 "/usr/local/cuda-5.0//include/math_functions.h"
static inline double max(double a, float b)
# 8213 "/usr/local/cuda-5.0//include/math_functions.h"
{
# 8214 "/usr/local/cuda-5.0//include/math_functions.h"
return fmax(a, (double)b);
# 8215 "/usr/local/cuda-5.0//include/math_functions.h"
}
# 73 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
template< class T, int dim = 1>
# 74 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 76 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
surface()
# 77 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
{
# 78 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 79 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
}
# 81 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 82 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
(channelDesc) = desc;
# 84 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
}
# 85 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
};
# 87 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
template< int dim>
# 88 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 90 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
surface()
# 91 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
{
# 92 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 93 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
}
# 94 "/usr/local/cuda-5.0//include/cuda_surface_types.h"
};
# 73 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 74 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
struct texture : public textureReference {
# 76 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
texture(int norm = (0), cudaTextureFilterMode
# 77 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
fMode = (cudaFilterModePoint), cudaTextureAddressMode
# 78 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
aMode = (cudaAddressModeClamp))
# 79 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 86 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(sRGB) = 0;
# 87 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
}
# 89 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 90 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 91 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 92 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
desc)
# 93 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
{
# 94 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(normalized) = norm;
# 95 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(filterMode) = fMode;
# 96 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 97 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 98 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 99 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(channelDesc) = desc;
# 100 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
(sRGB) = 0;
# 101 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
}
# 102 "/usr/local/cuda-5.0//include/cuda_texture_types.h"
};
# 2191 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 2192 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2194 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2196 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 2197 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2199 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2201 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 2202 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2204 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2206 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 2207 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2209 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2211 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 2212 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2214 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2216 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 2217 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2219 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2221 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 2222 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2224 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2226 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 2227 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2229 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2231 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 2232 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 2234 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2236 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 2237 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 2239 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2241 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 2242 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 2244 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2246 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 2247 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2249 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2251 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 2252 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2254 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2256 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 2257 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;
# 2259 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2262 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c = (0))
# 2263 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)c;
# 2265 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2267 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 2268 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;
# 2270 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2272 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 2273 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)e;
# 2290 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2292 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = (true))
# 2293 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)global;
# 2295 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2297 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = (cudaRoundZero))
# 2298 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2303 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2305 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = (cudaRoundZero))
# 2306 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2311 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2313 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = (cudaRoundNearest))
# 2314 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2319 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 2321 "/usr/local/cuda-5.0//include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = (cudaRoundNearest))
# 2322 "/usr/local/cuda-5.0//include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 2327 "/usr/local/cuda-5.0//include/device_functions.h"
::exit(___);}
# 96 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 97 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 99 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 101 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 102 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 104 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 106 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 107 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 109 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 111 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 112 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 114 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 116 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 117 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 119 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 121 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 122 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 124 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 126 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 127 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 129 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 131 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 132 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 134 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 136 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 137 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 139 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 141 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 142 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 144 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 146 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 147 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 149 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 151 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 152 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 154 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 156 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 157 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 159 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 161 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 162 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 164 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 166 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 167 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 169 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 172 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 174 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 176 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 177 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 179 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 181 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 182 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 184 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 186 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 187 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 189 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 191 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 192 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 194 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 196 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 197 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 199 "/usr/local/cuda-5.0//include/sm_11_atomic_functions.h"
::exit(___);}
# 81 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 82 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 84 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 86 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 87 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 89 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 91 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 92 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 94 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 96 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 97 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 99 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 101 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 102 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 104 "/usr/local/cuda-5.0//include/sm_12_atomic_functions.h"
::exit(___);}
# 1085 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 1086 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 1091 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1093 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = (cudaRoundNearest))
# 1094 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 1099 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1101 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = (cudaRoundNearest))
# 1102 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 1107 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1109 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = (cudaRoundZero))
# 1110 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1115 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1117 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = (cudaRoundZero))
# 1118 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1123 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1125 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = (cudaRoundZero))
# 1126 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1131 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1133 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = (cudaRoundZero))
# 1134 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1139 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1141 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = (cudaRoundNearest))
# 1142 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1147 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1149 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = (cudaRoundNearest))
# 1150 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1155 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1157 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = (cudaRoundNearest))
# 1158 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1160 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1162 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = (cudaRoundNearest))
# 1163 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1165 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 1167 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = (cudaRoundNearest))
# 1168 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1170 "/usr/local/cuda-5.0//include/sm_13_double_functions.h"
::exit(___);}
# 77 "/usr/local/cuda-5.0//include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 78 "/usr/local/cuda-5.0//include/sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 80 "/usr/local/cuda-5.0//include/sm_20_atomic_functions.h"
::exit(___);}
# 83 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val)
# 84 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 86 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 88 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val)
# 89 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 91 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 93 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val)
# 94 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 96 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 98 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val)
# 99 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 101 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 103 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val)
# 104 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 106 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 108 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val)
# 109 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 111 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 113 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val)
# 114 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 116 "/usr/local/cuda-5.0//include/sm_35_atomic_functions.h"
::exit(___);}
# 407 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 408 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 410 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 412 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 413 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 415 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 417 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 418 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 420 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 422 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 423 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 425 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 430 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr)
# 431 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)ptr;
# 444 "/usr/local/cuda-5.0//include/sm_20_intrinsics.h"
::exit(___);}
# 93 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = (32)) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 98 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 100 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 105 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 107 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 112 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 114 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = (32)) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 119 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 121 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = (32)) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 127 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 129 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 135 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 137 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = (32)) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 143 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 145 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = (32)) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 151 "/usr/local/cuda-5.0//include/sm_30_intrinsics.h"
::exit(___);}
# 91 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 102 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 104 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift)
# 119 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 123 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 124 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift)
# 125 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 129 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 132 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift)
# 133 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 137 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 138 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift)
# 139 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
# 143 "/usr/local/cuda-5.0//include/sm_35_intrinsics.h"
::exit(___);}
# 99 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 100 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 101 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 108 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 110 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 112 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 118 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 120 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 121 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 122 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 124 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 127 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 127 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 128 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 133 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 133 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 134 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 136 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 139 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 139 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 142 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 145 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 145 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 146 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 148 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 151 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 151 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 152 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 154 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 157 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 157 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 158 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 162 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 165 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 165 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 166 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 168 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 171 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 172 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 176 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 179 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 179 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 182 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 185 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 185 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 186 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 188 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 191 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 191 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 192 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 194 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 197 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 197 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 198 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 200 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 203 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 203 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 204 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 206 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 209 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 209 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 214 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 217 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 217 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 218 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 220 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 223 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 223 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 224 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 228 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 231 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 231 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 232 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 234 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 237 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 237 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 238 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 240 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 243 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 243 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 244 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 246 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 249 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 249 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 250 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 252 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 255 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 255 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 256 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 258 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 261 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 261 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 262 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 266 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 269 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 269 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 270 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 272 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 275 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 275 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 276 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 280 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 283 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 283 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 284 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 286 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 289 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 289 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 290 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 292 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 295 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 295 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 296 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 298 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 301 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 301 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 302 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 304 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 307 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 307 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 308 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 310 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 313 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 313 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 314 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 318 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 321 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 321 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 322 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 324 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 387 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 387 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 388 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 390 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 393 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 393 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 394 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 396 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 399 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 399 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 400 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 404 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 407 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 407 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 408 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 412 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 447 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 448 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 449 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 456 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 458 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 460 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 466 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 468 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 469 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 470 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 472 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 475 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 475 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 476 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 478 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 481 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 481 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 487 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 487 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 488 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 490 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 493 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 493 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 494 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 496 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 499 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 499 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 500 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 502 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 505 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 505 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 506 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 510 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 513 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 513 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 514 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 516 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 519 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 519 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 520 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 524 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 527 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 527 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 528 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 530 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 533 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 533 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 534 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 536 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 539 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 539 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 540 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 542 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 545 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 545 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 551 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 551 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 552 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 554 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 557 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 557 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 558 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 562 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 565 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 565 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 566 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 568 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 571 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 571 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 572 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 576 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 579 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 579 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 580 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 582 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 585 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 585 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 586 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 588 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 591 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 591 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 592 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 594 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 597 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 597 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 598 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 600 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 603 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 603 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 604 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 606 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 609 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 609 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 610 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 614 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 617 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 617 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 618 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 620 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 623 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 623 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 624 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 628 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 631 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 631 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 632 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 634 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 637 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 637 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 638 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 640 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 643 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 643 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 644 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 646 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 649 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 649 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 650 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 652 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 655 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 655 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 656 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 658 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 661 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 661 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 662 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 666 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 669 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 669 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 670 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 672 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 735 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 735 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 738 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 741 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 741 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 742 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 744 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 747 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 747 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 748 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 752 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 755 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 459 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 755 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 756 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 760 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 795 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 796 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 797 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 804 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 806 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 808 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 814 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 816 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 817 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 818 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 820 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 823 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 823 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 824 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 826 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 829 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 829 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 830 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 832 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 835 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 835 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 836 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 838 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 841 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 841 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 842 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 844 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 847 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 847 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 848 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 850 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 853 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 853 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 854 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 858 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 861 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 861 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 864 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 867 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 867 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 868 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 872 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 875 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 875 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 876 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 878 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 881 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 881 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 884 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 887 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 887 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 888 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 890 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 893 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 893 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 894 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 896 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 899 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 899 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 900 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 902 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 905 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 905 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 906 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 910 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 913 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 913 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 914 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 916 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 919 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 919 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 920 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 924 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 927 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 927 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 928 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 930 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 933 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 933 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 934 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 936 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 939 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 939 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 940 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 942 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 945 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 945 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 946 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 948 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 951 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 951 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 954 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 957 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 957 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 958 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 962 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 965 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 965 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 966 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 968 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 971 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 971 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 976 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 979 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 979 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 980 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 982 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 985 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 985 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 986 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 988 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 991 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 991 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 994 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 997 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 997 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 998 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1000 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1003 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1003 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1004 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1006 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1009 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1009 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1010 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1014 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1017 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1017 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1018 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1020 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1083 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1083 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1084 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1086 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1089 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1089 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1090 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1092 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1095 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1095 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1096 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1100 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1103 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 807 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1103 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1104 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1108 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1143 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1144 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1145 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1152 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1154 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1156 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1162 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1164 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1165 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1166 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1168 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1171 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1171 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1172 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1174 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1177 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1177 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1180 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1183 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1183 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1184 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1186 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1189 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1189 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1192 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1195 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1195 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1196 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1198 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1201 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1201 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1202 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1206 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1209 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1209 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1212 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1215 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1215 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1216 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1220 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1223 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1223 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1224 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1226 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1229 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1229 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1232 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1235 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1235 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1236 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1238 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1241 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1241 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1242 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1244 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1247 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1247 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1248 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1250 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1253 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1253 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1254 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1258 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1261 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1261 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1264 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1267 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1267 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1268 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1272 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1275 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1275 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1276 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1278 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1281 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1281 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1282 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1284 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1287 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1287 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1288 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1290 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1293 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1293 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1294 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1296 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1299 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1299 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1300 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1302 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1305 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1305 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1310 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1313 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1313 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1314 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1316 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1319 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1319 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1320 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1324 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1327 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1327 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1328 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1330 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1333 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1333 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1334 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1336 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1339 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1339 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1340 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1342 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1345 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1345 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1348 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1351 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1351 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1352 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1354 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1357 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1357 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1358 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1362 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1365 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1365 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1368 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1431 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1431 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1432 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1434 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1437 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1437 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1438 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1440 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1443 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1443 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1444 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1448 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1451 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1451 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1452 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1456 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1491 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1492 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1493 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1500 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1504 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1510 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1512 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1513 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1514 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1516 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1519 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1519 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1522 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1525 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1525 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1526 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1528 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1531 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1531 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1532 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1537 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1537 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1538 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1543 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1543 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1549 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1549 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1554 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1557 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1557 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1558 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1560 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1563 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1563 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1568 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1571 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1571 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1572 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1574 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1577 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1577 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1578 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1580 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1583 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1583 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1586 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1589 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1589 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1590 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1595 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1595 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1601 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1601 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1606 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1609 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1609 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1610 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1612 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1615 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1615 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1616 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1620 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1623 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1623 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1626 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1629 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1629 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1630 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1632 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1635 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1635 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1636 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1638 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1641 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1641 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1642 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1647 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1647 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1653 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1653 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1658 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1661 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1661 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1662 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1664 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1667 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1667 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1668 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1672 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1675 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1675 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1676 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1678 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1681 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1681 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1682 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1684 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1687 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1687 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1688 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1690 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1693 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1693 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1699 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1699 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1705 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1705 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1710 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1713 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1713 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1714 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1716 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1779 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1779 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1780 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1782 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1785 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1785 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1786 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1788 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1791 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1791 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1792 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1796 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1799 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1503 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1799 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1800 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1804 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1839 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1840 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1841 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1848 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1850 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1852 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1858 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1860 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 1861 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 1862 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1864 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1867 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1867 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1868 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1873 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1873 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1874 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1879 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1879 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1885 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1885 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1891 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1891 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1897 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1897 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1902 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1905 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1905 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1906 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1908 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1911 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1911 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1912 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1916 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1919 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1919 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1920 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1922 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1925 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1925 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1926 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1931 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1931 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1937 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1937 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1943 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1943 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1949 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1949 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1954 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1957 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1957 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1958 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1960 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1963 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1963 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1964 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1968 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1971 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1971 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1972 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1974 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1977 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1977 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1978 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1983 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1983 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1989 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1989 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 1995 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 1995 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2001 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2001 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2006 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2009 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2009 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2010 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2012 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2015 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2015 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2016 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2020 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2023 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2023 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2024 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2026 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2029 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2029 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2030 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2035 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2035 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2041 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2041 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2047 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2047 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2053 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2053 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2058 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2061 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2061 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2062 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2064 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2127 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2127 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2128 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2130 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2133 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2133 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2134 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2136 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2139 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2139 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2144 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2147 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 1851 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2147 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2148 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2152 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2188 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2189 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2190 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2199 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2201 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2209 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2210 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2211 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2216 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2216 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2222 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2222 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2228 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2228 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2234 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2234 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2240 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2240 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2246 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2246 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2254 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2254 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2260 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2260 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2268 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2268 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2274 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2274 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2280 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2280 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2286 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2286 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2292 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2292 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2298 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2298 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2306 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2306 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2312 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2312 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2320 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2320 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2326 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2326 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2332 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2332 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2338 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2338 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2344 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2344 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2350 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2350 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2358 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2358 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2364 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2364 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2372 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2372 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2378 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2378 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2384 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2384 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2390 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2390 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2396 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2396 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2402 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2402 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2410 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2410 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2476 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2476 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2482 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2482 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2488 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2488 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2496 "/usr/local/cuda-5.0//include/surface_functions.h"
template<>
# 2200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline))
# 2496 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2537 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2538 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2539 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2559 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2560 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2561 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2566 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2567 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2569 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2571 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2572 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2574 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2576 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2577 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2579 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2581 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2582 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2584 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2586 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2587 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2589 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2591 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2592 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2594 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2596 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2597 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2599 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2601 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2602 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2604 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2606 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2607 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2609 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2611 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2612 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2614 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2616 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2617 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2619 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2621 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2622 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2624 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2626 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2627 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2629 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2631 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2632 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2634 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2636 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2637 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2639 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2641 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2642 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2644 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2646 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2647 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2649 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2651 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2652 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2654 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2656 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2657 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2659 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2661 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2662 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2664 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2666 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2667 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2669 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2671 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2672 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2674 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2676 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2677 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2679 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2681 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2682 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2684 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2686 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2687 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2689 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2691 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2692 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2694 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2696 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2697 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2699 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2701 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2702 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2704 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2706 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2707 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2709 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2711 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2712 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2714 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2716 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2717 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2719 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2765 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2766 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2768 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2770 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2771 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2773 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2775 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2776 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2778 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2780 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2781 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2783 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2819 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2820 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2821 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2839 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2841 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 2842 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2843 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2845 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2848 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2849 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2851 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2853 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2854 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2856 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2858 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2859 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2861 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2863 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2864 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2866 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2868 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2869 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2871 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2873 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2874 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2876 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2878 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2879 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2881 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2883 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2884 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2886 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2888 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2889 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2891 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2893 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2894 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2896 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2898 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2899 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2901 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2903 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2904 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2906 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2908 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2909 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2911 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2913 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2914 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2916 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2918 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2919 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2921 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2923 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2924 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2926 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2928 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2929 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2931 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2933 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2934 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2936 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2938 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2939 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2941 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2943 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2944 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2946 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2948 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2949 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2951 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2953 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2954 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2956 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2958 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2959 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2961 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2963 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2964 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2966 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2968 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2969 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2971 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2973 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2974 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2976 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2978 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2979 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2981 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2983 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2984 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2986 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2988 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2989 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2991 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2993 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2994 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2996 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 2998 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 2999 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3001 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3047 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3048 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3050 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3052 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3053 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3055 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3057 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3058 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3060 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3062 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3063 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3065 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3101 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3102 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3103 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 3121 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3123 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3124 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3125 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3127 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3130 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3131 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3133 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3135 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3136 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3138 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3140 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3141 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3143 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3145 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3146 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3148 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3150 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3151 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3153 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3155 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3156 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3158 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3160 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3161 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3163 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3165 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3166 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3168 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3170 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3171 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3173 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3175 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3176 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3178 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3180 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3181 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3183 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3185 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3186 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3188 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3190 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3191 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3193 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3195 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3196 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3198 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3200 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3201 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3203 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3205 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3206 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3208 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3210 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3211 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3213 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3215 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3216 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3218 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3220 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3221 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3223 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3225 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3226 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3228 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3230 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3231 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3233 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3235 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3236 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3238 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3240 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3241 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3243 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3245 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3246 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3248 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3250 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3251 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3253 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3255 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3256 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3258 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3260 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3261 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3263 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3265 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3266 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3268 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3270 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3271 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3273 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3275 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3276 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3278 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3280 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3281 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3283 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3329 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3330 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3332 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3334 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3335 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3337 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3339 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3340 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3342 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3344 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3345 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3347 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3383 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3384 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3385 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3403 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3405 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3406 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3407 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3409 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3412 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3413 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3415 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3417 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3418 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3420 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3422 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3423 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3425 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3427 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3428 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3430 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3432 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3433 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3435 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3437 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3438 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3440 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3442 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3443 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3445 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3447 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3448 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3450 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3452 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3453 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3455 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3457 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3458 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3460 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3462 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3463 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3465 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3467 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3468 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3470 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3472 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3473 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3475 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3477 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3478 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3480 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3482 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3483 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3485 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3487 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3488 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3490 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3492 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3493 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3495 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3497 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3498 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3500 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3502 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3503 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3505 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3507 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3508 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3510 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3512 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3513 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3515 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3517 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3518 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3520 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3522 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3523 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3525 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3527 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3528 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3530 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3532 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3533 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3535 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3537 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3538 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3540 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3542 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3543 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3545 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3547 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3548 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3550 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3552 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3553 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3555 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3557 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3558 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3560 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3562 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3563 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3565 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3611 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3612 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3614 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3616 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3617 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3619 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3621 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3622 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3624 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3626 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3627 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3629 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3665 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3666 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3667 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3685 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3687 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3688 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3689 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3691 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3694 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3695 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3697 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3699 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3700 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3702 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3704 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3705 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3707 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3709 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3710 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3712 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3714 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3715 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3717 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3719 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3720 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3722 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3724 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3725 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3727 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3729 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3730 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3732 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3734 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3735 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3737 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3739 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3740 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3742 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3744 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3745 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3747 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3749 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3750 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3752 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3754 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3755 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3757 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3759 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3760 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3762 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3764 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3765 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3767 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3769 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3770 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3772 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3774 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3775 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3777 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3779 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3780 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3782 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3784 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3785 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3787 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3789 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3790 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3792 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3794 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3795 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3797 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3799 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3800 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3802 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3804 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3805 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3807 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3809 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3810 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3812 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3814 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3815 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3817 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3819 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3820 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3822 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3824 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3825 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3827 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3829 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3830 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3832 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3834 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3835 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3837 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3839 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3840 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3842 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3844 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3845 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3847 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3893 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3894 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3896 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3898 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3899 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3901 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3903 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3904 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3906 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3908 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3909 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3911 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3947 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3948 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3949 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3967 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3969 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 3970 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3971 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3973 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3976 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3977 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3979 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3981 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3982 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3984 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3986 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3987 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3989 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3991 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3992 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3994 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 3996 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 3997 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3999 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4001 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4002 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4004 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4006 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4007 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4009 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4011 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4012 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4014 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4016 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4017 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4019 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4021 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4022 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4024 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4026 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4027 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4029 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4031 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4032 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4034 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4036 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4037 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4039 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4041 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4042 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4044 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4046 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4047 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4049 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4051 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4052 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4054 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4056 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4057 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4059 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4061 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4062 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4064 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4066 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4067 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4069 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4071 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4072 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4074 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4076 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4077 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4079 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4081 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4082 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4084 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4086 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4087 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4089 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4091 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4092 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4094 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4096 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4097 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4099 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4101 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4102 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4104 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4106 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4107 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4109 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4111 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4112 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4114 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4116 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4117 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4119 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4121 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4122 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4124 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4126 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4127 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4129 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4175 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4176 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4178 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4180 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4181 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4183 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4185 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4186 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4188 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4190 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4191 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4193 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4229 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 4230 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4231 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 4249 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4251 "/usr/local/cuda-5.0//include/surface_functions.h"
template< class T>
# 4252 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4253 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4255 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4258 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4259 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4261 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4263 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4264 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4266 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4268 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4269 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4271 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4273 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4274 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4276 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4278 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4279 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4281 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4283 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4284 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4286 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4288 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4289 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4291 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4293 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4294 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4296 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4298 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4299 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4301 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4303 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4304 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4306 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4308 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4309 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4311 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4313 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4314 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4316 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4318 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4319 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4321 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4323 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4324 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4326 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4328 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4329 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4331 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4333 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4334 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4336 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4338 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4339 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4341 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4343 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4344 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4346 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4348 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4349 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4351 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4353 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4354 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4356 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4358 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4359 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4361 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4363 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4364 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4366 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4368 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4369 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4371 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4373 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4374 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4376 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4378 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4379 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4381 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4383 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4384 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4386 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4388 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4389 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4391 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4393 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4394 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4396 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4398 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4399 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4401 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4403 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4404 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4406 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4408 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4409 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4411 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4457 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4458 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4460 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4462 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4463 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4465 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4467 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4468 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4470 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 4472 "/usr/local/cuda-5.0//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = (cudaBoundaryModeTrap))
# 4473 "/usr/local/cuda-5.0//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4475 "/usr/local/cuda-5.0//include/surface_functions.h"
::exit(___);}
# 96 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 97 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 105 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 107 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 112 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 114 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 119 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 126 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 128 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 169 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 174 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 176 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 181 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 183 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 188 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 190 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 195 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 202 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 209 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 238 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 250 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 252 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 253 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 266 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 274 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 280 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 364 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 371 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 373 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 374 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 378 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 381 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 413 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 454 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 459 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 475 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 491 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 499 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 507 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 537 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 545 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 546 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 554 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 556 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 561 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 563 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 568 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 570 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 575 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 577 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 582 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 589 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 591 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 598 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 599 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 603 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 606 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 623 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 630 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 637 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 639 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 647 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 651 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 658 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 661 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 665 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 668 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 687 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 695 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 701 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 702 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 708 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 709 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 713 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 716 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 720 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 723 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 727 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 729 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 730 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 734 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 821 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 822 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 826 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 829 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 848 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 860 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 892 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 900 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 908 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 914 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 917 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 922 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 946 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 954 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 962 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 970 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 979 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 984 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 986 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 987 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 1001 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1009 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 1012 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1016 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1019 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1023 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1026 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1030 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1032 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1033 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1044 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1058 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1065 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1078 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1081 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1088 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1120 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1270 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1275 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1282 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1289 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1297 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1309 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1317 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1333 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1341 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1349 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1357 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1363 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1371 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1379 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1395 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1403 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1411 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1433 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1436 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1441 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1450 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1458 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1465 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1468 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1472 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1475 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1479 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1481 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1482 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1486 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1493 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1507 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1514 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1527 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1530 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1536 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1537 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1541 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1544 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1548 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1569 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1589 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1591 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1598 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1599 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1603 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1606 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1617 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1627 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1631 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1713 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1717 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1719 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1720 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1724 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1727 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1731 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1734 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1738 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1746 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1758 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1782 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1790 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1798 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1806 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1807 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1820 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1844 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1852 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1860 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1899 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1907 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1914 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1917 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1921 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1924 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1928 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1935 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1949 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1956 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1976 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1979 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1986 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1990 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1993 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1997 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 1999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2033 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2038 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2041 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2048 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2052 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2055 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2066 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2068 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2076 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2162 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2166 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2169 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2173 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2176 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2180 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2183 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2187 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2195 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2207 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2247 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2255 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2256 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2261 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2269 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2293 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2301 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2309 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2317 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2331 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2333 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2348 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2356 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2363 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2370 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2372 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2373 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2377 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2379 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2384 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2386 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2391 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2420 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2425 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2432 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2434 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2439 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2441 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2442 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2446 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2482 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2487 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2490 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2494 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2497 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2501 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2504 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2525 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2536 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2611 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2615 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2617 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2622 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2629 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2631 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2636 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2656 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2696 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2704 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2705 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2710 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2713 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2718 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2734 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2742 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2750 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2758 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2780 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2782 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2788 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2796 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2797 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2805 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2807 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2821 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2822 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2826 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2829 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2854 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2869 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2874 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2881 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2883 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2891 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2895 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2919 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2936 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2939 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2943 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2946 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2950 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2953 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2957 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2964 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2974 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 2980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2981 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3064 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3066 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3071 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3078 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3081 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3093 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3105 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3145 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3153 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3159 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3162 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3167 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3183 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3199 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3207 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3229 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3254 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3256 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3261 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3270 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3275 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3282 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3289 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3296 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3303 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3319 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3323 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3330 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3332 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3333 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3337 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3340 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3344 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3368 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3372 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3381 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3388 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3392 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3395 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3399 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3402 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3406 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3409 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3413 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3420 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3423 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3434 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3513 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3520 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3527 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3530 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3554 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3570 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3586 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3594 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3603 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3608 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3611 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3616 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3648 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3656 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3686 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3807 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3813 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3815 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3817 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3818 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3820 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3822 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3823 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3825 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3827 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3830 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3832 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3837 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3838 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3845 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3848 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3852 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3853 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3855 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3860 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3862 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3865 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3867 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3872 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3873 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3875 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3880 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3883 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3887 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3892 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3893 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3895 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3900 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3903 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3907 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3908 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3915 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3917 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3920 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3922 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3925 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3927 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3928 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3933 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3935 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3940 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3943 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3947 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3948 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3950 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3953 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3955 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3957 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3962 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3965 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3968 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3970 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3975 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3977 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3982 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = (0))
# 3983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3994 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 3995 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3997 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 3999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4002 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4005 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4009 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4010 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4012 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4015 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4017 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4019 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4022 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4024 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4027 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4029 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4030 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4032 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4035 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4042 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4044 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4049 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4050 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4052 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4055 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4057 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4064 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4065 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4070 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4072 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4077 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4079 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4084 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4089 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4090 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = (0))
# 4095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4097 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4124 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLod(texture< char, 1, cudaReadModeElementType> t, float x, float level)
# 4125 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4133 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4135 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType> t, float x, float level)
# 4136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float level)
# 4143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType> t, float x, float level)
# 4150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4154 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType> t, float x, float level)
# 4157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType> t, float x, float level)
# 4164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType> t, float x, float level)
# 4171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType> t, float x, float level)
# 4178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType> t, float x, float level)
# 4185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLod(texture< short, 1, cudaReadModeElementType> t, float x, float level)
# 4198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4202 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float level)
# 4205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4209 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType> t, float x, float level)
# 4212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4216 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType> t, float x, float level)
# 4219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType> t, float x, float level)
# 4226 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4230 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType> t, float x, float level)
# 4233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType> t, float x, float level)
# 4240 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType> t, float x, float level)
# 4247 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLod(texture< int, 1, cudaReadModeElementType> t, float x, float level)
# 4260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4264 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4266 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType> t, float x, float level)
# 4267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4271 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType> t, float x, float level)
# 4274 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4278 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4280 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType> t, float x, float level)
# 4281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4285 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4287 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType> t, float x, float level)
# 4288 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4294 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType> t, float x, float level)
# 4295 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4301 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType> t, float x, float level)
# 4302 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4308 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType> t, float x, float level)
# 4309 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< float, 1, cudaReadModeElementType> t, float x, float level)
# 4394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType> t, float x, float level)
# 4401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType> t, float x, float level)
# 4408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType> t, float x, float level)
# 4415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4427 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4439 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4447 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4464 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4471 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4472 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4477 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4479 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4480 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4485 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4487 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4493 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4501 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4525 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4526 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4533 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4539 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4541 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4547 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4549 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4563 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 4566 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 4571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4579 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLod(texture< char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4580 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4588 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4590 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4591 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4595 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4598 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4609 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4611 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4616 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4623 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4625 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4630 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4632 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4637 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4639 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLod(texture< short, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4671 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4674 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4687 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4695 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4701 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4702 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLod(texture< int, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4719 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4721 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4728 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4729 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4735 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4736 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4742 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4743 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4749 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4750 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4757 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4763 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4764 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4768 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< float, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4854 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float level)
# 4864 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4886 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4889 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4894 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4896 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4920 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4921 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4926 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4928 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4929 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4934 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4936 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4950 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4964 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4974 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4975 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4982 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4988 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4990 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4991 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 4996 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 4998 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 4999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 5004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 5007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 5012 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 5015 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 5020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5028 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5029 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5040 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5044 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5047 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5058 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5060 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5065 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5068 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5072 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5074 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5079 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5081 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5086 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5088 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5089 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5093 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5120 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5130 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5134 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5141 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5144 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5148 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5151 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5155 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5192 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5199 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5206 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5213 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5217 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5296 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5303 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5310 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5312 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 5313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5317 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5326 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5337 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5338 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5343 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5345 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5369 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5370 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5375 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5377 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5378 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5383 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5385 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5386 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5391 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5399 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5413 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5423 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5424 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5431 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5432 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5439 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5447 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5461 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 5464 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 5469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5477 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5478 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5486 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5489 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5493 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5496 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5507 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5509 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5514 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5521 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5523 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5528 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5530 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5535 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5537 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5538 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5569 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5579 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5583 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5586 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5590 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5592 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5593 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5599 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5600 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5617 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5619 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5624 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5627 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5631 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5633 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5640 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5641 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5647 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5648 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5654 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5655 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5661 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5662 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5741 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5745 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5748 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5752 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5755 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 5762 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5784 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5786 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5787 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5792 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5794 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5795 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5800 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5802 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5803 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5811 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5818 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5824 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5826 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5827 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5832 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5834 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5848 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5862 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5864 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5865 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5872 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5873 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5880 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5881 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5886 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5888 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5889 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5894 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5896 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5910 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 5913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 5918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5926 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DLod(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5927 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5935 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5938 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5942 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5945 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5949 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5956 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5958 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5963 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5965 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5970 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5972 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5977 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5979 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5984 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5986 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 5987 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 5991 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 5999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DLod(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6027 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6028 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6032 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6035 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6039 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6041 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6042 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6048 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6049 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DLod(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6066 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6068 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6073 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6076 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6080 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6082 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6089 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6090 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6096 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6097 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6103 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6104 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6110 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6111 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6190 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6194 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6201 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6235 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6241 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6249 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6252 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6275 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6276 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6283 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6289 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6297 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6311 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6314 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6319 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6321 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6322 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6327 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6329 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6330 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6337 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6338 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6343 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6345 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6375 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLod(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6376 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6384 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6386 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6391 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6405 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6407 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6412 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6415 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6419 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6426 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6429 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6433 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6436 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLod(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6476 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6477 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6481 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6484 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6488 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6490 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6491 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6497 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6498 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLod(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6515 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6517 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6522 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6525 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6529 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6531 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6536 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6538 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6539 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6545 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6546 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6552 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6553 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6559 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6560 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6638 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6639 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6643 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6650 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 6660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6682 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6684 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6690 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6693 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6698 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6700 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6701 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6708 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6709 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6716 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6717 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6724 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6725 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6730 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6732 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6738 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6741 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6746 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6755 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6760 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6762 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6763 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6768 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6770 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6771 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6776 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6778 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6779 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6784 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6786 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6787 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6792 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6794 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6795 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6800 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6802 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6803 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6808 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 6811 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 6816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6824 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6825 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6833 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6836 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6840 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6843 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6847 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6850 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6854 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6857 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6861 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6864 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6868 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6870 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6871 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6875 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6877 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6882 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6884 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6889 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6919 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6925 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6926 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6930 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6933 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6937 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6939 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6940 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6946 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6947 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6964 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6966 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6971 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6974 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6978 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6980 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6981 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6985 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6987 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6988 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 6994 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 6995 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 6999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7001 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7002 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7008 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7009 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7087 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7088 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 7109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7131 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7133 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7134 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7139 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7141 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7142 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7149 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7150 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7155 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7158 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7165 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7166 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7173 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7174 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7179 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7181 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7187 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7190 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7195 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7209 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7212 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7217 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7220 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7227 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7228 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7235 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7241 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7249 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7252 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7257 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 7260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 7265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7281 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DGrad(texture< char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7282 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7290 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7292 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7293 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7297 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7299 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7300 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7304 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7306 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7311 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7313 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7314 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7318 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7320 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7321 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7327 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7328 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7332 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7341 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7342 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DGrad(texture< short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7355 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7359 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7366 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7368 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7369 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7373 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7375 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7376 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7382 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7383 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7387 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7389 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7390 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7394 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7396 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7397 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7403 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7404 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DGrad(texture< int, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7417 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7421 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7423 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7424 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7428 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7431 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7435 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7437 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7438 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7442 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7444 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7445 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7451 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7452 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7458 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7459 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7465 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7466 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< float, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7555 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7557 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7558 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7562 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7569 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7571 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 7572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7576 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7584 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7585 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7594 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7621 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7628 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7629 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7636 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7637 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7642 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7644 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7650 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7658 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7672 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7674 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7675 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7682 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7683 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7690 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7691 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7696 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7698 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7704 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7706 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7707 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7720 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 7723 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 7728 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7736 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DGrad(texture< char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7737 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7745 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7748 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7752 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7755 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7759 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7762 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7766 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7768 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7769 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7773 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7775 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7776 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7780 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7782 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7787 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7789 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7790 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7794 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7796 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7797 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7801 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7809 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DGrad(texture< short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7810 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7814 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7817 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7821 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7823 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7824 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7828 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7830 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7831 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7835 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7837 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7838 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7842 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7844 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7845 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7849 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7851 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7852 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7856 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7858 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7859 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7863 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7871 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DGrad(texture< int, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7872 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7876 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7878 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7879 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7883 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7885 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7886 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7890 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7892 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7893 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7899 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7900 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7906 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7907 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7913 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7914 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7920 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 7921 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 7925 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 7999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< float, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8004 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8006 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8007 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8011 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8018 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8020 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 8021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8025 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8033 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8034 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8043 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8070 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8077 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8078 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8085 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8086 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8091 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8093 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8107 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8121 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8124 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8131 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8132 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8139 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8140 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8145 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8147 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8148 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8153 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8155 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8169 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 8172 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 8177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8186 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8194 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8197 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8201 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8204 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8208 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8211 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8215 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8217 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8222 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8224 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8229 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8231 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8236 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8238 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8243 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8245 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8250 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8258 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8259 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8263 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8266 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8270 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8272 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8273 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8277 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8279 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8280 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8284 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8286 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8287 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8291 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8293 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8294 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8298 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8300 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8301 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8305 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8307 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8308 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8312 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8320 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8321 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8325 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8327 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8328 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8332 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8334 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8335 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8339 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8341 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8342 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8348 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8349 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8355 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8356 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8362 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8363 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8369 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8370 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8374 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8453 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8455 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8456 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8460 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8467 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8469 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 8470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8474 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8482 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8483 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8492 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8494 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8519 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8526 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8527 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8532 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8534 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8535 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8540 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8542 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8543 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8548 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8550 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8551 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8556 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8564 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8565 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8570 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8572 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8573 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8578 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8580 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8581 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8586 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8588 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8589 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8594 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8596 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8597 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8602 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8604 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8605 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8610 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8612 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8613 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8618 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8620 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 8621 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 8626 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8634 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8635 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8643 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8645 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8646 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8650 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8652 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8653 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8657 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8659 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8660 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8664 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8666 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8667 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8671 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8673 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8674 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8678 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8680 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8681 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8685 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8687 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8688 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8692 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8694 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8695 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8699 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8707 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8708 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8712 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8714 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8715 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8719 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8721 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8722 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8726 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8728 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8729 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8733 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8735 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8736 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8740 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8742 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8743 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8747 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8749 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8750 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8754 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8756 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8757 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8761 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8769 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8770 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8774 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8776 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8777 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8781 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8783 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8784 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8788 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8790 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8791 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8795 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8797 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8798 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8802 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8804 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8805 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8809 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8811 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8812 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8816 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8818 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8819 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8823 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8897 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8898 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8902 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8904 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8905 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8909 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8911 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8912 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8916 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8918 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8919 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8923 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8931 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8932 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8941 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8943 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8944 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8949 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8951 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8952 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8957 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8959 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8960 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8965 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8967 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8968 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8973 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8975 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8976 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8981 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8983 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8984 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8989 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8991 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 8992 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 8997 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 8999 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9000 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9005 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9013 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9014 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9019 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9021 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9022 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9027 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9029 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9030 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9035 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9037 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9038 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9043 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9045 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9046 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9051 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9053 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9054 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9059 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9061 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9062 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9067 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9069 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 9070 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 9075 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9083 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char tex3DGrad(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9084 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9092 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9094 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9095 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9099 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9101 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9102 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9106 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9108 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9109 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9113 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9115 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9116 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9120 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9122 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9123 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9127 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9129 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9130 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9134 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9136 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9137 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9141 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9143 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9144 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9148 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9156 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short tex3DGrad(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9157 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9161 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9163 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9164 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9168 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9170 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9171 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9175 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9177 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9178 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9182 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9184 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9185 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9189 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9191 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9192 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9196 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9198 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9199 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9203 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9205 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9206 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9210 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9218 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int tex3DGrad(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9219 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9223 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9225 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9226 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9230 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9232 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9233 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9237 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9239 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9240 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9244 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9246 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9247 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9251 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9253 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9254 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9258 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9260 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9261 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9265 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9267 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9268 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9272 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9346 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9347 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9351 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9353 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9354 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9358 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9360 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9361 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9365 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9367 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9368 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9372 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9380 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9381 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9390 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9392 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9393 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9398 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9400 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9401 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9406 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9408 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9409 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9414 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9416 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9417 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9422 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9424 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9425 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9430 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9432 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9433 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9438 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9440 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9441 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9446 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9448 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9449 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9454 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9462 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9463 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9468 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9470 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9471 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9476 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9478 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9479 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9484 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9486 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9487 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9492 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9494 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9495 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9500 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9502 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9503 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9508 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9510 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9511 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9516 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 9518 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 9519 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 9524 "/usr/local/cuda-5.0//include/texture_fetch_functions.h"
::exit(___);}
# 70 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x)
# 71 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 80 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 81 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x)
# 82 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 86 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 88 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x)
# 89 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 93 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 95 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x)
# 96 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 102 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x)
# 103 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 109 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x)
# 110 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 116 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x)
# 117 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 123 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x)
# 124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 128 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 130 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x)
# 131 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 135 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 143 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x)
# 144 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 148 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 150 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x)
# 151 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 155 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 157 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x)
# 158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 162 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x)
# 165 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x)
# 172 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x)
# 179 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x)
# 186 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 192 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x)
# 193 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 197 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 205 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x)
# 206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 210 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 212 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x)
# 213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 217 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 219 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x)
# 220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 224 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 226 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x)
# 227 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 231 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 233 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x)
# 234 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x)
# 241 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 245 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 247 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x)
# 248 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 252 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x)
# 255 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 259 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x)
# 335 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 339 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x)
# 342 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 346 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x)
# 349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 353 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x)
# 356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 360 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 368 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1Dfetch(cudaTextureObject_t texObject, int x)
# 370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 374 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char *retVal, cudaTextureObject_t texObject, float x)
# 383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 392 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 393 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x)
# 394 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 398 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 400 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x)
# 401 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 405 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 407 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x)
# 408 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 414 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x)
# 415 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 421 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x)
# 422 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 428 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x)
# 429 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 435 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x)
# 436 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 442 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x)
# 443 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 455 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short *retVal, cudaTextureObject_t texObject, float x)
# 456 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 462 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x)
# 463 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 467 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 469 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x)
# 470 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 474 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x)
# 477 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x)
# 484 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x)
# 491 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x)
# 498 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 504 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x)
# 505 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 509 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 517 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int *retVal, cudaTextureObject_t texObject, float x)
# 518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 522 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 524 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x)
# 525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 529 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 531 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x)
# 532 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 536 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 538 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x)
# 539 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 543 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x)
# 546 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 550 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x)
# 553 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 557 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x)
# 560 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 564 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x)
# 567 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 571 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float *retVal, cudaTextureObject_t texObject, float x)
# 647 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 651 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 653 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x)
# 654 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 658 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x)
# 661 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 665 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x)
# 668 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
# 672 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 680 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1D(cudaTextureObject_t texObject, float x)
# 682 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 686 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y)
# 695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 704 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 705 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y)
# 706 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 712 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 713 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 717 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 719 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 720 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 726 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 727 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 733 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y)
# 734 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 740 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 741 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 747 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 748 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 754 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 755 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 767 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y)
# 768 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 774 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 775 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 779 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 781 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 782 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y)
# 796 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 803 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 810 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 816 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 817 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 821 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 829 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y)
# 830 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 834 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 836 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 837 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 841 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 843 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 844 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 848 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 850 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 851 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 855 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y)
# 858 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 862 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 865 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 869 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 872 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 879 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 883 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y)
# 959 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 963 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 965 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y)
# 966 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 970 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y)
# 973 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 977 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y)
# 980 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
# 984 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2D(cudaTextureObject_t texObject, float x, float y)
# 994 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 998 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1016 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1017 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1018 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1022 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1024 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1025 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1029 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1031 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1032 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1038 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1039 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1045 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1046 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1052 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1053 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1059 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1060 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1064 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1066 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1067 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1079 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1080 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1086 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1087 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1091 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1093 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1094 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1098 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1101 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1105 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1108 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1112 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1115 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1119 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1122 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1126 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1128 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1129 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1133 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1141 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1142 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1146 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1148 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1149 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1153 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1155 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1156 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1160 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1162 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1163 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1167 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1170 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1174 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1177 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1181 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1184 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1188 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1191 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1195 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1271 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1275 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1278 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1282 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1284 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1285 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1289 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1291 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1292 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1296 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1304 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 1305 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 1306 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 1310 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1318 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1319 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1328 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1329 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1330 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1336 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1337 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1343 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1344 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1350 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1351 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1357 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1358 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1364 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1365 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1371 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1372 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1376 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1378 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1379 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1391 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1392 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1398 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1399 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1403 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1405 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1406 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1410 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1413 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1417 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1420 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1424 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1427 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1431 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1434 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1438 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1441 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1445 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1453 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1454 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1458 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1465 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1467 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1468 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1472 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1474 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1475 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1479 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1482 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1486 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1489 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1493 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1496 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1500 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1503 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1507 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1583 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1587 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1589 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1590 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1594 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1596 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1597 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1601 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1603 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer)
# 1604 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
# 1608 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1616 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 1617 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 1618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 1622 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1630 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1631 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1640 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1641 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1642 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1648 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1649 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1653 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1655 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1656 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1662 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1663 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1669 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1670 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1676 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1677 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1683 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1684 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1688 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1690 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1691 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1703 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1704 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1711 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1715 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1717 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1718 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1722 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1725 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1729 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1732 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1736 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1739 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1743 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1746 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1750 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1753 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1757 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1765 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1766 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1770 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1777 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1779 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1780 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1784 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1787 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1791 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1794 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1798 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1801 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1805 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1808 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1812 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1815 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1819 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1894 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1895 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1899 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1901 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1902 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1906 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1908 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1909 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1913 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1915 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer)
# 1916 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
# 1920 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1928 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 1929 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 1930 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 1934 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1942 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1943 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1952 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1953 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1960 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1961 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1965 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1967 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1968 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1974 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1975 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1981 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1982 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1986 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1988 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1989 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 1993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 1995 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 1996 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2000 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2002 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2003 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2015 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2016 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2020 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2022 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2023 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2027 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2029 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2030 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2034 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2037 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2041 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2044 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2048 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2051 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2055 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2058 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2062 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2064 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2065 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2069 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2077 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2078 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2082 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2085 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2089 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2091 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2092 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2096 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2098 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2099 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2103 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2105 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2106 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2110 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2112 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2113 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2117 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2119 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2120 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2126 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2127 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2131 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2207 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2211 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2214 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2218 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2221 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2225 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2227 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z)
# 2228 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
# 2232 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 2241 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 2242 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 2246 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2255 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2264 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2265 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2266 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2272 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2273 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2279 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2280 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2284 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2286 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2287 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2291 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2293 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2294 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2298 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2300 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2301 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2305 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2307 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2308 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2312 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2314 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2315 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2319 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2327 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2328 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2332 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2335 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2339 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2342 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2346 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2353 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2360 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2363 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2367 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2374 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2376 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2377 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2381 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2389 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2390 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2394 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2397 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2401 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2403 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2404 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2408 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2410 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2411 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2415 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2417 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2418 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2422 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2424 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2425 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2429 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2431 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2432 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2436 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2438 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2439 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2443 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2519 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2523 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2526 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2530 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2532 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2533 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2537 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2539 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2544 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 2553 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 2554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 2558 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2567 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2584 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2585 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2600 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2602 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2603 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2620 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2621 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2636 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2638 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2639 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2654 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2656 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2657 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2672 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2675 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2690 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2692 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2693 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2711 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2726 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2734 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2735 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2750 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2753 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2768 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2770 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2771 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2804 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2806 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2822 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2824 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2825 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2840 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2842 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2843 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2858 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2860 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2861 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2884 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2885 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2900 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2902 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2903 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2918 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2920 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2921 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2936 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2938 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2939 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2956 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2957 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2974 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2975 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 2990 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 2992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 2993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3008 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3010 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3011 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3026 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3034 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3035 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3052 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3053 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3068 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3070 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3086 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3088 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3089 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3104 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3106 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3122 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3125 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3140 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3142 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3143 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3160 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3161 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3184 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3200 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3202 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3203 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3218 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3221 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3236 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = (0))
# 3239 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
# 3254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3262 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 3263 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = (0))
# 3264 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 3268 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3276 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3286 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3287 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3288 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3292 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3294 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3295 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3299 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3301 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3302 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3306 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3308 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3309 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3313 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3315 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level)
# 3316 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3320 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3322 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3323 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3327 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3329 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3330 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3336 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3337 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3341 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level)
# 3350 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3354 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3357 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3361 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3363 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3364 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3368 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3371 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3375 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3377 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level)
# 3378 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3384 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3385 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3389 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3391 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3392 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3398 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3399 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3403 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3411 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level)
# 3412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3416 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3418 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3423 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3425 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3430 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3432 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3437 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3439 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level)
# 3440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3444 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3446 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3451 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3453 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3454 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3458 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3465 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level)
# 3541 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3547 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3548 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3555 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3561 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level)
# 3562 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
# 3566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3574 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 3575 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 3576 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 3580 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3588 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3589 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3598 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3599 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3600 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3604 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3606 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3607 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3611 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3613 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3614 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3620 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3621 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3625 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3627 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3628 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3632 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3634 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3635 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3639 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3641 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3642 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3648 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3649 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3653 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3661 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3662 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3666 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3668 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3669 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3673 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3675 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3676 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3680 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3682 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3683 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3687 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3689 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3690 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3696 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3697 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3701 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3703 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3704 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3710 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3711 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3715 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3723 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3728 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3730 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3735 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3737 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3742 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3744 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3749 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3751 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3756 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3758 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3763 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3765 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3766 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3770 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3777 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3852 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3853 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3859 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3860 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3866 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3867 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3873 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level)
# 3874 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
# 3878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3886 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 3887 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 3888 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 3892 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3900 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3901 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3910 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3911 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3912 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3916 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3918 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3919 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3923 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3925 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3926 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3930 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3932 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3933 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3937 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3939 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3940 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3944 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3946 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3947 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3951 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3953 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3960 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3961 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3965 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3973 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3974 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3978 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3980 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3981 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3985 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3987 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3988 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 3994 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 3995 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 3999 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4001 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4002 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4008 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4009 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4013 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4015 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4016 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4020 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4022 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4023 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4027 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4035 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4040 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4042 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4047 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4049 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4054 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4056 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4061 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4063 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4064 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4068 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4070 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4075 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4077 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4078 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4082 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4085 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4089 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4165 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4172 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4179 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4186 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4198 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 4199 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4200 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4204 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4212 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4222 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4223 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4224 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4228 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4230 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4231 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4235 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4237 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4242 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4244 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4245 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4249 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4251 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4252 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4256 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4258 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4259 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4263 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4265 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4266 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4272 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4273 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4277 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4285 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4286 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4290 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4292 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4293 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4297 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4299 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4300 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4304 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4306 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4307 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4311 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4313 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4314 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4318 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4320 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4321 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4325 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4327 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4328 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4332 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4334 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4335 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4339 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4347 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4352 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4354 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4359 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4361 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4366 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4368 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4373 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4375 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4376 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4380 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4387 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4389 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4390 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4394 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4397 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4401 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4477 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4484 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4491 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level)
# 4498 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
# 4502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4510 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 4511 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 4512 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 4516 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4524 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4534 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4535 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4536 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4542 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4543 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4547 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4549 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4550 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4556 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4557 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4561 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4563 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4564 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4568 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4570 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4571 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4575 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4577 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4578 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4584 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4585 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4589 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4597 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4598 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4602 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4604 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4605 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4609 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4611 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4612 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4616 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4618 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4619 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4623 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4625 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4626 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4630 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4632 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4633 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4637 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4639 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4640 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4644 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4646 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4647 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4651 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4659 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4664 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4666 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4671 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4673 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4678 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4680 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4685 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4687 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4688 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4692 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4699 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4701 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4702 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4706 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4709 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4713 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4796 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4803 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4810 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4822 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 4823 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 4824 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 4828 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4836 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4837 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4846 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4847 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4848 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4852 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4854 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4855 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4859 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4861 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4862 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4866 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4868 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4869 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4873 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4875 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4880 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4882 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4883 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4887 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4889 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4890 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4894 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4896 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4897 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4901 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4909 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4910 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4914 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4916 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4917 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4921 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4923 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4924 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4928 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4930 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4931 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4935 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4937 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4938 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4942 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4944 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4945 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4949 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4951 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4952 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4956 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4958 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4959 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4963 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4971 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4976 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4978 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4983 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4985 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4986 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4990 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4992 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 4993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 4997 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 4999 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5000 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5004 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5011 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5013 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5014 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5018 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5020 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5021 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5025 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5101 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5105 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5108 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5112 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5115 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5119 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5122 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5126 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5134 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 5135 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 5136 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 5140 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5148 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5149 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5159 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5160 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5166 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5167 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5173 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5174 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5180 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5181 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5187 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5188 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5192 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5194 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5195 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5199 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5201 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5202 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5208 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5209 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5213 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5221 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5222 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5226 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5228 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5229 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5233 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5235 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5236 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5242 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5243 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5247 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5249 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5250 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5256 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5257 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5261 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5263 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5264 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5268 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5270 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5271 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5275 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5283 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5284 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5288 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5290 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5291 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5295 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5297 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5298 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5302 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5304 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5305 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5309 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5311 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5312 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5316 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5318 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5319 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5323 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5325 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5326 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5330 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5332 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5333 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5337 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5413 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5417 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5420 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5424 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5427 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5431 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5434 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5438 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5446 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 5447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 5448 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 5452 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5460 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5470 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5471 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5472 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5478 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5479 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5485 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5486 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5492 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5493 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5499 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5500 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5504 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5506 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5507 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5511 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5513 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5514 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5520 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5521 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5525 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5533 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5534 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5538 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5540 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5541 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5547 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5548 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5554 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5555 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5561 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5562 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5568 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5569 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5573 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5575 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5576 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5580 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5582 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5583 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5587 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5595 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5596 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5600 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5602 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5603 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5607 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5609 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5610 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5614 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5616 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5617 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5621 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5623 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5624 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5628 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5630 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5631 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5635 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5637 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5638 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5642 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5644 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5645 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5649 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5725 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5729 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5732 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5736 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5739 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5743 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5746 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5750 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5758 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 5759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 5760 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 5764 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5772 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5782 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5783 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5784 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5790 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5791 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5797 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5798 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5804 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5805 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5811 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5812 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5816 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5818 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5819 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5823 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5825 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5826 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5830 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5832 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5833 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5837 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5845 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5846 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5850 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5852 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5853 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5859 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5860 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5866 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5867 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5873 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5874 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5880 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5881 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5885 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5887 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5888 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5892 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5894 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5895 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5899 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5907 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5908 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5912 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5914 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5915 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5919 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5921 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5922 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5926 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5928 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5929 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5933 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5935 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5936 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5940 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5942 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5943 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5947 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5949 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5950 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5954 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 5956 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 5957 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 5961 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6036 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6037 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6041 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6043 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6044 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6048 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6050 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6051 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6055 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6057 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6058 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6062 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6070 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 6071 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 6072 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 6076 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6084 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6085 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6094 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6095 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6096 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6100 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6102 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6103 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6107 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6109 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6110 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6114 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6116 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6117 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6121 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6123 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6124 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6128 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6130 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6131 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6135 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6137 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6138 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6142 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6144 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6145 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6149 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6157 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6158 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6162 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6164 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6165 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6169 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6171 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6172 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6176 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6178 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6179 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6183 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6185 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6186 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6190 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6192 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6193 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6197 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6199 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6200 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6204 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6206 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6207 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6211 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6219 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6220 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6224 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6226 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6227 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6231 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6233 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6234 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6238 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6240 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6241 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6245 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6247 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6248 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6252 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6254 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6255 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6259 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6261 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6262 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6266 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6268 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6269 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6273 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6348 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6349 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6353 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6355 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6356 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6360 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6362 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6363 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6367 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6369 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6370 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6374 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6382 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 6383 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 6384 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 6388 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6396 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6397 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6406 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6407 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6408 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6412 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6414 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6415 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6419 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6421 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6422 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6426 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6428 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6429 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6433 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6435 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6436 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6440 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6442 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6443 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6447 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6449 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6450 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6454 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6456 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6457 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6461 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6469 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6470 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6474 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6476 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6477 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6481 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6483 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6484 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6488 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6490 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6491 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6495 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6497 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6498 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6502 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6504 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6505 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6509 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6511 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6512 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6516 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6518 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6519 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6523 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6531 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6532 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6536 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6538 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6539 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6543 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6545 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6546 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6550 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6552 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6553 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6557 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6559 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6560 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6564 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6566 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6567 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6571 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6573 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6574 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6578 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6580 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6581 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6585 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6660 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6661 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6665 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6667 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6668 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6672 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6674 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6675 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6679 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6681 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6682 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6686 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6694 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 6695 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 6696 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 6700 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6708 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6709 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6718 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6719 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6720 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6724 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6726 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6727 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6731 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6733 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6734 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6738 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6740 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6741 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6745 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6747 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6748 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6752 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6754 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6755 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6759 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6761 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6762 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6766 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6768 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6769 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6773 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6781 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6782 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6786 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6788 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6789 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6793 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6795 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6796 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6800 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6802 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6803 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6807 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6809 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6810 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6814 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6816 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6817 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6821 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6823 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6824 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6828 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6830 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6831 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6835 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6843 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6844 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6848 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6850 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6851 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6855 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6857 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6858 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6862 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6864 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6865 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6869 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6871 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6872 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6876 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6878 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6879 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6883 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6885 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6886 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6890 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6892 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6893 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6897 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6972 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6973 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6977 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6979 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6980 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6984 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6986 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6987 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6991 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 6993 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 6994 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 6998 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 7006 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
template< class T>
# 7007 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 7008 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 7012 "/usr/local/cuda-5.0//include/texture_indirect_functions.h"
::exit(___);}
# 70 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 71 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 83 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 85 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 86 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 98 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 100 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 101 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 113 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 115 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 116 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 128 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 130 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 131 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 143 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 145 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 146 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 158 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 160 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 161 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 173 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 175 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 176 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 188 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 190 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 191 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 205 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 206 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 220 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 221 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 235 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 250 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 251 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 263 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 265 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 266 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 278 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 280 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 281 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 293 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 295 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 296 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 308 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 310 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 311 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 323 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 325 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 338 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 340 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 341 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 353 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 361 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 362 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 374 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 376 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 377 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 389 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 391 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 392 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 404 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 406 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 407 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 419 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 421 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 422 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 434 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 436 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 437 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 449 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 451 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 452 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 466 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 467 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 481 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 482 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 494 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 502 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 515 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 517 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 530 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 532 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 545 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 547 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 548 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 560 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 562 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 563 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 575 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 577 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 578 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 590 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 592 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 593 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
# 605 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 613 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 614 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 615 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 619 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 627 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 628 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 640 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 642 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 643 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 655 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 657 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 658 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 670 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 672 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 673 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 685 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 687 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 688 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 700 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 702 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 703 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 715 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 717 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 718 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 730 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 732 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 747 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 748 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 762 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 763 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 777 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 778 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 790 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 792 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 793 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 805 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 807 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 808 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 820 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 822 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 823 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 835 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 837 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 838 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 850 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 852 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 853 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 865 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 867 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 868 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 880 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 882 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 895 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 897 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 910 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 918 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 919 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 931 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 933 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 934 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 946 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 948 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 949 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 963 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 964 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 978 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 979 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 993 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 994 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1008 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1009 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1021 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1023 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1024 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1036 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1038 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1039 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1051 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1059 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1072 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1074 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1075 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1087 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1089 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1090 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1102 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1104 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1105 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1117 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1119 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1120 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1132 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1134 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1135 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1147 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1150 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1170 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 1171 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1172 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 1176 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1184 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1185 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1197 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1199 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1200 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1212 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1214 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1215 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1227 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1229 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1230 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1242 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1244 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1245 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1257 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1260 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1274 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1275 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1289 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1290 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1304 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1305 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1317 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1319 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1320 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1332 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1334 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1335 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1347 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1349 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1350 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1362 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1364 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1365 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1377 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1379 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1380 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1392 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1394 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1395 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1407 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1409 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1410 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1422 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1424 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1437 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1439 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1440 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1452 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1454 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1455 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1467 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1475 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1476 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1488 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1490 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1491 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1505 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1506 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1520 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1521 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1535 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1536 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1548 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1550 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1551 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1563 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1565 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1566 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1578 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1580 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1581 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1593 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1595 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1596 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1608 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1616 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1617 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1629 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1631 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1632 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1644 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1646 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1647 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1659 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1661 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1662 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1674 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1676 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1677 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1689 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1691 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1692 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1704 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1706 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1707 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1727 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 1728 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1729 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 1733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1741 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1742 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1754 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1756 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1757 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1769 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1771 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1772 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1784 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1786 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1787 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1799 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1801 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1802 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1814 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1816 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1817 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1829 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1831 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1832 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1846 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1847 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1859 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1861 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1862 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1874 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1876 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1877 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1889 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1891 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1892 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1904 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1906 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1907 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1919 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1921 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1922 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1934 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1936 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1937 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1949 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1951 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1952 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1964 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1966 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1967 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1979 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1981 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1982 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 1994 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 1996 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 1997 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2009 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2011 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2012 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2024 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2032 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2033 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2045 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2047 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2048 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2062 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2063 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2075 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2077 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2078 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2090 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2092 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2093 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2105 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2107 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2108 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2120 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2122 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2135 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2137 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2150 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2152 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2153 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2165 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2173 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2174 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2186 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2188 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2189 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2201 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2204 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2216 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2219 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2231 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2234 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2263 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2264 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2276 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2284 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 2285 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2286 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 2290 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2298 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2299 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2311 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2313 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2314 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2328 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2329 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2341 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2343 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2344 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2356 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2358 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2359 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2371 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2373 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2374 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2386 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2388 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2389 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2401 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2403 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2404 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2416 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2418 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2419 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2431 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2433 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2434 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2446 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2448 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2449 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2461 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2463 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2476 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2478 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2491 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2493 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2494 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2506 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2508 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2509 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2521 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2523 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2524 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2536 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2538 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2539 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2551 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2553 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2554 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2566 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2568 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2569 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2581 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2589 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2590 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2602 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2604 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2605 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2617 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2619 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2620 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2632 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2634 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2635 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2647 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2649 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2662 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2664 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2677 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2679 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2680 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2692 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2694 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2695 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2707 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2709 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2710 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2722 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2730 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2731 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2743 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2746 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2758 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2761 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2773 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2776 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2788 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2790 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2791 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2803 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2805 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2806 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2818 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2820 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2821 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2833 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2841 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 2842 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2843 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 2847 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2855 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2856 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2868 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2870 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2871 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2885 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2886 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2900 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2901 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2913 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2915 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2916 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2928 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2930 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2931 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2943 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2945 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2946 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2958 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2960 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2973 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2975 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 2988 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 2990 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 2991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3003 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3005 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3018 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3020 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3021 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3033 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3035 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3036 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3048 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3050 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3051 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3063 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3065 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3066 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3078 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3080 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3081 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3093 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3095 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3096 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3108 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3111 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3126 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3146 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3147 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3159 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3161 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3174 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3176 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3177 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3189 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3191 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3192 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3204 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3206 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3207 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3219 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3221 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3222 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3234 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3237 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3251 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3252 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3264 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3266 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3267 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3279 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3288 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3300 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3303 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3315 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3317 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3318 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3330 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3332 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3333 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3345 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3347 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3348 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3360 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3362 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3363 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3375 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3377 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3378 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3390 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3398 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 3399 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3400 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 3404 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3412 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3413 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3427 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3428 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3440 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3442 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3443 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3455 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3457 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3458 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3470 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3472 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3473 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3485 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3487 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3488 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3500 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3502 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3515 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3517 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3530 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3532 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3545 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3547 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3548 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3560 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3562 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3563 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3575 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3577 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3578 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3590 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3592 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3593 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3605 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3607 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3608 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3620 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3622 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3623 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3635 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3637 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(unsigned long long *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3638 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3652 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3653 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3667 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3668 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3680 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3682 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3683 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3695 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3703 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3704 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3716 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3718 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3731 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3734 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3746 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3748 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3749 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3761 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3763 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3764 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3776 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3778 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3779 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3791 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3793 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3794 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3806 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3808 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3809 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3821 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3823 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3824 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3836 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3845 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3857 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3859 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3860 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3872 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3874 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3875 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3887 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3889 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3890 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3902 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3904 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3905 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3917 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3919 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3920 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3932 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3934 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3935 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3947 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3955 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
template< class T>
# 3956 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3957 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 3961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3969 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3970 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3980 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3982 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3983 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 3993 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 3995 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 3996 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4008 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4009 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4019 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4021 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4022 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4032 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4034 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4035 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4045 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4047 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4048 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4058 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4061 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4071 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4073 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4074 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4084 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4086 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4087 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4097 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4099 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4100 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4112 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4113 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4126 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4136 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4139 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4151 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4152 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4164 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4165 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4175 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4177 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4178 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4188 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4190 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4191 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4201 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4204 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4214 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4222 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4223 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4235 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4262 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4274 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4275 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4285 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4288 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4298 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4300 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4301 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4311 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4313 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4314 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4324 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4327 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4337 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4345 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4346 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4356 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4358 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4359 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4369 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4371 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4372 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4382 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4384 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4385 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4395 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4397 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4398 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4408 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4410 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4411 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4421 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4423 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4424 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
# 4434 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4442 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4443 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4453 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4455 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4456 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4466 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4468 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4469 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4481 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4482 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4492 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4494 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4495 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4505 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4507 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4508 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4520 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4521 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4531 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4533 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4534 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4544 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4546 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4547 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4557 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4559 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4560 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4570 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4572 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4573 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4583 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4585 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4586 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4596 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4598 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4599 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4609 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4611 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4612 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4622 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4624 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4625 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4635 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4637 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4638 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4648 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4651 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4661 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4663 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4664 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4674 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4676 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4677 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4687 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4695 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4696 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4706 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4708 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4709 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4721 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4722 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4732 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4734 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4735 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4747 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4748 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4758 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4761 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4771 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4773 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4774 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4784 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4786 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4787 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4797 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4799 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4800 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4810 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4818 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4819 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4829 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4831 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4832 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4842 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4845 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4855 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4857 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4858 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4868 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4870 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4871 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4881 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4884 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4894 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4896 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4897 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 4907 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4915 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4916 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4926 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4928 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4929 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4939 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4941 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4942 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4952 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4954 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4955 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4965 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4967 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4968 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4978 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4980 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4981 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 4991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 4993 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 4994 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5004 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5006 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5007 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5017 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5019 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5020 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5030 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5032 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5033 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5043 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5045 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5046 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5056 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5058 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5059 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5069 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5071 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5072 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5082 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5084 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5085 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5095 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5097 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5098 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5108 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5111 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5121 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5124 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5134 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5136 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5137 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5147 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5150 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5160 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5168 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5169 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5179 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5181 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5182 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5192 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5194 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5195 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5205 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5207 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5208 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5220 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5221 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5231 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5234 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5244 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5247 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5257 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5260 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5270 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5273 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5283 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5291 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5292 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5304 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5305 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5315 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5317 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5318 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5328 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5330 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5331 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5341 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5343 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5344 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5354 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5356 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5357 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5367 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5369 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5370 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 5380 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5388 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5389 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5399 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5401 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5402 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5412 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5414 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5415 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5427 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5428 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5438 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5440 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5441 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5451 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5453 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5454 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5466 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5467 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5477 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5479 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5480 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5490 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5492 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5493 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5505 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5506 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5516 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5518 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5519 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5529 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5531 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5532 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5542 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5544 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5545 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5555 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5557 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5558 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5568 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5570 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5571 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5581 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5583 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5584 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5594 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5596 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5597 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5607 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5609 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5610 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5620 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5622 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5623 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5633 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5641 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5642 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5652 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5654 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5655 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5667 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5668 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5678 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5680 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5681 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5691 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5693 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5694 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5704 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5706 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5707 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5717 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5719 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5720 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5730 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5732 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5733 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5743 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5745 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5746 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5756 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5764 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5765 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5777 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5778 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5788 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5790 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5791 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5801 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5803 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5804 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5814 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5816 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5817 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5827 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5829 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5830 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5840 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5842 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5843 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 5853 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5861 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5862 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5872 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5874 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5875 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5885 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5887 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5888 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5900 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5901 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5911 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5913 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5914 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5924 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5926 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5927 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5937 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5939 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5940 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5950 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5952 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5953 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5963 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5965 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5966 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5978 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5979 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 5989 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 5991 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 5992 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6002 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6004 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6005 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6015 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6017 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6018 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6028 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6030 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6031 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6041 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6043 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6044 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6054 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6056 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6057 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6067 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6069 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6070 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6080 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6082 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6083 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6093 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6095 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6096 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6106 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6114 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6115 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6127 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6128 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6140 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6141 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6151 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6153 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6154 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6164 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6166 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6167 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6177 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6179 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6180 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6190 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6192 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6193 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6203 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6205 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6206 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6216 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6218 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6219 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6229 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6237 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6238 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6250 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6251 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6263 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6264 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6274 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6276 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6277 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6287 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6289 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6290 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6300 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6302 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6303 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6313 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6315 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6316 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 6326 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6334 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6335 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6345 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6347 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6348 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6358 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6360 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6361 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6371 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6373 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6374 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6384 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6386 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6387 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6397 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6399 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6400 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6410 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6412 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6413 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6423 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6425 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6426 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6436 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6438 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6439 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6449 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6451 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6452 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6462 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6464 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6465 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6475 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6477 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6478 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6488 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6490 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6491 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6501 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6503 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6504 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6514 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6516 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6517 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6527 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6529 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6530 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6540 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6542 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6543 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6553 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6555 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6556 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6566 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6568 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6569 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6579 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6587 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6588 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6598 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6600 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6601 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6611 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6613 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6614 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6624 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6626 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6627 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6637 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6639 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6640 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6650 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6652 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6653 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6663 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6665 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6666 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6676 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6678 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6679 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6689 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6691 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6692 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6702 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6710 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6711 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6721 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6723 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6724 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6734 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6736 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6737 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6747 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6749 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6750 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6760 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6762 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6763 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6773 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6775 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6776 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6786 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6788 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6789 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 6799 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6807 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6808 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6818 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6820 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6821 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6831 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6833 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6834 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6844 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6846 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6847 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6857 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6859 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6860 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6870 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6872 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6873 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6883 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6885 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6886 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6896 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6898 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6899 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6909 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6911 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6912 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6922 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6924 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6925 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6935 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6937 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6938 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6948 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6950 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6951 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6961 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6963 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6964 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6974 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6976 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6977 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 6987 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 6989 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 6990 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7000 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7002 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7003 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7013 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7015 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7016 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7026 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7028 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7029 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7039 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7041 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7042 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7052 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7060 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7061 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7071 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7073 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7074 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7084 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7086 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7087 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7097 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7099 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7100 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7110 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7112 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7113 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7123 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7125 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7126 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7136 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7138 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7139 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7149 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7151 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7152 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7162 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7164 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7165 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7175 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7183 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7184 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7194 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7196 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7197 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7207 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7209 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7210 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7220 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7222 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7223 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7233 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7235 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7236 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7246 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7248 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7249 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7259 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 7261 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = (cudaBoundaryModeTrap))
# 7262 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
# 7272 "/usr/local/cuda-5.0//include/surface_indirect_functions.h"
::exit(___);}
# 66 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 67 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 68 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 69 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 70 "/usr/local/cuda-5.0//include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 120 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 121 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaSetupArgument(T
# 122 "/usr/local/cuda-5.0//include/cuda_runtime.h"
arg, size_t
# 123 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset)
# 125 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 126 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 127 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 159 "/usr/local/cuda-5.0//include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 160 "/usr/local/cuda-5.0//include/cuda_runtime.h"
event, unsigned
# 161 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 163 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 164 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags);
# 165 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 222 "/usr/local/cuda-5.0//include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 223 "/usr/local/cuda-5.0//include/cuda_runtime.h"
ptr, size_t
# 224 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, unsigned
# 225 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 227 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 228 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 229 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 231 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 232 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaHostAlloc(T **
# 233 "/usr/local/cuda-5.0//include/cuda_runtime.h"
ptr, size_t
# 234 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, unsigned
# 235 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 237 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 238 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 239 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 241 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 242 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 243 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pDevice, void *
# 244 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pHost, unsigned
# 245 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags)
# 247 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 248 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 249 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 251 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 252 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMalloc(T **
# 253 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t
# 254 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size)
# 256 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 257 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 258 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 260 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 261 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMallocHost(T **
# 262 "/usr/local/cuda-5.0//include/cuda_runtime.h"
ptr, size_t
# 263 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, unsigned
# 264 "/usr/local/cuda-5.0//include/cuda_runtime.h"
flags = (0))
# 266 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 267 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 268 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 270 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 271 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMallocPitch(T **
# 272 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t *
# 273 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pitch, size_t
# 274 "/usr/local/cuda-5.0//include/cuda_runtime.h"
width, size_t
# 275 "/usr/local/cuda-5.0//include/cuda_runtime.h"
height)
# 277 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 278 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 279 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 316 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 317 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 318 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, const void *
# 319 "/usr/local/cuda-5.0//include/cuda_runtime.h"
src, size_t
# 320 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 321 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 322 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyHostToDevice))
# 324 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 325 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 326 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 368 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 369 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 370 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, const void *
# 371 "/usr/local/cuda-5.0//include/cuda_runtime.h"
src, size_t
# 372 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 373 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 374 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyHostToDevice), cudaStream_t
# 375 "/usr/local/cuda-5.0//include/cuda_runtime.h"
stream = 0)
# 377 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 378 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 379 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 414 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 415 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 416 "/usr/local/cuda-5.0//include/cuda_runtime.h"
dst, const T &
# 417 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, size_t
# 418 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 419 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 420 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyDeviceToHost))
# 422 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 423 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 424 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 466 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 467 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 468 "/usr/local/cuda-5.0//include/cuda_runtime.h"
dst, const T &
# 469 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol, size_t
# 470 "/usr/local/cuda-5.0//include/cuda_runtime.h"
count, size_t
# 471 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 472 "/usr/local/cuda-5.0//include/cuda_runtime.h"
kind = (cudaMemcpyDeviceToHost), cudaStream_t
# 473 "/usr/local/cuda-5.0//include/cuda_runtime.h"
stream = 0)
# 475 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 476 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 477 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 499 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 500 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 501 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, const T &
# 502 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol)
# 504 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 505 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 506 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 528 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 529 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 530 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size, const T &
# 531 "/usr/local/cuda-5.0//include/cuda_runtime.h"
symbol)
# 533 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 534 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const void *)(&symbol));
# 535 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 571 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 572 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture(size_t *
# 573 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 574 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 575 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 576 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc, size_t
# 577 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 579 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 580 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 581 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 616 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 617 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture(size_t *
# 618 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 619 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 620 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t
# 621 "/usr/local/cuda-5.0//include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 623 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 624 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 625 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 672 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 673 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 674 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 675 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 676 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 677 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc, size_t
# 678 "/usr/local/cuda-5.0//include/cuda_runtime.h"
width, size_t
# 679 "/usr/local/cuda-5.0//include/cuda_runtime.h"
height, size_t
# 680 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pitch)
# 682 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 683 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 684 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 730 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 731 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 732 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 733 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, const void *
# 734 "/usr/local/cuda-5.0//include/cuda_runtime.h"
devPtr, size_t
# 735 "/usr/local/cuda-5.0//include/cuda_runtime.h"
width, size_t
# 736 "/usr/local/cuda-5.0//include/cuda_runtime.h"
height, size_t
# 737 "/usr/local/cuda-5.0//include/cuda_runtime.h"
pitch)
# 739 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 740 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 741 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 772 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 773 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 774 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaArray_const_t
# 775 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 776 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc)
# 778 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 779 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 780 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 810 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 811 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 812 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaArray_const_t
# 813 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array)
# 815 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 816 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 817 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 819 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 820 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 851 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 852 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 853 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 854 "/usr/local/cuda-5.0//include/cuda_runtime.h"
mipmappedArray, const cudaChannelFormatDesc &
# 855 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc)
# 857 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 858 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 859 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 889 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 890 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 891 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 892 "/usr/local/cuda-5.0//include/cuda_runtime.h"
mipmappedArray)
# 894 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 895 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 896 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaArray_t levelArray;
# 897 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaError_t err = cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 899 "/usr/local/cuda-5.0//include/cuda_runtime.h"
if (err != (cudaSuccess)) {
# 900 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return err;
# 901 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 902 "/usr/local/cuda-5.0//include/cuda_runtime.h"
err = cudaGetChannelDesc(&desc, levelArray);
# 904 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 905 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 928 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 929 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 930 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex)
# 932 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 933 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 934 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 962 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 963 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 964 "/usr/local/cuda-5.0//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 965 "/usr/local/cuda-5.0//include/cuda_runtime.h"
tex)
# 967 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 968 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 969 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1015 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1016 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 1017 "/usr/local/cuda-5.0//include/cuda_runtime.h"
func, cudaFuncCache
# 1018 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cacheConfig)
# 1020 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1021 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1022 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1024 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1025 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 1026 "/usr/local/cuda-5.0//include/cuda_runtime.h"
func, cudaSharedMemConfig
# 1027 "/usr/local/cuda-5.0//include/cuda_runtime.h"
config)
# 1029 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1030 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaFuncSetSharedMemConfig((const void *)func, config);
# 1031 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1067 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1068 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaLaunch(T *
# 1069 "/usr/local/cuda-5.0//include/cuda_runtime.h"
func)
# 1071 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1072 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaLaunch((const void *)func);
# 1073 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1105 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1106 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 1107 "/usr/local/cuda-5.0//include/cuda_runtime.h"
attr, T *
# 1108 "/usr/local/cuda-5.0//include/cuda_runtime.h"
entry)
# 1110 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1111 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const void *)entry);
# 1112 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1134 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1135 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1136 "/usr/local/cuda-5.0//include/cuda_runtime.h"
surf, cudaArray_const_t
# 1137 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1138 "/usr/local/cuda-5.0//include/cuda_runtime.h"
desc)
# 1140 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1141 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1142 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 1163 "/usr/local/cuda-5.0//include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1164 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1165 "/usr/local/cuda-5.0//include/cuda_runtime.h"
surf, cudaArray_const_t
# 1166 "/usr/local/cuda-5.0//include/cuda_runtime.h"
array)
# 1168 "/usr/local/cuda-5.0//include/cuda_runtime.h"
{
# 1169 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1170 "/usr/local/cuda-5.0//include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1172 "/usr/local/cuda-5.0//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1173 "/usr/local/cuda-5.0//include/cuda_runtime.h"
}
# 40 "/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stdarg.h" 3
extern "C" { typedef __builtin_va_list __gnuc_va_list; }
# 21 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
extern "C" { typedef
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
struct {
# 15 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
int __count;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
union {
# 18 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
unsigned __wch;
# 19 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
char __wchb[4];
# 20 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
} __value;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
} __mbstate_t; }
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
extern "C" { typedef
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
struct _G_fpos_t {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
__off_t __pos;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
__mbstate_t __state;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
} __fpos_t; }
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
extern "C" { typedef
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
struct _G_fpos64_t {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
__off64_t __pos;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
__mbstate_t __state;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
} __fpos64_t; }
# 4 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 3
struct _IO_FILE;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 3
extern "C" { typedef _IO_FILE __FILE; }
# 4 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 3
struct _IO_FILE;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 3
extern "C" { typedef _IO_FILE FILE; }
# 35 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_FILE;
# 36 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_marker;
# 37 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_codecvt;
# 38 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_wide_data;
# 43 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
extern "C" { typedef void _IO_lock_t; }
# 49 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
extern "C" { struct _IO_FILE {
# 51 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _flags;
# 54 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_ptr;
# 55 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_end;
# 56 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_base;
# 57 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_base;
# 58 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_ptr;
# 59 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_end;
# 60 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_buf_base;
# 61 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_buf_end;
# 64 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_save_base;
# 65 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_backup_base;
# 66 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_save_end;
# 68 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_marker *_markers;
# 70 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_FILE *_chain;
# 72 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _fileno;
# 73 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _flags2;
# 74 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
__off_t _old_offset;
# 77 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
unsigned short _cur_column;
# 78 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
signed char _vtable_offset;
# 79 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char _shortbuf[1];
# 81 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_lock_t *_lock;
# 89 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
__off64_t _offset;
# 91 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_codecvt *_codecvt;
# 92 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_wide_data *_wide_data;
# 93 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_FILE *_freeres_list;
# 94 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
void *_freeres_buf;
# 95 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
size_t __pad5;
# 96 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _mode;
# 98 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 99 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
}; }
# 27 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef __ssize_t cookie_read_function_t(void * , char * , size_t ); }
# 36 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef __ssize_t cookie_write_function_t(void * , const char * , size_t ); }
# 45 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef int cookie_seek_function_t(void * , __off64_t * , int ); }
# 48 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef int cookie_close_function_t(void * ); }
# 61 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
extern "C" { typedef
# 55 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
struct _IO_cookie_io_functions_t {
# 57 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_read_function_t *read;
# 58 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_write_function_t *write;
# 59 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_seek_function_t *seek;
# 60 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_close_function_t *close;
# 61 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
} cookie_io_functions_t; }
# 52 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 84 "/usr/include/stdio.h" 3
extern "C" { typedef __fpos_t fpos_t; }
# 89 "/usr/include/stdio.h" 3
extern "C" { typedef __fpos64_t fpos64_t; }
# 137 "/usr/include/stdio.h" 3
extern "C" { extern FILE *stdin; }
# 138 "/usr/include/stdio.h" 3
extern "C" { extern FILE *stdout; }
# 139 "/usr/include/stdio.h" 3
extern "C" { extern FILE *stderr; }
# 146 "/usr/include/stdio.h" 3
extern "C" int remove(const char * ) throw();
# 148 "/usr/include/stdio.h" 3
extern "C" int rename(const char * , const char * ) throw();
# 152 "/usr/include/stdio.h" 3
extern "C" int renameat(int , const char * , int , const char * ) throw();
# 164 "/usr/include/stdio.h" 3
extern "C" int renameat2(int , const char * , int , const char * , unsigned ) throw();
# 173 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile() __attribute((__warn_unused_result__));
# 183 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64() __attribute((__warn_unused_result__));
# 187 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char * ) throw() __attribute((__warn_unused_result__));
# 192 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char * ) throw() __attribute((__warn_unused_result__));
# 204 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char * , const char * ) throw()
# 205 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 213 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE * );
# 218 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE * );
# 227 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE * );
# 237 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 246 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__ , const char *__restrict__ )
# 247 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 252 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ )
# 254 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 270 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__ , const char *__restrict__ )
# 271 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 272 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ )
# 274 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 279 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int , const char * ) throw() __attribute((__warn_unused_result__));
# 285 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__ , const char *__restrict__ , cookie_io_functions_t ) throw()
# 287 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 292 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void * , size_t , const char * ) throw()
# 293 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 298 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char ** , size_t * ) throw() __attribute((__warn_unused_result__));
# 304 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__ , char *__restrict__ ) throw();
# 308 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__ , char *__restrict__ , int , size_t ) throw();
# 314 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__ , char *__restrict__ , size_t ) throw();
# 318 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE * ) throw();
# 326 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fprintf(FILE *__restrict__ , const char *__restrict__ , ...); }
# 332 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int printf(const char *__restrict__ , ...); }
# 334 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int sprintf(char *__restrict__ , const char *__restrict__ , ...) throw(); }
# 341 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vfprintf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list ); }
# 347 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vprintf(const char *__restrict__ , __gnuc_va_list ); }
# 349 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vsprintf(char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw(); }
# 354 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int snprintf(char *__restrict__ , size_t , const char *__restrict__ , ...) throw()
# 356 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4))); }
# 358 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vsnprintf(char *__restrict__ , size_t , const char *__restrict__ , __gnuc_va_list ) throw()
# 360 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0))); }
# 366 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vasprintf(char **__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 368 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))) __attribute((__warn_unused_result__)); }
# 369 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int __asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 371 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__)); }
# 372 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 374 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__)); }
# 379 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vdprintf(int , const char *__restrict__ , __gnuc_va_list )
# 381 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))); }
# 382 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int dprintf(int , const char *__restrict__ , ...)
# 383 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))); }
# 391 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__ , const char *__restrict__ , ...)
# 392 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 397 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__ , ...) __attribute((__warn_unused_result__));
# 399 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__ , const char *__restrict__ , ...) throw();
# 432 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list )
# 434 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0))) __attribute((__warn_unused_result__));
# 440 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__ , __gnuc_va_list )
# 441 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0))) __attribute((__warn_unused_result__));
# 444 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 446 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 485 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE * );
# 486 "/usr/include/stdio.h" 3
extern "C" int getc(FILE * );
# 492 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getchar(); }
# 499 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getc_unlocked(FILE * ); }
# 500 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getchar_unlocked(); }
# 510 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fgetc_unlocked(FILE * ); }
# 521 "/usr/include/stdio.h" 3
extern "C" int fputc(int , FILE * );
# 522 "/usr/include/stdio.h" 3
extern "C" int putc(int , FILE * );
# 528 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int putchar(int ); }
# 537 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fputc_unlocked(int , FILE * ); }
# 545 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int putc_unlocked(int , FILE * ); }
# 546 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int putchar_unlocked(int ); }
# 553 "/usr/include/stdio.h" 3
extern "C" int getw(FILE * );
# 556 "/usr/include/stdio.h" 3
extern "C" int putw(int , FILE * );
# 564 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *fgets(char *__restrict__ , int , FILE *__restrict__ )
# 565 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 577 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *gets(char * ) __attribute((__warn_unused_result__)) __attribute((__deprecated__)); }
# 587 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *fgets_unlocked(char *__restrict__ , int , FILE *__restrict__ )
# 588 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 603 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ )
# 605 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 606 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ )
# 608 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 616 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline __ssize_t getline(char **__restrict__ , size_t *__restrict__ , FILE *__restrict__ )
# 618 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 626 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__ , FILE *__restrict__ );
# 632 "/usr/include/stdio.h" 3
extern "C" int puts(const char * );
# 639 "/usr/include/stdio.h" 3
extern "C" int ungetc(int , FILE * );
# 646 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t fread(void *__restrict__ , size_t , size_t , FILE *__restrict__ )
# 647 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 652 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 662 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__ , FILE *__restrict__ );
# 673 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t fread_unlocked(void *__restrict__ , size_t , size_t , FILE *__restrict__ )
# 674 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__)); }
# 675 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 684 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE * , long , int );
# 689 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE * ) __attribute((__warn_unused_result__));
# 694 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE * );
# 707 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE * , __off_t , int );
# 712 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE * ) __attribute((__warn_unused_result__));
# 731 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__ , fpos_t *__restrict__ );
# 736 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE * , const fpos_t * );
# 750 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE * , __off64_t , int );
# 751 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE * ) __attribute((__warn_unused_result__));
# 752 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__ , fpos64_t *__restrict__ );
# 753 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE * , const fpos64_t * );
# 757 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE * ) throw();
# 759 "/usr/include/stdio.h" 3
extern "C" int feof(FILE * ) throw() __attribute((__warn_unused_result__));
# 761 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE * ) throw() __attribute((__warn_unused_result__));
# 765 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE * ) throw();
# 766 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int feof_unlocked(FILE * ) throw() __attribute((__warn_unused_result__)); }
# 767 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int ferror_unlocked(FILE * ) throw() __attribute((__warn_unused_result__)); }
# 775 "/usr/include/stdio.h" 3
extern "C" void perror(const char * );
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 27 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 30 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 31 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 786 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE * ) throw() __attribute((__warn_unused_result__));
# 791 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE * ) throw() __attribute((__warn_unused_result__));
# 800 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char * , const char * ) __attribute((__warn_unused_result__));
# 806 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE * );
# 812 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char * ) throw();
# 818 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char * );
# 823 "/usr/include/stdio.h" 3
struct obstack;
# 826 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int obstack_printf(obstack *__restrict__ , const char *__restrict__ , ...) throw()
# 828 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))); }
# 829 "/usr/include/stdio.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int obstack_vprintf(obstack *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 832 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))); }
# 840 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE * ) throw();
# 844 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE * ) throw() __attribute((__warn_unused_result__));
# 847 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE * ) throw();
# 858 "/usr/include/stdio.h" 3
extern "C" int __uflow(FILE *);
# 859 "/usr/include/stdio.h" 3
extern "C" int __overflow(FILE *, int);
# 47 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 47 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar()
# 48 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 49 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return getc(stdin);
# 50 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 56 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 56 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fgetc_unlocked(FILE *__fp)
# 57 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 58 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 59 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 65 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getc_unlocked(FILE *__fp)
# 67 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 68 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 69 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 72 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar_unlocked()
# 74 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 75 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdin->_IO_read_ptr) >= (stdin->_IO_read_end), 0)) ? __uflow(stdin) : (*((unsigned char *)((stdin->_IO_read_ptr)++)));
# 76 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 81 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar(int __c)
# 83 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 84 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return putc(__c, stdout);
# 85 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fputc_unlocked(int __c, FILE *__stream)
# 92 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 93 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 94 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 100 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putc_unlocked(int __c, FILE *__stream)
# 102 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 107 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar_unlocked(int __c)
# 109 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 110 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdout->_IO_write_ptr) >= (stdout->_IO_write_end), 0)) ? __overflow(stdout, (unsigned char)__c) : ((unsigned char)((*((stdout->_IO_write_ptr)++)) = __c));
# 111 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline __ssize_t
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getline(char **__lineptr, size_t *__n, FILE *__stream)
# 119 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 120 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return __getdelim(__lineptr, __n, '\n', __stream);
# 121 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
feof_unlocked(FILE *__stream) throw()
# 129 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 130 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 16) != 0;
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
extern "C" {
# 134 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
ferror_unlocked(FILE *__stream) throw()
# 136 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 137 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 32) != 0;
# 138 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
} }
# 26 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __sprintf_chk(char *__restrict__ , int , size_t , const char *__restrict__ , ...) throw();
# 28 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vsprintf_chk(char *__restrict__ , int , size_t , const char *__restrict__ , __gnuc_va_list ) throw();
# 34 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 34 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
sprintf(char *__restrict__ __s, const char *__restrict__ __fmt, ...) throw()
# 35 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 36 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___sprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 38 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 45 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vsprintf(char *__restrict__ __s, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 48 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 49 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 51 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __snprintf_chk(char *__restrict__ , size_t , int , size_t , const char *__restrict__ , ...) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vsnprintf_chk(char *__restrict__ , size_t , int , size_t , const char *__restrict__ , __gnuc_va_list ) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 63 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
snprintf(char *__restrict__ __s, size_t __n, const char *__restrict__ __fmt, ...) throw()
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 67 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___snprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 69 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 77 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 76 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 77 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vsnprintf(char *__restrict__ __s, size_t __n, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 79 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 80 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsnprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 88 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __fprintf_chk(FILE *__restrict__ , int , const char *__restrict__ , ...);
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __printf_chk(int , const char *__restrict__ , ...);
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vfprintf_chk(FILE *__restrict__ , int , const char *__restrict__ , __gnuc_va_list );
# 93 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vprintf_chk(int , const char *__restrict__ , __gnuc_va_list );
# 98 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 97 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 98 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fprintf(FILE *__restrict__ __stream, const char *__restrict__ __fmt, ...)
# 99 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 100 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 102 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
printf(const char *__restrict__ __fmt, ...)
# 106 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 107 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __printf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 116 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vprintf(const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 120 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(stdout, 2 - 1, __fmt, __ap);
# 124 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 126 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vfprintf(FILE *__restrict__ __stream, const char *__restrict__
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__fmt, __gnuc_va_list __ap)
# 129 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 130 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 134 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __dprintf_chk(int , int , const char *__restrict__ , ...)
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 136 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vdprintf_chk(int , int , const char *__restrict__ , __gnuc_va_list )
# 138 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 142 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 141 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 142 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 143 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 144 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __dprintf_chk(__fd, 2 - 1, __fmt, __builtin_va_arg_pack());
# 146 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 153 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 152 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 153 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 154 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 155 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vdprintf_chk(__fd, 2 - 1, __fmt, __ap);
# 156 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 161 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __asprintf_chk(char **__restrict__ , int , const char *__restrict__ , ...) throw()
# 163 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4))) __attribute((__warn_unused_result__));
# 164 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __vasprintf_chk(char **__restrict__ , int , const char *__restrict__ , __gnuc_va_list ) throw()
# 166 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0))) __attribute((__warn_unused_result__));
# 167 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __obstack_printf_chk(obstack *__restrict__ , int , const char *__restrict__ , ...) throw()
# 170 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 171 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" int __obstack_vprintf_chk(obstack *__restrict__ , int , const char *__restrict__ , __gnuc_va_list ) throw()
# 175 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 179 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 178 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 179 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 180 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 181 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 183 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 186 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 185 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 186 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 188 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 189 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 191 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 194 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 193 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 194 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, ...) throw()
# 196 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 197 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_printf_chk(__obstack, 2 - 1, __fmt, __builtin_va_arg_pack());
# 199 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 210 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 209 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 210 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vasprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 212 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 213 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vasprintf_chk(__ptr, 2 - 1, __fmt, __ap);
# 214 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 217 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 216 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 217 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 219 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 220 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_vprintf_chk(__obstack, 2 - 1, __fmt, __ap);
# 222 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 229 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__gets_chk(char * , size_t) __attribute((__warn_unused_result__));
# 230 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__gets_warn(char * ) __asm__("gets")
# 231 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("please use fgets or getline instead, gets can\'t specify buffer size")));
# 235 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 234 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 235 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
gets(char *__str)
# 236 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 237 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__str, 2 > 1) != ((size_t)(-1))) {
# 238 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __gets_chk(__str, __builtin_object_size(__str, 2 > 1)); }
# 239 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __gets_warn(__str);
# 240 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 243 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_chk(char *__restrict__ , size_t , int , FILE *__restrict__ )
# 244 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 245 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_alias(char *__restrict__ , int , FILE *__restrict__ ) __asm__("fgets") __attribute((__warn_unused_result__));
# 248 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_chk_warn(char *__restrict__ , size_t , int , FILE *__restrict__ ) __asm__("__fgets_chk")
# 251 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets called with bigger size than length of destination buffer")));
# 255 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 254 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 255 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 256 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 257 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 258 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 259 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 260 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 262 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 263 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 264 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 265 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_alias(__s, __n, __stream);
# 266 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 268 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_chk(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ )
# 270 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 271 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_alias(void *__restrict__ , size_t , size_t , FILE *__restrict__ ) __asm__("fread") __attribute((__warn_unused_result__));
# 275 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_chk_warn(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ ) __asm__("__fread_chk")
# 280 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread called with bigger size * nmemb than length of destination buffer")));
# 284 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 283 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 284 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__
# 285 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 286 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 287 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((size_t)(-1)))
# 288 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 289 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) {
# 292 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 294 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 295 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 296 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 297 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_alias(__ptr, __size, __n, __stream);
# 298 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 301 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_unlocked_chk(char *__restrict__ , size_t , int , FILE *__restrict__ )
# 302 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 303 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_unlocked_alias(char *__restrict__ , int , FILE *__restrict__ ) __asm__("fgets_unlocked") __attribute((__warn_unused_result__));
# 306 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" char *__fgets_unlocked_chk_warn(char *__restrict__ , size_t , int , FILE *__restrict__ ) __asm__("__fgets_unlocked_chk")
# 309 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets_unlocked called with bigger size than length of destination buffer")));
# 313 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 312 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 313 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 314 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 315 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 316 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 317 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 318 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 320 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 321 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 322 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 323 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_alias(__s, __n, __stream);
# 324 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 329 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_unlocked_chk(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ )
# 331 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 332 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_unlocked_alias(void *__restrict__ , size_t , size_t , FILE *__restrict__ ) __asm__("fread_unlocked") __attribute((__warn_unused_result__));
# 336 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" size_t __fread_unlocked_chk_warn(void *__restrict__ , size_t , size_t , size_t , FILE *__restrict__ ) __asm__("__fread_unlocked_chk")
# 341 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread_unlocked called with bigger size * nmemb than length of destination buffer")));
# 345 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern "C" {
# 344 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 345 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread_unlocked(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__
# 346 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 347 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 348 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((size_t)(-1)))
# 349 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 350 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) {
# 353 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 356 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 357 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 359 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 362 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((((0) && (0)) && ((__size | __n) < (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) && ((__size * __n) <= (8)))
# 366 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 367 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
size_t __cnt = (__size * __n);
# 368 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
char *__cptr = ((char *)__ptr);
# 369 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__cnt == (0)) {
# 370 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return 0; }
# 372 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
for (; __cnt > (0); --__cnt)
# 373 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 374 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
int __c = getc_unlocked(__stream);
# 375 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__c == (-1)) {
# 376 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
break; }
# 377 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
(*(__cptr++)) = __c;
# 378 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 379 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return (__cptr - ((char *)__ptr)) / __size;
# 380 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 382 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_alias(__ptr, __size, __n, __stream);
# 383 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
} }
# 42 "/usr/include/c++/4.4/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _Alloc >
    class allocator;
# 47 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 50 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _CharT, typename _Traits = char_traits < _CharT >,
           typename _Alloc = allocator < _CharT > >
    class basic_string;
# 54 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 56 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< char> string;
# 59 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 61 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< wchar_t> wstring;
# 75 "/usr/include/c++/4.4/bits/stringfwd.h" 3
}
# 20 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h" 3
typedef unsigned wint_t;
# 6 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h" 3
typedef __mbstate_t mbstate_t;
# 83 "/usr/include/wchar.h" 3
struct tm;
# 87 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcscpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw()
# 89 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 92 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcsncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 94 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 97 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcscat(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw()
# 99 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 101 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcsncat(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 103 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2))); }
# 106 "/usr/include/wchar.h" 3
extern "C" int wcscmp(const wchar_t * , const wchar_t * ) throw()
# 107 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 109 "/usr/include/wchar.h" 3
extern "C" int wcsncmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 110 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 114 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp(const wchar_t * , const wchar_t * ) throw();
# 117 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp(const wchar_t * , const wchar_t * , size_t ) throw();
# 122 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp_l(const wchar_t * , const wchar_t * , locale_t ) throw();
# 125 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp_l(const wchar_t * , const wchar_t * , size_t , locale_t ) throw();
# 131 "/usr/include/wchar.h" 3
extern "C" int wcscoll(const wchar_t * , const wchar_t * ) throw();
# 135 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 144 "/usr/include/wchar.h" 3
extern "C" int wcscoll_l(const wchar_t * , const wchar_t * , locale_t ) throw();
# 150 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm_l(wchar_t * , const wchar_t * , size_t , locale_t ) throw();
# 154 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsdup(const wchar_t * ) throw() __attribute((__malloc__));
# 159 "/usr/include/wchar.h" 3
wchar_t *wcschr(wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 160 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 161 "/usr/include/wchar.h" 3
const wchar_t *wcschr(const wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 162 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 169 "/usr/include/wchar.h" 3
wchar_t *wcsrchr(wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 170 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 171 "/usr/include/wchar.h" 3
const wchar_t *wcsrchr(const wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 172 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 181 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcschrnul(const wchar_t * , wchar_t ) throw()
# 182 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 187 "/usr/include/wchar.h" 3
extern "C" size_t wcscspn(const wchar_t * , const wchar_t * ) throw()
# 188 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 191 "/usr/include/wchar.h" 3
extern "C" size_t wcsspn(const wchar_t * , const wchar_t * ) throw()
# 192 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 195 "/usr/include/wchar.h" 3
wchar_t *wcspbrk(wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 196 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 197 "/usr/include/wchar.h" 3
const wchar_t *wcspbrk(const wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 199 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 206 "/usr/include/wchar.h" 3
wchar_t *wcsstr(wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 207 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 208 "/usr/include/wchar.h" 3
const wchar_t *wcsstr(const wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 210 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 217 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcstok(wchar_t *__restrict__ , const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 222 "/usr/include/wchar.h" 3
extern "C" size_t wcslen(const wchar_t * ) throw() __attribute((__pure__));
# 227 "/usr/include/wchar.h" 3
wchar_t *wcswcs(wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 228 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 229 "/usr/include/wchar.h" 3
const wchar_t *wcswcs(const wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 231 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 240 "/usr/include/wchar.h" 3
extern "C" size_t wcsnlen(const wchar_t * , size_t ) throw()
# 241 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 247 "/usr/include/wchar.h" 3
wchar_t *wmemchr(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 248 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 249 "/usr/include/wchar.h" 3
const wchar_t *wmemchr(const wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 251 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 258 "/usr/include/wchar.h" 3
extern "C" int wmemcmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 259 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 262 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmemcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 267 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmemmove(wchar_t * , const wchar_t * , size_t ) throw(); }
# 271 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmemset(wchar_t * , wchar_t , size_t ) throw(); }
# 276 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wmempcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 284 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wint_t btowc(int ) throw(); }
# 288 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int wctob(wint_t ) throw(); }
# 292 "/usr/include/wchar.h" 3
extern "C" int mbsinit(const mbstate_t * ) throw() __attribute((__pure__));
# 296 "/usr/include/wchar.h" 3
extern "C" size_t mbrtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 301 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcrtomb(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw(); }
# 305 "/usr/include/wchar.h" 3
extern "C" size_t __mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 307 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw(); }
# 316 "/usr/include/wchar.h" 3
extern "C" wint_t __btowc_alias(int ) __asm__("btowc");
# 318 "/usr/include/wchar.h" 3
extern "C" {
# 317 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline wint_t
# 318 "/usr/include/wchar.h" 3
btowc(int __c) throw()
# 319 "/usr/include/wchar.h" 3
{ return (((0) && (__c >= ('\000'))) && (__c <= ('\177'))) ? ((wint_t)__c) : __btowc_alias(__c);
# 320 "/usr/include/wchar.h" 3
} }
# 322 "/usr/include/wchar.h" 3
extern "C" int __wctob_alias(wint_t ) __asm__("wctob");
# 324 "/usr/include/wchar.h" 3
extern "C" {
# 323 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline int
# 324 "/usr/include/wchar.h" 3
wctob(wint_t __wc) throw()
# 325 "/usr/include/wchar.h" 3
{ return (((0) && (__wc >= (L'\x0'))) && (__wc <= (L'\x7f'))) ? ((int)__wc) : __wctob_alias(__wc);
# 326 "/usr/include/wchar.h" 3
} }
# 329 "/usr/include/wchar.h" 3
extern "C" {
# 328 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline size_t
# 329 "/usr/include/wchar.h" 3
mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw()
# 331 "/usr/include/wchar.h" 3
{ return (__ps != (__null)) ? mbrtowc(__null, __s, __n, __ps) : __mbrlen(__s, __n, __null);
# 332 "/usr/include/wchar.h" 3
} }
# 337 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbsrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw(); }
# 343 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcsrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw(); }
# 351 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t mbsnrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw(); }
# 357 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t wcsnrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw(); }
# 367 "/usr/include/wchar.h" 3
extern "C" int wcwidth(wchar_t ) throw();
# 371 "/usr/include/wchar.h" 3
extern "C" int wcswidth(const wchar_t * , size_t ) throw();
# 377 "/usr/include/wchar.h" 3
extern "C" double wcstod(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 382 "/usr/include/wchar.h" 3
extern "C" float wcstof(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 384 "/usr/include/wchar.h" 3
extern "C" long double wcstold(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 396 "/usr/include/wchar.h" 3
extern "C" _Float32 wcstof32(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 401 "/usr/include/wchar.h" 3
extern "C" _Float64 wcstof64(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 411 "/usr/include/wchar.h" 3
extern "C" _Float32x wcstof32x(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 416 "/usr/include/wchar.h" 3
extern "C" _Float64x wcstof64x(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 428 "/usr/include/wchar.h" 3
extern "C" long wcstol(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 433 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 441 "/usr/include/wchar.h" 3
__extension__ extern "C" long long wcstoll(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 448 "/usr/include/wchar.h" 3
__extension__ extern "C" unsigned long long wcstoull(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 457 "/usr/include/wchar.h" 3
__extension__ extern "C" long long wcstoq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 464 "/usr/include/wchar.h" 3
__extension__ extern "C" unsigned long long wcstouq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 473 "/usr/include/wchar.h" 3
extern "C" long wcstol_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 477 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 482 "/usr/include/wchar.h" 3
__extension__ extern "C" long long wcstoll_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 487 "/usr/include/wchar.h" 3
__extension__ extern "C" unsigned long long wcstoull_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , locale_t ) throw();
# 492 "/usr/include/wchar.h" 3
extern "C" double wcstod_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 496 "/usr/include/wchar.h" 3
extern "C" float wcstof_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 500 "/usr/include/wchar.h" 3
extern "C" long double wcstold_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 511 "/usr/include/wchar.h" 3
extern "C" _Float32 wcstof32_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 517 "/usr/include/wchar.h" 3
extern "C" _Float64 wcstof64_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 529 "/usr/include/wchar.h" 3
extern "C" _Float32x wcstof32x_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 535 "/usr/include/wchar.h" 3
extern "C" _Float64x wcstof64x_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , locale_t ) throw();
# 551 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcpcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw(); }
# 556 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *wcpncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw(); }
# 567 "/usr/include/wchar.h" 3
extern "C" __FILE *open_wmemstream(wchar_t ** , size_t * ) throw();
# 573 "/usr/include/wchar.h" 3
extern "C" int fwide(__FILE * , int ) throw();
# 580 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int fwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...); }
# 587 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int wprintf(const wchar_t *__restrict__ , ...); }
# 590 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int swprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw(); }
# 598 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vfwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ); }
# 606 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vwprintf(const wchar_t *__restrict__ , __gnuc_va_list ); }
# 611 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int vswprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw(); }
# 621 "/usr/include/wchar.h" 3
extern "C" int fwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 628 "/usr/include/wchar.h" 3
extern "C" int wscanf(const wchar_t *__restrict__ , ...);
# 631 "/usr/include/wchar.h" 3
extern "C" int swscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , ...) throw();
# 671 "/usr/include/wchar.h" 3
extern "C" int vfwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 679 "/usr/include/wchar.h" 3
extern "C" int vwscanf(const wchar_t *__restrict__ , __gnuc_va_list );
# 683 "/usr/include/wchar.h" 3
extern "C" int vswscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 726 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc(__FILE * );
# 727 "/usr/include/wchar.h" 3
extern "C" wint_t getwc(__FILE * );
# 733 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar();
# 740 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc(wchar_t , __FILE * );
# 741 "/usr/include/wchar.h" 3
extern "C" wint_t putwc(wchar_t , __FILE * );
# 747 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar(wchar_t );
# 755 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *fgetws(wchar_t *__restrict__ , int , __FILE *__restrict__ ); }
# 762 "/usr/include/wchar.h" 3
extern "C" int fputws(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 770 "/usr/include/wchar.h" 3
extern "C" wint_t ungetwc(wint_t , __FILE * );
# 781 "/usr/include/wchar.h" 3
extern "C" wint_t getwc_unlocked(__FILE * );
# 782 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar_unlocked();
# 790 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc_unlocked(__FILE * );
# 798 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc_unlocked(wchar_t , __FILE * );
# 807 "/usr/include/wchar.h" 3
extern "C" wint_t putwc_unlocked(wchar_t , __FILE * );
# 808 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar_unlocked(wchar_t );
# 817 "/usr/include/wchar.h" 3
extern "C" { extern __attribute((gnu_inline)) inline wchar_t *fgetws_unlocked(wchar_t *__restrict__ , int , __FILE *__restrict__ ); }
# 826 "/usr/include/wchar.h" 3
extern "C" int fputws_unlocked(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 834 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ ) throw();
# 841 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime_l(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ , locale_t ) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemcpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemcpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wmemcpy");
# 31 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemcpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wmemcpy_chk")
# 35 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemcpy called with length bigger than size of destination buffer")));
# 39 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 38 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 39 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw()
# 41 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 43 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 44 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 45 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 48 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 49 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 51 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_alias(__s1, __s2, __n);
# 53 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 56 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemmove_chk(wchar_t * , const wchar_t * , size_t , size_t ) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemmove_alias(wchar_t * , const wchar_t * , size_t ) throw() __asm__("wmemmove");
# 61 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemmove_chk_warn(wchar_t * , const wchar_t * , size_t , size_t ) throw() __asm__("__wmemmove_chk")
# 64 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemmove called with length bigger than size of destination buffer")));
# 68 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 67 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 68 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw()
# 69 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 70 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 71 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 72 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 73 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 76 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 77 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 79 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 80 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_alias(__s1, __s2, __n);
# 81 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 85 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmempcpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmempcpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wmempcpy");
# 92 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmempcpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wmempcpy_chk")
# 96 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmempcpy called with length bigger than size of destination buffer")));
# 100 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 99 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 100 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw()
# 102 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 104 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 105 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 106 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 109 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 110 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 112 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 113 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_alias(__s1, __s2, __n);
# 114 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 118 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemset_chk(wchar_t * , wchar_t , size_t , size_t ) throw();
# 120 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemset_alias(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemset");
# 122 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wmemset_chk_warn(wchar_t * , wchar_t , size_t , size_t ) throw() __asm__("__wmemset_chk")
# 125 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemset called with length bigger than size of destination buffer")));
# 129 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 128 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 129 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw()
# 130 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 131 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 0) != ((size_t)(-1)))
# 132 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 133 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 134 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 136 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s, 0) / sizeof(wchar_t))) {
# 137 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk_warn(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 139 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 140 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_alias(__s, __c, __n);
# 141 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 144 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw() __asm__("wcscpy");
# 152 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 151 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 152 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 153 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 154 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 155 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 156 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_alias(__dest, __src);
# 157 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 160 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpcpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 163 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpcpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw() __asm__("wcpcpy");
# 168 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 167 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 168 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 169 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 170 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 171 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 172 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_alias(__dest, __src);
# 173 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 176 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 179 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcsncpy");
# 183 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wcsncpy_chk")
# 187 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsncpy called with length bigger than size of destination buffer")));
# 191 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 190 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 191 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 193 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 194 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1)))
# 195 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 196 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 197 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 199 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 200 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 202 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 203 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_alias(__dest, __src, __n);
# 204 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 207 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpncpy_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 210 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpncpy_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcpncpy");
# 214 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcpncpy_chk_warn(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw() __asm__("__wcpncpy_chk")
# 218 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcpncpy called with length bigger than size of destination buffer")));
# 222 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 221 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 222 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 224 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 225 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1)))
# 226 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 227 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 228 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 230 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 231 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 233 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 234 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_alias(__dest, __src, __n);
# 235 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 238 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscat_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcscat_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw() __asm__("wcscat");
# 246 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 245 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 246 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 247 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 248 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 249 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 250 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_alias(__dest, __src);
# 251 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 254 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncat_chk(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t , size_t ) throw();
# 257 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__wcsncat_alias(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw() __asm__("wcsncat");
# 263 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 262 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline wchar_t *
# 263 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 265 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 266 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 267 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 269 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_alias(__dest, __src, __n);
# 270 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 273 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __swprintf_chk(wchar_t *__restrict__ , size_t , int , size_t , const wchar_t *__restrict__ , ...) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __swprintf_alias(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw() __asm__("swprintf");
# 285 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 284 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 285 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
swprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, ...) throw()
# 287 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 288 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) || (2 > 1)) {
# 289 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __builtin_va_arg_pack()); }
# 292 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_alias(__s, __n, __fmt, __builtin_va_arg_pack());
# 293 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 303 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vswprintf_chk(wchar_t *__restrict__ , size_t , int , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 309 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vswprintf_alias(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw() __asm__("vswprintf");
# 315 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 314 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 315 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vswprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 317 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 318 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) || (2 > 1)) {
# 319 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __ap); }
# 321 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_alias(__s, __n, __fmt, __ap);
# 322 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 327 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __fwprintf_chk(__FILE *__restrict__ , int , const wchar_t *__restrict__ , ...);
# 329 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __wprintf_chk(int , const wchar_t *__restrict__ , ...);
# 331 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vfwprintf_chk(__FILE *__restrict__ , int , const wchar_t *__restrict__ , __gnuc_va_list );
# 334 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" int __vwprintf_chk(int , const wchar_t *__restrict__ , __gnuc_va_list );
# 339 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 338 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 339 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wprintf(const wchar_t *__restrict__ __fmt, ...)
# 340 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 341 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wprintf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 342 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 345 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 344 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 345 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __fmt, ...)
# 346 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 347 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fwprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 349 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 358 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 357 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 358 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vwprintf(const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap)
# 359 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 360 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vwprintf_chk(2 - 1, __fmt, __ap);
# 361 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 364 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 363 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 364 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vfwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__
# 365 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__fmt, __gnuc_va_list __ap)
# 366 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 367 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vfwprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 368 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 372 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_chk(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ )
# 373 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 374 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_alias(wchar_t *__restrict__ , int , __FILE *__restrict__ ) __asm__("fgetws") __attribute((__warn_unused_result__));
# 377 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_chk_warn(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ ) __asm__("__fgetws_chk")
# 380 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws called with bigger size than length of destination buffer")));
# 384 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 383 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 384 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 385 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 386 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 387 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 388 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 389 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 392 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 393 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 395 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 396 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_alias(__s, __n, __stream);
# 397 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 400 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_unlocked_chk(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ )
# 402 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 403 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_unlocked_alias(wchar_t *__restrict__ , int , __FILE *__restrict__ ) __asm__("fgetws_unlocked")
# 406 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 407 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" wchar_t *__fgetws_unlocked_chk_warn(wchar_t *__restrict__ , size_t , int , __FILE *__restrict__ ) __asm__("__fgetws_unlocked_chk")
# 411 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws_unlocked called with bigger size than length of destination buffer")));
# 415 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 414 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 415 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws_unlocked(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 416 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 417 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 418 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 419 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 420 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 423 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 424 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 426 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 427 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_alias(__s, __n, __stream);
# 428 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 432 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcrtomb_chk(char *__restrict__ , wchar_t , mbstate_t *__restrict__ , size_t ) throw()
# 434 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 435 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcrtomb_alias(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw() __asm__("wcrtomb") __attribute((__warn_unused_result__));
# 440 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 439 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 440 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcrtomb(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __ps) throw()
# 442 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 450 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 451 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_chk(__s, __wchar, __ps, __builtin_object_size(__s, 2 > 1)); }
# 452 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_alias(__s, __wchar, __ps);
# 453 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 456 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsrtowcs_chk(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 460 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsrtowcs_alias(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw() __asm__("mbsrtowcs");
# 465 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsrtowcs_chk_warn(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__mbsrtowcs_chk")
# 470 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 474 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 473 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 474 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 476 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 477 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 478 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 479 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 480 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 483 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 484 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 486 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 487 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_alias(__dst, __src, __len, __ps);
# 488 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 491 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsrtombs_chk(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 495 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsrtombs_alias(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw() __asm__("wcsrtombs");
# 500 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsrtombs_chk_warn(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__wcsrtombs_chk")
# 505 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsrtombs called with dst buffer smaller than len")));
# 508 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 507 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 508 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 510 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 511 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 512 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 513 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 514 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 516 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 517 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 518 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 519 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_alias(__dst, __src, __len, __ps);
# 520 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 524 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsnrtowcs_chk(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 528 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsnrtowcs_alias(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw() __asm__("mbsnrtowcs");
# 533 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __mbsnrtowcs_chk_warn(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__mbsnrtowcs_chk")
# 538 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsnrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 542 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 541 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 542 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 544 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 545 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 546 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 547 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 548 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 551 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 552 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk_warn(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 554 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 555 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_alias(__dst, __src, __nmc, __len, __ps);
# 556 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 559 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsnrtombs_chk(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw();
# 564 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsnrtombs_alias(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw() __asm__("wcsnrtombs");
# 569 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" size_t __wcsnrtombs_chk_warn(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ , size_t ) throw() __asm__("__wcsnrtombs_chk")
# 575 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsnrtombs called with dst buffer smaller than len")));
# 578 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern "C" {
# 577 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 578 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 580 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 581 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 582 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 583 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 584 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 587 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 588 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk_warn(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 590 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 591 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_alias(__dst, __src, __nwc, __len, __ps);
# 592 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
} }
# 65 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/4.4/cwchar" 3
using ::mbstate_t;
# 69 "/usr/include/c++/4.4/cwchar" 3
}
# 139 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 141 "/usr/include/c++/4.4/cwchar" 3
using ::wint_t;
# 143 "/usr/include/c++/4.4/cwchar" 3
using ::btowc;
# 144 "/usr/include/c++/4.4/cwchar" 3
using ::fgetwc;
# 145 "/usr/include/c++/4.4/cwchar" 3
using ::fgetws;
# 146 "/usr/include/c++/4.4/cwchar" 3
using ::fputwc;
# 147 "/usr/include/c++/4.4/cwchar" 3
using ::fputws;
# 148 "/usr/include/c++/4.4/cwchar" 3
using ::fwide;
# 149 "/usr/include/c++/4.4/cwchar" 3
using ::fwprintf;
# 150 "/usr/include/c++/4.4/cwchar" 3
using ::fwscanf;
# 151 "/usr/include/c++/4.4/cwchar" 3
using ::getwc;
# 152 "/usr/include/c++/4.4/cwchar" 3
using ::getwchar;
# 153 "/usr/include/c++/4.4/cwchar" 3
using ::mbrlen;
# 154 "/usr/include/c++/4.4/cwchar" 3
using ::mbrtowc;
# 155 "/usr/include/c++/4.4/cwchar" 3
using ::mbsinit;
# 156 "/usr/include/c++/4.4/cwchar" 3
using ::mbsrtowcs;
# 157 "/usr/include/c++/4.4/cwchar" 3
using ::putwc;
# 158 "/usr/include/c++/4.4/cwchar" 3
using ::putwchar;
# 160 "/usr/include/c++/4.4/cwchar" 3
using ::swprintf;
# 162 "/usr/include/c++/4.4/cwchar" 3
using ::swscanf;
# 163 "/usr/include/c++/4.4/cwchar" 3
using ::ungetwc;
# 164 "/usr/include/c++/4.4/cwchar" 3
using ::vfwprintf;
# 166 "/usr/include/c++/4.4/cwchar" 3
using ::vfwscanf;
# 169 "/usr/include/c++/4.4/cwchar" 3
using ::vswprintf;
# 172 "/usr/include/c++/4.4/cwchar" 3
using ::vswscanf;
# 174 "/usr/include/c++/4.4/cwchar" 3
using ::vwprintf;
# 176 "/usr/include/c++/4.4/cwchar" 3
using ::vwscanf;
# 178 "/usr/include/c++/4.4/cwchar" 3
using ::wcrtomb;
# 179 "/usr/include/c++/4.4/cwchar" 3
using ::wcscat;
# 180 "/usr/include/c++/4.4/cwchar" 3
using ::wcscmp;
# 181 "/usr/include/c++/4.4/cwchar" 3
using ::wcscoll;
# 182 "/usr/include/c++/4.4/cwchar" 3
using ::wcscpy;
# 183 "/usr/include/c++/4.4/cwchar" 3
using ::wcscspn;
# 184 "/usr/include/c++/4.4/cwchar" 3
using ::wcsftime;
# 185 "/usr/include/c++/4.4/cwchar" 3
using ::wcslen;
# 186 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncat;
# 187 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncmp;
# 188 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncpy;
# 189 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrtombs;
# 190 "/usr/include/c++/4.4/cwchar" 3
using ::wcsspn;
# 191 "/usr/include/c++/4.4/cwchar" 3
using ::wcstod;
# 193 "/usr/include/c++/4.4/cwchar" 3
using ::wcstof;
# 195 "/usr/include/c++/4.4/cwchar" 3
using ::wcstok;
# 196 "/usr/include/c++/4.4/cwchar" 3
using ::wcstol;
# 197 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoul;
# 198 "/usr/include/c++/4.4/cwchar" 3
using ::wcsxfrm;
# 199 "/usr/include/c++/4.4/cwchar" 3
using ::wctob;
# 200 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcmp;
# 201 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcpy;
# 202 "/usr/include/c++/4.4/cwchar" 3
using ::wmemmove;
# 203 "/usr/include/c++/4.4/cwchar" 3
using ::wmemset;
# 204 "/usr/include/c++/4.4/cwchar" 3
using ::wprintf;
# 205 "/usr/include/c++/4.4/cwchar" 3
using ::wscanf;
# 206 "/usr/include/c++/4.4/cwchar" 3
using ::wcschr;
# 207 "/usr/include/c++/4.4/cwchar" 3
using ::wcspbrk;
# 208 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrchr;
# 209 "/usr/include/c++/4.4/cwchar" 3
using ::wcsstr;
# 210 "/usr/include/c++/4.4/cwchar" 3
using ::wmemchr;
# 234 "/usr/include/c++/4.4/cwchar" 3
}
# 242 "/usr/include/c++/4.4/cwchar" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 249 "/usr/include/c++/4.4/cwchar" 3
using ::wcstold;
# 258 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoll;
# 259 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoull;
# 262 "/usr/include/c++/4.4/cwchar" 3
}
# 264 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 266 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstold;
# 267 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoll;
# 268 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoull;
# 270 "/usr/include/c++/4.4/cwchar" 3
}
# 70 "/usr/include/c++/4.4/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    class fpos
    {
    private :
      streamoff _M_off;
      _StateT _M_state;

    public :




      fpos ( )
      : _M_off ( 0 ), _M_state ( ) { }

      fpos ( streamoff __off )
      : _M_off ( __off ), _M_state ( ) { }


      operator streamoff ( ) const { return _M_off; }


      void
      state ( _StateT __st )
      { _M_state = __st; }


      _StateT
      state ( ) const
      { return _M_state; }





      fpos &
      operator += ( streamoff __off )
      {
 _M_off += __off;
 return * this;
      }





      fpos &
      operator -= ( streamoff __off )
      {
 _M_off -= __off;
 return * this;
      }







      fpos
      operator + ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos += __off;
 return __pos;
      }







      fpos
      operator - ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator - ( const fpos & __other ) const
      { return _M_off - __other . _M_off; }
    };
# 214 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator == ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) == streamoff ( __rhs ); }
# 219 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator != ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) != streamoff ( __rhs ); }
# 228 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 239 "/usr/include/c++/4.4/bits/postypes.h" 3
}
# 44 "/usr/include/c++/4.4/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ios;
# 49 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_streambuf;
# 52 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_istream;
# 55 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ostream;
# 58 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_iostream;
# 61 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 62 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 65 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 66 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 69 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 73 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 74 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 77 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_filebuf;
# 80 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ifstream;
# 83 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ofstream;
# 86 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_fstream;
# 89 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class istreambuf_iterator;
# 92 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class ostreambuf_iterator;
# 97 "/usr/include/c++/4.4/iosfwd" 3
class ios_base;
# 127 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< char> ios;
# 128 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< char> streambuf;
# 129 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< char> istream;
# 130 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< char> ostream;
# 131 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< char> iostream;
# 132 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< char> stringbuf;
# 133 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< char> istringstream;
# 134 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< char> ostringstream;
# 135 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< char> stringstream;
# 136 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< char> filebuf;
# 137 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< char> ifstream;
# 138 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< char> ofstream;
# 139 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< char> fstream;
# 142 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< wchar_t> wios;
# 143 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< wchar_t> wstreambuf;
# 144 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< wchar_t> wistream;
# 145 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< wchar_t> wostream;
# 146 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< wchar_t> wiostream;
# 147 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< wchar_t> wstringbuf;
# 148 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< wchar_t> wistringstream;
# 149 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< wchar_t> wostringstream;
# 150 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< wchar_t> wstringstream;
# 151 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< wchar_t> wfilebuf;
# 152 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< wchar_t> wifstream;
# 153 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< wchar_t> wofstream;
# 154 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< wchar_t> wfstream;
# 158 "/usr/include/c++/4.4/iosfwd" 3
}
# 41 "/usr/include/c++/4.4/exception" 3
namespace std {
# 59 "/usr/include/c++/4.4/exception" 3
class exception {
# 62 "/usr/include/c++/4.4/exception" 3
public: exception() throw() { }
# 63 "/usr/include/c++/4.4/exception" 3
virtual ~exception() throw();
# 67 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 68 "/usr/include/c++/4.4/exception" 3
};
# 72 "/usr/include/c++/4.4/exception" 3
class bad_exception : public exception {
# 75 "/usr/include/c++/4.4/exception" 3
public: bad_exception() throw() { }
# 79 "/usr/include/c++/4.4/exception" 3
virtual ~bad_exception() throw();
# 82 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 83 "/usr/include/c++/4.4/exception" 3
};
# 86 "/usr/include/c++/4.4/exception" 3
typedef void (*terminate_handler)(void);
# 89 "/usr/include/c++/4.4/exception" 3
typedef void (*unexpected_handler)(void);
# 92 "/usr/include/c++/4.4/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 96 "/usr/include/c++/4.4/exception" 3
void terminate() __attribute((__noreturn__));
# 99 "/usr/include/c++/4.4/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 103 "/usr/include/c++/4.4/exception" 3
void unexpected() __attribute((__noreturn__));
# 115 "/usr/include/c++/4.4/exception" 3
bool uncaught_exception() throw();
# 118 "/usr/include/c++/4.4/exception" 3
}
# 120 "/usr/include/c++/4.4/exception" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 138 "/usr/include/c++/4.4/exception" 3
void __verbose_terminate_handler();
# 140 "/usr/include/c++/4.4/exception" 3
}
# 39 "/usr/include/c++/4.4/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 47 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 51 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 54 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 58 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 61 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 64 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 67 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 70 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 73 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 76 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 79 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 82 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 86 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 89 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 91 "/usr/include/c++/4.4/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 53 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 56 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? (((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0))) : ((_Value)0));
# 57 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? ((((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1) : (~((_Value)0)));
# 61 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 62 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 63 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 65 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 66 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 68 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 69 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 71 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 72 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 74 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 75 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 97 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 98 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 101 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_digits10 = (2 + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 3010) / 10000));
# 104 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 105 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 106 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 107 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 109 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 110 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 112 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 113 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 115 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 116 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 118 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 119 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 121 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 122 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 126 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 128 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
}
# 66 "/usr/include/c++/4.4/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp >
    inline void
    swap ( _Tp & __a, _Tp & __b )
    {



      _Tp __tmp = ( __a );
      __a = ( __b );
      __b = ( __tmp );
    }
# 88 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp, size_t _Nm >
    inline void
    swap ( _Tp ( & __a ) [ _Nm ], _Tp ( & __b ) [ _Nm ] )
    {
      for ( size_t __n = 0; __n < _Nm; ++ __n )
 swap ( __a [ __n ], __b [ __n ] );
    }
# 96 "/usr/include/c++/4.4/bits/move.h" 3
}
# 63 "/usr/include/c++/4.4/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair ( )
      : first ( ), second ( ) { }


      pair ( const _T1 & __a, const _T2 & __b )
      : first ( __a ), second ( __b ) { }

      template < class _U1, class _U2 >
        pair ( const pair < _U1, _U2 > & __p )
 : first ( __p . first ),
   second ( __p . second ) { }

    };
# 144 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator == ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first == __y . first && __x . second == __y . second; }
# 150 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator < ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first < __y . first
      || ( ! ( __y . first < __x . first ) && __x . second < __y . second ); }
# 157 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator != ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x == __y ); }
# 163 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator > ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __y < __x; }
# 169 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator <= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __y < __x ); }
# 175 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator >= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x < __y ); }
# 213 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline pair < _T1, _T2 >
    make_pair ( _T1 __x, _T2 __y )
    { return pair < _T1, _T2 > ( __x, __y ); }
# 259 "/usr/include/c++/4.4/bits/stl_pair.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 81 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 83 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 86 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 89 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 102 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 103 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 104 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator {
# 107 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 109 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 111 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 113 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 115 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 116 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 124 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 125 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 128 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 129 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 130 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 131 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 132 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 135 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 137 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 138 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 139 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 140 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 141 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 142 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 144 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 145 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 147 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 148 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 149 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 150 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 151 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 152 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 158 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template < typename _Iter >
    inline typename iterator_traits < _Iter > :: iterator_category
    __iterator_category ( const _Iter & )
    { return typename iterator_traits < _Iter > :: iterator_category ( ); }
# 165 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
}
# 66 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    __distance ( _InputIterator __first, _InputIterator __last,
               input_iterator_tag )
    {



      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      while ( __first != __last )
 {
   ++ __first;
   ++ __n;
 }
      return __n;
    }
# 85 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator >
    inline typename iterator_traits < _RandomAccessIterator > :: difference_type
    __distance ( _RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag )
    {



      return __last - __first;
    }
# 108 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    distance ( _InputIterator __first, _InputIterator __last )
    {

      return std :: __distance ( __first, __last,
        std :: __iterator_category ( __first ) );
    }
# 117 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    __advance ( _InputIterator & __i, _Distance __n, input_iterator_tag )
    {


      while ( __n -- )
 ++ __i;
    }
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _BidirectionalIterator, typename _Distance >
    inline void
    __advance ( _BidirectionalIterator & __i, _Distance __n,
       bidirectional_iterator_tag )
    {



      if ( __n > 0 )
        while ( __n -- )
   ++ __i;
      else
        while ( __n ++ )
   -- __i;
    }
# 143 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    inline void
    __advance ( _RandomAccessIterator & __i, _Distance __n,
              random_access_iterator_tag )
    {



      __i += __n;
    }
# 166 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    advance ( _InputIterator & __i, _Distance __n )
    {

      typename iterator_traits < _InputIterator > :: difference_type __d = __n;
      std :: __advance ( __i, __d, std :: __iterator_category ( __i ) );
    }
# 195 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    class reverse_iterator
    : public iterator < typename iterator_traits < _Iterator > :: iterator_category,
        typename iterator_traits < _Iterator > :: value_type,
        typename iterator_traits < _Iterator > :: difference_type,
        typename iterator_traits < _Iterator > :: pointer,
                      typename iterator_traits < _Iterator > :: reference >
    {
    protected :
      _Iterator current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
              difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

    public :






      reverse_iterator ( ) : current ( ) { }




      explicit
      reverse_iterator ( iterator_type __x ) : current ( __x ) { }




      reverse_iterator ( const reverse_iterator & __x )
      : current ( __x . current ) { }





      template < typename _Iter >
        reverse_iterator ( const reverse_iterator < _Iter > & __x )
 : current ( __x . base ( ) ) { }




      iterator_type
      base ( ) const
      { return current; }






      reference
      operator * ( ) const
      {
 _Iterator __tmp = current;
 return * -- __tmp;
      }






      pointer
      operator -> ( ) const
      { return & ( operator * ( ) ); }






      reverse_iterator &
      operator ++ ( )
      {
 -- current;
 return * this;
      }






      reverse_iterator
      operator ++ ( int )
      {
 reverse_iterator __tmp = * this;
 -- current;
 return __tmp;
      }






      reverse_iterator &
      operator -- ( )
      {
 ++ current;
 return * this;
      }






      reverse_iterator
      operator -- ( int )
      {
 reverse_iterator __tmp = * this;
 ++ current;
 return __tmp;
      }






      reverse_iterator
      operator + ( difference_type __n ) const
      { return reverse_iterator ( current - __n ); }






      reverse_iterator &
      operator += ( difference_type __n )
      {
 current -= __n;
 return * this;
      }






      reverse_iterator
      operator - ( difference_type __n ) const
      { return reverse_iterator ( current + __n ); }






      reverse_iterator &
      operator -= ( difference_type __n )
      {
 current += __n;
 return * this;
      }






      reference
      operator [ ] ( difference_type __n ) const
      { return * ( * this + __n ); }
    };
# 276 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator == ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 282 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator < ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 288 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator != ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x == __y ); }
# 294 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator > ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y < __x; }
# 300 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator <= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __y < __x ); }
# 306 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator >= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x < __y ); }
# 312 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline typename reverse_iterator < _Iterator > :: difference_type
    operator - ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) - __x . base ( ); }
# 318 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline reverse_iterator < _Iterator >
    operator + ( typename reverse_iterator < _Iterator > :: difference_type __n,
       const reverse_iterator < _Iterator > & __x )
    { return reverse_iterator < _Iterator > ( __x . base ( ) - __n ); }
# 326 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator == ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 332 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator < ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 338 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator != ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x == __y ); }
# 344 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator > ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y < __x; }
# 350 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator <= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __y < __x ); }
# 356 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator >= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x < __y ); }
# 362 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >







    inline typename reverse_iterator < _IteratorL > :: difference_type
    operator - ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )

    { return __y . base ( ) - __x . base ( ); }
# 388 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class back_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit
      back_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      back_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_back ( __value );
 return * this;
      }

      back_insert_iterator &
      operator * ( )
      { return * this; }


      back_insert_iterator &
      operator ++ ( )
      { return * this; }


      back_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 457 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline back_insert_iterator < _Container >
    back_inserter ( _Container & __x )
    { return back_insert_iterator < _Container > ( __x ); }
# 472 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class front_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit front_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      front_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_front ( __value );
 return * this;
      }

      front_insert_iterator &
      operator * ( )
      { return * this; }


      front_insert_iterator &
      operator ++ ( )
      { return * this; }


      front_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 540 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline front_insert_iterator < _Container >
    front_inserter ( _Container & __x )
    { return front_insert_iterator < _Container > ( __x ); }
# 559 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;
      typename _Container :: iterator iter;

    public :

      typedef _Container container_type;





      insert_iterator ( _Container & __x, typename _Container :: iterator __i )
      : container ( & __x ), iter ( __i ) { }

      insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 iter = container -> insert ( iter, __value );
 ++ iter;
 return * this;
      }

      insert_iterator &
      operator * ( )
      { return * this; }


      insert_iterator &
      operator ++ ( )
      { return * this; }


      insert_iterator &
      operator ++ ( int )
      { return * this; }
    };
# 646 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container, typename _Iterator >
    inline insert_iterator < _Container >
    inserter ( _Container & __x, _Iterator __i )
    {
      return insert_iterator < _Container > ( __x,
      typename _Container :: iterator ( __i ) );
    }
# 654 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 656 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 665 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator_traits;
# 666 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator;
# 667 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator
    {
    protected :
      _Iterator _M_current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: iterator_category
                                                             iterator_category;
      typedef typename iterator_traits < _Iterator > :: value_type value_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
                                                             difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

      __normal_iterator ( ) : _M_current ( _Iterator ( ) ) { }

      explicit
      __normal_iterator ( const _Iterator & __i ) : _M_current ( __i ) { }


      template < typename _Iter >
        __normal_iterator ( const __normal_iterator < _Iter,
     typename __enable_if <
              ( std :: __are_same < _Iter, typename _Container :: pointer > :: __value ),
        _Container > :: __type > & __i )
        : _M_current ( __i . base ( ) ) { }


      reference
      operator * ( ) const
      { return * _M_current; }

      pointer
      operator -> ( ) const
      { return _M_current; }

      __normal_iterator &
      operator ++ ( )
      {
 ++ _M_current;
 return * this;
      }

      __normal_iterator
      operator ++ ( int )
      { return __normal_iterator ( _M_current ++ ); }


      __normal_iterator &
      operator -- ( )
      {
 -- _M_current;
 return * this;
      }

      __normal_iterator
      operator -- ( int )
      { return __normal_iterator ( _M_current -- ); }


      reference
      operator [ ] ( const difference_type & __n ) const
      { return _M_current [ __n ]; }

      __normal_iterator &
      operator += ( const difference_type & __n )
      { _M_current += __n; return * this; }

      __normal_iterator
      operator + ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current + __n ); }

      __normal_iterator &
      operator -= ( const difference_type & __n )
      { _M_current -= __n; return * this; }

      __normal_iterator
      operator - ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current - __n ); }

      const _Iterator &
      base ( ) const
      { return _M_current; }
    };
# 763 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 769 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 775 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 781 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 788 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 794 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 800 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 806 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 812 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 818 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 824 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 830 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 840 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >







    inline typename __normal_iterator < _IteratorL, _Container > :: difference_type
    operator - ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )

    { return __lhs . base ( ) - __rhs . base ( ); }
# 854 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline typename __normal_iterator < _Iterator, _Container > :: difference_type
    operator - ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) - __rhs . base ( ); }
# 860 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline __normal_iterator < _Iterator, _Container >
    operator + ( typename __normal_iterator < _Iterator, _Container > :: difference_type
       __n, const __normal_iterator < _Iterator, _Container > & __i )
    { return __normal_iterator < _Iterator, _Container > ( __i . base ( ) + __n ); }
# 866 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 47 "/usr/include/c++/4.4/debug/debug.h" 3
namespace std {
# 49 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __debug { }
# 50 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 55 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __gnu_debug {
# 57 "/usr/include/c++/4.4/debug/debug.h" 3
using namespace std::__debug;
# 58 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 74 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 80 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __iter_swap {
# 82 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          typedef typename iterator_traits < _ForwardIterator1 > :: value_type
            _ValueType1;
          _ValueType1 __tmp = ( * __a );
          * __a = ( * __b );
          * __b = ( __tmp );
 }
# 92 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 95 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 97 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          swap ( * __a, * __b );
        }
# 103 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 115 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    inline void
    iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
    {
      typedef typename iterator_traits < _ForwardIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: value_type
 _ValueType2;
# 134 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
      typedef typename iterator_traits < _ForwardIterator1 > :: reference
 _ReferenceType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: reference
 _ReferenceType2;
      std :: __iter_swap < __are_same < _ValueType1, _ValueType2 > :: __value
 && __are_same < _ValueType1 &, _ReferenceType1 > :: __value
 && __are_same < _ValueType2 &, _ReferenceType2 > :: __value > ::
 iter_swap ( __a, __b );
    }
# 156 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator2
    swap_ranges ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2 )
    {





      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 std :: iter_swap ( __first1, __first2 );
      return __first2;
    }
# 184 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b )
    {



      if ( __b < __a )
 return __b;
      return __a;
    }
# 207 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b )
    {



      if ( __a < __b )
 return __b;
      return __a;
    }
# 230 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __b, __a ) )
 return __b;
      return __a;
    }
# 251 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __a, __b ) )
 return __b;
      return __a;
    }
# 264 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsNormal = __is_normal_iterator < _Iterator > :: __value >
    struct __niter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 273 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __niter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 282 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsMove = __is_move_iterator < _Iterator > :: __value >
    struct __miter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __miter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 305 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T3, bool __T4, class >
# 306 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move {
# 308 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   for (; __first != __last; ++ __result, ++ __first )
     * __result = * __first;
   return __result;
 }
# 316 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 334 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 336 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   typedef typename iterator_traits < _II > :: difference_type _Distance;
   for ( _Distance __n = __last - __first; __n > 0; -- __n )
     {
       * __result = * __first;
       ++ __first;
       ++ __result;
     }
   return __result;
 }
# 349 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 371 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 372 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 374 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_m ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   __builtin_memmove ( __result, __first,
       sizeof ( _Tp ) * ( __last - __first ) );
   return __result + ( __last - __first );
 }
# 382 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 384 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a ( _II __first, _II __last, _OI __result )
    {
      typedef typename iterator_traits < _II > :: value_type _ValueTypeI;
      typedef typename iterator_traits < _OI > :: value_type _ValueTypeO;
      typedef typename iterator_traits < _II > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueTypeI )
                      && __is_pointer < _II > :: __value
                      && __is_pointer < _OI > :: __value
        && __are_same < _ValueTypeI, _ValueTypeO > :: __value );

      return std :: __copy_move < _IsMove, __simple,
                       _Category > :: __copy_m ( __first, __last, __result );
    }
# 402 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 405 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 408 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 411 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( _CharT *, _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 417 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( const _CharT *, const _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 423 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT, char_traits < _CharT > >,
     istreambuf_iterator < _CharT, char_traits < _CharT > >, _CharT * );
# 429 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a2 ( _II __first, _II __last, _OI __result )
    {
      return _OI ( std :: __copy_move_a < _IsMove >
   ( std :: __niter_base < _II > :: __b ( __first ),
    std :: __niter_base < _II > :: __b ( __last ),
    std :: __niter_base < _OI > :: __b ( __result ) ) );
    }
# 456 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
    inline _OI
    copy ( _II __first, _II __last, _OI __result )
    {




      ;

      return ( std :: __copy_move_a2 < __is_move_iterator < _II > :: __value >
       ( std :: __miter_base < _II > :: __b ( __first ),
        std :: __miter_base < _II > :: __b ( __last ), __result ) );
    }
# 509 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T5, bool __T6, class >
# 510 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 512 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   while ( __first != __last )
     * -- __result = * -- __last;
   return __result;
 }
# 520 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 538 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 540 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   typename iterator_traits < _BI1 > :: difference_type __n;
   for ( __n = __last - __first; __n > 0; -- __n )
     * -- __result = * -- __last;
   return __result;
 }
# 549 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 567 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 568 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 570 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_move_b ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   const ptrdiff_t _Num = __last - __first;
   __builtin_memmove ( __result - _Num, __first, sizeof ( _Tp ) * _Num );
   return __result - _Num;
 }
# 578 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 580 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      typedef typename iterator_traits < _BI1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _BI2 > :: value_type _ValueType2;
      typedef typename iterator_traits < _BI1 > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueType1 )
                      && __is_pointer < _BI1 > :: __value
                      && __is_pointer < _BI2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __copy_move_backward < _IsMove, __simple,
                                _Category > :: __copy_move_b ( __first,
         __last,
         __result );
    }
# 598 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a2 ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      return _BI2 ( std :: __copy_move_backward_a < _IsMove >
    ( std :: __niter_base < _BI1 > :: __b ( __first ),
     std :: __niter_base < _BI1 > :: __b ( __last ),
     std :: __niter_base < _BI2 > :: __b ( __result ) ) );
    }
# 626 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
    inline _BI2
    copy_backward ( _BI1 __first, _BI1 __last, _BI2 __result )
    {






      ;

      return ( std :: __copy_move_backward_a2 < __is_move_iterator < _BI1 > :: __value >
       ( std :: __miter_base < _BI1 > :: __b ( __first ),
        std :: __miter_base < _BI1 > :: __b ( __last ), __result ) );
    }
# 684 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
       const _Tp & __value )
    {
      for (; __first != __last; ++ __first )
 * __first = __value;
    }
# 694 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++ __first )
 * __first = __tmp;
    }
# 706 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, void > :: __type
    __fill_a ( _Tp * __first, _Tp * __last, const _Tp & __c )
    {
      const _Tp __tmp = __c;
      __builtin_memset ( __first, static_cast < unsigned char > ( __tmp ),
         __last - __first );
    }
# 728 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    fill ( _ForwardIterator __first, _ForwardIterator __last, const _Tp & __value )
    {



      ;

      std :: __fill_a ( std :: __niter_base < _ForwardIterator > :: __b ( __first ),
      std :: __niter_base < _ForwardIterator > :: __b ( __last ), __value );
    }
# 741 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      for (; __n > 0; -- __n, ++ __first )
 * __first = __value;
      return __first;
    }
# 751 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __n > 0; -- __n, ++ __first )
 * __first = __tmp;
      return __first;
    }
# 762 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, _Tp * > :: __type
    __fill_n_a ( _Tp * __first, _Size __n, const _Tp & __c )
    {
      std :: __fill_a ( __first, __first + __n, __c );
      return __first + __n;
    }
# 783 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OI, typename _Size, typename _Tp >
    inline _OI
    fill_n ( _OI __first, _Size __n, const _Tp & __value )
    {



      return _OI ( std :: __fill_n_a ( std :: __niter_base < _OI > :: __b ( __first ),
     __n, __value ) );
    }
# 794 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 795 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __equal {
# 797 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool
        equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
        {
   for (; __first1 != __last1; ++ __first1, ++ __first2 )
     if ( ! ( * __first1 == * __first2 ) )
       return false;
   return true;
 }
# 806 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 809 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 811 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static bool
        equal ( const _Tp * __first1, const _Tp * __last1, const _Tp * __first2 )
        {
   return ! __builtin_memcmp ( __first1, __first2, sizeof ( _Tp )
       * ( __last1 - __first1 ) );
 }
# 818 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 820 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __equal_aux ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple = ( __is_integer < _ValueType1 > :: __value
                      && __is_pointer < _II1 > :: __value
                      && __is_pointer < _II2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __equal < __simple > :: equal ( __first1, __last1, __first2 );
    }
# 835 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class , class >
# 836 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lc_rai {
# 838 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static _II1
        __newlast1 ( _II1, _II1 __last1, _II2, _II2 )
        { return __last1; }
# 843 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II >
        static bool
        __cnd2 ( _II __first, _II __last )
        { return __first != __last; }
# 847 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 850 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 852 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI1, typename _RAI2 >
        static _RAI1
        __newlast1 ( _RAI1 __first1, _RAI1 __last1,
     _RAI2 __first2, _RAI2 __last2 )
        {
   const typename iterator_traits < _RAI1 > :: difference_type
     __diff1 = __last1 - __first1;
   const typename iterator_traits < _RAI2 > :: difference_type
     __diff2 = __last2 - __first2;
   return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 }
# 864 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI >
        static bool
        __cnd2 ( _RAI, _RAI )
        { return true; }
# 868 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 870 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 871 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 873 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool __lc ( _II1, _II1, _II2, _II2 );
# 875 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 877 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _BoolType >
    template < typename _II1, typename _II2 >
      bool
      __lexicographical_compare < _BoolType > ::
      __lc ( _II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2 )
      {
 typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
 typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
 typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;

 __last1 = __rai_type :: __newlast1 ( __first1, __last1,
      __first2, __last2 );
 for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
      ++ __first1, ++ __first2 )
   {
     if ( * __first1 < * __first2 )
       return true;
     if ( * __first2 < * __first1 )
       return false;
   }
 return __first1 == __last1 && __first2 != __last2;
      }
# 901 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 903 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Up >
        static bool
        __lc ( const _Tp * __first1, const _Tp * __last1,
      const _Up * __first2, const _Up * __last2 )
 {
   const size_t __len1 = __last1 - __first1;
   const size_t __len2 = __last2 - __first2;
   const int __result = __builtin_memcmp ( __first1, __first2,
      std :: min ( __len1, __len2 ) );
   return __result != 0 ? __result < 0 : __len1 < __len2;
 }
# 914 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 916 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __lexicographical_compare_aux ( _II1 __first1, _II1 __last1,
      _II2 __first2, _II2 __last2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple =
 ( __is_byte < _ValueType1 > :: __value && __is_byte < _ValueType2 > :: __value
  && ! __gnu_cxx :: __numeric_traits < _ValueType1 > :: __is_signed
  && ! __gnu_cxx :: __numeric_traits < _ValueType2 > :: __is_signed
  && __is_pointer < _II1 > :: __value
  && __is_pointer < _II2 > :: __value );

      return std :: __lexicographical_compare < __simple > :: __lc ( __first1, __last1,
           __first2, __last2 );
    }
# 934 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 936 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 950 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {






      ;

      return std :: __equal_aux ( std :: __niter_base < _II1 > :: __b ( __first1 ),
         std :: __niter_base < _II1 > :: __b ( __last1 ),
         std :: __niter_base < _II2 > :: __b ( __first2 ) );
    }
# 982 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _IIter1, typename _IIter2, typename _BinaryPredicate >
    inline bool
    equal ( _IIter1 __first1, _IIter1 __last1,
   _IIter2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 if ( ! bool ( __binary_pred ( * __first1, * __first2 ) ) )
   return false;
      return true;
    }
# 1013 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2 )
    {

      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;




      ;
      ;

      return std :: __lexicographical_compare_aux
 ( std :: __niter_base < _II1 > :: __b ( __first1 ),
  std :: __niter_base < _II1 > :: __b ( __last1 ),
  std :: __niter_base < _II2 > :: __b ( __first2 ),
  std :: __niter_base < _II2 > :: __b ( __last2 ) );
    }
# 1048 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2, typename _Compare >
    bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2, _Compare __comp )
    {
      typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
      typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
      typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;




      ;
      ;

      __last1 = __rai_type :: __newlast1 ( __first1, __last1, __first2, __last2 );
      for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
    ++ __first1, ++ __first2 )
 {
   if ( __comp ( * __first1, * __first2 ) )
     return true;
   if ( __comp ( * __first2, * __first1 ) )
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 1088 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2 >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2 )
    {






      ;

      while ( __first1 != __last1 && * __first1 == * __first2 )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1125 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      while ( __first1 != __last1 && bool ( __binary_pred ( * __first1, * __first2 ) ) )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1144 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 52 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 65 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct _Char_types {
# 67 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef unsigned long int_type;
# 68 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 69 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 70 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 71 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 89 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types < _CharT > :: int_type int_type;
      typedef typename _Char_types < _CharT > :: pos_type pos_type;
      typedef typename _Char_types < _CharT > :: off_type off_type;
      typedef typename _Char_types < _CharT > :: state_type state_type;

      static void
      assign ( char_type & __c1, const char_type & __c2 )
      { __c1 = __c2; }

      static bool
      eq ( const char_type & __c1, const char_type & __c2 )
      { return __c1 == __c2; }

      static bool
      lt ( const char_type & __c1, const char_type & __c2 )
      { return __c1 < __c2; }

      static int
      compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n );

      static std :: size_t
      length ( const char_type * __s );

      static const char_type *
      find ( const char_type * __s, std :: size_t __n, const char_type & __a );

      static char_type *
      move ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      copy ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      assign ( char_type * __s, std :: size_t __n, char_type __a );

      static char_type
      to_char_type ( const int_type & __c )
      { return static_cast < char_type > ( __c ); }

      static int_type
      to_int_type ( const char_type & __c )
      { return static_cast < int_type > ( __c ); }

      static bool
      eq_int_type ( const int_type & __c1, const int_type & __c2 )
      { return __c1 == __c2; }

      static int_type
      eof ( )
      { return static_cast < int_type > ( ( - 1 ) ); }

      static int_type
      not_eof ( const int_type & __c )
      { return ! eq_int_type ( __c, eof ( ) ) ? __c : to_int_type ( char_type ( ) ); }
    };
# 149 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    int
    char_traits < _CharT > ::
    compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
 if ( lt ( __s1 [ __i ], __s2 [ __i ] ) )
   return - 1;
 else if ( lt ( __s2 [ __i ], __s1 [ __i ] ) )
   return 1;
      return 0;
    }
# 162 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    std :: size_t
    char_traits < _CharT > ::
    length ( const char_type * __p )
    {
      std :: size_t __i = 0;
      while ( ! eq ( __p [ __i ], char_type ( ) ) )
        ++ __i;
      return __i;
    }
# 173 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    const typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    find ( const char_type * __s, std :: size_t __n, const char_type & __a )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
        if ( eq ( __s [ __i ], __a ) )
          return __s + __i;
      return 0;
    }
# 184 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    move ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      return static_cast < _CharT * > ( __builtin_memmove ( __s1, __s2,
          __n * sizeof ( char_type ) ) );
    }
# 193 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    copy ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {

      std :: copy ( __s2, __s2 + __n, __s1 );
      return __s1;
    }
# 203 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    assign ( char_type * __s, std :: size_t __n, char_type __a )
    {

      std :: fill_n ( __s, __n, __a );
      return __s;
    }
# 213 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 215 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 230 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 231 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 232 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 239 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef char char_type;
# 240 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef int int_type;
# 241 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streampos pos_type;
# 242 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 243 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 246 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 250 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 254 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 255 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 258 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_memcmp(__s1, __s2, __n); }
# 262 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 263 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 266 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 267 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n)); }
# 270 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 271 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n)); }
# 274 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 275 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n)); }
# 278 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 279 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memset(__s, __a, __n)); }
# 282 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 283 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 288 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 289 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((static_cast< unsigned char>(__c))); }
# 292 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 293 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 296 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 297 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((-1)); }
# 300 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 301 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 302 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 308 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 310 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wchar_t char_type;
# 311 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wint_t int_type;
# 312 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 313 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 314 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 317 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 318 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 321 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 322 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 325 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 326 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 329 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 330 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcmp(__s1, __s2, __n); }
# 333 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 334 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wcslen(__s); }
# 337 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 338 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemchr(__s, __a, __n); }
# 341 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 342 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemmove(__s1, __s2, __n); }
# 345 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 346 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcpy(__s1, __s2, __n); }
# 349 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 350 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemset(__s, __a, __n); }
# 353 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 354 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (char_type)__c; }
# 357 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 358 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (int_type)__c; }
# 361 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 362 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 365 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 366 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 369 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 370 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? (0) : __c; }
# 371 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 374 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 51 "/usr/include/locale.h" 3
extern "C" { struct lconv {
# 55 "/usr/include/locale.h" 3
char *decimal_point;
# 56 "/usr/include/locale.h" 3
char *thousands_sep;
# 62 "/usr/include/locale.h" 3
char *grouping;
# 68 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 69 "/usr/include/locale.h" 3
char *currency_symbol;
# 70 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 71 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 72 "/usr/include/locale.h" 3
char *mon_grouping;
# 73 "/usr/include/locale.h" 3
char *positive_sign;
# 74 "/usr/include/locale.h" 3
char *negative_sign;
# 75 "/usr/include/locale.h" 3
char int_frac_digits;
# 76 "/usr/include/locale.h" 3
char frac_digits;
# 78 "/usr/include/locale.h" 3
char p_cs_precedes;
# 80 "/usr/include/locale.h" 3
char p_sep_by_space;
# 82 "/usr/include/locale.h" 3
char n_cs_precedes;
# 84 "/usr/include/locale.h" 3
char n_sep_by_space;
# 91 "/usr/include/locale.h" 3
char p_sign_posn;
# 92 "/usr/include/locale.h" 3
char n_sign_posn;
# 95 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 97 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 99 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 101 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 108 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 109 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 118 "/usr/include/locale.h" 3
}; }
# 122 "/usr/include/locale.h" 3
extern "C" char *setlocale(int , const char * ) throw();
# 125 "/usr/include/locale.h" 3
extern "C" lconv *localeconv() throw();
# 141 "/usr/include/locale.h" 3
extern "C" locale_t newlocale(int , const char * , locale_t ) throw();
# 176 "/usr/include/locale.h" 3
extern "C" locale_t duplocale(locale_t ) throw();
# 180 "/usr/include/locale.h" 3
extern "C" void freelocale(locale_t ) throw();
# 187 "/usr/include/locale.h" 3
extern "C" locale_t uselocale(locale_t ) throw();
# 53 "/usr/include/c++/4.4/clocale" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.4/clocale" 3
using ::lconv;
# 56 "/usr/include/c++/4.4/clocale" 3
using ::setlocale;
# 57 "/usr/include/c++/4.4/clocale" 3
using ::localeconv;
# 59 "/usr/include/c++/4.4/clocale" 3
}
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
}
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__out, const int
# 68 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__fmt, ...)
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
{
# 72 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 85 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__builtin_va_list __args;
# 86 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__builtin_va_start(__args,__fmt);
# 89 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__builtin_va_end(__args);
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 105 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
return __ret;
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
}
# 108 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++locale.h" 3
}
# 47 "/usr/include/ctype.h" 3
enum {
# 48 "/usr/include/ctype.h" 3
_ISupper = 256,
# 49 "/usr/include/ctype.h" 3
_ISlower = 512,
# 50 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 51 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 52 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 53 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 54 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 55 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 56 "/usr/include/ctype.h" 3
_ISblank = 1,
# 57 "/usr/include/ctype.h" 3
_IScntrl,
# 58 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 59 "/usr/include/ctype.h" 3
_ISalnum = 8
# 60 "/usr/include/ctype.h" 3
};
# 79 "/usr/include/ctype.h" 3
extern "C" const unsigned short **__ctype_b_loc() throw()
# 80 "/usr/include/ctype.h" 3
 __attribute((const));
# 81 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_tolower_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_toupper_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 108 "/usr/include/ctype.h" 3
extern "C" int isalnum(int) throw();
# 109 "/usr/include/ctype.h" 3
extern "C" int isalpha(int) throw();
# 110 "/usr/include/ctype.h" 3
extern "C" int iscntrl(int) throw();
# 111 "/usr/include/ctype.h" 3
extern "C" int isdigit(int) throw();
# 112 "/usr/include/ctype.h" 3
extern "C" int islower(int) throw();
# 113 "/usr/include/ctype.h" 3
extern "C" int isgraph(int) throw();
# 114 "/usr/include/ctype.h" 3
extern "C" int isprint(int) throw();
# 115 "/usr/include/ctype.h" 3
extern "C" int ispunct(int) throw();
# 116 "/usr/include/ctype.h" 3
extern "C" int isspace(int) throw();
# 117 "/usr/include/ctype.h" 3
extern "C" int isupper(int) throw();
# 118 "/usr/include/ctype.h" 3
extern "C" int isxdigit(int) throw();
# 122 "/usr/include/ctype.h" 3
extern "C" int tolower(int ) throw();
# 125 "/usr/include/ctype.h" 3
extern "C" int toupper(int ) throw();
# 130 "/usr/include/ctype.h" 3
extern "C" int isblank(int) throw();
# 135 "/usr/include/ctype.h" 3
extern "C" int isctype(int , int ) throw();
# 142 "/usr/include/ctype.h" 3
extern "C" int isascii(int ) throw();
# 146 "/usr/include/ctype.h" 3
extern "C" int toascii(int ) throw();
# 150 "/usr/include/ctype.h" 3
extern "C" int _toupper(int) throw();
# 151 "/usr/include/ctype.h" 3
extern "C" int _tolower(int) throw();
# 251 "/usr/include/ctype.h" 3
extern "C" int isalnum_l(int, locale_t) throw();
# 252 "/usr/include/ctype.h" 3
extern "C" int isalpha_l(int, locale_t) throw();
# 253 "/usr/include/ctype.h" 3
extern "C" int iscntrl_l(int, locale_t) throw();
# 254 "/usr/include/ctype.h" 3
extern "C" int isdigit_l(int, locale_t) throw();
# 255 "/usr/include/ctype.h" 3
extern "C" int islower_l(int, locale_t) throw();
# 256 "/usr/include/ctype.h" 3
extern "C" int isgraph_l(int, locale_t) throw();
# 257 "/usr/include/ctype.h" 3
extern "C" int isprint_l(int, locale_t) throw();
# 258 "/usr/include/ctype.h" 3
extern "C" int ispunct_l(int, locale_t) throw();
# 259 "/usr/include/ctype.h" 3
extern "C" int isspace_l(int, locale_t) throw();
# 260 "/usr/include/ctype.h" 3
extern "C" int isupper_l(int, locale_t) throw();
# 261 "/usr/include/ctype.h" 3
extern "C" int isxdigit_l(int, locale_t) throw();
# 263 "/usr/include/ctype.h" 3
extern "C" int isblank_l(int, locale_t) throw();
# 267 "/usr/include/ctype.h" 3
extern "C" int __tolower_l(int , locale_t ) throw();
# 268 "/usr/include/ctype.h" 3
extern "C" int tolower_l(int , locale_t ) throw();
# 271 "/usr/include/ctype.h" 3
extern "C" int __toupper_l(int , locale_t ) throw();
# 272 "/usr/include/ctype.h" 3
extern "C" int toupper_l(int , locale_t ) throw();
# 64 "/usr/include/c++/4.4/cctype" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/cctype" 3
using ::isalnum;
# 67 "/usr/include/c++/4.4/cctype" 3
using ::isalpha;
# 68 "/usr/include/c++/4.4/cctype" 3
using ::iscntrl;
# 69 "/usr/include/c++/4.4/cctype" 3
using ::isdigit;
# 70 "/usr/include/c++/4.4/cctype" 3
using ::isgraph;
# 71 "/usr/include/c++/4.4/cctype" 3
using ::islower;
# 72 "/usr/include/c++/4.4/cctype" 3
using ::isprint;
# 73 "/usr/include/c++/4.4/cctype" 3
using ::ispunct;
# 74 "/usr/include/c++/4.4/cctype" 3
using ::isspace;
# 75 "/usr/include/c++/4.4/cctype" 3
using ::isupper;
# 76 "/usr/include/c++/4.4/cctype" 3
using ::isxdigit;
# 77 "/usr/include/c++/4.4/cctype" 3
using ::tolower;
# 78 "/usr/include/c++/4.4/cctype" 3
using ::toupper;
# 80 "/usr/include/c++/4.4/cctype" 3
}
# 46 "/usr/include/c++/4.4/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/4.4/bits/localefwd.h" 3
class locale;
# 51 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    bool
    has_facet ( const locale & ) throw ( );
# 55 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & );
# 60 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isspace ( _CharT, const locale & );
# 64 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isprint ( _CharT, const locale & );
# 68 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    iscntrl ( _CharT, const locale & );
# 72 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isupper ( _CharT, const locale & );
# 76 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    islower ( _CharT, const locale & );
# 80 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalpha ( _CharT, const locale & );
# 84 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isdigit ( _CharT, const locale & );
# 88 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    ispunct ( _CharT, const locale & );
# 92 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isxdigit ( _CharT, const locale & );
# 96 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalnum ( _CharT, const locale & );
# 100 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isgraph ( _CharT, const locale & );
# 104 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    toupper ( _CharT, const locale & );
# 108 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    tolower ( _CharT, const locale & );
# 113 "/usr/include/c++/4.4/bits/localefwd.h" 3
struct ctype_base;
# 114 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype;
# 116 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< char> ;
# 118 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 120 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype_byname;
# 124 "/usr/include/c++/4.4/bits/localefwd.h" 3
class codecvt_base;
# 125 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt;
# 127 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 129 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 131 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt_byname;
# 136 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _InIter = istreambuf_iterator < _CharT > >
    class num_get;
# 138 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _OutIter = ostreambuf_iterator < _CharT > >
    class num_put;
# 141 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct;
# 142 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct_byname;
# 145 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class collate;
# 147 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class
    collate_byname;
# 151 "/usr/include/c++/4.4/bits/localefwd.h" 3
class time_base;
# 152 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 154 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 156 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 158 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 162 "/usr/include/c++/4.4/bits/localefwd.h" 3
class money_base;
# 164 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 166 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 169 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 171 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 175 "/usr/include/c++/4.4/bits/localefwd.h" 3
class messages_base;
# 176 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages;
# 178 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 181 "/usr/include/c++/4.4/bits/localefwd.h" 3
}
# 23 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h" 3
struct sched_param {
# 25 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h" 3
int sched_priority;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h" 3
};
# 82 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int clone(int (* )(void * ), void * , int , void * , ...) throw();
# 86 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int unshare(int ) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int sched_getcpu() throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int getcpu(unsigned *, unsigned *) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" int setns(int , int ) throw();
# 32 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
typedef unsigned long __cpu_mask;
# 42 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
typedef
# 40 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
struct {
# 41 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 42 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
} cpu_set_t;
# 117 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
extern "C" int __sched_cpucount(size_t , const cpu_set_t * ) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
extern "C" cpu_set_t *__sched_cpualloc(size_t ) throw() __attribute((__warn_unused_result__));
# 120 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h" 3
extern "C" void __sched_cpufree(cpu_set_t * ) throw();
# 54 "/usr/include/sched.h" 3
extern "C" int sched_setparam(__pid_t , const sched_param * ) throw();
# 58 "/usr/include/sched.h" 3
extern "C" int sched_getparam(__pid_t , sched_param * ) throw();
# 61 "/usr/include/sched.h" 3
extern "C" int sched_setscheduler(__pid_t , int , const sched_param * ) throw();
# 65 "/usr/include/sched.h" 3
extern "C" int sched_getscheduler(__pid_t ) throw();
# 68 "/usr/include/sched.h" 3
extern "C" int sched_yield() throw();
# 71 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_max(int ) throw();
# 74 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_min(int ) throw();
# 77 "/usr/include/sched.h" 3
extern "C" int sched_rr_get_interval(__pid_t , timespec * ) throw();
# 121 "/usr/include/sched.h" 3
extern "C" int sched_setaffinity(__pid_t , size_t , const cpu_set_t * ) throw();
# 125 "/usr/include/sched.h" 3
extern "C" int sched_getaffinity(__pid_t , size_t , cpu_set_t * ) throw();
# 31 "/usr/include/x86_64-linux-gnu/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 34 "/usr/include/pthread.h" 3
enum {
# 35 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 37 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 39 "/usr/include/pthread.h" 3
};
# 44 "/usr/include/pthread.h" 3
enum {
# 45 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 48 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 54 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 58 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 60 "/usr/include/pthread.h" 3
};
# 66 "/usr/include/pthread.h" 3
enum {
# 67 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 70 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 71 "/usr/include/pthread.h" 3
};
# 78 "/usr/include/pthread.h" 3
enum {
# 79 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 81 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 82 "/usr/include/pthread.h" 3
};
# 101 "/usr/include/pthread.h" 3
enum {
# 102 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 103 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 104 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 105 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 106 "/usr/include/pthread.h" 3
};
# 121 "/usr/include/pthread.h" 3
enum {
# 122 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 124 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 126 "/usr/include/pthread.h" 3
};
# 131 "/usr/include/pthread.h" 3
enum {
# 132 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 134 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 136 "/usr/include/pthread.h" 3
};
# 141 "/usr/include/pthread.h" 3
enum {
# 142 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 144 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 146 "/usr/include/pthread.h" 3
};
# 155 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 157 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 158 "/usr/include/pthread.h" 3
void *__arg;
# 159 "/usr/include/pthread.h" 3
int __canceltype;
# 160 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 161 "/usr/include/pthread.h" 3
};
# 165 "/usr/include/pthread.h" 3
enum {
# 166 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 168 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 170 "/usr/include/pthread.h" 3
};
# 172 "/usr/include/pthread.h" 3
enum {
# 173 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 175 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 177 "/usr/include/pthread.h" 3
};
# 198 "/usr/include/pthread.h" 3
extern "C" int pthread_create(pthread_t *__restrict__ , const pthread_attr_t *__restrict__ , void *(* )(void *), void *__restrict__ ) throw()
# 201 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 207 "/usr/include/pthread.h" 3
extern "C" void pthread_exit(void * ) __attribute((__noreturn__));
# 215 "/usr/include/pthread.h" 3
extern "C" int pthread_join(pthread_t , void ** );
# 220 "/usr/include/pthread.h" 3
extern "C" int pthread_tryjoin_np(pthread_t , void ** ) throw();
# 228 "/usr/include/pthread.h" 3
extern "C" int pthread_timedjoin_np(pthread_t , void ** , const timespec * );
# 238 "/usr/include/pthread.h" 3
extern "C" int pthread_clockjoin_np(pthread_t , void ** , clockid_t , const timespec * );
# 247 "/usr/include/pthread.h" 3
extern "C" int pthread_detach(pthread_t ) throw();
# 251 "/usr/include/pthread.h" 3
extern "C" pthread_t pthread_self() throw() __attribute((const));
# 254 "/usr/include/pthread.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int pthread_equal(pthread_t , pthread_t ) throw()
# 255 "/usr/include/pthread.h" 3
 __attribute((const)); }
# 263 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_init(pthread_attr_t * ) throw() __attribute((__nonnull__(1)));
# 266 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_destroy(pthread_attr_t * ) throw()
# 267 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 270 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getdetachstate(const pthread_attr_t * , int * ) throw()
# 272 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 275 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setdetachstate(pthread_attr_t * , int ) throw()
# 277 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 281 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getguardsize(const pthread_attr_t * , size_t * ) throw()
# 283 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 286 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setguardsize(pthread_attr_t * , size_t ) throw()
# 288 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 292 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ , sched_param *__restrict__ ) throw()
# 294 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 297 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedparam(pthread_attr_t *__restrict__ , const sched_param *__restrict__ ) throw()
# 299 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 302 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 304 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 307 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedpolicy(pthread_attr_t * , int ) throw()
# 308 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 311 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 313 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 316 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setinheritsched(pthread_attr_t * , int ) throw()
# 318 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 322 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getscope(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 324 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 327 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setscope(pthread_attr_t * , int ) throw()
# 328 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 331 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ , void **__restrict__ ) throw()
# 333 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 339 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstackaddr(pthread_attr_t * , void * ) throw()
# 341 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 344 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ , size_t *__restrict__ ) throw()
# 346 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 351 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstacksize(pthread_attr_t * , size_t ) throw()
# 353 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 357 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstack(const pthread_attr_t *__restrict__ , void **__restrict__ , size_t *__restrict__ ) throw()
# 360 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 365 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstack(pthread_attr_t * , void * , size_t ) throw()
# 366 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 372 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setaffinity_np(pthread_attr_t * , size_t , const cpu_set_t * ) throw()
# 375 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 379 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getaffinity_np(const pthread_attr_t * , size_t , cpu_set_t * ) throw()
# 382 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 385 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_default_np(pthread_attr_t * ) throw()
# 386 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 390 "/usr/include/pthread.h" 3
extern "C" int pthread_setattr_default_np(const pthread_attr_t * ) throw()
# 391 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 396 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_np(pthread_t , pthread_attr_t * ) throw()
# 397 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 405 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedparam(pthread_t , int , const sched_param * ) throw()
# 407 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 410 "/usr/include/pthread.h" 3
extern "C" int pthread_getschedparam(pthread_t , int *__restrict__ , sched_param *__restrict__ ) throw()
# 413 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 416 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedprio(pthread_t , int ) throw();
# 422 "/usr/include/pthread.h" 3
extern "C" int pthread_getname_np(pthread_t , char * , size_t ) throw()
# 424 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 427 "/usr/include/pthread.h" 3
extern "C" int pthread_setname_np(pthread_t , const char * ) throw()
# 428 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 434 "/usr/include/pthread.h" 3
extern "C" int pthread_getconcurrency() throw();
# 437 "/usr/include/pthread.h" 3
extern "C" int pthread_setconcurrency(int ) throw();
# 445 "/usr/include/pthread.h" 3
extern "C" int pthread_yield() throw();
# 450 "/usr/include/pthread.h" 3
extern "C" int pthread_setaffinity_np(pthread_t , size_t , const cpu_set_t * ) throw()
# 452 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 455 "/usr/include/pthread.h" 3
extern "C" int pthread_getaffinity_np(pthread_t , size_t , cpu_set_t * ) throw()
# 457 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 470 "/usr/include/pthread.h" 3
extern "C" int pthread_once(pthread_once_t * , void (* )(void))
# 471 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 482 "/usr/include/pthread.h" 3
extern "C" int pthread_setcancelstate(int , int * );
# 486 "/usr/include/pthread.h" 3
extern "C" int pthread_setcanceltype(int , int * );
# 489 "/usr/include/pthread.h" 3
extern "C" int pthread_cancel(pthread_t );
# 494 "/usr/include/pthread.h" 3
extern "C" void pthread_testcancel();
# 507 "/usr/include/pthread.h" 3
extern "C" { typedef
# 500 "/usr/include/pthread.h" 3
struct {
# 502 "/usr/include/pthread.h" 3
struct {
# 503 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 504 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 505 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 506 "/usr/include/pthread.h" 3
void *__pad[4];
# 507 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__)); }
# 516 "/usr/include/pthread.h" 3
extern "C" { struct __pthread_cleanup_frame {
# 518 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 519 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 520 "/usr/include/pthread.h" 3
int __do_it;
# 521 "/usr/include/pthread.h" 3
int __cancel_type;
# 522 "/usr/include/pthread.h" 3
}; }
# 527 "/usr/include/pthread.h" 3
extern "C" { class __pthread_cleanup_class {
# 529 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 530 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 531 "/usr/include/pthread.h" 3
int __do_it;
# 532 "/usr/include/pthread.h" 3
int __cancel_type;
# 535 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 536 "/usr/include/pthread.h" 3
{ }
# 537 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 538 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 539 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 540 "/usr/include/pthread.h" 3
}
# 541 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 542 "/usr/include/pthread.h" 3
}; }
# 718 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 719 "/usr/include/pthread.h" 3
extern "C" int __sigsetjmp(__jmp_buf_tag * , int ) throw();
# 725 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_init(pthread_mutex_t * , const pthread_mutexattr_t * ) throw()
# 727 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 730 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_destroy(pthread_mutex_t * ) throw()
# 731 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 734 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_trylock(pthread_mutex_t * ) throw()
# 735 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 738 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_lock(pthread_mutex_t * ) throw()
# 739 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 743 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ , const timespec *__restrict__ ) throw()
# 745 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 749 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_clocklock(pthread_mutex_t *__restrict__ , clockid_t , const timespec *__restrict__ ) throw()
# 752 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 756 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_unlock(pthread_mutex_t * ) throw()
# 757 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 761 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ , int *__restrict__ ) throw()
# 764 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 768 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ , int , int *__restrict__ ) throw()
# 771 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 776 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent(pthread_mutex_t * ) throw()
# 777 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 779 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 780 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 789 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_init(pthread_mutexattr_t * ) throw()
# 790 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 793 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_destroy(pthread_mutexattr_t * ) throw()
# 794 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 797 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 800 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 803 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setpshared(pthread_mutexattr_t * , int ) throw()
# 805 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 809 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 811 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 816 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_settype(pthread_mutexattr_t * , int ) throw()
# 817 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 821 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 824 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 828 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprotocol(pthread_mutexattr_t * , int ) throw()
# 830 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 833 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 836 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 839 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * , int ) throw()
# 841 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 845 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust(const pthread_mutexattr_t * , int * ) throw()
# 847 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 849 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * , int * ) throw()
# 851 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 855 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust(pthread_mutexattr_t * , int ) throw()
# 857 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 859 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * , int ) throw()
# 861 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 871 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_init(pthread_rwlock_t *__restrict__ , const pthread_rwlockattr_t *__restrict__ ) throw()
# 873 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 876 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_destroy(pthread_rwlock_t * ) throw()
# 877 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 880 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_rdlock(pthread_rwlock_t * ) throw()
# 881 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 884 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_tryrdlock(pthread_rwlock_t * ) throw()
# 885 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 889 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 891 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 895 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_clockrdlock(pthread_rwlock_t *__restrict__ , clockid_t , const timespec *__restrict__ ) throw()
# 898 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 902 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_wrlock(pthread_rwlock_t * ) throw()
# 903 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 906 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_trywrlock(pthread_rwlock_t * ) throw()
# 907 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 911 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 913 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 917 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_clockwrlock(pthread_rwlock_t *__restrict__ , clockid_t , const timespec *__restrict__ ) throw()
# 920 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 924 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_unlock(pthread_rwlock_t * ) throw()
# 925 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 931 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_init(pthread_rwlockattr_t * ) throw()
# 932 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 935 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_destroy(pthread_rwlockattr_t * ) throw()
# 936 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 939 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 942 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 945 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * , int ) throw()
# 947 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 950 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 953 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 956 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * , int ) throw()
# 957 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 965 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_init(pthread_cond_t *__restrict__ , const pthread_condattr_t *__restrict__ ) throw()
# 967 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 970 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_destroy(pthread_cond_t * ) throw()
# 971 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 974 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_signal(pthread_cond_t * ) throw()
# 975 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 978 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_broadcast(pthread_cond_t * ) throw()
# 979 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 986 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_wait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ )
# 988 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 997 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_timedwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , const timespec *__restrict__ )
# 1000 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1010 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_clockwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , __clockid_t , const timespec *__restrict__ )
# 1014 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 4)));
# 1020 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_init(pthread_condattr_t * ) throw()
# 1021 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1024 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_destroy(pthread_condattr_t * ) throw()
# 1025 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1028 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ , int *__restrict__ ) throw()
# 1031 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1034 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setpshared(pthread_condattr_t * , int ) throw()
# 1035 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1039 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ , __clockid_t *__restrict__ ) throw()
# 1042 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1045 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setclock(pthread_condattr_t * , __clockid_t ) throw()
# 1047 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1056 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_init(pthread_spinlock_t * , int ) throw()
# 1057 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1060 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_destroy(pthread_spinlock_t * ) throw()
# 1061 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1064 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_lock(pthread_spinlock_t * ) throw()
# 1065 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1068 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_trylock(pthread_spinlock_t * ) throw()
# 1069 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1072 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_unlock(pthread_spinlock_t * ) throw()
# 1073 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1080 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_init(pthread_barrier_t *__restrict__ , const pthread_barrierattr_t *__restrict__ , unsigned ) throw()
# 1083 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1086 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_destroy(pthread_barrier_t * ) throw()
# 1087 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1090 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_wait(pthread_barrier_t * ) throw()
# 1091 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1095 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_init(pthread_barrierattr_t * ) throw()
# 1096 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1099 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_destroy(pthread_barrierattr_t * ) throw()
# 1100 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1103 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ , int *__restrict__ ) throw()
# 1106 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1109 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_setpshared(pthread_barrierattr_t * , int ) throw()
# 1111 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1123 "/usr/include/pthread.h" 3
extern "C" int pthread_key_create(pthread_key_t * , void (* )(void *)) throw()
# 1125 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1128 "/usr/include/pthread.h" 3
extern "C" int pthread_key_delete(pthread_key_t ) throw();
# 1131 "/usr/include/pthread.h" 3
extern "C" void *pthread_getspecific(pthread_key_t ) throw();
# 1134 "/usr/include/pthread.h" 3
extern "C" int pthread_setspecific(pthread_key_t , const void * ) throw();
# 1140 "/usr/include/pthread.h" 3
extern "C" int pthread_getcpuclockid(pthread_t , __clockid_t * ) throw()
# 1142 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1157 "/usr/include/pthread.h" 3
extern "C" int pthread_atfork(void (* )(void), void (* )(void), void (* )(void)) throw();
# 1165 "/usr/include/pthread.h" 3
extern "C" {
# 1164 "/usr/include/pthread.h" 3
__attribute((__gnu_inline__)) extern inline int
# 1165 "/usr/include/pthread.h" 3
pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 1166 "/usr/include/pthread.h" 3
{
# 1167 "/usr/include/pthread.h" 3
return __thread1 == __thread2;
# 1168 "/usr/include/pthread.h" 3
} }
# 267 "/usr/include/unistd.h" 3
extern "C" { typedef __intptr_t intptr_t; }
# 274 "/usr/include/unistd.h" 3
extern "C" { typedef __socklen_t socklen_t; }
# 287 "/usr/include/unistd.h" 3
extern "C" int access(const char * , int ) throw() __attribute((__nonnull__(1)));
# 292 "/usr/include/unistd.h" 3
extern "C" int euidaccess(const char * , int ) throw()
# 293 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 296 "/usr/include/unistd.h" 3
extern "C" int eaccess(const char * , int ) throw()
# 297 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 304 "/usr/include/unistd.h" 3
extern "C" int faccessat(int , const char * , int , int ) throw()
# 305 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 334 "/usr/include/unistd.h" 3
extern "C" __off_t lseek(int , __off_t , int ) throw();
# 345 "/usr/include/unistd.h" 3
extern "C" __off64_t lseek64(int , __off64_t , int ) throw();
# 353 "/usr/include/unistd.h" 3
extern "C" int close(int );
# 360 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t read(int , void * , size_t ) __attribute((__warn_unused_result__)); }
# 366 "/usr/include/unistd.h" 3
extern "C" ssize_t write(int , const void * , size_t ) __attribute((__warn_unused_result__));
# 376 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t pread(int , void * , size_t , __off_t )
# 377 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__)); }
# 384 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite(int , const void * , size_t , __off_t )
# 385 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 404 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t pread64(int , void * , size_t , __off64_t )
# 405 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__)); }
# 408 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite64(int , const void * , size_t , __off64_t )
# 409 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 417 "/usr/include/unistd.h" 3
extern "C" int pipe(int [2]) throw() __attribute((__warn_unused_result__));
# 422 "/usr/include/unistd.h" 3
extern "C" int pipe2(int [2], int ) throw() __attribute((__warn_unused_result__));
# 432 "/usr/include/unistd.h" 3
extern "C" unsigned alarm(unsigned ) throw();
# 444 "/usr/include/unistd.h" 3
extern "C" unsigned sleep(unsigned );
# 452 "/usr/include/unistd.h" 3
extern "C" __useconds_t ualarm(__useconds_t , __useconds_t ) throw();
# 460 "/usr/include/unistd.h" 3
extern "C" int usleep(__useconds_t );
# 469 "/usr/include/unistd.h" 3
extern "C" int pause();
# 473 "/usr/include/unistd.h" 3
extern "C" int chown(const char * , __uid_t , __gid_t ) throw()
# 474 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 478 "/usr/include/unistd.h" 3
extern "C" int fchown(int , __uid_t , __gid_t ) throw() __attribute((__warn_unused_result__));
# 483 "/usr/include/unistd.h" 3
extern "C" int lchown(const char * , __uid_t , __gid_t ) throw()
# 484 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 491 "/usr/include/unistd.h" 3
extern "C" int fchownat(int , const char * , __uid_t , __gid_t , int ) throw()
# 493 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 497 "/usr/include/unistd.h" 3
extern "C" int chdir(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 501 "/usr/include/unistd.h" 3
extern "C" int fchdir(int ) throw() __attribute((__warn_unused_result__));
# 511 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *getcwd(char * , size_t ) throw() __attribute((__warn_unused_result__)); }
# 517 "/usr/include/unistd.h" 3
extern "C" char *get_current_dir_name() throw();
# 525 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline char *getwd(char * ) throw()
# 526 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__)) __attribute((__warn_unused_result__)); }
# 531 "/usr/include/unistd.h" 3
extern "C" int dup(int ) throw() __attribute((__warn_unused_result__));
# 534 "/usr/include/unistd.h" 3
extern "C" int dup2(int , int ) throw();
# 539 "/usr/include/unistd.h" 3
extern "C" int dup3(int , int , int ) throw();
# 543 "/usr/include/unistd.h" 3
extern "C" { extern char **__environ; }
# 545 "/usr/include/unistd.h" 3
extern "C" { extern char **environ; }
# 551 "/usr/include/unistd.h" 3
extern "C" int execve(const char * , char *const [], char *const []) throw()
# 552 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 557 "/usr/include/unistd.h" 3
extern "C" int fexecve(int , char *const [], char *const []) throw()
# 558 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 563 "/usr/include/unistd.h" 3
extern "C" int execv(const char * , char *const []) throw()
# 564 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 568 "/usr/include/unistd.h" 3
extern "C" int execle(const char * , const char * , ...) throw()
# 569 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 573 "/usr/include/unistd.h" 3
extern "C" int execl(const char * , const char * , ...) throw()
# 574 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 578 "/usr/include/unistd.h" 3
extern "C" int execvp(const char * , char *const []) throw()
# 579 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 584 "/usr/include/unistd.h" 3
extern "C" int execlp(const char * , const char * , ...) throw()
# 585 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 590 "/usr/include/unistd.h" 3
extern "C" int execvpe(const char * , char *const [], char *const []) throw()
# 592 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 598 "/usr/include/unistd.h" 3
extern "C" int nice(int ) throw() __attribute((__warn_unused_result__));
# 603 "/usr/include/unistd.h" 3
extern "C" void _exit(int ) __attribute((__noreturn__));
# 25 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
enum {
# 26 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_LINK_MAX,
# 28 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_MAX_CANON,
# 30 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_MAX_INPUT,
# 32 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_NAME_MAX,
# 34 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_PATH_MAX,
# 36 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_PIPE_BUF,
# 38 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_CHOWN_RESTRICTED,
# 40 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_NO_TRUNC,
# 42 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_VDISABLE,
# 44 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_SYNC_IO,
# 46 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_ASYNC_IO,
# 48 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_PRIO_IO,
# 50 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_SOCK_MAXBUF,
# 52 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_FILESIZEBITS,
# 54 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_INCR_XFER_SIZE,
# 56 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_MAX_XFER_SIZE,
# 58 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_MIN_XFER_SIZE,
# 60 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_REC_XFER_ALIGN,
# 62 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_ALLOC_SIZE_MIN,
# 64 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_SYMLINK_MAX,
# 66 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_PC_2_SYMLINKS
# 68 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
};
# 72 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
enum {
# 73 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ARG_MAX,
# 75 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHILD_MAX,
# 77 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CLK_TCK,
# 79 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NGROUPS_MAX,
# 81 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_OPEN_MAX,
# 83 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_STREAM_MAX,
# 85 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TZNAME_MAX,
# 87 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_JOB_CONTROL,
# 89 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SAVED_IDS,
# 91 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_REALTIME_SIGNALS,
# 93 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PRIORITY_SCHEDULING,
# 95 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TIMERS,
# 97 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ASYNCHRONOUS_IO,
# 99 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PRIORITIZED_IO,
# 101 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYNCHRONIZED_IO,
# 103 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FSYNC,
# 105 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MAPPED_FILES,
# 107 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MEMLOCK,
# 109 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MEMLOCK_RANGE,
# 111 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MEMORY_PROTECTION,
# 113 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MESSAGE_PASSING,
# 115 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SEMAPHORES,
# 117 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHARED_MEMORY_OBJECTS,
# 119 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AIO_LISTIO_MAX,
# 121 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AIO_MAX,
# 123 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AIO_PRIO_DELTA_MAX,
# 125 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DELAYTIMER_MAX,
# 127 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MQ_OPEN_MAX,
# 129 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MQ_PRIO_MAX,
# 131 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_VERSION,
# 133 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PAGESIZE,
# 136 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_RTSIG_MAX,
# 138 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SEM_NSEMS_MAX,
# 140 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SEM_VALUE_MAX,
# 142 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SIGQUEUE_MAX,
# 144 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TIMER_MAX,
# 149 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_BASE_MAX,
# 151 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_DIM_MAX,
# 153 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_SCALE_MAX,
# 155 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BC_STRING_MAX,
# 157 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_COLL_WEIGHTS_MAX,
# 159 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_EQUIV_CLASS_MAX,
# 161 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_EXPR_NEST_MAX,
# 163 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LINE_MAX,
# 165 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_RE_DUP_MAX,
# 167 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHARCLASS_NAME_MAX,
# 170 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_VERSION,
# 172 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_C_BIND,
# 174 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_C_DEV,
# 176 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_FORT_DEV,
# 178 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_FORT_RUN,
# 180 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_SW_DEV,
# 182 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_LOCALEDEF,
# 185 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII,
# 187 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_XTI,
# 189 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_SOCKET,
# 191 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_INTERNET,
# 193 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI,
# 195 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_POLL,
# 197 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SELECT,
# 199 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_UIO_MAXIOV,
# 201 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_IOV_MAX = 60,
# 203 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_INTERNET_STREAM,
# 205 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_INTERNET_DGRAM,
# 207 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI_COTS,
# 209 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI_CLTS,
# 211 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PII_OSI_M,
# 213 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_T_IOV_MAX,
# 217 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREADS,
# 219 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_SAFE_FUNCTIONS,
# 221 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_GETGR_R_SIZE_MAX,
# 223 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_GETPW_R_SIZE_MAX,
# 225 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LOGIN_NAME_MAX,
# 227 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TTY_NAME_MAX,
# 229 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_DESTRUCTOR_ITERATIONS,
# 231 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_KEYS_MAX,
# 233 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_STACK_MIN,
# 235 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_THREADS_MAX,
# 237 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ATTR_STACKADDR,
# 239 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ATTR_STACKSIZE,
# 241 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PRIORITY_SCHEDULING,
# 243 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PRIO_INHERIT,
# 245 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PRIO_PROTECT,
# 247 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_PROCESS_SHARED,
# 250 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NPROCESSORS_CONF,
# 252 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NPROCESSORS_ONLN,
# 254 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PHYS_PAGES,
# 256 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_AVPHYS_PAGES,
# 258 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ATEXIT_MAX,
# 260 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PASS_MAX,
# 263 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_VERSION,
# 265 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XCU_VERSION,
# 267 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_UNIX,
# 269 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_CRYPT,
# 271 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_ENH_I18N,
# 273 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_SHM,
# 276 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_CHAR_TERM,
# 278 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_C_VERSION,
# 280 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_UPE,
# 283 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XPG2,
# 285 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XPG3,
# 287 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_XPG4,
# 290 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHAR_BIT,
# 292 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHAR_MAX,
# 294 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CHAR_MIN,
# 296 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_INT_MAX,
# 298 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_INT_MIN,
# 300 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LONG_BIT,
# 302 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_WORD_BIT,
# 304 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MB_LEN_MAX,
# 306 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NZERO,
# 308 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SSIZE_MAX,
# 310 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SCHAR_MAX,
# 312 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SCHAR_MIN,
# 314 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHRT_MAX,
# 316 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHRT_MIN,
# 318 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_UCHAR_MAX,
# 320 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_UINT_MAX,
# 322 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ULONG_MAX,
# 324 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_USHRT_MAX,
# 327 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_ARGMAX,
# 329 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_LANGMAX,
# 331 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_MSGMAX,
# 333 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_NMAX,
# 335 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_SETMAX,
# 337 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NL_TEXTMAX,
# 340 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_ILP32_OFF32,
# 342 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_ILP32_OFFBIG,
# 344 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_LP64_OFF64,
# 346 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XBS5_LPBIG_OFFBIG,
# 349 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_LEGACY,
# 351 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_REALTIME,
# 353 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_REALTIME_THREADS,
# 356 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_ADVISORY_INFO,
# 358 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BARRIERS,
# 360 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_BASE,
# 362 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_C_LANG_SUPPORT,
# 364 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_C_LANG_SUPPORT_R,
# 366 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CLOCK_SELECTION,
# 368 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_CPUTIME,
# 370 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_CPUTIME,
# 372 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DEVICE_IO,
# 374 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DEVICE_SPECIFIC,
# 376 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_DEVICE_SPECIFIC_R,
# 378 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FD_MGMT,
# 380 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FIFO,
# 382 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_PIPE,
# 384 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FILE_ATTRIBUTES,
# 386 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FILE_LOCKING,
# 388 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_FILE_SYSTEM,
# 390 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MONOTONIC_CLOCK,
# 392 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_MULTI_PROCESS,
# 394 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SINGLE_PROCESS,
# 396 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_NETWORKING,
# 398 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_READER_WRITER_LOCKS,
# 400 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SPIN_LOCKS,
# 402 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_REGEXP,
# 404 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_REGEX_VERSION,
# 406 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SHELL,
# 408 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SIGNALS,
# 410 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SPAWN,
# 412 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SPORADIC_SERVER,
# 414 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_SPORADIC_SERVER,
# 416 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYSTEM_DATABASE,
# 418 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYSTEM_DATABASE_R,
# 420 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TIMEOUTS,
# 422 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TYPED_MEMORY_OBJECTS,
# 424 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_USER_GROUPS,
# 426 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_USER_GROUPS_R,
# 428 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS,
# 430 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_ACCOUNTING,
# 432 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_LOCATE,
# 434 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_MESSAGE,
# 436 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_TRACK,
# 438 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SYMLOOP_MAX,
# 440 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_STREAMS,
# 442 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_2_PBS_CHECKPOINT,
# 445 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_ILP32_OFF32,
# 447 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_ILP32_OFFBIG,
# 449 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_LP64_OFF64,
# 451 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V6_LPBIG_OFFBIG,
# 454 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_HOST_NAME_MAX,
# 456 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE,
# 458 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_EVENT_FILTER,
# 460 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_INHERIT,
# 462 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_LOG,
# 465 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_ICACHE_SIZE,
# 467 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_ICACHE_ASSOC,
# 469 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_ICACHE_LINESIZE,
# 471 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_DCACHE_SIZE,
# 473 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_DCACHE_ASSOC,
# 475 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL1_DCACHE_LINESIZE,
# 477 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL2_CACHE_SIZE,
# 479 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL2_CACHE_ASSOC,
# 481 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL2_CACHE_LINESIZE,
# 483 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL3_CACHE_SIZE,
# 485 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL3_CACHE_ASSOC,
# 487 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL3_CACHE_LINESIZE,
# 489 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL4_CACHE_SIZE,
# 491 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL4_CACHE_ASSOC,
# 493 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_LEVEL4_CACHE_LINESIZE,
# 497 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_IPV6 = 235,
# 499 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_RAW_SOCKETS,
# 502 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_ILP32_OFF32,
# 504 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_ILP32_OFFBIG,
# 506 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_LP64_OFF64,
# 508 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_V7_LPBIG_OFFBIG,
# 511 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_SS_REPL_MAX,
# 514 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_EVENT_NAME_MAX,
# 516 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_NAME_MAX,
# 518 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_SYS_MAX,
# 520 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_TRACE_USER_EVENT_MAX,
# 523 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_XOPEN_STREAMS,
# 526 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_INHERIT,
# 528 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_PROTECT
# 530 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
};
# 534 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
enum {
# 535 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_PATH,
# 538 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V6_WIDTH_RESTRICTED_ENVS,
# 542 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_GNU_LIBC_VERSION,
# 544 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_GNU_LIBPTHREAD_VERSION,
# 547 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V5_WIDTH_RESTRICTED_ENVS,
# 551 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V7_WIDTH_RESTRICTED_ENVS,
# 555 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_CFLAGS = 1000,
# 557 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_LDFLAGS,
# 559 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_LIBS,
# 561 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS_LINTFLAGS,
# 563 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_CFLAGS,
# 565 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_LDFLAGS,
# 567 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_LIBS,
# 569 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_LFS64_LINTFLAGS,
# 572 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_CFLAGS = 1100,
# 574 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LDFLAGS,
# 576 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LIBS,
# 578 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LINTFLAGS,
# 580 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_CFLAGS,
# 582 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LDFLAGS,
# 584 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LIBS,
# 586 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
# 588 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_CFLAGS,
# 590 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LDFLAGS,
# 592 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LIBS,
# 594 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LINTFLAGS,
# 596 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_CFLAGS,
# 598 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
# 600 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LIBS,
# 602 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
# 605 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_CFLAGS,
# 607 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
# 609 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LIBS,
# 611 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
# 613 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
# 615 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
# 617 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LIBS,
# 619 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
# 621 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_CFLAGS,
# 623 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LDFLAGS,
# 625 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LIBS,
# 627 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
# 629 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
# 631 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
# 633 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
# 635 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
# 638 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_CFLAGS,
# 640 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
# 642 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LIBS,
# 644 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
# 646 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
# 648 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
# 650 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LIBS,
# 652 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
# 654 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_CFLAGS,
# 656 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LDFLAGS,
# 658 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LIBS,
# 660 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
# 662 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
# 664 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
# 666 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
# 668 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
# 671 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V6_ENV,
# 673 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
_CS_V7_ENV
# 675 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3
};
# 612 "/usr/include/unistd.h" 3
extern "C" long pathconf(const char * , int ) throw()
# 613 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 616 "/usr/include/unistd.h" 3
extern "C" long fpathconf(int , int ) throw();
# 619 "/usr/include/unistd.h" 3
extern "C" long sysconf(int ) throw();
# 623 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline size_t confstr(int , char * , size_t ) throw(); }
# 628 "/usr/include/unistd.h" 3
extern "C" __pid_t getpid() throw();
# 631 "/usr/include/unistd.h" 3
extern "C" __pid_t getppid() throw();
# 634 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgrp() throw();
# 637 "/usr/include/unistd.h" 3
extern "C" __pid_t __getpgid(__pid_t ) throw();
# 639 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgid(__pid_t ) throw();
# 646 "/usr/include/unistd.h" 3
extern "C" int setpgid(__pid_t , __pid_t ) throw();
# 660 "/usr/include/unistd.h" 3
extern "C" int setpgrp() throw();
# 667 "/usr/include/unistd.h" 3
extern "C" __pid_t setsid() throw();
# 671 "/usr/include/unistd.h" 3
extern "C" __pid_t getsid(__pid_t ) throw();
# 675 "/usr/include/unistd.h" 3
extern "C" __uid_t getuid() throw();
# 678 "/usr/include/unistd.h" 3
extern "C" __uid_t geteuid() throw();
# 681 "/usr/include/unistd.h" 3
extern "C" __gid_t getgid() throw();
# 684 "/usr/include/unistd.h" 3
extern "C" __gid_t getegid() throw();
# 689 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getgroups(int , __gid_t []) throw() __attribute((__warn_unused_result__)); }
# 693 "/usr/include/unistd.h" 3
extern "C" int group_member(__gid_t ) throw();
# 700 "/usr/include/unistd.h" 3
extern "C" int setuid(__uid_t ) throw() __attribute((__warn_unused_result__));
# 705 "/usr/include/unistd.h" 3
extern "C" int setreuid(__uid_t , __uid_t ) throw() __attribute((__warn_unused_result__));
# 710 "/usr/include/unistd.h" 3
extern "C" int seteuid(__uid_t ) throw() __attribute((__warn_unused_result__));
# 717 "/usr/include/unistd.h" 3
extern "C" int setgid(__gid_t ) throw() __attribute((__warn_unused_result__));
# 722 "/usr/include/unistd.h" 3
extern "C" int setregid(__gid_t , __gid_t ) throw() __attribute((__warn_unused_result__));
# 727 "/usr/include/unistd.h" 3
extern "C" int setegid(__gid_t ) throw() __attribute((__warn_unused_result__));
# 733 "/usr/include/unistd.h" 3
extern "C" int getresuid(__uid_t * , __uid_t * , __uid_t * ) throw();
# 738 "/usr/include/unistd.h" 3
extern "C" int getresgid(__gid_t * , __gid_t * , __gid_t * ) throw();
# 743 "/usr/include/unistd.h" 3
extern "C" int setresuid(__uid_t , __uid_t , __uid_t ) throw()
# 744 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 748 "/usr/include/unistd.h" 3
extern "C" int setresgid(__gid_t , __gid_t , __gid_t ) throw()
# 749 "/usr/include/unistd.h" 3
 __attribute((__warn_unused_result__));
# 756 "/usr/include/unistd.h" 3
extern "C" __pid_t fork() throw();
# 764 "/usr/include/unistd.h" 3
extern "C" __pid_t vfork() throw();
# 770 "/usr/include/unistd.h" 3
extern "C" char *ttyname(int ) throw();
# 774 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int ttyname_r(int , char * , size_t ) throw()
# 775 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__)); }
# 779 "/usr/include/unistd.h" 3
extern "C" int isatty(int ) throw();
# 784 "/usr/include/unistd.h" 3
extern "C" int ttyslot() throw();
# 789 "/usr/include/unistd.h" 3
extern "C" int link(const char * , const char * ) throw()
# 790 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 795 "/usr/include/unistd.h" 3
extern "C" int linkat(int , const char * , int , const char * , int ) throw()
# 797 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 4))) __attribute((__warn_unused_result__));
# 802 "/usr/include/unistd.h" 3
extern "C" int symlink(const char * , const char * ) throw()
# 803 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 808 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t readlink(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 810 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__)); }
# 815 "/usr/include/unistd.h" 3
extern "C" int symlinkat(const char * , int , const char * ) throw()
# 816 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 3))) __attribute((__warn_unused_result__));
# 819 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline ssize_t readlinkat(int , const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 821 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__)); }
# 825 "/usr/include/unistd.h" 3
extern "C" int unlink(const char * ) throw() __attribute((__nonnull__(1)));
# 829 "/usr/include/unistd.h" 3
extern "C" int unlinkat(int , const char * , int ) throw()
# 830 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 834 "/usr/include/unistd.h" 3
extern "C" int rmdir(const char * ) throw() __attribute((__nonnull__(1)));
# 838 "/usr/include/unistd.h" 3
extern "C" __pid_t tcgetpgrp(int ) throw();
# 841 "/usr/include/unistd.h" 3
extern "C" int tcsetpgrp(int , __pid_t ) throw();
# 848 "/usr/include/unistd.h" 3
extern "C" char *getlogin();
# 856 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getlogin_r(char * , size_t ) __attribute((__nonnull__(1))); }
# 861 "/usr/include/unistd.h" 3
extern "C" int setlogin(const char * ) throw() __attribute((__nonnull__(1)));
# 36 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern char *optarg; }
# 50 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern int optind; }
# 55 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern int opterr; }
# 59 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" { extern int optopt; }
# 91 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
extern "C" int getopt(int , char *const * , const char * ) throw()
# 92 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3
 __attribute((__nonnull__(2, 3)));
# 877 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int gethostname(char * , size_t ) throw() __attribute((__nonnull__(1))); }
# 884 "/usr/include/unistd.h" 3
extern "C" int sethostname(const char * , size_t ) throw()
# 885 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 889 "/usr/include/unistd.h" 3
extern "C" int sethostid(long ) throw() __attribute((__warn_unused_result__));
# 895 "/usr/include/unistd.h" 3
extern "C" { extern __attribute((gnu_inline)) inline int getdomainname(char * , size_t ) throw()
# 896 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)); }
# 897 "/usr/include/unistd.h" 3
extern "C" int setdomainname(const char * , size_t ) throw()
# 898 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 904 "/usr/include/unistd.h" 3
extern "C" int vhangup() throw();
# 907 "/usr/include/unistd.h" 3
extern "C" int revoke(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 915 "/usr/include/unistd.h" 3
extern "C" int profil(unsigned short * , size_t , size_t , unsigned ) throw()
# 917 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 923 "/usr/include/unistd.h" 3
extern "C" int acct(const char * ) throw();
# 927 "/usr/include/unistd.h" 3
extern "C" char *getusershell() throw();
# 928 "/usr/include/unistd.h" 3
extern "C" void endusershell() throw();
# 929 "/usr/include/unistd.h" 3
extern "C" void setusershell() throw();
# 935 "/usr/include/unistd.h" 3
extern "C" int daemon(int , int ) throw() __attribute((__warn_unused_result__));
# 942 "/usr/include/unistd.h" 3
extern "C" int chroot(const char * ) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 946 "/usr/include/unistd.h" 3
extern "C" char *getpass(const char * ) __attribute((__nonnull__(1)));
# 954 "/usr/include/unistd.h" 3
extern "C" int fsync(int );
# 960 "/usr/include/unistd.h" 3
extern "C" int syncfs(int ) throw();
# 967 "/usr/include/unistd.h" 3
extern "C" long gethostid();
# 970 "/usr/include/unistd.h" 3
extern "C" void sync() throw();
# 976 "/usr/include/unistd.h" 3
extern "C" int getpagesize() throw() __attribute((const));
# 981 "/usr/include/unistd.h" 3
extern "C" int getdtablesize() throw();
# 991 "/usr/include/unistd.h" 3
extern "C" int truncate(const char * , __off_t ) throw()
# 992 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 1003 "/usr/include/unistd.h" 3
extern "C" int truncate64(const char * , __off64_t ) throw()
# 1004 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 1014 "/usr/include/unistd.h" 3
extern "C" int ftruncate(int , __off_t ) throw() __attribute((__warn_unused_result__));
# 1024 "/usr/include/unistd.h" 3
extern "C" int ftruncate64(int , __off64_t ) throw() __attribute((__warn_unused_result__));
# 1035 "/usr/include/unistd.h" 3
extern "C" int brk(void * ) throw() __attribute((__warn_unused_result__));
# 1041 "/usr/include/unistd.h" 3
extern "C" void *sbrk(intptr_t ) throw();
# 1056 "/usr/include/unistd.h" 3
extern "C" long syscall(long , ...) throw();
# 1079 "/usr/include/unistd.h" 3
extern "C" int lockf(int , int , __off_t ) __attribute((__warn_unused_result__));
# 1089 "/usr/include/unistd.h" 3
extern "C" int lockf64(int , int , __off64_t ) __attribute((__warn_unused_result__));
# 1107 "/usr/include/unistd.h" 3
extern "C" ssize_t copy_file_range(int , __off64_t * , int , __off64_t * , size_t , unsigned );
# 1115 "/usr/include/unistd.h" 3
extern "C" int fdatasync(int );
# 1124 "/usr/include/unistd.h" 3
extern "C" char *crypt(const char * , const char * ) throw()
# 1125 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1133 "/usr/include/unistd.h" 3
extern "C" void swab(const void *__restrict__ , void *__restrict__ , ssize_t ) throw()
# 1134 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1161 "/usr/include/unistd.h" 3
extern "C" int getentropy(void * , size_t ) __attribute((__warn_unused_result__));
# 23 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __read_chk(int , void * , size_t , size_t )
# 24 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 25 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __read_alias(int , void * , size_t ) __asm__("read") __attribute((__warn_unused_result__));
# 27 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __read_chk_warn(int , void * , size_t , size_t ) __asm__("__read_chk")
# 30 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("read called with bigger length than size of the destination buffer")));
# 34 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ssize_t
# 34 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
read(int __fd, void *__buf, size_t __nbytes)
# 35 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 36 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 0) != ((size_t)(-1)))
# 37 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 38 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 39 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __read_chk(__fd, __buf, __nbytes, __builtin_object_size(__buf, 0)); }
# 41 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__nbytes > __builtin_object_size(__buf, 0)) {
# 42 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __read_chk_warn(__fd, __buf, __nbytes, __builtin_object_size(__buf, 0)); }
# 43 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 44 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __read_alias(__fd, __buf, __nbytes);
# 45 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 48 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread_chk(int , void * , size_t , __off_t , size_t )
# 49 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 50 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread64_chk(int , void * , size_t , __off64_t , size_t )
# 51 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 52 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread_alias(int , void * , size_t , __off_t ) __asm__("pread") __attribute((__warn_unused_result__));
# 55 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread64_alias(int , void * , size_t , __off64_t ) __asm__("pread64") __attribute((__warn_unused_result__));
# 58 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread_chk_warn(int , void * , size_t , __off_t , size_t ) __asm__("__pread_chk")
# 61 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("pread called with bigger length than size of the destination buffer")));
# 63 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __pread64_chk_warn(int , void * , size_t , __off64_t , size_t ) __asm__("__pread64_chk")
# 67 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("pread64 called with bigger length than size of the destination buffer")));
# 72 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 71 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ssize_t
# 72 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset)
# 73 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 74 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 0) != ((size_t)(-1)))
# 75 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 76 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 77 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread_chk(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 79 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__nbytes > __builtin_object_size(__buf, 0)) {
# 80 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread_chk_warn(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 82 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 83 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread_alias(__fd, __buf, __nbytes, __offset);
# 84 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 105 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 104 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ssize_t
# 105 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset)
# 106 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 107 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 0) != ((size_t)(-1)))
# 108 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 109 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 110 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread64_chk(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 112 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__nbytes > __builtin_object_size(__buf, 0)) {
# 113 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread64_chk_warn(__fd, __buf, __nbytes, __offset, __builtin_object_size(__buf, 0)); }
# 115 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 117 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __pread64_alias(__fd, __buf, __nbytes, __offset);
# 118 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 123 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlink_chk(const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw()
# 126 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 127 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlink_alias(const char *__restrict__ , char *__restrict__ , size_t ) throw() __asm__("readlink")
# 130 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__));
# 131 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlink_chk_warn(const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw() __asm__("__readlink_chk")
# 135 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__)) __attribute((__warning__("readlink called with bigger length than size of destination buffer")));
# 139 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 138 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__nonnull__(1, 2))) __attribute((__warn_unused_result__)) extern inline ssize_t
# 139 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
readlink(const char *__restrict__ __path, char *__restrict__ __buf, size_t __len) throw()
# 141 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 142 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 143 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 144 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 145 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlink_chk(__path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 147 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__len > __builtin_object_size(__buf, 2 > 1)) {
# 148 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlink_chk_warn(__path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 149 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 150 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlink_alias(__path, __buf, __len);
# 151 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 155 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlinkat_chk(int , const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw()
# 158 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__));
# 159 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlinkat_alias(int , const char *__restrict__ , char *__restrict__ , size_t ) throw() __asm__("readlinkat")
# 163 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__));
# 164 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" ssize_t __readlinkat_chk_warn(int , const char *__restrict__ , char *__restrict__ , size_t , size_t ) throw() __asm__("__readlinkat_chk")
# 168 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__)) __attribute((__warning__("readlinkat called with bigger length than size of destination buffer")));
# 173 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 172 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__nonnull__(2, 3))) __attribute((__warn_unused_result__)) extern inline ssize_t
# 173 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
readlinkat(int __fd, const char *__restrict__ __path, char *__restrict__ __buf, size_t __len) throw()
# 175 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 176 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 177 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 178 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 179 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlinkat_chk(__fd, __path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 181 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__len > __builtin_object_size(__buf, 2 > 1)) {
# 182 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlinkat_chk_warn(__fd, __path, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 184 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 185 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __readlinkat_alias(__fd, __path, __buf, __len);
# 186 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 189 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getcwd_chk(char * , size_t , size_t ) throw()
# 190 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 191 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getcwd_alias(char * , size_t ) throw() __asm__("getcwd") __attribute((__warn_unused_result__));
# 193 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getcwd_chk_warn(char * , size_t , size_t ) throw() __asm__("__getcwd_chk")
# 196 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("getcwd caller with bigger length than size of destination buffer")));
# 200 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 199 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 200 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getcwd(char *__buf, size_t __size) throw()
# 201 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 202 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 203 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 204 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 205 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getcwd_chk(__buf, __size, __builtin_object_size(__buf, 2 > 1)); }
# 207 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__size > __builtin_object_size(__buf, 2 > 1)) {
# 208 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getcwd_chk_warn(__buf, __size, __builtin_object_size(__buf, 2 > 1)); }
# 209 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 210 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getcwd_alias(__buf, __size);
# 211 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 214 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getwd_chk(char * , size_t ) throw()
# 215 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 216 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" char *__getwd_warn(char * ) throw() __asm__("getwd")
# 217 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)) __attribute((__warning__("please use getcwd instead, as getwd doesn\'t specify buffer size")));
# 221 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 220 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__nonnull__(1))) __attribute((__deprecated__)) __attribute((__warn_unused_result__)) extern inline char *
# 221 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getwd(char *__buf) throw()
# 222 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 223 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1))) {
# 224 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getwd_chk(__buf, __builtin_object_size(__buf, 2 > 1)); }
# 225 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getwd_warn(__buf);
# 226 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 229 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" size_t __confstr_chk(int , char * , size_t , size_t ) throw();
# 231 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" size_t __confstr_alias(int , char * , size_t ) throw() __asm__("confstr");
# 233 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" size_t __confstr_chk_warn(int , char * , size_t , size_t ) throw() __asm__("__confstr_chk")
# 236 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warning__("confstr called with bigger length than size of destination buffer")));
# 240 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 239 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 240 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
confstr(int __name, char *__buf, size_t __len) throw()
# 241 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 242 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 243 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 244 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 245 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __confstr_chk(__name, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 247 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) < __len) {
# 248 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __confstr_chk_warn(__name, __buf, __len, __builtin_object_size(__buf, 2 > 1)); }
# 249 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 250 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __confstr_alias(__name, __buf, __len);
# 251 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 254 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getgroups_chk(int , __gid_t [], size_t ) throw()
# 255 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__));
# 256 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getgroups_alias(int , __gid_t []) throw() __asm__("getgroups") __attribute((__warn_unused_result__));
# 258 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getgroups_chk_warn(int , __gid_t [], size_t ) throw() __asm__("__getgroups_chk")
# 261 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("getgroups called with bigger group count than what can fit into destination buffer")));
# 265 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 264 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 265 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getgroups(int __size, __gid_t __list[]) throw()
# 266 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 267 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__list, 2 > 1) != ((size_t)(-1)))
# 268 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 269 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if ((!(0)) || (__size < 0)) {
# 270 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getgroups_chk(__size, __list, __builtin_object_size(__list, 2 > 1)); }
# 272 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if ((__size * sizeof(__gid_t)) > __builtin_object_size(__list, 2 > 1)) {
# 273 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getgroups_chk_warn(__size, __list, __builtin_object_size(__list, 2 > 1)); }
# 274 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 275 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getgroups_alias(__size, __list);
# 276 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 279 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __ttyname_r_chk(int , char * , size_t , size_t ) throw()
# 280 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2)));
# 281 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __ttyname_r_alias(int , char * , size_t ) throw() __asm__("ttyname_r")
# 283 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2)));
# 284 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __ttyname_r_chk_warn(int , char * , size_t , size_t ) throw() __asm__("__ttyname_r_chk")
# 287 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(2))) __attribute((__warning__("ttyname_r called with bigger buflen than size of destination buffer")));
# 291 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 290 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 291 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
ttyname_r(int __fd, char *__buf, size_t __buflen) throw()
# 292 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 293 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 294 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 295 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 296 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __ttyname_r_chk(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 298 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 299 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __ttyname_r_chk_warn(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 300 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 301 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __ttyname_r_alias(__fd, __buf, __buflen);
# 302 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 306 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getlogin_r_chk(char * , size_t , size_t )
# 307 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1)));
# 308 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getlogin_r_alias(char * , size_t ) __asm__("getlogin_r") __attribute((__nonnull__(1)));
# 310 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getlogin_r_chk_warn(char * , size_t , size_t ) __asm__("__getlogin_r_chk")
# 313 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warning__("getlogin_r called with bigger buflen than size of destination buffer")));
# 317 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 316 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 317 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getlogin_r(char *__buf, size_t __buflen)
# 318 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 319 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 320 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 321 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 322 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getlogin_r_chk(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 324 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 325 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getlogin_r_chk_warn(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 326 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 327 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getlogin_r_alias(__buf, __buflen);
# 328 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 333 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __gethostname_chk(char * , size_t , size_t ) throw()
# 334 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1)));
# 335 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __gethostname_alias(char * , size_t ) throw() __asm__("gethostname") __attribute((__nonnull__(1)));
# 337 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __gethostname_chk_warn(char * , size_t , size_t ) throw() __asm__("__gethostname_chk")
# 340 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warning__("gethostname called with bigger buflen than size of destination buffer")));
# 344 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 343 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 344 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
gethostname(char *__buf, size_t __buflen) throw()
# 345 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 346 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 347 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 348 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 349 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __gethostname_chk(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 351 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 352 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __gethostname_chk_warn(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 353 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 354 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __gethostname_alias(__buf, __buflen);
# 355 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 360 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getdomainname_chk(char * , size_t , size_t ) throw()
# 361 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 362 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getdomainname_alias(char * , size_t ) throw() __asm__("getdomainname") __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 365 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" int __getdomainname_chk_warn(char * , size_t , size_t ) throw() __asm__("__getdomainname_chk")
# 368 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__)) __attribute((__warning__("getdomainname called with bigger buflen than size of destination buffer")));
# 373 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
extern "C" {
# 372 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 373 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
getdomainname(char *__buf, size_t __buflen) throw()
# 374 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 375 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 376 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
{
# 377 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (!(0)) {
# 378 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getdomainname_chk(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 380 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 381 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getdomainname_chk_warn(__buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 382 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
}
# 383 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
return __getdomainname_alias(__buf, __buflen);
# 384 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3
} }
# 34 "/usr/include/x86_64-linux-gnu/bits/unistd_ext.h" 3
extern "C" __pid_t gettid() throw();
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 118 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 119 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 120 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 122 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 123 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 124 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 125 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 126 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 127 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 128 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 130 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 131 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 134 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 137 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 138 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 139 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 141 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 142 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 143 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 144 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 145 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 148 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 149 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 150 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 151 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 152 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 238 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 239 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 240 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw_pthread_cancel));
# 242 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 243 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 649 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 650 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__args)
# 651 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 652 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 653 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 656 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 657 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 658 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 659 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 662 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 663 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 664 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 665 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 668 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 669 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 670 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 671 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 674 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 675 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 676 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 677 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 680 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_yield()
# 681 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 682 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 683 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 686 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 687 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 688 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 689 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 691 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return -1; }
# 692 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 695 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 696 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 697 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 698 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 701 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 702 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 703 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 704 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 707 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 708 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 709 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 710 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 713 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 714 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 715 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 716 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 719 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 720 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 721 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 722 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 724 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 725 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 728 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 729 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 730 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 731 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 733 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 734 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 737 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 738 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 739 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 740 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 742 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 743 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 748 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 749 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 750 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 751 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 752 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 754 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 755 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 760 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 761 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 762 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 763 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 765 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return 0; }
# 766 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 792 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 793 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 794 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 795 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 798 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 799 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 800 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 801 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 806 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 807 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 808 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 809 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 810 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 815 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 816 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 817 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 818 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 821 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 822 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 823 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 824 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 827 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 828 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 829 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 830 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 833 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 834 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 835 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 836 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 839 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 840 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 841 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 842 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 843 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 846 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 847 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__mutex)
# 848 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 849 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 850 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 853 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 854 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__mutex, const __gthread_time_t *
# 855 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
__abs_timeout)
# 856 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 857 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 858 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 861 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 862 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
{
# 863 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 864 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/gthr-default.h" 3
}
# 32 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/atomic_word.h" 3
typedef int _Atomic_word;
# 37 "/usr/include/c++/4.4/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 46 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ return __sync_fetch_and_add_4(__mem, __val); }
# 49 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 50 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ __sync_fetch_and_add_4(__mem, __val); }
# 62 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 63 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 64 "/usr/include/c++/4.4/ext/atomicity.h" 3
_Atomic_word __result = (*__mem);
# 65 "/usr/include/c++/4.4/ext/atomicity.h" 3
(*__mem) += __val;
# 66 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __result;
# 67 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 70 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 71 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 74 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 75 "/usr/include/c++/4.4/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 76 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 78 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 79 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 81 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 85 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 88 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 89 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 90 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 92 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 93 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 95 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 99 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 101 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 46 "/usr/include/c++/4.4/new" 3
namespace std {
# 54 "/usr/include/c++/4.4/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/4.4/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/4.4/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/4.4/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/4.4/new" 3
};
# 67 "/usr/include/c++/4.4/new" 3
struct nothrow_t { };
# 69 "/usr/include/c++/4.4/new" 3
extern const nothrow_t nothrow;
# 73 "/usr/include/c++/4.4/new" 3
typedef void (*new_handler)(void);
# 77 "/usr/include/c++/4.4/new" 3
new_handler set_new_handler(new_handler) throw();
# 78 "/usr/include/c++/4.4/new" 3
}
# 91 "/usr/include/c++/4.4/new" 3
void *operator new(size_t) throw(std::bad_alloc);
# 92 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t) throw(std::bad_alloc);
# 93 "/usr/include/c++/4.4/new" 3
void operator delete(void *) throw();
# 94 "/usr/include/c++/4.4/new" 3
void operator delete[](void *) throw();
# 95 "/usr/include/c++/4.4/new" 3
void *operator new(size_t, const std::nothrow_t &) throw();
# 96 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t, const std::nothrow_t &) throw();
# 97 "/usr/include/c++/4.4/new" 3
void operator delete(void *, const std::nothrow_t &) throw();
# 98 "/usr/include/c++/4.4/new" 3
void operator delete[](void *, const std::nothrow_t &) throw();
# 101 "/usr/include/c++/4.4/new" 3
inline void *operator new(size_t, void *__p) throw() { return __p; }
# 102 "/usr/include/c++/4.4/new" 3
inline void *operator new[](size_t, void *__p) throw() { return __p; }
# 105 "/usr/include/c++/4.4/new" 3
inline void operator delete(void *, void *) throw() { }
# 106 "/usr/include/c++/4.4/new" 3
inline void operator delete[](void *, void *) throw() { }
# 37 "/usr/include/c++/4.4/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::size_t;
# 40 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 50 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    class new_allocator
    {
    public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef new_allocator < _Tp1 > other; };

      new_allocator ( ) throw ( ) { }

      new_allocator ( const new_allocator & ) throw ( ) { }

      template < typename _Tp1 >
        new_allocator ( const new_allocator < _Tp1 > & ) throw ( ) { }

      ~ new_allocator ( ) throw ( ) { }

      pointer
      address ( reference __x ) const { return & __x; }

      const_pointer
      address ( const_reference __x ) const { return & __x; }



      pointer
      allocate ( size_type __n, const void * = 0 )
      {
 if ( __builtin_expect ( __n > this -> max_size ( ), false ) )
   std :: __throw_bad_alloc ( );

 return static_cast < _Tp * > ( :: operator new ( __n * sizeof ( _Tp ) ) );
      }


      void
      deallocate ( pointer __p, size_type )
      { :: operator delete ( __p ); }

      size_type
      max_size ( ) const throw ( )
      { return size_t ( - 1 ) / sizeof ( _Tp ); }



      void
      construct ( pointer __p, const _Tp & __val )
      { :: new ( ( void * ) __p ) _Tp ( __val ); }

      void
      destroy ( pointer __p ) { __p -> ~ _Tp ( ); }
    };
# 118 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return true; }
# 123 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return false; }
# 128 "/usr/include/c++/4.4/ext/new_allocator.h" 3
}
# 50 "/usr/include/c++/4.4/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp> class allocator;
# 64 "/usr/include/c++/4.4/bits/allocator.h" 3
template<> class allocator< void> {
# 67 "/usr/include/c++/4.4/bits/allocator.h" 3
public: typedef size_t size_type;
# 68 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 69 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void *pointer;
# 70 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef const void *const_pointer;
# 71 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void value_type;
# 73 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp1>
# 74 "/usr/include/c++/4.4/bits/allocator.h" 3
struct rebind {
# 75 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 76 "/usr/include/c++/4.4/bits/allocator.h" 3
};
# 85 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    class allocator : public __gnu_cxx :: new_allocator < _Tp >
    {
   public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef allocator < _Tp1 > other; };

      allocator ( ) throw ( ) { }

      allocator ( const allocator & __a ) throw ( )
      : __gnu_cxx :: new_allocator < _Tp > ( __a ) { }

      template < typename _Tp1 >
        allocator ( const allocator < _Tp1 > & ) throw ( ) { }

      ~ allocator ( ) throw ( ) { }


    };
# 114 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator == ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return true; }
# 119 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return true; }
# 124 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator != ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return false; }
# 129 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return false; }
# 138 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< char> ;
# 139 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 146 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_swap
    { static void _S_do_it ( _Alloc &, _Alloc & ) { } };
# 150 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_swap < _Alloc, false >
    {
      static void
      _S_do_it ( _Alloc & __one, _Alloc & __two )
      {

 if ( __one != __two )
   swap ( __one, __two );
      }
    };
# 163 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_neq
    {
      static bool
      _S_do_it ( const _Alloc &, const _Alloc & )
      { return false; }
    };
# 171 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_neq < _Alloc, false >
    {
      static bool
      _S_do_it ( const _Alloc & __one, const _Alloc & __two )
      { return __one != __two; }
    };
# 179 "/usr/include/c++/4.4/bits/allocator.h" 3
}
# 32 "/usr/include/c++/4.4/cxxabi-forced.h" 3
namespace __cxxabiv1 {
# 41 "/usr/include/c++/4.4/cxxabi-forced.h" 3
class __forced_unwind {
# 43 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual ~__forced_unwind() throw();
# 44 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual void __pure_dummy() = 0;
# 45 "/usr/include/c++/4.4/cxxabi-forced.h" 3
};
# 46 "/usr/include/c++/4.4/cxxabi-forced.h" 3
}
# 38 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_write ( basic_ostream < _CharT, _Traits > & __out,
      const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const streamsize __put = __out . rdbuf ( ) -> sputn ( __s, __n );
      if ( __put != __n )
 __out . setstate ( __ios_base :: badbit );
    }
# 53 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_fill ( basic_ostream < _CharT, _Traits > & __out, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const _CharT __c = __out . fill ( );
      for (; __n > 0; -- __n )
 {
   const typename _Traits :: int_type __put = __out . rdbuf ( ) -> sputc ( __c );
   if ( _Traits :: eq_int_type ( __put, _Traits :: eof ( ) ) )
     {
       __out . setstate ( __ios_base :: badbit );
       break;
     }
 }
    }
# 72 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    __ostream_insert ( basic_ostream < _CharT, _Traits > & __out,
       const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      typename __ostream_type :: sentry __cerb ( __out );
      if ( __cerb )
 {
   try
     {
       const streamsize __w = __out . width ( );
       if ( __w > __n )
  {
    const bool __left = ( ( __out . flags ( )
     & __ios_base :: adjustfield )
           == __ios_base :: left );
    if ( ! __left )
      __ostream_fill ( __out, __w - __n );
    if ( __out . good ( ) )
      __ostream_write ( __out, __s, __n );
    if ( __left && __out . good ( ) )
      __ostream_fill ( __out, __w - __n );
  }
       else
  __ostream_write ( __out, __s, __n );
       __out . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( __ios_base :: badbit ); }
 }
      return __out;
    }
# 117 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< char> &__ostream_insert(basic_ostream< char> & , const char * , streamsize );
# 120 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t> &__ostream_insert(basic_ostream< wchar_t> & , const wchar_t * , streamsize );
# 125 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
}
# 60 "/usr/include/c++/4.4/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 99 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 100 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct unary_function {
# 102 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg argument_type;
# 105 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 106 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 111 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 112 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct binary_function {
# 114 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 117 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 118 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 119 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct plus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x + __y; }
    };
# 143 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct minus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x - __y; }
    };
# 152 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct multiplies : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x * __y; }
    };
# 161 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct divides : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x / __y; }
    };
# 170 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct modulus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x % __y; }
    };
# 179 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct negate : public unary_function < _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x ) const
      { return - __x; }
    };
# 198 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x == __y; }
    };
# 207 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct not_equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x != __y; }
    };
# 216 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x > __y; }
    };
# 225 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x < __y; }
    };
# 234 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x >= __y; }
    };
# 243 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x <= __y; }
    };
# 262 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_and : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x && __y; }
    };
# 271 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_or : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x || __y; }
    };
# 280 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_not : public unary_function < _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x ) const
      { return ! __x; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_and : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x & __y; }
    };
# 299 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_or : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x | __y; }
    };
# 307 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_xor : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x ^ __y; }
    };
# 345 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class unary_negate
    : public unary_function < typename _Predicate :: argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      unary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: argument_type & __x ) const
      { return ! _M_pred ( __x ); }
    };
# 362 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline unary_negate < _Predicate >
    not1 ( const _Predicate & __pred )
    { return unary_negate < _Predicate > ( __pred ); }
# 368 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class binary_negate
    : public binary_function < typename _Predicate :: first_argument_type,
        typename _Predicate :: second_argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      binary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: first_argument_type & __x,
   const typename _Predicate :: second_argument_type & __y ) const
      { return ! _M_pred ( __x, __y ); }
    };
# 387 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline binary_negate < _Predicate >
    not2 ( const _Predicate & __pred )
    { return binary_negate < _Predicate > ( __pred ); }
# 416 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    class pointer_to_unary_function : public unary_function < _Arg, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg );

    public :
      pointer_to_unary_function ( ) { }

      explicit
      pointer_to_unary_function ( _Result ( * __x ) ( _Arg ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg __x ) const
      { return _M_ptr ( __x ); }
    };
# 435 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    inline pointer_to_unary_function < _Arg, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg ) )
    { return pointer_to_unary_function < _Arg, _Result > ( __x ); }
# 441 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    class pointer_to_binary_function
    : public binary_function < _Arg1, _Arg2, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg1, _Arg2 );

    public :
      pointer_to_binary_function ( ) { }

      explicit
      pointer_to_binary_function ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg1 __x, _Arg2 __y ) const
      { return _M_ptr ( __x, __y ); }
    };
# 461 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    inline pointer_to_binary_function < _Arg1, _Arg2, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
    { return pointer_to_binary_function < _Arg1, _Arg2, _Result > ( __x ); }
# 467 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct _Identity : public unary_function < _Tp, _Tp >
    {
      _Tp &
      operator ( ) ( _Tp & __x ) const
      { return __x; }

      const _Tp &
      operator ( ) ( const _Tp & __x ) const
      { return __x; }
    };
# 479 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select1st : public unary_function < _Pair,
           typename _Pair :: first_type >
    {
      typename _Pair :: first_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . first; }

      const typename _Pair :: first_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . first; }
    };
# 492 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select2nd : public unary_function < _Pair,
           typename _Pair :: second_type >
    {
      typename _Pair :: second_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . second; }

      const typename _Pair :: second_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . second; }
    };
# 523 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_t : public unary_function < _Tp *, _Ret >
    {
    public :
      explicit
      mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
    };
# 541 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_t : public unary_function < const _Tp *, _Ret >
    {
    public :
      explicit
      const_mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 559 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
  };
# 577 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      const_mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 595 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_t : public binary_function < _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 613 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_t : public binary_function < const _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 631 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 649 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 667 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_t < _Ret, _Tp > ( __f ); }
# 672 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_t < _Ret, _Tp > ( __f ); }
# 677 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 682 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 687 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 692 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 697 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 702 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 709 "/usr/include/c++/4.4/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/4.4/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder1st
    : public unary_function < typename _Operation :: second_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: first_argument_type value;

    public :
      binder1st ( const _Operation & __x,
  const typename _Operation :: first_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }
    };
# 122 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder1st < _Operation >
    bind1st ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: first_argument_type _Arg1_type;
      return binder1st < _Operation > ( __fn, _Arg1_type ( __x ) );
    }
# 131 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder2nd
    : public unary_function < typename _Operation :: first_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: second_argument_type value;

    public :
      binder2nd ( const _Operation & __x,
  const typename _Operation :: second_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }
    };
# 157 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder2nd < _Operation >
    bind2nd ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: second_argument_type _Arg2_type;
      return binder2nd < _Operation > ( __fn, _Arg2_type ( __x ) );
    }
# 166 "/usr/include/c++/4.4/backward/binders.h" 3
}
# 45 "/usr/include/c++/4.4/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 103 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    class basic_string
    {
      typedef typename _Alloc :: template rebind < _CharT > :: other _CharT_alloc_type;


    public :
      typedef _Traits traits_type;
      typedef typename _Traits :: char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _CharT_alloc_type :: size_type size_type;
      typedef typename _CharT_alloc_type :: difference_type difference_type;
      typedef typename _CharT_alloc_type :: reference reference;
      typedef typename _CharT_alloc_type :: const_reference const_reference;
      typedef typename _CharT_alloc_type :: pointer pointer;
      typedef typename _CharT_alloc_type :: const_pointer const_pointer;
      typedef __gnu_cxx :: __normal_iterator < pointer, basic_string > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, basic_string >
                                                            const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;

    private :

      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc :: template rebind < char > :: other _Raw_bytes_alloc;

 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage [ ];

        static _Rep &
        _S_empty_rep ( )
        {



   void * __p = reinterpret_cast < void * > ( & _S_empty_rep_storage );
   return * reinterpret_cast < _Rep * > ( __p );
 }

        bool
 _M_is_leaked ( ) const
        { return this -> _M_refcount < 0; }

        bool
 _M_is_shared ( ) const
        { return this -> _M_refcount > 0; }

        void
 _M_set_leaked ( )
        { this -> _M_refcount = - 1; }

        void
 _M_set_sharable ( )
        { this -> _M_refcount = 0; }

 void
 _M_set_length_and_sharable ( size_type __n )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     {
       this -> _M_set_sharable ( );
       this -> _M_length = __n;
       traits_type :: assign ( this -> _M_refdata ( ) [ __n ], _S_terminal );


     }
 }

 _CharT *
 _M_refdata ( ) throw ( )
 { return reinterpret_cast < _CharT * > ( this + 1 ); }

 _CharT *
 _M_grab ( const _Alloc & __alloc1, const _Alloc & __alloc2 )
 {
   return ( ! _M_is_leaked ( ) && __alloc1 == __alloc2 )
           ? _M_refcopy ( ) : _M_clone ( __alloc1 );
 }


 static _Rep *
 _S_create ( size_type, size_type, const _Alloc & );

 void
 _M_dispose ( const _Alloc & __a )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     if ( __gnu_cxx :: __exchange_and_add_dispatch ( & this -> _M_refcount,
             - 1 ) <= 0 )
       _M_destroy ( __a );
 }

 void
 _M_destroy ( const _Alloc & ) throw ( );

 _CharT *
 _M_refcopy ( ) throw ( )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

            __gnu_cxx :: __atomic_add_dispatch ( & this -> _M_refcount, 1 );
   return _M_refdata ( );
 }

 _CharT *
 _M_clone ( const _Alloc &, size_type __res = 0 );
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider ( _CharT * __dat, const _Alloc & __a )
 : _Alloc ( __a ), _M_p ( __dat ) { }

 _CharT * _M_p;
      };

    public :




      static const size_type npos = static_cast < size_type > ( - 1 );

    private :

      mutable _Alloc_hider _M_dataplus;

      _CharT *
      _M_data ( ) const
      { return _M_dataplus . _M_p; }

      _CharT *
      _M_data ( _CharT * __p )
      { return ( _M_dataplus . _M_p = __p ); }

      _Rep *
      _M_rep ( ) const
      { return & ( ( reinterpret_cast < _Rep * > ( _M_data ( ) ) ) [ - 1 ] ); }



      iterator
      _M_ibegin ( ) const
      { return iterator ( _M_data ( ) ); }

      iterator
      _M_iend ( ) const
      { return iterator ( _M_data ( ) + this -> size ( ) ); }

      void
      _M_leak ( )
      {
 if ( ! _M_rep ( ) -> _M_is_leaked ( ) )
   _M_leak_hard ( );
      }

      size_type
      _M_check ( size_type __pos, const char * __s ) const
      {
 if ( __pos > this -> size ( ) )
   __throw_out_of_range ( ( __s ) );
 return __pos;
      }

      void
      _M_check_length ( size_type __n1, size_type __n2, const char * __s ) const
      {
 if ( this -> max_size ( ) - ( this -> size ( ) - __n1 ) < __n2 )
   __throw_length_error ( ( __s ) );
      }


      size_type
      _M_limit ( size_type __pos, size_type __off ) const
      {
 const bool __testoff = __off < this -> size ( ) - __pos;
 return __testoff ? __off : this -> size ( ) - __pos;
      }


      bool
      _M_disjunct ( const _CharT * __s ) const
      {
 return ( less < const _CharT * > ( ) ( __s, _M_data ( ) )
  || less < const _CharT * > ( ) ( _M_data ( ) + this -> size ( ), __s ) );
      }



      static void
      _M_copy ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: copy ( __d, __s, __n );
      }

      static void
      _M_move ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: move ( __d, __s, __n );
      }

      static void
      _M_assign ( _CharT * __d, size_type __n, _CharT __c )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, __c );
 else
   traits_type :: assign ( __d, __n, __c );
      }



      template < class _Iterator >
        static void
        _S_copy_chars ( _CharT * __p, _Iterator __k1, _Iterator __k2 )
        {
   for (; __k1 != __k2; ++ __k1, ++ __p )
     traits_type :: assign ( * __p, * __k1 );
 }

      static void
      _S_copy_chars ( _CharT * __p, iterator __k1, iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, const_iterator __k1, const_iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, _CharT * __k1, _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static void
      _S_copy_chars ( _CharT * __p, const _CharT * __k1, const _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static int
      _S_compare ( size_type __n1, size_type __n2 )
      {
 const difference_type __d = difference_type ( __n1 - __n2 );

 if ( __d > __gnu_cxx :: __numeric_traits < int > :: __max )
   return __gnu_cxx :: __numeric_traits < int > :: __max;
 else if ( __d < __gnu_cxx :: __numeric_traits < int > :: __min )
   return __gnu_cxx :: __numeric_traits < int > :: __min;
 else
   return int ( __d );
      }

      void
      _M_mutate ( size_type __pos, size_type __len1, size_type __len2 );

      void
      _M_leak_hard ( );

      static _Rep &
      _S_empty_rep ( )
      { return _Rep :: _S_empty_rep ( ); }

    public :







      inline
      basic_string ( );




      explicit
      basic_string ( const _Alloc & __a );






      basic_string ( const basic_string & __str );






      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n = npos );







      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n, const _Alloc & __a );

      basic_string ( const _CharT * __s, size_type __n,
     const _Alloc & __a = _Alloc ( ) );





      basic_string ( const _CharT * __s, const _Alloc & __a = _Alloc ( ) );






      basic_string ( size_type __n, _CharT __c, const _Alloc & __a = _Alloc ( ) );

      template < class _InputIterator >
        basic_string ( _InputIterator __beg, _InputIterator __end,
       const _Alloc & __a = _Alloc ( ) );




      ~ basic_string ( )
      { _M_rep ( ) -> _M_dispose ( this -> get_allocator ( ) ); }





      basic_string &
      operator = ( const basic_string & __str )
      { return this -> assign ( __str ); }





      basic_string &
      operator = ( const _CharT * __s )
      { return this -> assign ( __s ); }

      basic_string &
      operator = ( _CharT __c )
      {
 this -> assign ( 1, __c );
 return * this;
      }

      iterator
      begin ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) );
      }





      const_iterator
      begin ( ) const
      { return const_iterator ( _M_data ( ) ); }





      iterator
      end ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) + this -> size ( ) );
      }





      const_iterator
      end ( ) const
      { return const_iterator ( _M_data ( ) + this -> size ( ) ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( this -> end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( this -> end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( this -> begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( this -> begin ( ) ); }

    public :



      size_type
      size ( ) const
      { return _M_rep ( ) -> _M_length; }



      size_type
      length ( ) const
      { return _M_rep ( ) -> _M_length; }


      size_type
      max_size ( ) const
      { return _Rep :: _S_max_size; }

      void
      resize ( size_type __n, _CharT __c );

      void
      resize ( size_type __n )
      { this -> resize ( __n, _CharT ( ) ); }





      size_type
      capacity ( ) const
      { return _M_rep ( ) -> _M_capacity; }

      void
      reserve ( size_type __res_arg = 0 );




      void
      clear ( )
      { _M_mutate ( 0, this -> size ( ), 0 ); }




      bool
      empty ( ) const
      { return this -> size ( ) == 0; }

      const_reference
      operator [ ] ( size_type __pos ) const
      {
 ;
 return _M_data ( ) [ __pos ];
      }

      reference
      operator [ ] ( size_type __pos )
      {

 ;

 ;
 _M_leak ( );
 return _M_data ( ) [ __pos ];
      }

      const_reference
      at ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 return _M_data ( ) [ __n ];
      }

      reference
      at ( size_type __n )
      {
 if ( __n >= size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 _M_leak ( );
 return _M_data ( ) [ __n ];
      }







      basic_string &
      operator += ( const basic_string & __str )
      { return this -> append ( __str ); }






      basic_string &
      operator += ( const _CharT * __s )
      { return this -> append ( __s ); }






      basic_string &
      operator += ( _CharT __c )
      {
 this -> push_back ( __c );
 return * this;
      }

      basic_string &
      append ( const basic_string & __str );

      basic_string &
      append ( const basic_string & __str, size_type __pos, size_type __n );







      basic_string &
      append ( const _CharT * __s, size_type __n );






      basic_string &
      append ( const _CharT * __s )
      {
 ;
 return this -> append ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      append ( size_type __n, _CharT __c );

      template < class _InputIterator >
        basic_string &
        append ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_iend ( ), _M_iend ( ), __first, __last ); }





      void
      push_back ( _CharT __c )
      {
 const size_type __len = 1 + this -> size ( );
 if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
   this -> reserve ( __len );
 traits_type :: assign ( _M_data ( ) [ this -> size ( ) ], __c );
 _M_rep ( ) -> _M_set_length_and_sharable ( __len );
      }






      basic_string &
      assign ( const basic_string & __str );

      basic_string &
      assign ( const basic_string & __str, size_type __pos, size_type __n )
      { return this -> assign ( __str . _M_data ( )
       + __str . _M_check ( __pos, "basic_string::assign" ),
       __str . _M_limit ( __pos, __n ) ); }

      basic_string &
      assign ( const _CharT * __s, size_type __n );

      basic_string &
      assign ( const _CharT * __s )
      {
 ;
 return this -> assign ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      assign ( size_type __n, _CharT __c )
      { return _M_replace_aux ( size_type ( 0 ), this -> size ( ), __n, __c ); }

      template < class _InputIterator >
        basic_string &
        assign ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_ibegin ( ), _M_iend ( ), __first, __last ); }

      void
      insert ( iterator __p, size_type __n, _CharT __c )
      { this -> replace ( __p, __p, __n, __c ); }

      template < class _InputIterator >
        void
        insert ( iterator __p, _InputIterator __beg, _InputIterator __end )
        { this -> replace ( __p, __p, __beg, __end ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str )
      { return this -> insert ( __pos1, __str, size_type ( 0 ), __str . size ( ) ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str,
      size_type __pos2, size_type __n )
      { return this -> insert ( __pos1, __str . _M_data ( )
       + __str . _M_check ( __pos2, "basic_string::insert" ),
       __str . _M_limit ( __pos2, __n ) ); }

      basic_string &
      insert ( size_type __pos, const _CharT * __s, size_type __n );

      basic_string &
      insert ( size_type __pos, const _CharT * __s )
      {
 ;
 return this -> insert ( __pos, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      insert ( size_type __pos, size_type __n, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::insert" ),
         size_type ( 0 ), __n, __c ); }

      iterator
      insert ( iterator __p, _CharT __c )
      {
 ;
 const size_type __pos = __p - _M_ibegin ( );
 _M_replace_aux ( __pos, size_type ( 0 ), size_type ( 1 ), __c );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      erase ( size_type __pos = 0, size_type __n = npos )
      {
 _M_mutate ( _M_check ( __pos, "basic_string::erase" ),
    _M_limit ( __pos, __n ), size_type ( 0 ) );
 return * this;
      }

      iterator
      erase ( iterator __position )
      {
 ;

 const size_type __pos = __position - _M_ibegin ( );
 _M_mutate ( __pos, size_type ( 1 ), size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      iterator
      erase ( iterator __first, iterator __last );

      basic_string &
      replace ( size_type __pos, size_type __n, const basic_string & __str )
      { return this -> replace ( __pos, __n, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 )
      { return this -> replace ( __pos1, __n1, __str . _M_data ( )
        + __str . _M_check ( __pos2, "basic_string::replace" ),
        __str . _M_limit ( __pos2, __n2 ) ); }

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 );

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s )
      {
 ;
 return this -> replace ( __pos, __n1, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( size_type __pos, size_type __n1, size_type __n2, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::replace" ),
         _M_limit ( __pos, __n1 ), __n2, __c ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const basic_string & __str )
      { return this -> replace ( __i1, __i2, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s, size_type __n )
      {
 ;

 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1, __s, __n );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s )
      {
 ;
 return this -> replace ( __i1, __i2, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, size_type __n, _CharT __c )
      {
 ;

 return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __c );
      }

      template < class _InputIterator >
        basic_string &
        replace ( iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2 )
        {
   ;

   ;
   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   return _M_replace_dispatch ( __i1, __i2, __k1, __k2, _Integral ( ) );
 }



      basic_string &
      replace ( iterator __i1, iterator __i2, _CharT * __k1, _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const _CharT * __k1, const _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, iterator __k1, iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

    private :
      template < class _Integer >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type )
        { return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __val ); }

      template < class _InputIterator >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type );

      basic_string &
      _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c );

      basic_string &
      _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
        size_type __n2 );



      template < class _InIterator >
        static _CharT *
        _S_construct_aux ( _InIterator __beg, _InIterator __end,
    const _Alloc & __a, __false_type )
 {
          typedef typename iterator_traits < _InIterator > :: iterator_category _Tag;
          return _S_construct ( __beg, __end, __a, _Tag ( ) );
 }



      template < class _Integer >
        static _CharT *
        _S_construct_aux ( _Integer __beg, _Integer __end,
    const _Alloc & __a, __true_type )
        { return _S_construct ( static_cast < size_type > ( __beg ), __end, __a ); }

      template < class _InIterator >
        static _CharT *
        _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a )
 {
   typedef typename std :: __is_integer < _InIterator > :: __type _Integral;
   return _S_construct_aux ( __beg, __end, __a, _Integral ( ) );
        }


      template < class _InIterator >
        static _CharT *
         _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
        input_iterator_tag );



      template < class _FwdIterator >
        static _CharT *
        _S_construct ( _FwdIterator __beg, _FwdIterator __end, const _Alloc & __a,
       forward_iterator_tag );

      static _CharT *
      _S_construct ( size_type __req, _CharT __c, const _Alloc & __a );

    public :

      size_type
      copy ( _CharT * __s, size_type __n, size_type __pos = 0 ) const;

      void
      swap ( basic_string & __s );

      const _CharT *
      c_str ( ) const
      { return _M_data ( ); }







      const _CharT *
      data ( ) const
      { return _M_data ( ); }




      allocator_type
      get_allocator ( ) const
      { return _M_dataplus; }

      size_type
      find ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      rfind ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> rfind ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      rfind ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      rfind ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> rfind ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      rfind ( _CharT __c, size_type __pos = npos ) const;

      size_type
      find_first_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_first_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_of ( _CharT __c, size_type __pos = 0 ) const
      { return this -> find ( __c, __pos ); }

      size_type
      find_last_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_last_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_of ( _CharT __c, size_type __pos = npos ) const
      { return this -> rfind ( __c, __pos ); }

      size_type
      find_first_not_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos,
   size_type __n ) const;

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_not_of ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      find_last_not_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos,
         size_type __n ) const;

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_not_of ( _CharT __c, size_type __pos = npos ) const;

      basic_string
      substr ( size_type __pos = 0, size_type __n = npos ) const
      { return basic_string ( * this,
       _M_check ( __pos, "basic_string::substr" ), __n ); }

      int
      compare ( const basic_string & __str ) const
      {
 const size_type __size = this -> size ( );
 const size_type __osize = __str . size ( );
 const size_type __len = std :: min ( __size, __osize );

 int __r = traits_type :: compare ( _M_data ( ), __str . data ( ), __len );
 if ( ! __r )
   __r = _S_compare ( __size, __osize );
 return __r;
      }

      int
      compare ( size_type __pos, size_type __n, const basic_string & __str ) const;

      int
      compare ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 ) const;

      int
      compare ( const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 ) const;
  };
# 2143 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( )

    : _M_dataplus ( _S_empty_rep ( ) . _M_refdata ( ), _Alloc ( ) ) { }
# 2159 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2175 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2186 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2196 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
      const _CharT * __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2212 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs, _CharT __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str ( __lhs );
      __str . append ( __size_type ( 1 ), __rhs );
      return __str;
    }
# 2230 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2236 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT >
    inline
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value, bool > :: __type
    operator == ( const basic_string < _CharT > & __lhs,
        const basic_string < _CharT > & __rhs )
    { return ( __lhs . size ( ) == __rhs . size ( )
       && ! std :: char_traits < _CharT > :: compare ( __lhs . data ( ), __rhs . data ( ),
          __lhs . size ( ) ) ); }
# 2251 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) == 0; }
# 2263 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2276 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2288 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2300 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return ! ( __lhs == __rhs ); }
# 2313 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2325 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2337 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) > 0; }
# 2350 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2362 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2374 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) < 0; }
# 2387 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2399 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2411 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) >= 0; }
# 2424 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2436 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2448 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const _CharT * __lhs,
      const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) <= 0; }
# 2461 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline void
    swap ( basic_string < _CharT, _Traits, _Alloc > & __lhs,
  basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { __lhs . swap ( __rhs ); }
# 2478 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __is,
        basic_string < _CharT, _Traits, _Alloc > & __str );
# 2485 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char> &operator>>(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & );
# 2496 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __os,
        const basic_string < _CharT, _Traits, _Alloc > & __str )
    {


      return __ostream_insert ( __os, __str . data ( ), __str . size ( ) );
    }
# 2519 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim );
# 2536 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str )
    { return getline ( __is, __str, __is . widen ( '\n' ) ); }
# 2544 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char> &getline(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 2550 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< wchar_t> &getline(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 2554 "/usr/include/c++/4.4/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 51 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_max_size = ((((npos - sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base)) / sizeof(_CharT)) - 1) / 4);
# 53 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const _CharT
# 56 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_terminal = (_CharT());
# 58 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 60 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::npos;
# 64 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 66 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_empty_rep_storage[(((sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base) + sizeof(_CharT)) + sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::size_type)) - (1)) / sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::size_type)];
# 74 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     input_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 _CharT __buf [ 128 ];
 size_type __len = 0;
 while ( __beg != __end && __len < sizeof ( __buf ) / sizeof ( _CharT ) )
   {
     __buf [ __len ++ ] = * __beg;
     ++ __beg;
   }
 _Rep * __r = _Rep :: _S_create ( __len, size_type ( 0 ), __a );
 _M_copy ( __r -> _M_refdata ( ), __buf, __len );
 try
   {
     while ( __beg != __end )
       {
  if ( __len == __r -> _M_capacity )
    {

      _Rep * __another = _Rep :: _S_create ( __len + 1, __len, __a );
      _M_copy ( __another -> _M_refdata ( ), __r -> _M_refdata ( ), __len );
      __r -> _M_destroy ( __a );
      __r = __another;
    }
  __r -> _M_refdata ( ) [ __len ++ ] = * __beg;
  ++ __beg;
       }
   }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __len );
 return __r -> _M_refdata ( );
      }
# 120 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     forward_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 if ( __builtin_expect ( __gnu_cxx :: __is_null_pointer ( __beg )
        && __beg != __end, 0 ) )
   __throw_logic_error ( ( "basic_string::_S_construct NULL not valid" ) );

 const size_type __dnew = static_cast < size_type > ( std :: distance ( __beg,
              __end ) );

 _Rep * __r = _Rep :: _S_create ( __dnew, size_type ( 0 ), __a );
 try
   { _S_copy_chars ( __r -> _M_refdata ( ), __beg, __end ); }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __dnew );
 return __r -> _M_refdata ( );
      }
# 151 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > ::
    _S_construct ( size_type __n, _CharT __c, const _Alloc & __a )
    {

      if ( __n == 0 && __a == _Alloc ( ) )
 return _S_empty_rep ( ) . _M_refdata ( );


      _Rep * __r = _Rep :: _S_create ( __n, size_type ( 0 ), __a );
      if ( __n )
 _M_assign ( __r -> _M_refdata ( ), __n, __c );

      __r -> _M_set_length_and_sharable ( __n );
      return __r -> _M_refdata ( );
    }
# 169 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str )
    : _M_dataplus ( __str . _M_rep ( ) -> _M_grab ( _Alloc ( __str . get_allocator ( ) ),
       __str . get_allocator ( ) ),
    __str . get_allocator ( ) )
    { }
# 177 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _Alloc & __a )
    : _M_dataplus ( _S_construct ( size_type ( ), _CharT ( ), __a ), __a )
    { }
# 183 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos, size_type __n )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, _Alloc ( ) ), _Alloc ( ) )
    { }
# 193 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos,
   size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, __a ), __a )
    { }
# 205 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s + __n, __a ), __a )
    { }
# 212 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s ? __s + traits_type :: length ( __s ) :
          __s + npos, __a ), __a )
    { }
# 219 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( size_type __n, _CharT __c, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __n, __c, __a ), __a )
    { }
# 226 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( _InputIterator __beg, _InputIterator __end, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __beg, __end, __a ), __a )
    { }
# 241 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const basic_string & __str )
    {
      if ( _M_rep ( ) != __str . _M_rep ( ) )
 {

   const allocator_type __a = this -> get_allocator ( );
   _CharT * __tmp = __str . _M_rep ( ) -> _M_grab ( __a, __str . get_allocator ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
 }
      return * this;
    }
# 257 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const _CharT * __s, size_type __n )
    {
      ;
      _M_check_length ( this -> size ( ), __n, "basic_string::assign" );
      if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
 return _M_replace_safe ( size_type ( 0 ), this -> size ( ), __s, __n );
      else
 {

   const size_type __pos = __s - _M_data ( );
   if ( __pos >= __n )
     _M_copy ( _M_data ( ), __s, __n );
   else if ( __pos )
     _M_move ( _M_data ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __n );
   return * this;
 }
     }
# 279 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( size_type __n, _CharT __c )
    {
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_assign ( _M_data ( ) + this -> size ( ), __n, __c );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 296 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const _CharT * __s, size_type __n )
    {
      ;
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     {
       if ( _M_disjunct ( __s ) )
  this -> reserve ( __len );
       else
  {
    const size_type __off = __s - _M_data ( );
    this -> reserve ( __len );
    __s = _M_data ( ) + __off;
  }
     }
   _M_copy ( _M_data ( ) + this -> size ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 323 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str )
    {
      const size_type __size = __str . size ( );
      if ( __size )
 {
   const size_type __len = __size + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ), __size );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 340 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str, size_type __pos, size_type __n )
    {
      __str . _M_check ( __pos, "basic_string::append" );
      __n = __str . _M_limit ( __pos, __n );
      if ( __n )
 {
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ) + __pos, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 358 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     insert ( size_type __pos, const _CharT * __s, size_type __n )
     {
       ;
       _M_check ( __pos, "basic_string::insert" );
       _M_check_length ( size_type ( 0 ), __n, "basic_string::insert" );
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, size_type ( 0 ), __s, __n );
       else
         {

           const size_type __off = __s - _M_data ( );
           _M_mutate ( __pos, 0, __n );
           __s = _M_data ( ) + __off;
           _CharT * __p = _M_data ( ) + __pos;
           if ( __s + __n <= __p )
             _M_copy ( __p, __s, __n );
           else if ( __s >= __p )
             _M_copy ( __p, __s + __n, __n );
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy ( __p, __s, __nleft );
               _M_copy ( __p + __nleft, __p + __n, __n - __nleft );
             }
           return * this;
         }
     }
# 389 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     typename basic_string < _CharT, _Traits, _Alloc > :: iterator
     basic_string < _CharT, _Traits, _Alloc > ::
     erase ( iterator __first, iterator __last )
     {
       ;





       const size_type __size = __last - __first;
       if ( __size )
  {
    const size_type __pos = __first - _M_ibegin ( );
    _M_mutate ( __pos, __size, size_type ( 0 ) );
    _M_rep ( ) -> _M_set_leaked ( );
    return iterator ( _M_data ( ) + __pos );
  }
       else
  return __first;
     }
# 412 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     replace ( size_type __pos, size_type __n1, const _CharT * __s,
      size_type __n2 )
     {
       ;
       _M_check ( __pos, "basic_string::replace" );
       __n1 = _M_limit ( __pos, __n1 );
       _M_check_length ( __n1, __n2, "basic_string::replace" );
       bool __left;
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, __n1, __s, __n2 );
       else if ( ( __left = __s + __n2 <= _M_data ( ) + __pos )
  || _M_data ( ) + __pos + __n1 <= __s )
  {

    size_type __off = __s - _M_data ( );
    __left ? __off : ( __off += __n2 - __n1 );
    _M_mutate ( __pos, __n1, __n2 );
    _M_copy ( _M_data ( ) + __pos, _M_data ( ) + __off, __n2 );
    return * this;
  }
       else
  {

    const basic_string __tmp ( __s, __n2 );
    return _M_replace_safe ( __pos, __n1, __tmp . _M_data ( ), __n2 );
  }
     }
# 443 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_destroy ( const _Alloc & __a ) throw ( )
    {
      const size_type __size = sizeof ( _Rep_base ) +
                        ( this -> _M_capacity + 1 ) * sizeof ( _CharT );
      _Raw_bytes_alloc ( __a ) . deallocate ( reinterpret_cast < char * > ( this ), __size );
    }
# 453 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_leak_hard ( )
    {

      if ( _M_rep ( ) == & _S_empty_rep ( ) )
 return;

      if ( _M_rep ( ) -> _M_is_shared ( ) )
 _M_mutate ( 0, 0, 0 );
      _M_rep ( ) -> _M_set_leaked ( );
    }
# 467 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_mutate ( size_type __pos, size_type __len1, size_type __len2 )
    {
      const size_type __old_size = this -> size ( );
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if ( __new_size > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
 {

   const allocator_type __a = get_allocator ( );
   _Rep * __r = _Rep :: _S_create ( __new_size, this -> capacity ( ), __a );

   if ( __pos )
     _M_copy ( __r -> _M_refdata ( ), _M_data ( ), __pos );
   if ( __how_much )
     _M_copy ( __r -> _M_refdata ( ) + __pos + __len2,
      _M_data ( ) + __pos + __len1, __how_much );

   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __r -> _M_refdata ( ) );
 }
      else if ( __how_much && __len1 != __len2 )
 {

   _M_move ( _M_data ( ) + __pos + __len2,
    _M_data ( ) + __pos + __len1, __how_much );
 }
      _M_rep ( ) -> _M_set_length_and_sharable ( __new_size );
    }
# 500 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    reserve ( size_type __res )
    {
      if ( __res != this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
        {

   if ( __res < this -> size ( ) )
     __res = this -> size ( );
   const allocator_type __a = get_allocator ( );
   _CharT * __tmp = _M_rep ( ) -> _M_clone ( __a, __res - this -> size ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
        }
    }
# 517 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    swap ( basic_string & __s )
    {
      if ( _M_rep ( ) -> _M_is_leaked ( ) )
 _M_rep ( ) -> _M_set_sharable ( );
      if ( __s . _M_rep ( ) -> _M_is_leaked ( ) )
 __s . _M_rep ( ) -> _M_set_sharable ( );
      if ( this -> get_allocator ( ) == __s . get_allocator ( ) )
 {
   _CharT * __tmp = _M_data ( );
   _M_data ( __s . _M_data ( ) );
   __s . _M_data ( __tmp );
 }

      else
 {
   const basic_string __tmp1 ( _M_ibegin ( ), _M_iend ( ),
        __s . get_allocator ( ) );
   const basic_string __tmp2 ( __s . _M_ibegin ( ), __s . _M_iend ( ),
        this -> get_allocator ( ) );
   * this = __tmp2;
   __s = __tmp1;
 }
    }
# 544 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: _Rep *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _S_create ( size_type __capacity, size_type __old_capacity,
       const _Alloc & __alloc )
    {


      if ( __capacity > _S_max_size )
 __throw_length_error ( ( "basic_string::_S_create" ) );

      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof ( void * );







      if ( __capacity > __old_capacity && __capacity < 2 * __old_capacity )
 __capacity = 2 * __old_capacity;




      size_type __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );

      const size_type __adj_size = __size + __malloc_header_size;
      if ( __adj_size > __pagesize && __capacity > __old_capacity )
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof ( _CharT );

   if ( __capacity > _S_max_size )
     __capacity = _S_max_size;
   __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );
 }



      void * __place = _Raw_bytes_alloc ( __alloc ) . allocate ( __size );
      _Rep * __p = new ( __place ) _Rep;
      __p -> _M_capacity = __capacity;







      __p -> _M_set_sharable ( );
      return __p;
    }
# 622 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_clone ( const _Alloc & __alloc, size_type __res )
    {

      const size_type __requested_cap = this -> _M_length + __res;
      _Rep * __r = _Rep :: _S_create ( __requested_cap, this -> _M_capacity,
      __alloc );
      if ( this -> _M_length )
 _M_copy ( __r -> _M_refdata ( ), _M_refdata ( ), this -> _M_length );

      __r -> _M_set_length_and_sharable ( this -> _M_length );
      return __r -> _M_refdata ( );
    }
# 638 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    resize ( size_type __n, _CharT __c )
    {
      const size_type __size = this -> size ( );
      _M_check_length ( __size, __n, "basic_string::resize" );
      if ( __size < __n )
 this -> append ( __n - __size, __c );
      else if ( __n < __size )
 this -> erase ( __n );

    }
# 652 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
      basic_string < _CharT, _Traits, _Alloc > &
      basic_string < _CharT, _Traits, _Alloc > ::
      _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type )
      {
 const basic_string __s ( __k1, __k2 );
 const size_type __n1 = __i2 - __i1;
 _M_check_length ( __n1, __s . size ( ), "basic_string::_M_replace_dispatch" );
 return _M_replace_safe ( __i1 - _M_ibegin ( ), __n1, __s . _M_data ( ),
          __s . size ( ) );
      }
# 666 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c )
    {
      _M_check_length ( __n1, __n2, "basic_string::_M_replace_aux" );
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_assign ( _M_data ( ) + __pos1, __n2, __c );
      return * this;
    }
# 679 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
      size_type __n2 )
    {
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_copy ( _M_data ( ) + __pos1, __s, __n2 );
      return * this;
    }
# 691 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      ;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      const __size_type __len = _Traits :: length ( __lhs );
      __string_type __str;
      __str . reserve ( __len + __rhs . size ( ) );
      __str . append ( __lhs, __len );
      __str . append ( __rhs );
      return __str;
    }
# 707 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs . size ( );
      __str . reserve ( __len + 1 );
      __str . append ( __size_type ( 1 ), __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 721 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    copy ( _CharT * __s, size_type __n, size_type __pos ) const
    {
      _M_check ( __pos, "basic_string::copy" );
      __n = _M_limit ( __pos, __n );
      ;
      if ( __n )
 _M_copy ( __s, _M_data ( ) + __pos, __n );

      return __n;
    }
# 735 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      const _CharT * __data = _M_data ( );

      if ( __n == 0 )
 return __pos <= __size ? __pos : npos;

      if ( __n <= __size )
 {
   for (; __pos <= __size - __n; ++ __pos )
     if ( traits_type :: eq ( __data [ __pos ], __s [ 0 ] )
  && traits_type :: compare ( __data + __pos + 1,
     __s + 1, __n - 1 ) == 0 )
       return __pos;
 }
      return npos;
    }
# 758 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( _CharT __c, size_type __pos ) const
    {
      size_type __ret = npos;
      const size_type __size = this -> size ( );
      if ( __pos < __size )
 {
   const _CharT * __data = _M_data ( );
   const size_type __n = __size - __pos;
   const _CharT * __p = traits_type :: find ( __data + __pos, __n, __c );
   if ( __p )
     __ret = __p - __data;
 }
      return __ret;
    }
# 776 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      if ( __n <= __size )
 {
   __pos = std :: min ( size_type ( __size - __n ), __pos );
   const _CharT * __data = _M_data ( );
   do
     {
       if ( traits_type :: compare ( __data + __pos, __s, __n ) == 0 )
  return __pos;
     }
   while ( __pos -- > 0 );
 }
      return npos;
    }
# 797 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   for ( ++ __size; __size -- > 0; )
     if ( traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
       return __size;
 }
      return npos;
    }
# 814 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __n && __pos < this -> size ( ); ++ __pos )
 {
   const _CharT * __p = traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] );
   if ( __p )
     return __pos;
 }
      return npos;
    }
# 829 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size && __n )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- != 0 );
 }
      return npos;
    }
# 850 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] ) )
   return __pos;
      return npos;
    }
# 862 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( _CharT __c, size_type __pos ) const
    {
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: eq ( _M_data ( ) [ __pos ], __c ) )
   return __pos;
      return npos;
    }
# 873 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 894 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 914 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n, const basic_string & __str ) const
    {
      _M_check ( __pos, "basic_string::compare" );
      __n = _M_limit ( __pos, __n );
      const size_type __osize = __str . size ( );
      const size_type __len = std :: min ( __n, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __str . data ( ), __len );
      if ( ! __r )
 __r = _S_compare ( __n, __osize );
      return __r;
    }
# 929 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos1, size_type __n1, const basic_string & __str,
     size_type __pos2, size_type __n2 ) const
    {
      _M_check ( __pos1, "basic_string::compare" );
      __str . _M_check ( __pos2, "basic_string::compare" );
      __n1 = _M_limit ( __pos1, __n1 );
      __n2 = __str . _M_limit ( __pos2, __n2 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos1,
         __str . data ( ) + __pos2, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 947 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( const _CharT * __s ) const
    {
      ;
      const size_type __size = this -> size ( );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __size, __osize );
      int __r = traits_type :: compare ( _M_data ( ), __s, __len );
      if ( ! __r )
 __r = _S_compare ( __size, __osize );
      return __r;
    }
# 962 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __n1, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __osize );
      return __r;
    }
# 978 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s,
     size_type __n2 ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 995 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in,
        basic_string < _CharT, _Traits, _Alloc > & __str )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;
      typedef ctype < _CharT > __ctype_type;
      typedef typename __ctype_type :: ctype_base __ctype_base;

      __size_type __extracted = 0;
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       __str . erase ( );
       _CharT __buf [ 128 ];
       __size_type __len = 0;
       const streamsize __w = __in . width ( );
       const __size_type __n = __w > 0 ? static_cast < __size_type > ( __w )
                                : __str . max_size ( );
       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( __ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    if ( __len == sizeof ( __buf ) / sizeof ( _CharT ) )
      {
        __str . append ( __buf, sizeof ( __buf ) / sizeof ( _CharT ) );
        __len = 0;
      }
    __buf [ __len ++ ] = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }
       __str . append ( __buf, __len );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }

      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1067 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __in,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str . max_size ( );
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, true );
      if ( __cerb )
 {
   try
     {
       __str . erase ( );
       const __int_type __idelim = _Traits :: to_int_type ( __delim );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! _Traits :: eq_int_type ( __c, __idelim ) )
  {
    __str += _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       else if ( _Traits :: eq_int_type ( __c, __idelim ) )
  {
    ++ __extracted;
    __in . rdbuf ( ) -> sbumpc ( );
  }
       else
  __err |= __ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }
      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1134 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< char, char_traits< char> , allocator< char> > ;
# 1135 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char> &operator>>(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1138 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< char> &operator<<(basic_ostream< char> & , const basic_string< char, char_traits< char> , allocator< char> > & );
# 1141 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 1144 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1149 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1150 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &operator>>(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1153 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t> &operator<<(basic_ostream< wchar_t> & , const basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1156 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 1159 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1165 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
}
# 45 "/usr/include/c++/4.4/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 61 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale {
# 66 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: typedef int category;
# 69 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class facet;
# 70 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class id;
# 71 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class _Impl;
# 73 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class facet;
# 74 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class _Impl;
# 76 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 80 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 84 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 97 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category none = 0;
# 98 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 99 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 100 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 101 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 102 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 103 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 104 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 116 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale() throw();
# 125 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & ) throw();
# 136 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(const char * );
# 150 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const char * , category );
# 163 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const locale & , category );
# 175 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale ( const locale & __other, _Facet * __f );
# 179 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~locale() throw();
# 190 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale &operator=(const locale & ) throw();
# 204 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale
      combine ( const locale & __other ) const;
# 214 "/usr/include/c++/4.4/bits/locale_classes.h" 3
string name() const;
# 224 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator==(const locale & ) const throw();
# 233 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 234 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 251 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Char, typename _Traits, typename _Alloc >
      bool
      operator ( ) ( const basic_string < _Char, _Traits, _Alloc > & __s1,
   const basic_string < _Char, _Traits, _Alloc > & __s2 ) const;
# 268 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static locale global(const locale &);
# 274 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale &classic();
# 278 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 281 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 284 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_global;
# 290 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 302 "/usr/include/c++/4.4/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 305 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 309 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 312 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize();
# 315 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 318 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 321 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_coalesce(const locale & , const locale & , category );
# 322 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 335 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::facet {
# 338 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 339 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 341 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 344 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 347 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 350 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 354 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 367 "/usr/include/c++/4.4/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = (0)) throw() : _M_refcount(((__refs) ? 1 : 0))
# 368 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 372 "/usr/include/c++/4.4/bits/locale_classes.h" 3
virtual ~facet();
# 375 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & , const char * , __c_locale = 0);
# 379 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & );
# 382 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & );
# 387 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 390 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *_S_get_c_name();
# 394 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 395 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 398 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 399 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 400 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 401 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 402 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 403 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 404 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 405 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 406 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 407 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 409 "/usr/include/c++/4.4/bits/locale_classes.h" 3
facet(const locale::facet &);
# 412 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale::facet &operator=(const locale::facet &);
# 413 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 426 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::id {
# 429 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 430 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 432 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 436 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 443 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable size_t _M_index;
# 446 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 449 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::id &);
# 451 "/usr/include/c++/4.4/bits/locale_classes.h" 3
id(const locale::id &);
# 457 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: id() { }
# 460 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_id() const;
# 461 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 465 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::_Impl {
# 469 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 470 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::facet;
# 472 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 476 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 480 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 485 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 486 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_facets;
# 487 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_facets_size;
# 488 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_caches;
# 489 "/usr/include/c++/4.4/bits/locale_classes.h" 3
char **_M_names;
# 490 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_ctype[];
# 491 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_numeric[];
# 492 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_collate[];
# 493 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_time[];
# 494 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_monetary[];
# 495 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_messages[];
# 496 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const *const _S_facet_categories[];
# 499 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 500 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 503 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 504 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 505 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 506 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 507 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 508 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 509 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 510 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 511 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 512 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 514 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &, size_t);
# 515 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 516 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 518 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~_Impl() throw();
# 520 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &);
# 523 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::_Impl &);
# 526 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool _M_check_same_name()
# 527 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 528 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool __ret = true;
# 529 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 531 "/usr/include/c++/4.4/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 532 "/usr/include/c++/4.4/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 533 "/usr/include/c++/4.4/bits/locale_classes.h" 3
return __ret;
# 534 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 537 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_categories(const locale::_Impl *, locale::category);
# 540 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_category(const locale::_Impl *, const locale::id *const *);
# 543 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_facet(const locale::_Impl *, const locale::id *);
# 546 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_facet(const locale::id *, const locale::facet *);
# 548 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      void
      _M_init_facet ( _Facet * __facet )
      { _M_install_facet ( & _Facet :: id, __facet ); }
# 554 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_cache(const locale::facet *, size_t);
# 555 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 569 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> bool has_facet(const locale & ) throw();
# 586 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> const _Facet &use_facet(const locale & );
# 603 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


    protected :


      __c_locale _M_c_locale_collate;

    public :

      static locale :: id id;

      explicit
      collate ( size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_get_c_locale ( ) )
      { }

      explicit
      collate ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_clone_c_locale ( __cloc ) )
      { }

      int
      compare ( const _CharT * __lo1, const _CharT * __hi1,
       const _CharT * __lo2, const _CharT * __hi2 ) const
      { return this -> do_compare ( __lo1, __hi1, __lo2, __hi2 ); }

      string_type
      transform ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_transform ( __lo, __hi ); }

      long
      hash ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_hash ( __lo, __hi ); }


      int
      _M_compare ( const _CharT *, const _CharT * ) const;

      size_t
      _M_transform ( _CharT *, const _CharT *, size_t ) const;

  protected :

      virtual
      ~ collate ( )
      { _S_destroy_c_locale ( _M_c_locale_collate ); }

      virtual int
      do_compare ( const _CharT * __lo1, const _CharT * __hi1,
   const _CharT * __lo2, const _CharT * __hi2 ) const;

      virtual string_type
      do_transform ( const _CharT * __lo, const _CharT * __hi ) const;

      virtual long
      do_hash ( const _CharT * __lo, const _CharT * __hi ) const;
    };
# 756 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 757 "/usr/include/c++/4.4/bits/locale_classes.h" 3
collate< _CharT> ::id;
# 762 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const;
# 766 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const;
# 771 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const;
# 775 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const;
# 779 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate_byname : public collate < _CharT >
    {
    public :


      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


      explicit
      collate_byname ( const char * __s, size_t __refs = 0 )
      : collate < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_collate );
     this -> _S_create_c_locale ( this -> _M_c_locale_collate, __s );
   }
      }

    protected :
      virtual
      ~ collate_byname ( ) { }
    };
# 806 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale ::
    locale ( const locale & __other, _Facet * __f )
    {
      _M_impl = new _Impl ( * __other . _M_impl, 1 );

      try
 { _M_impl -> _M_install_facet ( & _Facet :: id, __f ); }
      catch ( ... )
 {
   _M_impl -> _M_remove_reference ( );
   throw;
 }
      delete [ ] _M_impl -> _M_names [ 0 ];
      _M_impl -> _M_names [ 0 ] = 0;
    }
# 58 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale
    locale ::
    combine ( const locale & __other ) const
    {
      _Impl * __tmp = new _Impl ( * _M_impl, 1 );
      try
 {
   __tmp -> _M_replace_facet ( __other . _M_impl, & _Facet :: id );
 }
      catch ( ... )
 {
   __tmp -> _M_remove_reference ( );
   throw;
 }
      return locale ( __tmp );
    }
# 76 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    bool
    locale ::
    operator ( ) ( const basic_string < _CharT, _Traits, _Alloc > & __s1,
        const basic_string < _CharT, _Traits, _Alloc > & __s2 ) const
    {
      typedef std :: collate < _CharT > __collate_type;
      const __collate_type & __collate = use_facet < __collate_type > ( * this );
      return ( __collate . compare ( __s1 . data ( ), __s1 . data ( ) + __s1 . length ( ),
    __s2 . data ( ), __s2 . data ( ) + __s2 . length ( ) ) < 0 );
    }
# 89 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    bool
    has_facet ( const locale & __loc ) throw ( )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      return ( __i < __loc . _M_impl -> _M_facets_size

       && dynamic_cast < const _Facet * > ( __facets [ __i ] ) );



    }
# 103 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & __loc )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      if ( __i >= __loc . _M_impl -> _M_facets_size || ! __facets [ __i ] )
        __throw_bad_cast ( );

      return dynamic_cast < const _Facet & > ( * __facets [ __i ] );



    }
# 120 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > :: _M_compare ( const _CharT *, const _CharT * ) const
    { return 0; }
# 126 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    size_t
    collate < _CharT > :: _M_transform ( _CharT *, const _CharT *, size_t ) const
    { return 0; }
# 131 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > ::
    do_compare ( const _CharT * __lo1, const _CharT * __hi1,
        const _CharT * __lo2, const _CharT * __hi2 ) const
    {


      const string_type __one ( __lo1, __hi1 );
      const string_type __two ( __lo2, __hi2 );

      const _CharT * __p = __one . c_str ( );
      const _CharT * __pend = __one . data ( ) + __one . length ( );
      const _CharT * __q = __two . c_str ( );
      const _CharT * __qend = __two . data ( ) + __two . length ( );




      for (;; )
 {
   const int __res = _M_compare ( __p, __q );
   if ( __res )
     return __res;

   __p += char_traits < _CharT > :: length ( __p );
   __q += char_traits < _CharT > :: length ( __q );
   if ( __p == __pend && __q == __qend )
     return 0;
   else if ( __p == __pend )
     return - 1;
   else if ( __q == __qend )
     return 1;

   __p ++;
   __q ++;
 }
    }
# 170 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    typename collate < _CharT > :: string_type
    collate < _CharT > ::
    do_transform ( const _CharT * __lo, const _CharT * __hi ) const
    {
      string_type __ret;


      const string_type __str ( __lo, __hi );

      const _CharT * __p = __str . c_str ( );
      const _CharT * __pend = __str . data ( ) + __str . length ( );

      size_t __len = ( __hi - __lo ) * 2;

      _CharT * __c = new _CharT [ __len ];

      try
 {



   for (;; )
     {

       size_t __res = _M_transform ( __c, __p, __len );


       if ( __res >= __len )
  {
    __len = __res + 1;
    delete [ ] __c, __c = 0;
    __c = new _CharT [ __len ];
    __res = _M_transform ( __c, __p, __len );
  }

       __ret . append ( __c, __res );
       __p += char_traits < _CharT > :: length ( __p );
       if ( __p == __pend )
  break;

       __p ++;
       __ret . push_back ( _CharT ( ) );
     }
 }
      catch ( ... )
 {
   delete [ ] __c;
   throw;
 }

      delete [ ] __c;

      return __ret;
    }
# 226 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    long
    collate < _CharT > ::
    do_hash ( const _CharT * __lo, const _CharT * __hi ) const
    {
      unsigned long __val = 0;
      for (; __lo < __hi; ++ __lo )
 __val =
   * __lo + ( ( __val << 7 )
     | ( __val >> ( __gnu_cxx :: __numeric_traits < unsigned long > ::
    __digits - 7 ) ) );
      return static_cast < long > ( __val );
    }
# 244 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< char> ;
# 245 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< char> ;
# 247 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< char> &use_facet< collate< char> > (const locale &);
# 251 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< char> > (const locale &) throw();
# 256 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< wchar_t> ;
# 257 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< wchar_t> ;
# 259 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< wchar_t> &use_facet< collate< wchar_t> > (const locale &);
# 263 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< wchar_t> > (const locale &) throw();
# 269 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
}
# 54 "/usr/include/c++/4.4/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 62 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_boolalpha = 1,
# 63 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_dec,
# 64 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_fixed = 4,
# 65 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_hex = 8,
# 66 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_internal = 16,
# 67 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_left = 32,
# 68 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_oct = 64,
# 69 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_right = 128,
# 70 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_scientific = 256,
# 71 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showbase = 512,
# 72 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpoint = 1024,
# 73 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpos = 2048,
# 74 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_skipws = 4096,
# 75 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 76 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_uppercase = 16384,
# 77 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_adjustfield = 176,
# 78 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_basefield = 74,
# 79 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_floatfield = 260,
# 80 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536
# 81 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 84 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 85 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 88 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 89 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 92 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 93 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 96 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 97 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 100 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 101 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 104 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 105 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 108 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 109 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 112 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Openmode {
# 114 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_app = 1,
# 115 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ate,
# 116 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_bin = 4,
# 117 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_in = 8,
# 118 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_out = 16,
# 119 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_trunc = 32,
# 120 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_openmode_end = 65536
# 121 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 124 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 125 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 128 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 129 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 132 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 133 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 136 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 137 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 140 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 141 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 144 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 145 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 148 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator~(_Ios_Openmode __a)
# 149 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 152 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Iostate {
# 154 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_goodbit,
# 155 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_badbit,
# 156 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_eofbit,
# 157 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_failbit = 4,
# 158 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_iostate_end = 65536
# 159 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 162 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 163 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 166 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 167 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 170 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 171 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 174 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 175 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 178 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 179 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 182 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 183 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 186 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator~(_Ios_Iostate __a)
# 187 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 189 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 191 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_beg,
# 192 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_cur,
# 193 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_end,
# 194 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 195 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 207 "/usr/include/c++/4.4/bits/ios_base.h" 3
class ios_base {
# 217 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class failure : public exception {
# 223 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: explicit failure(const string & ) throw();
# 228 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~failure() throw();
# 231 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual const char *what() const throw();
# 234 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: string _M_msg;
# 235 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 263 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 266 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags boolalpha = ((fmtflags)1);
# 269 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags dec = ((fmtflags)2);
# 272 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags fixed = ((fmtflags)4);
# 275 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags hex = ((fmtflags)8);
# 280 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags internal = ((fmtflags)16);
# 284 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags left = ((fmtflags)32);
# 287 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags oct = ((fmtflags)64);
# 291 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags right = ((fmtflags)128);
# 294 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags scientific = ((fmtflags)256);
# 298 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showbase = ((fmtflags)512);
# 302 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpoint = ((fmtflags)1024);
# 305 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpos = ((fmtflags)2048);
# 308 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags skipws = ((fmtflags)4096);
# 311 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags unitbuf = ((fmtflags)8192);
# 315 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags uppercase = ((fmtflags)16384);
# 318 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags adjustfield = ((fmtflags)176);
# 321 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags basefield = ((fmtflags)74);
# 324 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags floatfield = ((fmtflags)260);
# 338 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 342 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate badbit = ((iostate)1);
# 345 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate eofbit = ((iostate)2);
# 350 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate failbit = ((iostate)4);
# 353 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate goodbit = ((iostate)0);
# 369 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 372 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode app = ((openmode)1);
# 375 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode ate = ((openmode)2);
# 380 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode binary = ((openmode)4);
# 383 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode in = ((openmode)8);
# 386 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode out = ((openmode)16);
# 389 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode trunc = ((openmode)32);
# 401 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 404 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir beg = ((seekdir)0);
# 407 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir cur = ((seekdir)1);
# 410 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir end = ((seekdir)2);
# 413 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int io_state;
# 414 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int open_mode;
# 415 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int seek_dir;
# 417 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streampos streampos;
# 418 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 427 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum event {
# 429 "/usr/include/c++/4.4/bits/ios_base.h" 3
erase_event,
# 430 "/usr/include/c++/4.4/bits/ios_base.h" 3
imbue_event,
# 431 "/usr/include/c++/4.4/bits/ios_base.h" 3
copyfmt_event
# 432 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 444 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef void (*event_callback)(event, ios_base &, int);
# 457 "/usr/include/c++/4.4/bits/ios_base.h" 3
void register_callback(event_callback , int );
# 464 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 465 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize _M_width;
# 466 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags _M_flags;
# 467 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_exception;
# 468 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 473 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Callback_list {
# 476 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_next;
# 477 "/usr/include/c++/4.4/bits/ios_base.h" 3
event_callback _M_fn;
# 478 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_index;
# 479 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 481 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 482 "/usr/include/c++/4.4/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 483 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ }
# 486 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 490 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_remove_reference()
# 491 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1); }
# 492 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 494 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 497 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_call_callbacks(event ) throw();
# 500 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_dispose_callbacks();
# 503 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Words {
# 505 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *_M_pword;
# 506 "/usr/include/c++/4.4/bits/ios_base.h" 3
long _M_iword;
# 507 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 508 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 511 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_word_zero;
# 515 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 516 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 519 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_word_size;
# 520 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words *_M_word;
# 523 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &_M_grow_words(int , bool );
# 526 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale _M_ios_locale;
# 529 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_init();
# 537 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class Init {
# 539 "/usr/include/c++/4.4/bits/ios_base.h" 3
friend class ios_base;
# 541 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: Init();
# 542 "/usr/include/c++/4.4/bits/ios_base.h" 3
~Init();
# 545 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 546 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 547 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 555 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags() const
# 556 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_flags; }
# 566 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 567 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 568 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 569 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 570 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 571 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 582 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 583 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 584 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 585 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 586 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 587 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 599 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 600 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 601 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 602 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 603 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 604 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 605 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 614 "/usr/include/c++/4.4/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 615 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 625 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision() const
# 626 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_precision; }
# 634 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 635 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 636 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_precision);
# 637 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_precision) = __prec;
# 638 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 639 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 648 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width() const
# 649 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_width; }
# 657 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 658 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 659 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_width);
# 660 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_width) = __wide;
# 661 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 662 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 676 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool sync_with_stdio(bool = (true));
# 688 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale imbue(const locale & );
# 699 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale getloc() const
# 700 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 710 "/usr/include/c++/4.4/bits/ios_base.h" 3
const locale &_M_getloc() const
# 711 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 729 "/usr/include/c++/4.4/bits/ios_base.h" 3
static int xalloc() throw();
# 745 "/usr/include/c++/4.4/bits/ios_base.h" 3
long &iword(int __ix)
# 746 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 747 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, true));
# 749 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_iword;
# 750 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 766 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *&pword(int __ix)
# 767 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 768 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, false));
# 770 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_pword;
# 771 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 782 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~ios_base();
# 785 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: ios_base();
# 790 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: ios_base(const ios_base &);
# 793 "/usr/include/c++/4.4/bits/ios_base.h" 3
ios_base &operator=(const ios_base &);
# 794 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 799 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 800 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 801 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 802 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 803 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 807 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 808 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 809 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 810 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 811 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 815 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 816 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 817 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 818 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 819 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 823 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 824 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 825 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 826 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 827 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 831 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 832 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 833 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 834 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 835 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 839 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 840 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 841 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 842 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 843 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 847 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 848 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 849 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 850 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 851 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 855 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 856 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 857 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 858 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 859 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 863 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 864 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 865 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 866 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 867 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 871 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 872 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 873 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 874 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 875 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 879 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 880 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 881 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 882 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 883 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 887 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 888 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 889 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 890 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 891 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 895 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 896 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 897 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 898 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 899 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 903 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 904 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 905 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 906 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 907 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 912 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 913 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 914 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 915 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 916 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 920 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 921 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 922 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 923 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 924 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 928 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 929 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 930 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 931 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 932 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 937 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 938 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 939 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 940 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 941 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 945 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 946 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 947 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 948 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 949 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 953 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 954 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 955 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 956 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 957 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 962 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 963 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 964 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 965 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 966 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 970 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 971 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 972 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 973 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 974 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 976 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 46 "/usr/include/c++/4.4/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > *,
     basic_streambuf < _CharT, _Traits > *, bool & );
# 113 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    class basic_streambuf
    {
    public :






      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;




      typedef basic_streambuf < char_type, traits_type > __streambuf_type;


      friend class basic_ios < char_type, traits_type >;
      friend class basic_istream < char_type, traits_type >;
      friend class basic_ostream < char_type, traits_type >;
      friend class istreambuf_iterator < char_type, traits_type >;
      friend class ostreambuf_iterator < char_type, traits_type >;

      friend streamsize
      __copy_streambufs_eof < > ( __streambuf_type *, __streambuf_type *, bool & );

      template < bool _IsMove, typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
        __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
      istreambuf_iterator < _CharT2 > > :: __type
        find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

      template < typename _CharT2, typename _Traits2 >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &, _CharT2 * );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &,
     basic_string < _CharT2, _Traits2, _Alloc > & );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        getline ( basic_istream < _CharT2, _Traits2 > &,
  basic_string < _CharT2, _Traits2, _Alloc > &, _CharT2 );

    protected :

      char_type * _M_in_beg;
      char_type * _M_in_cur;
      char_type * _M_in_end;
      char_type * _M_out_beg;
      char_type * _M_out_cur;
      char_type * _M_out_end;


      locale _M_buf_locale;

  public :

      virtual
      ~ basic_streambuf ( )
      { }

      locale
      pubimbue ( const locale & __loc )
      {
 locale __tmp ( this -> getloc ( ) );
 this -> imbue ( __loc );
 _M_buf_locale = __loc;
 return __tmp;
      }

      locale
      getloc ( ) const
      { return _M_buf_locale; }

      __streambuf_type *
      pubsetbuf ( char_type * __s, streamsize __n )
      { return this -> setbuf ( __s, __n ); }

      pos_type
      pubseekoff ( off_type __off, ios_base :: seekdir __way,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekoff ( __off, __way, __mode ); }

      pos_type
      pubseekpos ( pos_type __sp,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekpos ( __sp, __mode ); }

      int
      pubsync ( ) { return this -> sync ( ); }

      streamsize
      in_avail ( )
      {
 const streamsize __ret = this -> egptr ( ) - this -> gptr ( );
 return __ret ? __ret : this -> showmanyc ( );
      }

      int_type
      snextc ( )
      {
 int_type __ret = traits_type :: eof ( );
 if ( __builtin_expect ( ! traits_type :: eq_int_type ( this -> sbumpc ( ),
             __ret ), true ) )
   __ret = this -> sgetc ( );
 return __ret;
      }

      int_type
      sbumpc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 else
   __ret = this -> uflow ( );
 return __ret;
      }

      int_type
      sgetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
 else
   __ret = this -> underflow ( );
 return __ret;
      }

      streamsize
      sgetn ( char_type * __s, streamsize __n )
      { return this -> xsgetn ( __s, __n ); }

      int_type
      sputbackc ( char_type __c )
      {
 int_type __ret;
 const bool __testpos = this -> eback ( ) < this -> gptr ( );
 if ( __builtin_expect ( ! __testpos ||
        ! traits_type :: eq ( __c, this -> gptr ( ) [ - 1 ] ), false ) )
   __ret = this -> pbackfail ( traits_type :: to_int_type ( __c ) );
 else
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 return __ret;
      }

      int_type
      sungetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> eback ( ) < this -> gptr ( ), true ) )
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 else
   __ret = this -> pbackfail ( );
 return __ret;
      }

      int_type
      sputc ( char_type __c )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> pptr ( ) < this -> epptr ( ), true ) )
   {
     * this -> pptr ( ) = __c;
     this -> pbump ( 1 );
     __ret = traits_type :: to_int_type ( __c );
   }
 else
   __ret = this -> overflow ( traits_type :: to_int_type ( __c ) );
 return __ret;
      }

      streamsize
      sputn ( const char_type * __s, streamsize __n )
      { return this -> xsputn ( __s, __n ); }

    protected :

      basic_streambuf ( )
      : _M_in_beg ( 0 ), _M_in_cur ( 0 ), _M_in_end ( 0 ),
      _M_out_beg ( 0 ), _M_out_cur ( 0 ), _M_out_end ( 0 ),
      _M_buf_locale ( locale ( ) )
      { }

      char_type *
      eback ( ) const { return _M_in_beg; }

      char_type *
      gptr ( ) const { return _M_in_cur; }

      char_type *
      egptr ( ) const { return _M_in_end; }

      void
      gbump ( int __n ) { _M_in_cur += __n; }

      void
      setg ( char_type * __gbeg, char_type * __gnext, char_type * __gend )
      {
 _M_in_beg = __gbeg;
 _M_in_cur = __gnext;
 _M_in_end = __gend;
      }

      char_type *
      pbase ( ) const { return _M_out_beg; }

      char_type *
      pptr ( ) const { return _M_out_cur; }

      char_type *
      epptr ( ) const { return _M_out_end; }

      void
      pbump ( int __n ) { _M_out_cur += __n; }

      void
      setp ( char_type * __pbeg, char_type * __pend )
      {
 _M_out_beg = _M_out_cur = __pbeg;
 _M_out_end = __pend;
      }

      virtual void
      imbue ( const locale & )
      { }

      virtual basic_streambuf < char_type, _Traits > *
      setbuf ( char_type *, streamsize )
      { return this; }

      virtual pos_type
      seekoff ( off_type, ios_base :: seekdir,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual pos_type
      seekpos ( pos_type,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual int
      sync ( ) { return 0; }

      virtual streamsize
      showmanyc ( ) { return 0; }

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual int_type
      underflow ( )
      { return traits_type :: eof ( ); }

      virtual int_type
      uflow ( )
      {
 int_type __ret = traits_type :: eof ( );
 const bool __testeof = traits_type :: eq_int_type ( this -> underflow ( ),
       __ret );
 if ( ! __testeof )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 return __ret;
      }

      virtual int_type
      pbackfail ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );

      virtual int_type
      overflow ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }



    public :

      void
      stossc ( )
      {
 if ( this -> gptr ( ) < this -> egptr ( ) )
   this -> gbump ( 1 );
 else
   this -> uflow ( );
      }


    private :


      basic_streambuf ( const __streambuf_type & __sb )
      : _M_in_beg ( __sb . _M_in_beg ), _M_in_cur ( __sb . _M_in_cur ),
      _M_in_end ( __sb . _M_in_end ), _M_out_beg ( __sb . _M_out_beg ),
      _M_out_cur ( __sb . _M_out_cur ), _M_out_end ( __sb . _M_out_cur ),
      _M_buf_locale ( __sb . _M_buf_locale )
      { }

      __streambuf_type &
      operator = ( const __streambuf_type & ) { return * this; };
    };
# 784 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * , bool & );
# 789 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * , bool & );
# 793 "/usr/include/c++/4.4/streambuf" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsgetn ( char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> egptr ( ) - this -> gptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( __s, this -> gptr ( ), __len );
       __ret += __len;
       __s += __len;
       this -> gbump ( __len );
     }

   if ( __ret < __n )
     {
       const int_type __c = this -> uflow ( );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    traits_type :: assign ( * __s ++, traits_type :: to_char_type ( __c ) );
    ++ __ret;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 76 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsputn ( const char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> epptr ( ) - this -> pptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( this -> pptr ( ), __s, __len );
       __ret += __len;
       __s += __len;
       this -> pbump ( __len );
     }

   if ( __ret < __n )
     {
       int_type __c = this -> overflow ( traits_type :: to_int_type ( * __s ) );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    ++ __ret;
    ++ __s;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 113 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > * __sbin,
     basic_streambuf < _CharT, _Traits > * __sbout,
     bool & __ineof )
    {
      streamsize __ret = 0;
      __ineof = true;
      typename _Traits :: int_type __c = __sbin -> sgetc ( );
      while ( ! _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
 {
   __c = __sbout -> sputc ( _Traits :: to_char_type ( __c ) );
   if ( _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
     {
       __ineof = false;
       break;
     }
   ++ __ret;
   __c = __sbin -> snextc ( );
 }
      return __ret;
    }
# 136 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    inline streamsize
    __copy_streambufs ( basic_streambuf < _CharT, _Traits > * __sbin,
        basic_streambuf < _CharT, _Traits > * __sbout )
    {
      bool __ineof;
      return __copy_streambufs_eof ( __sbin, __sbout, __ineof );
    }
# 149 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * );
# 154 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * );
# 165 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 172 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
}
# 38 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
typedef unsigned long wctype_t;
# 57 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
enum {
# 58 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwupper,
# 59 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwlower,
# 60 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwalpha,
# 61 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwdigit,
# 62 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwxdigit,
# 63 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwspace,
# 64 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwprint,
# 65 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwgraph,
# 66 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwblank,
# 67 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwcntrl,
# 68 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwpunct,
# 69 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
__ISwalnum,
# 71 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwupper = 16777216,
# 72 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwlower = 33554432,
# 73 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwalpha = 67108864,
# 74 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwdigit = 134217728,
# 75 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwxdigit = 268435456,
# 76 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwspace = 536870912,
# 77 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwprint = 1073741824,
# 78 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwgraph = (-2147483647-1),
# 79 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwblank = 65536,
# 80 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwcntrl = 131072,
# 81 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwpunct = 262144,
# 82 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
_ISwalnum = 524288
# 83 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
};
# 95 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswalnum(wint_t ) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswalpha(wint_t ) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswcntrl(wint_t ) throw();
# 108 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswdigit(wint_t ) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswgraph(wint_t ) throw();
# 117 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswlower(wint_t ) throw();
# 120 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswprint(wint_t ) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswpunct(wint_t ) throw();
# 130 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswspace(wint_t ) throw();
# 135 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswupper(wint_t ) throw();
# 140 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswxdigit(wint_t ) throw();
# 146 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswblank(wint_t ) throw();
# 155 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" wctype_t wctype(const char * ) throw();
# 159 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" int iswctype(wint_t , wctype_t ) throw();
# 166 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" wint_t towlower(wint_t ) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h" 3
extern "C" wint_t towupper(wint_t ) throw();
# 48 "/usr/include/wctype.h" 3
extern "C" { typedef const __int32_t *wctrans_t; }
# 52 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans(const char * ) throw();
# 55 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans(wint_t , wctrans_t ) throw();
# 63 "/usr/include/wctype.h" 3
extern "C" int iswalnum_l(wint_t , locale_t ) throw();
# 69 "/usr/include/wctype.h" 3
extern "C" int iswalpha_l(wint_t , locale_t ) throw();
# 72 "/usr/include/wctype.h" 3
extern "C" int iswcntrl_l(wint_t , locale_t ) throw();
# 76 "/usr/include/wctype.h" 3
extern "C" int iswdigit_l(wint_t , locale_t ) throw();
# 80 "/usr/include/wctype.h" 3
extern "C" int iswgraph_l(wint_t , locale_t ) throw();
# 85 "/usr/include/wctype.h" 3
extern "C" int iswlower_l(wint_t , locale_t ) throw();
# 88 "/usr/include/wctype.h" 3
extern "C" int iswprint_l(wint_t , locale_t ) throw();
# 93 "/usr/include/wctype.h" 3
extern "C" int iswpunct_l(wint_t , locale_t ) throw();
# 98 "/usr/include/wctype.h" 3
extern "C" int iswspace_l(wint_t , locale_t ) throw();
# 103 "/usr/include/wctype.h" 3
extern "C" int iswupper_l(wint_t , locale_t ) throw();
# 108 "/usr/include/wctype.h" 3
extern "C" int iswxdigit_l(wint_t , locale_t ) throw();
# 113 "/usr/include/wctype.h" 3
extern "C" int iswblank_l(wint_t , locale_t ) throw();
# 117 "/usr/include/wctype.h" 3
extern "C" wctype_t wctype_l(const char * , locale_t ) throw();
# 122 "/usr/include/wctype.h" 3
extern "C" int iswctype_l(wint_t , wctype_t , locale_t ) throw();
# 130 "/usr/include/wctype.h" 3
extern "C" wint_t towlower_l(wint_t , locale_t ) throw();
# 133 "/usr/include/wctype.h" 3
extern "C" wint_t towupper_l(wint_t , locale_t ) throw();
# 137 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans_l(const char * , locale_t ) throw();
# 141 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans_l(wint_t , wctrans_t , locale_t ) throw();
# 76 "/usr/include/c++/4.4/cwctype" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans_t;
# 79 "/usr/include/c++/4.4/cwctype" 3
using ::wctype_t;
# 82 "/usr/include/c++/4.4/cwctype" 3
using ::iswalnum;
# 83 "/usr/include/c++/4.4/cwctype" 3
using ::iswalpha;
# 85 "/usr/include/c++/4.4/cwctype" 3
using ::iswblank;
# 87 "/usr/include/c++/4.4/cwctype" 3
using ::iswcntrl;
# 88 "/usr/include/c++/4.4/cwctype" 3
using ::iswctype;
# 89 "/usr/include/c++/4.4/cwctype" 3
using ::iswdigit;
# 90 "/usr/include/c++/4.4/cwctype" 3
using ::iswgraph;
# 91 "/usr/include/c++/4.4/cwctype" 3
using ::iswlower;
# 92 "/usr/include/c++/4.4/cwctype" 3
using ::iswprint;
# 93 "/usr/include/c++/4.4/cwctype" 3
using ::iswpunct;
# 94 "/usr/include/c++/4.4/cwctype" 3
using ::iswspace;
# 95 "/usr/include/c++/4.4/cwctype" 3
using ::iswupper;
# 96 "/usr/include/c++/4.4/cwctype" 3
using ::iswxdigit;
# 97 "/usr/include/c++/4.4/cwctype" 3
using ::towctrans;
# 98 "/usr/include/c++/4.4/cwctype" 3
using ::towlower;
# 99 "/usr/include/c++/4.4/cwctype" 3
using ::towupper;
# 100 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans;
# 101 "/usr/include/c++/4.4/cwctype" 3
using ::wctype;
# 103 "/usr/include/c++/4.4/cwctype" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
struct ctype_base {
# 43 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
typedef const int *__to_type;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
typedef unsigned short mask;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 53 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
};
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_base.h" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class istreambuf_iterator
    : public iterator < input_iterator_tag, _CharT, typename _Traits :: off_type,
        _CharT *, _CharT & >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename _Traits :: int_type int_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_istream < _CharT, _Traits > istream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

      template < bool _IsMove, typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
 __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
               istreambuf_iterator < _CharT2 > > :: __type
 find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

    private :







      mutable streambuf_type * _M_sbuf;
      mutable int_type _M_c;

    public :

      istreambuf_iterator ( ) throw ( )
      : _M_sbuf ( 0 ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( istream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_c ( traits_type :: eof ( ) ) { }




      char_type
      operator * ( ) const
      {







 return traits_type :: to_char_type ( _M_get ( ) );
      }


      istreambuf_iterator &
      operator ++ ( )
      {
 ;


 if ( _M_sbuf )
   {
     _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return * this;
      }


      istreambuf_iterator
      operator ++ ( int )
      {
 ;



 istreambuf_iterator __old = * this;
 if ( _M_sbuf )
   {
     __old . _M_c = _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return __old;
      }





      bool
      equal ( const istreambuf_iterator & __b ) const
      { return _M_at_eof ( ) == __b . _M_at_eof ( ); }

    private :
      int_type
      _M_get ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 int_type __ret = __eof;
 if ( _M_sbuf )
   {
     if ( ! traits_type :: eq_int_type ( _M_c, __eof ) )
       __ret = _M_c;
     else if ( ! traits_type :: eq_int_type ( ( __ret = _M_sbuf -> sgetc ( ) ),
            __eof ) )
       _M_c = __ret;
     else
       _M_sbuf = 0;
   }
 return __ret;
      }

      bool
      _M_at_eof ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 return traits_type :: eq_int_type ( _M_get ( ), __eof );
      }
    };
# 185 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator == ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return __a . equal ( __b ); }
# 191 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator != ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return ! __a . equal ( __b ); }
# 198 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class ostreambuf_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_ostream < _CharT, _Traits > ostream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

    private :
      streambuf_type * _M_sbuf;
      bool _M_failed;

    public :

      ostreambuf_iterator ( ostream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator &
      operator = ( _CharT __c )
      {
 if ( ! _M_failed &&
     _Traits :: eq_int_type ( _M_sbuf -> sputc ( __c ), _Traits :: eof ( ) ) )
   _M_failed = true;
 return * this;
      }


      ostreambuf_iterator &
      operator * ( )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( int )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( )
      { return * this; }


      bool
      failed ( ) const throw ( )
      { return _M_failed; }

      ostreambuf_iterator &
      _M_put ( const _CharT * __ws, streamsize __len )
      {
 if ( __builtin_expect ( ! _M_failed, true )
     && __builtin_expect ( this -> _M_sbuf -> sputn ( __ws, __len ) != __len,
    false ) )
   _M_failed = true;
 return * this;
      }
    };
# 273 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
                           ostreambuf_iterator < _CharT > > :: __type
    copy ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last,
  ostreambuf_iterator < _CharT > __result )
    {
      if ( __first . _M_sbuf && ! __last . _M_sbuf && ! __result . _M_failed )
 {
   bool __ineof;
   __copy_streambufs_eof ( __first . _M_sbuf, __result . _M_sbuf, __ineof );
   if ( ! __ineof )
     __result . _M_failed = true;
 }
      return __result;
    }
# 290 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( _CharT * __first, _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 302 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( const _CharT * __first, const _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 314 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT > __first,
     istreambuf_iterator < _CharT > __last, _CharT * __result )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     {
       const streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    traits_type :: copy ( __result, __sb -> gptr ( ), __n );
    __sb -> gbump ( __n );
    __result += __n;
    __c = __sb -> underflow ( );
  }
       else
  {
    * __result ++ = traits_type :: to_char_type ( __c );
    __c = __sb -> snextc ( );
  }
     }
 }
      return __result;
    }
# 349 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
          istreambuf_iterator < _CharT > > :: __type
    find ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last, const _CharT & __val )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   const int_type __ival = traits_type :: to_int_type ( __val );
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) )
   && ! traits_type :: eq_int_type ( __c, __ival ) )
     {
       streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    const _CharT * __p = traits_type :: find ( __sb -> gptr ( ),
       __n, __val );
    if ( __p )
      __n = __p - __sb -> gptr ( );
    __sb -> gbump ( __n );
    __c = __sb -> sgetc ( );
  }
       else
  __c = __sb -> snextc ( );
     }

   if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     __first . _M_c = __c;
   else
     __first . _M_sbuf = 0;
 }
      return __first;
    }
# 390 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
}
# 52 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _Tv> void __convert_to_v(const char * , _Tv & , ios_base::iostate & , const __c_locale & );
# 72 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &);
# 77 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &);
# 82 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &);
# 87 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 88 "/usr/include/c++/4.4/bits/locale_facets.h" 3
struct __pad {
# 91 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_pad(ios_base & , _CharT , _CharT * , const _CharT * , streamsize , streamsize );
# 93 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last );
# 109 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline
    ostreambuf_iterator < _CharT >
    __write ( ostreambuf_iterator < _CharT > __s, const _CharT * __ws, int __len )
    {
      __s . _M_put ( __ws, __len );
      return __s;
    }
# 119 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    inline
    _OutIter
    __write ( _OutIter __s, const _CharT * __ws, int __len )
    {
      for ( int __j = 0; __j < __len; __j ++, ++ __s )
 * __s = __ws [ __j ];
      return __s;
    }
# 143 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class __ctype_abstract_base : public locale :: facet, public ctype_base
    {
    public :


      typedef _CharT char_type;

      bool
      is ( mask __m, char_type __c ) const
      { return this -> do_is ( __m, __c ); }

      const char_type *
      is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const
      { return this -> do_is ( __lo, __hi, __vec ); }

      const char_type *
      scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_is ( __m, __lo, __hi ); }

      const char_type *
      scan_not ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_not ( __m, __lo, __hi ); }

      char_type
      toupper ( char_type __c ) const
      { return this -> do_toupper ( __c ); }

      const char_type *
      toupper ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_toupper ( __lo, __hi ); }

      char_type
      tolower ( char_type __c ) const
      { return this -> do_tolower ( __c ); }

      const char_type *
      tolower ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_tolower ( __lo, __hi ); }

      char_type
      widen ( char __c ) const
      { return this -> do_widen ( __c ); }

      const char *
      widen ( const char * __lo, const char * __hi, char_type * __to ) const
      { return this -> do_widen ( __lo, __hi, __to ); }

      char
      narrow ( char_type __c, char __dfault ) const
      { return this -> do_narrow ( __c, __dfault ); }

      const char_type *
      narrow ( const char_type * __lo, const char_type * __hi,
       char __dfault, char * __to ) const
      { return this -> do_narrow ( __lo, __hi, __dfault, __to ); }

    protected :
      explicit
      __ctype_abstract_base ( size_t __refs = 0 ) : facet ( __refs ) { }

      virtual
      ~ __ctype_abstract_base ( ) { }

      virtual bool
      do_is ( mask __m, char_type __c ) const = 0;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi,
     mask * __vec ) const = 0;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo,
   const char_type * __hi ) const = 0;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const = 0;

      virtual char_type
      do_toupper ( char_type ) const = 0;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_tolower ( char_type ) const = 0;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_widen ( char ) const = 0;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi,
        char_type * __dest ) const = 0;

      virtual char
      do_narrow ( char_type, char __dfault ) const = 0;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const = 0;
    };
# 604 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype : public __ctype_abstract_base < _CharT >
    {
    public :

      typedef _CharT char_type;
      typedef typename __ctype_abstract_base < _CharT > :: mask mask;


      static locale :: id id;

      explicit
      ctype ( size_t __refs = 0 ) : __ctype_abstract_base < _CharT > ( __refs ) { }

   protected :
      virtual
      ~ ctype ( );

      virtual bool
      do_is ( mask __m, char_type __c ) const;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const;

      virtual char_type
      do_toupper ( char_type __c ) const;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_tolower ( char_type __c ) const;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_widen ( char __c ) const;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi, char_type * __dest ) const;

      virtual char
      do_narrow ( char_type, char __dfault ) const;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const;
    };
# 661 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 662 "/usr/include/c++/4.4/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 674 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 679 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef char char_type;
# 683 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 684 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_del;
# 685 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_toupper;
# 686 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_tolower;
# 687 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *_M_table;
# 688 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 689 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 690 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>((-1)))];
# 691 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 696 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 698 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>((-1))));
# 711 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(const mask * = 0, bool = (false), size_t = (0));
# 724 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , const mask * = 0, bool = (false), size_t = (0));
# 737 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline bool is(mask , char ) const;
# 752 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *is(const char * , const char * , mask * ) const;
# 766 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_is(mask , const char * , const char * ) const;
# 780 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_not(mask , const char * , const char * ) const;
# 795 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 796 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 812 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 813 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 828 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 829 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 845 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 846 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 865 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type widen(char __c) const
# 866 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 868 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 869 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init();
# 870 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__c);
# 871 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 892 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 893 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 894 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 895 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 896 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 897 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 898 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 900 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 901 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 902 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 923 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 924 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 925 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 926 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 927 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 928 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__t != __dfault) {
# 929 "/usr/include/c++/4.4/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 930 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __t;
# 931 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 956 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 957 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dfault, char *__to) const
# 958 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 959 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 960 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 961 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 962 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 963 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 964 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 965 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 966 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 967 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 974 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *table() const throw()
# 975 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return _M_table; }
# 979 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 989 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1005 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1022 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1038 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1055 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1075 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1076 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1098 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const
# 1099 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1101 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1102 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1124 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char) const
# 1125 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1150 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *
# 1151 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dest) const
# 1152 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1153 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1154 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1155 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1158 "/usr/include/c++/4.4/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1159 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1160 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1175 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1180 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1181 "/usr/include/c++/4.4/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1184 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1187 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1188 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char _M_narrow[128];
# 1189 "/usr/include/c++/4.4/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 1192 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mask _M_bit[16];
# 1193 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1198 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 1208 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(size_t = (0));
# 1219 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , size_t = (0));
# 1223 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask ) const;
# 1227 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual ~ctype();
# 1243 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual bool do_is(mask , char_type ) const;
# 1262 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * , const char_type * , mask * ) const;
# 1280 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask , const char_type * , const char_type * ) const;
# 1298 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask , const char_type * , const char_type * ) const;
# 1315 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1332 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1348 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1365 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1385 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char) const;
# 1407 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char * , const char * , char_type * ) const;
# 1430 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char ) const;
# 1456 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * , const char_type * , char , char * ) const;
# 1461 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_initialize_ctype();
# 1462 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1466 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype_byname : public ctype < _CharT >
    {
    public :
      typedef typename ctype < _CharT > :: mask mask;

      explicit
      ctype_byname ( const char * __s, size_t __refs = 0 );

    protected :
      virtual
      ~ ctype_byname ( ) { };
    };
# 1482 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1486 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1490 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1491 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1499 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1503 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1504 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1507 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
while (__low < __high) {
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>((*(__low++)))]); }
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
return __high;
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>((*__low))]) & __m))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
++__low; }
# 60 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
return __low;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 65 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
{
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>((*__low))]) & __m) != 0)) {
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
++__low; }
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
return __low;
# 71 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/ctype_inline.h" 3
}
# 1512 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1515 "/usr/include/c++/4.4/bits/locale_facets.h" 3
class __num_base {
# 1521 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: enum {
# 1522 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ominus,
# 1523 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oplus,
# 1524 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ox,
# 1525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oX,
# 1526 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits,
# 1527 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1528 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1529 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1530 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oe = 18,
# 1531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oE = 34,
# 1532 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oend = 36
# 1533 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1540 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1544 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1547 "/usr/include/c++/4.4/bits/locale_facets.h" 3
enum {
# 1548 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iminus,
# 1549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iplus,
# 1550 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ix,
# 1551 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iX,
# 1552 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_izero,
# 1553 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ie = 18,
# 1554 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iE = 24,
# 1555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iend = 26
# 1556 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & , char * , char );
# 1562 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1564 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    struct __numpunct_cache : public locale :: facet
    {
      const char * _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      const _CharT * _M_truename;
      size_t _M_truename_size;
      const _CharT * _M_falsename;
      size_t _M_falsename_size;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;





      _CharT _M_atoms_out [ __num_base :: _S_oend ];





      _CharT _M_atoms_in [ __num_base :: _S_iend ];

      bool _M_allocated;

      __numpunct_cache ( size_t __refs = 0 ) : facet ( __refs ),
      _M_grouping ( __null ), _M_grouping_size ( 0 ), _M_use_grouping ( false ),
      _M_truename ( __null ), _M_truename_size ( 0 ), _M_falsename ( __null ),
      _M_falsename_size ( 0 ), _M_decimal_point ( _CharT ( ) ),
      _M_thousands_sep ( _CharT ( ) ), _M_allocated ( false )
      { }

      ~ __numpunct_cache ( );

      void
      _M_cache ( const locale & __loc );

    private :
      __numpunct_cache &
      operator = ( const __numpunct_cache & );

      explicit
      __numpunct_cache ( const __numpunct_cache & );
    };
# 1611 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    __numpunct_cache < _CharT > :: ~ __numpunct_cache ( )
    {
      if ( _M_allocated )
 {
   delete [ ] _M_grouping;
   delete [ ] _M_truename;
   delete [ ] _M_falsename;
 }
    }
# 1635 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      typedef __numpunct_cache < _CharT > __cache_type;

    protected :
      __cache_type * _M_data;

    public :

      static locale :: id id;






      explicit
      numpunct ( size_t __refs = 0 ) : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __cache_type * __cache, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __cache )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( __cloc ); }

      char_type
      decimal_point ( ) const
      { return this -> do_decimal_point ( ); }

      char_type
      thousands_sep ( ) const
      { return this -> do_thousands_sep ( ); }

      string
      grouping ( ) const
      { return this -> do_grouping ( ); }

      string_type
      truename ( ) const
      { return this -> do_truename ( ); }

      string_type
      falsename ( ) const
      { return this -> do_falsename ( ); }

    protected :

      virtual
      ~ numpunct ( );

      virtual char_type
      do_decimal_point ( ) const
      { return _M_data -> _M_decimal_point; }

      virtual char_type
      do_thousands_sep ( ) const
      { return _M_data -> _M_thousands_sep; }

      virtual string
      do_grouping ( ) const
      { return _M_data -> _M_grouping; }

      virtual string_type
      do_truename ( ) const
      { return _M_data -> _M_truename; }

      virtual string_type
      do_falsename ( ) const
      { return _M_data -> _M_falsename; }


      void
      _M_initialize_numpunct ( __c_locale __cloc = __null );
    };
# 1847 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1848 "/usr/include/c++/4.4/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1851 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1855 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale );
# 1859 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1863 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale );
# 1867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct_byname : public numpunct < _CharT >
    {
    public :
      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      explicit
      numpunct_byname ( const char * __s, size_t __refs = 0 )
      : numpunct < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     __c_locale __tmp;
     this -> _S_create_c_locale ( __tmp, __s );
     this -> _M_initialize_numpunct ( __tmp );
     this -> _S_destroy_c_locale ( __tmp );
   }
      }

    protected :
      virtual
      ~ numpunct_byname ( ) { }
    };
# 1907 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _InIter >
    class num_get : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _InIter iter_type;



      static locale :: id id;

      explicit
      num_get ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, bool & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned short & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned int & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }


      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, float & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, void * & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

    protected :

      virtual ~ num_get ( ) { }

      iter_type
      _M_extract_float ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         string & ) const;

      template < typename _ValueT >
        iter_type
        _M_extract_int ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         _ValueT & ) const;

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value, int > :: __type
        _M_find ( const _CharT2 *, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   if ( __len <= 10 )
     {
       if ( __c >= _CharT2 ( '0' ) && __c < _CharT2 ( _CharT2 ( '0' ) + __len ) )
  __ret = __c - _CharT2 ( '0' );
     }
   else
     {
       if ( __c >= _CharT2 ( '0' ) && __c <= _CharT2 ( '9' ) )
  __ret = __c - _CharT2 ( '0' );
       else if ( __c >= _CharT2 ( 'a' ) && __c <= _CharT2 ( 'f' ) )
  __ret = 10 + ( __c - _CharT2 ( 'a' ) );
       else if ( __c >= _CharT2 ( 'A' ) && __c <= _CharT2 ( 'F' ) )
  __ret = 10 + ( __c - _CharT2 ( 'A' ) );
     }
   return __ret;
 }

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < ! __is_char < _CharT2 > :: __value,
          int > :: __type
        _M_find ( const _CharT2 * __zero, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   const char_type * __q = char_traits < _CharT2 > :: find ( __zero, __len, __c );
   if ( __q )
     {
       __ret = __q - __zero;
       if ( __ret > 15 )
  __ret -= 6;
     }
   return __ret;
 }

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate &, bool & ) const;

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned short & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned int & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      float & ) const;

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      double & ) const;







      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      long double & ) const;


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      void * & ) const;

    };
# 2229 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2230 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2244 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    class num_put : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale :: id id;

      explicit
      num_put ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, bool __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }


      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   long double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   const void * __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

    protected :
      template < typename _ValueT >
        iter_type
        _M_insert_float ( iter_type, ios_base & __io, char_type __fill,
   char __mod, _ValueT __v ) const;

      void
      _M_group_float ( const char * __grouping, size_t __grouping_size,
       char_type __sep, const char_type * __p, char_type * __new,
       char_type * __cs, int & __len ) const;

      template < typename _ValueT >
        iter_type
        _M_insert_int ( iter_type, ios_base & __io, char_type __fill,
        _ValueT __v ) const;

      void
      _M_group_int ( const char * __grouping, size_t __grouping_size,
     char_type __sep, ios_base & __io, char_type * __new,
     char_type * __cs, int & __len ) const;

      void
      _M_pad ( char_type __fill, streamsize __w, ios_base & __io,
      char_type * __new, const char_type * __cs, int & __len ) const;


      virtual
      ~ num_put ( ) { };

      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, bool __v ) const;

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill, long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, double __v ) const;






      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, long double __v ) const;


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, const void * __v ) const;







    };
# 2508 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2509 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2519 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isspace ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: space, __c ); }
# 2525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isprint ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: print, __c ); }
# 2531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    iscntrl ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: cntrl, __c ); }
# 2537 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: upper, __c ); }
# 2543 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    islower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: lower, __c ); }
# 2549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalpha ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alpha, __c ); }
# 2555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: digit, __c ); }
# 2561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    ispunct ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: punct, __c ); }
# 2567 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isxdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: xdigit, __c ); }
# 2573 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalnum ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alnum, __c ); }
# 2579 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isgraph ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: graph, __c ); }
# 2585 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    toupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . toupper ( __c ); }
# 2591 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    tolower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . tolower ( __c ); }
# 2596 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & ) const;
# 46 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    struct __use_cache < __numpunct_cache < _CharT > >
    {
      const __numpunct_cache < _CharT > *
      operator ( ) ( const locale & __loc ) const
      {
 const size_t __i = numpunct < _CharT > :: id . _M_id ( );
 const locale :: facet * * __caches = __loc . _M_impl -> _M_caches;
 if ( ! __caches [ __i ] )
   {
     __numpunct_cache < _CharT > * __tmp = __null;
     try
       {
  __tmp = new __numpunct_cache < _CharT >;
  __tmp -> _M_cache ( __loc );
       }
     catch ( ... )
       {
  delete __tmp;
  throw;
       }
     __loc . _M_impl -> _M_install_cache ( __tmp, __i );
   }
 return static_cast < const __numpunct_cache < _CharT > * > ( __caches [ __i ] );
      }
    };
# 76 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    void
    __numpunct_cache < _CharT > :: _M_cache ( const locale & __loc )
    {
      _M_allocated = true;

      const numpunct < _CharT > & __np = use_facet < numpunct < _CharT > > ( __loc );

      _M_grouping_size = __np . grouping ( ) . size ( );
      char * __grouping = new char [ _M_grouping_size ];
      __np . grouping ( ) . copy ( __grouping, _M_grouping_size );
      _M_grouping = __grouping;
      _M_use_grouping = ( _M_grouping_size
    && static_cast < signed char > ( _M_grouping [ 0 ] ) > 0
    && ( _M_grouping [ 0 ]
        != __gnu_cxx :: __numeric_traits < char > :: __max ) );

      _M_truename_size = __np . truename ( ) . size ( );
      _CharT * __truename = new _CharT [ _M_truename_size ];
      __np . truename ( ) . copy ( __truename, _M_truename_size );
      _M_truename = __truename;

      _M_falsename_size = __np . falsename ( ) . size ( );
      _CharT * __falsename = new _CharT [ _M_falsename_size ];
      __np . falsename ( ) . copy ( __falsename, _M_falsename_size );
      _M_falsename = __falsename;

      _M_decimal_point = __np . decimal_point ( );
      _M_thousands_sep = __np . thousands_sep ( );

      const ctype < _CharT > & __ct = use_facet < ctype < _CharT > > ( __loc );
      __ct . widen ( __num_base :: _S_atoms_out,
   __num_base :: _S_atoms_out + __num_base :: _S_oend, _M_atoms_out );
      __ct . widen ( __num_base :: _S_atoms_in,
   __num_base :: _S_atoms_in + __num_base :: _S_iend, _M_atoms_in );
    }
# 122 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
bool __verify_grouping(const char * , size_t , const string & );
# 127 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    _M_extract_float ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, string & __xtrc ) const
    {
      typedef char_traits < _CharT > __traits_type;
      typedef __numpunct_cache < _CharT > __cache_type;
      __use_cache < __cache_type > __uc;
      const locale & __loc = __io . _M_getloc ( );
      const __cache_type * __lc = __uc ( __loc );
      const _CharT * __lit = __lc -> _M_atoms_in;
      char_type __c = char_type ( );


      bool __testeof = __beg == __end;


      if ( ! __testeof )
 {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
     {
       __xtrc += __plus ? '+' : '-';
       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 }


      bool __found_mantissa = false;
      int __sep_pos = 0;
      while ( ! __testeof )
 {
   if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       || __c == __lc -> _M_decimal_point )
     break;
   else if ( __c == __lit [ __num_base :: _S_izero ] )
     {
       if ( ! __found_mantissa )
  {
    __xtrc += '0';
    __found_mantissa = true;
  }
       ++ __sep_pos;

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
   else
     break;
 }


      bool __found_dec = false;
      bool __found_sci = false;
      string __found_grouping;
      if ( __lc -> _M_use_grouping )
 __found_grouping . reserve ( 32 );
      const char_type * __lit_zero = __lit + __num_base :: _S_izero;

      if ( ! __lc -> _M_allocated )

 while ( ! __testeof )
   {
     const int __digit = _M_find ( __lit_zero, 10, __c );
     if ( __digit != - 1 )
       {
  __xtrc += '0' + __digit;
  __found_mantissa = true;
       }
     else if ( __c == __lc -> _M_decimal_point
       && ! __found_dec && ! __found_sci )
       {
  __xtrc += '.';
  __found_dec = true;
       }
     else if ( ( __c == __lit [ __num_base :: _S_ie ]
        || __c == __lit [ __num_base :: _S_iE ] )
       && ! __found_sci && __found_mantissa )
       {

  __xtrc += 'e';
  __found_sci = true;


  if ( ++ __beg != __end )
    {
      __c = * __beg;
      const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
      if ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
        __xtrc += __plus ? '+' : '-';
      else
        continue;
    }
  else
    {
      __testeof = true;
      break;
    }
       }
     else
       break;

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }
      else
 while ( ! __testeof )
   {


     if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       {
  if ( ! __found_dec && ! __found_sci )
    {


      if ( __sep_pos )
        {
   __found_grouping += static_cast < char > ( __sep_pos );
   __sep_pos = 0;
        }
      else
        {


   __xtrc . clear ( );
   break;
        }
    }
  else
    break;
       }
     else if ( __c == __lc -> _M_decimal_point )
       {
  if ( ! __found_dec && ! __found_sci )
    {



      if ( __found_grouping . size ( ) )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += '.';
      __found_dec = true;
    }
  else
    break;
       }
     else
       {
  const char_type * __q =
    __traits_type :: find ( __lit_zero, 10, __c );
  if ( __q )
    {
      __xtrc += '0' + ( __q - __lit_zero );
      __found_mantissa = true;
      ++ __sep_pos;
    }
  else if ( ( __c == __lit [ __num_base :: _S_ie ]
     || __c == __lit [ __num_base :: _S_iE ] )
    && ! __found_sci && __found_mantissa )
    {

      if ( __found_grouping . size ( ) && ! __found_dec )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += 'e';
      __found_sci = true;


      if ( ++ __beg != __end )
        {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping
     && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
        __xtrc += __plus ? '+' : '-';
   else
     continue;
        }
      else
        {
   __testeof = true;
   break;
        }
    }
  else
    break;
       }

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }



      if ( __found_grouping . size ( ) )
        {

   if ( ! __found_dec && ! __found_sci )
     __found_grouping += static_cast < char > ( __sep_pos );

          if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
          __lc -> _M_grouping_size,
          __found_grouping ) )
     __err = ios_base :: failbit;
        }

      return __beg;
    }
# 351 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    template < typename _ValueT >
      _InIter
      num_get < _CharT, _InIter > ::
      _M_extract_int ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, _ValueT & __v ) const
      {
        typedef char_traits < _CharT > __traits_type;
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_in;
 char_type __c = char_type ( );


 const ios_base :: fmtflags __basefield = __io . flags ( )
                                        & ios_base :: basefield;
 const bool __oct = __basefield == ios_base :: oct;
 int __base = __oct ? 8 : ( __basefield == ios_base :: hex ? 16 : 10 );


 bool __testeof = __beg == __end;


 bool __negative = false;
 if ( ! __testeof )
   {
     __c = * __beg;
     __negative = __c == __lit [ __num_base :: _S_iminus ];
     if ( ( __negative || __c == __lit [ __num_base :: _S_iplus ] )
  && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  && ! ( __c == __lc -> _M_decimal_point ) )
       {
  if ( ++ __beg != __end )
    __c = * __beg;
  else
    __testeof = true;
       }
   }



 bool __found_zero = false;
 int __sep_pos = 0;
 while ( ! __testeof )
   {
     if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  || __c == __lc -> _M_decimal_point )
       break;
     else if ( __c == __lit [ __num_base :: _S_izero ]
       && ( ! __found_zero || __base == 10 ) )
       {
  __found_zero = true;
  ++ __sep_pos;
  if ( __basefield == 0 )
    __base = 8;
  if ( __base == 8 )
    __sep_pos = 0;
       }
     else if ( __found_zero
       && ( __c == __lit [ __num_base :: _S_ix ]
    || __c == __lit [ __num_base :: _S_iX ] ) )
       {
  if ( __basefield == 0 )
    __base = 16;
  if ( __base == 16 )
    {
      __found_zero = false;
      __sep_pos = 0;
    }
  else
    break;
       }
     else
       break;

     if ( ++ __beg != __end )
       {
  __c = * __beg;
  if ( ! __found_zero )
    break;
       }
     else
       __testeof = true;
   }



 const size_t __len = ( __base == 16 ? __num_base :: _S_iend
         - __num_base :: _S_izero : __base );


 string __found_grouping;
 if ( __lc -> _M_use_grouping )
   __found_grouping . reserve ( 32 );
 bool __testfail = false;
 bool __testoverflow = false;
 const __unsigned_type __max =
   ( __negative && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
   ? - __gnu_cxx :: __numeric_traits < _ValueT > :: __min
   : __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
 const __unsigned_type __smax = __max / __base;
 __unsigned_type __result = 0;
 int __digit = 0;
 const char_type * __lit_zero = __lit + __num_base :: _S_izero;

 if ( ! __lc -> _M_allocated )

   while ( ! __testeof )
     {
       __digit = _M_find ( __lit_zero, __len, __c );
       if ( __digit == - 1 )
  break;

       if ( __result > __smax )
  __testoverflow = true;
       else
  {
    __result *= __base;
    __testoverflow |= __result > __max - __digit;
    __result += __digit;
    ++ __sep_pos;
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 else
   while ( ! __testeof )
     {


       if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  {


    if ( __sep_pos )
      {
        __found_grouping += static_cast < char > ( __sep_pos );
        __sep_pos = 0;
      }
    else
      {
        __testfail = true;
        break;
      }
  }
       else if ( __c == __lc -> _M_decimal_point )
  break;
       else
  {
    const char_type * __q =
      __traits_type :: find ( __lit_zero, __len, __c );
    if ( ! __q )
      break;

    __digit = __q - __lit_zero;
    if ( __digit > 15 )
      __digit -= 6;
    if ( __result > __smax )
      __testoverflow = true;
    else
      {
        __result *= __base;
        __testoverflow |= __result > __max - __digit;
        __result += __digit;
        ++ __sep_pos;
      }
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }



 if ( __found_grouping . size ( ) )
   {

     __found_grouping += static_cast < char > ( __sep_pos );

     if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
     __lc -> _M_grouping_size,
     __found_grouping ) )
       __err = ios_base :: failbit;
   }



 if ( ( ! __sep_pos && ! __found_zero && ! __found_grouping . size ( ) )
     || __testfail )
   {
     __v = 0;
     __err = ios_base :: failbit;
   }
 else if ( __testoverflow )
   {
     if ( __negative
  && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __min;
     else
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
     __err = ios_base :: failbit;
   }
 else
   __v = __negative ? - __result : __result;

 if ( __testeof )
   __err |= ios_base :: eofbit;
 return __beg;
      }
# 572 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, bool & __v ) const
    {
      if ( ! ( __io . flags ( ) & ios_base :: boolalpha ) )
        {



   long __l = - 1;
          __beg = _M_extract_int ( __beg, __end, __io, __err, __l );
   if ( __l == 0 || __l == 1 )
     __v = bool ( __l );
   else
     {


       __v = true;
       __err = ios_base :: failbit;
       if ( __beg == __end )
  __err |= ios_base :: eofbit;
     }
        }
      else
        {

   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   bool __testf = true;
   bool __testt = true;
   bool __donef = __lc -> _M_falsename_size == 0;
   bool __donet = __lc -> _M_truename_size == 0;
   bool __testeof = false;
   size_t __n = 0;
   while ( ! __donef || ! __donet )
     {
       if ( __beg == __end )
  {
    __testeof = true;
    break;
  }

       const char_type __c = * __beg;

       if ( ! __donef )
  __testf = __c == __lc -> _M_falsename [ __n ];

       if ( ! __testf && __donet )
  break;

       if ( ! __donet )
  __testt = __c == __lc -> _M_truename [ __n ];

       if ( ! __testt && __donef )
  break;

       if ( ! __testt && ! __testf )
  break;

       ++ __n;
       ++ __beg;

       __donef = ! __testf || __n >= __lc -> _M_falsename_size;
       __donet = ! __testt || __n >= __lc -> _M_truename_size;
     }
   if ( __testf && __n == __lc -> _M_falsename_size && __n )
     {
       __v = false;
       if ( __testt && __n == __lc -> _M_truename_size )
  __err = ios_base :: failbit;
       else
  __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else if ( __testt && __n == __lc -> _M_truename_size && __n )
     {
       __v = true;
       __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else
     {


       __v = false;
       __err = ios_base :: failbit;
       if ( __testeof )
  __err |= ios_base :: eofbit;
     }
 }
      return __beg;
    }
# 668 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
    ios_base :: iostate & __err, float & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 683 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 715 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, long double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 730 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, void * & __v ) const
    {

      typedef ios_base :: fmtflags fmtflags;
      const fmtflags __fmt = __io . flags ( );
      __io . flags ( ( __fmt & ~ ios_base :: basefield ) | ios_base :: hex );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      _UIntPtrType __ul;
      __beg = _M_extract_int ( __beg, __end, __io, __err, __ul );


      __io . flags ( __fmt );

      __v = reinterpret_cast < void * > ( __ul );
      return __beg;
    }
# 757 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_pad ( _CharT __fill, streamsize __w, ios_base & __io,
    _CharT * __new, const _CharT * __cs, int & __len ) const
    {


      __pad < _CharT, char_traits < _CharT > > :: _S_pad ( __io, __fill, __new,
        __cs, __w, __len );
      __len = static_cast < int > ( __w );
    }
# 772 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _ValueT >
    int
    __int_to_char ( _CharT * __bufend, _ValueT __v, const _CharT * __lit,
    ios_base :: fmtflags __flags, bool __dec )
    {
      _CharT * __buf = __bufend;
      if ( __builtin_expect ( __dec, true ) )
 {

   do
     {
       * -- __buf = __lit [ ( __v % 10 ) + __num_base :: _S_odigits ];
       __v /= 10;
     }
   while ( __v != 0 );
 }
      else if ( ( __flags & ios_base :: basefield ) == ios_base :: oct )
 {

   do
     {
       * -- __buf = __lit [ ( __v & 7 ) + __num_base :: _S_odigits ];
       __v >>= 3;
     }
   while ( __v != 0 );
 }
      else
 {

   const bool __uppercase = __flags & ios_base :: uppercase;
   const int __case_offset = __uppercase ? __num_base :: _S_oudigits
                                         : __num_base :: _S_odigits;
   do
     {
       * -- __buf = __lit [ ( __v & 15 ) + __case_offset ];
       __v >>= 4;
     }
   while ( __v != 0 );
 }
      return __bufend - __buf;
    }
# 816 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_int ( const char * __grouping, size_t __grouping_size, _CharT __sep,
   ios_base &, _CharT * __new, _CharT * __cs, int & __len ) const
    {
      _CharT * __p = std :: __add_grouping ( __new, __sep, __grouping,
     __grouping_size, __cs, __cs + __len );
      __len = __p - __new;
    }
# 827 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_int ( _OutIter __s, ios_base & __io, _CharT __fill,
      _ValueT __v ) const
      {
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_out;
 const ios_base :: fmtflags __flags = __io . flags ( );


 const int __ilen = 5 * sizeof ( _ValueT );
 _CharT * __cs = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __ilen ) );



 const ios_base :: fmtflags __basefield = __flags & ios_base :: basefield;
 const bool __dec = ( __basefield != ios_base :: oct
       && __basefield != ios_base :: hex );
 const __unsigned_type __u = ( ( __v > 0 || ! __dec )
         ? __unsigned_type ( __v )
         : - __unsigned_type ( __v ) );
  int __len = __int_to_char ( __cs + __ilen, __u, __lit, __flags, __dec );
 __cs += __ilen - __len;


 if ( __lc -> _M_use_grouping )
   {


     _CharT * __cs2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * ( __len + 1 )
          * 2 ) );
     _M_group_int ( __lc -> _M_grouping, __lc -> _M_grouping_size,
    __lc -> _M_thousands_sep, __io, __cs2 + 2, __cs, __len );
     __cs = __cs2 + 2;
   }


 if ( __builtin_expect ( __dec, true ) )
   {

     if ( __v >= 0 )
       {
  if ( bool ( __flags & ios_base :: showpos )
      && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
    * -- __cs = __lit [ __num_base :: _S_oplus ], ++ __len;
       }
     else
       * -- __cs = __lit [ __num_base :: _S_ominus ], ++ __len;
   }
 else if ( bool ( __flags & ios_base :: showbase ) && __v )
   {
     if ( __basefield == ios_base :: oct )
       * -- __cs = __lit [ __num_base :: _S_odigits ], ++ __len;
     else
       {

  const bool __uppercase = __flags & ios_base :: uppercase;
  * -- __cs = __lit [ __num_base :: _S_ox + __uppercase ];

  * -- __cs = __lit [ __num_base :: _S_odigits ];
  __len += 2;
       }
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __cs3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __cs3, __cs, __len );
     __cs = __cs3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __cs, __len );
      }
# 916 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_float ( const char * __grouping, size_t __grouping_size,
     _CharT __sep, const _CharT * __p, _CharT * __new,
     _CharT * __cs, int & __len ) const
    {



      const int __declen = __p ? __p - __cs : __len;
      _CharT * __p2 = std :: __add_grouping ( __new, __sep, __grouping,
      __grouping_size,
      __cs, __cs + __declen );


      int __newlen = __p2 - __new;
      if ( __p )
 {
   char_traits < _CharT > :: copy ( __p2, __p, __len - __declen );
   __newlen += __len - __declen;
 }
      __len = __newlen;
    }
# 951 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_float ( _OutIter __s, ios_base & __io, _CharT __fill, char __mod,
         _ValueT __v ) const
      {
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );


 const streamsize __prec = __io . precision ( ) < 0 ? 6 : __io . precision ( );

 const int __max_digits =
   __gnu_cxx :: __numeric_traits < _ValueT > :: __digits10;


 int __len;

 char __fbuf [ 16 ];
 __num_base :: _S_format_float ( __io, __fbuf, __mod );




 int __cs_size = __max_digits * 3;
 char * __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
 __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
          __fbuf, __prec, __v );


 if ( __len >= __cs_size )
   {
     __cs_size = __len + 1;
     __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
     __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
       __fbuf, __prec, __v );
   }

 const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

 _CharT * __ws = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __len ) );
 __ctype . widen ( __cs, __cs + __len, __ws );


 _CharT * __wp = 0;
 const char * __p = char_traits < char > :: find ( __cs, __len, '.' );
 if ( __p )
   {
     __wp = __ws + ( __p - __cs );
     * __wp = __lc -> _M_decimal_point;
   }




 if ( __lc -> _M_use_grouping
     && ( __wp || __len < 3 || ( __cs [ 1 ] <= '9' && __cs [ 2 ] <= '9'
          && __cs [ 1 ] >= '0' && __cs [ 2 ] >= '0' ) ) )
   {


     _CharT * __ws2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __len * 2 ) );

     streamsize __off = 0;
     if ( __cs [ 0 ] == '-' || __cs [ 0 ] == '+' )
       {
  __off = 1;
  __ws2 [ 0 ] = __ws [ 0 ];
  __len -= 1;
       }

     _M_group_float ( __lc -> _M_grouping, __lc -> _M_grouping_size,
      __lc -> _M_thousands_sep, __wp, __ws2 + __off,
      __ws + __off, __len );
     __len += __off;

     __ws = __ws2;
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __ws3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __ws3, __ws, __len );
     __ws = __ws3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __ws, __len );
      }
# 1071 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, bool __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      if ( ( __flags & ios_base :: boolalpha ) == 0 )
        {
          const long __l = __v;
          __s = _M_insert_int ( __s, __io, __fill, __l );
        }
      else
        {
   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   const _CharT * __name = __v ? __lc -> _M_truename
                              : __lc -> _M_falsename;
   int __len = __v ? __lc -> _M_truename_size
                   : __lc -> _M_falsename_size;

   const streamsize __w = __io . width ( );
   if ( __w > static_cast < streamsize > ( __len ) )
     {
       const streamsize __plen = __w - __len;
       _CharT * __ps
  = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
       * __plen ) );

       char_traits < _CharT > :: assign ( __ps, __plen, __fill );
       __io . width ( 0 );

       if ( ( __flags & ios_base :: adjustfield ) == ios_base :: left )
  {
    __s = std :: __write ( __s, __name, __len );
    __s = std :: __write ( __s, __ps, __plen );
  }
       else
  {
    __s = std :: __write ( __s, __ps, __plen );
    __s = std :: __write ( __s, __name, __len );
  }
       return __s;
     }
   __io . width ( 0 );
   __s = std :: __write ( __s, __name, __len );
 }
      return __s;
    }
# 1123 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, double __v ) const
    { return _M_insert_float ( __s, __io, __fill, char ( ), __v ); }
# 1137 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
    long double __v ) const
    { return _M_insert_float ( __s, __io, __fill, 'L', __v ); }
# 1144 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
           const void * __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      const ios_base :: fmtflags __fmt = ~ ( ios_base :: basefield
      | ios_base :: uppercase );
      __io . flags ( ( __flags & __fmt ) | ( ios_base :: hex | ios_base :: showbase ) );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( const void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      __s = _M_insert_int ( __s, __io, __fill,
     reinterpret_cast < _UIntPtrType > ( __v ) );
      __io . flags ( __flags );
      return __s;
    }
# 1174 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _Traits >
    void
    __pad < _CharT, _Traits > :: _S_pad ( ios_base & __io, _CharT __fill,
       _CharT * __news, const _CharT * __olds,
       streamsize __newlen, streamsize __oldlen )
    {
      const size_t __plen = static_cast < size_t > ( __newlen - __oldlen );
      const ios_base :: fmtflags __adjust = __io . flags ( ) & ios_base :: adjustfield;


      if ( __adjust == ios_base :: left )
 {
   _Traits :: copy ( __news, __olds, __oldlen );
   _Traits :: assign ( __news + __oldlen, __plen, __fill );
   return;
 }

      size_t __mod = 0;
      if ( __adjust == ios_base :: internal )
 {



          const locale & __loc = __io . _M_getloc ( );
   const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

   if ( __ctype . widen ( '-' ) == __olds [ 0 ]
       || __ctype . widen ( '+' ) == __olds [ 0 ] )
     {
       __news [ 0 ] = __olds [ 0 ];
       __mod = 1;
       ++ __news;
     }
   else if ( __ctype . widen ( '0' ) == __olds [ 0 ]
     && __oldlen > 1
     && ( __ctype . widen ( 'x' ) == __olds [ 1 ]
         || __ctype . widen ( 'X' ) == __olds [ 1 ] ) )
     {
       __news [ 0 ] = __olds [ 0 ];
       __news [ 1 ] = __olds [ 1 ];
       __mod = 2;
       __news += 2;
     }

 }
      _Traits :: assign ( __news, __plen, __fill );
      _Traits :: copy ( __news + __plen, __olds + __mod, __oldlen - __mod );
    }
# 1223 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last )
    {
      size_t __idx = 0;
      size_t __ctr = 0;

      while ( __last - __first > __gbeg [ __idx ]
      && static_cast < signed char > ( __gbeg [ __idx ] ) > 0
      && __gbeg [ __idx ] != __gnu_cxx :: __numeric_traits < char > :: __max )
 {
   __last -= __gbeg [ __idx ];
   __idx < __gsize - 1 ? ++ __idx : ++ __ctr;
 }

      while ( __first != __last )
 * __s ++ = * __first ++;

      while ( __ctr -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      while ( __idx -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      return __s;
    }
# 1264 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< char> ;
# 1265 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< char> ;
# 1266 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1267 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1270 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1274 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< char> &use_facet< numpunct< char> > (const locale &);
# 1278 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1282 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1286 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1290 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< char> > (const locale &) throw();
# 1294 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1298 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1303 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< wchar_t> ;
# 1304 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< wchar_t> ;
# 1305 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1306 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1309 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1313 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< wchar_t> &use_facet< numpunct< wchar_t> > (const locale &);
# 1317 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1321 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1325 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1329 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< wchar_t> > (const locale &) throw();
# 1333 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1337 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1343 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
}
# 42 "/usr/include/c++/4.4/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _Facet >
    inline const _Facet &
    __check_facet ( const _Facet * __f )
    {
      if ( ! __f )
 __throw_bad_cast ( );
      return * __f;
    }
# 61 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _CharT, typename _Traits >
    class basic_ios : public ios_base
    {
    public :






      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;






      typedef ctype < _CharT > __ctype_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
           __num_put_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
           __num_get_type;



    protected :
      basic_ostream < _CharT, _Traits > * _M_tie;
      mutable char_type _M_fill;
      mutable bool _M_fill_init;
      basic_streambuf < _CharT, _Traits > * _M_streambuf;


      const __ctype_type * _M_ctype;

      const __num_put_type * _M_num_put;

      const __num_get_type * _M_num_get;

    public :







      operator void * ( ) const
      { return this -> fail ( ) ? 0 : const_cast < basic_ios * > ( this ); }

      bool
      operator ! ( ) const
      { return this -> fail ( ); }

      iostate
      rdstate ( ) const
      { return _M_streambuf_state; }

      void
      clear ( iostate __state = goodbit );







      void
      setstate ( iostate __state )
      { this -> clear ( this -> rdstate ( ) | __state ); }




      void
      _M_setstate ( iostate __state )
      {


 _M_streambuf_state |= __state;
 if ( this -> exceptions ( ) & __state )
   throw;
      }







      bool
      good ( ) const
      { return this -> rdstate ( ) == 0; }







      bool
      eof ( ) const
      { return ( this -> rdstate ( ) & eofbit ) != 0; }

      bool
      fail ( ) const
      { return ( this -> rdstate ( ) & ( badbit | failbit ) ) != 0; }







      bool
      bad ( ) const
      { return ( this -> rdstate ( ) & badbit ) != 0; }

      iostate
      exceptions ( ) const
      { return _M_exception; }

      void
      exceptions ( iostate __except )
      {
        _M_exception = __except;
        this -> clear ( _M_streambuf_state );
      }







      explicit
      basic_ios ( basic_streambuf < _CharT, _Traits > * __sb )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( ), _M_fill_init ( false ), _M_streambuf ( 0 ),
 _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { this -> init ( __sb ); }







      virtual
      ~ basic_ios ( ) { }

      basic_ostream < _CharT, _Traits > *
      tie ( ) const
      { return _M_tie; }

      basic_ostream < _CharT, _Traits > *
      tie ( basic_ostream < _CharT, _Traits > * __tiestr )
      {
        basic_ostream < _CharT, _Traits > * __old = _M_tie;
        _M_tie = __tiestr;
        return __old;
      }







      basic_streambuf < _CharT, _Traits > *
      rdbuf ( ) const
      { return _M_streambuf; }

      basic_streambuf < _CharT, _Traits > *
      rdbuf ( basic_streambuf < _CharT, _Traits > * __sb );

      basic_ios &
      copyfmt ( const basic_ios & __rhs );







      char_type
      fill ( ) const
      {
 if ( ! _M_fill_init )
   {
     _M_fill = this -> widen ( ' ' );
     _M_fill_init = true;
   }
 return _M_fill;
      }

      char_type
      fill ( char_type __ch )
      {
 char_type __old = this -> fill ( );
 _M_fill = __ch;
 return __old;
      }

      locale
      imbue ( const locale & __loc );

      char
      narrow ( char_type __c, char __dfault ) const
      { return __check_facet ( _M_ctype ) . narrow ( __c, __dfault ); }

      char_type
      widen ( char __c ) const
      { return __check_facet ( _M_ctype ) . widen ( __c ); }

    protected :







      basic_ios ( )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( char_type ( ) ), _M_fill_init ( false ),
 _M_streambuf ( 0 ), _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { }







      void
      init ( basic_streambuf < _CharT, _Traits > * __sb );

      void
      _M_cache_locale ( const locale & __loc );
    };
# 468 "/usr/include/c++/4.4/bits/basic_ios.h" 3
}
# 36 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 38 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: clear ( iostate __state )
    {
      if ( this -> rdbuf ( ) )
 _M_streambuf_state = __state;
      else
   _M_streambuf_state = __state | badbit;
      if ( this -> exceptions ( ) & this -> rdstate ( ) )
 __throw_ios_failure ( ( "basic_ios::clear" ) );
    }
# 50 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_streambuf < _CharT, _Traits > *
    basic_ios < _CharT, _Traits > :: rdbuf ( basic_streambuf < _CharT, _Traits > * __sb )
    {
      basic_streambuf < _CharT, _Traits > * __old = _M_streambuf;
      _M_streambuf = __sb;
      this -> clear ( );
      return __old;
    }
# 60 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ios < _CharT, _Traits > &
    basic_ios < _CharT, _Traits > :: copyfmt ( const basic_ios & __rhs )
    {


      if ( this != & __rhs )
 {




   _Words * __words = ( __rhs . _M_word_size <= _S_local_word_size ) ?
                      _M_local_word : new _Words [ __rhs . _M_word_size ];


   _Callback_list * __cb = __rhs . _M_callbacks;
   if ( __cb )
     __cb -> _M_add_reference ( );
   _M_call_callbacks ( erase_event );
   if ( _M_word != _M_local_word )
     {
       delete [ ] _M_word;
       _M_word = 0;
     }
   _M_dispose_callbacks ( );


   _M_callbacks = __cb;
   for ( int __i = 0; __i < __rhs . _M_word_size; ++ __i )
     __words [ __i ] = __rhs . _M_word [ __i ];
   _M_word = __words;
   _M_word_size = __rhs . _M_word_size;

   this -> flags ( __rhs . flags ( ) );
   this -> width ( __rhs . width ( ) );
   this -> precision ( __rhs . precision ( ) );
   this -> tie ( __rhs . tie ( ) );
   this -> fill ( __rhs . fill ( ) );
   _M_ios_locale = __rhs . getloc ( );
   _M_cache_locale ( _M_ios_locale );

   _M_call_callbacks ( copyfmt_event );


   this -> exceptions ( __rhs . exceptions ( ) );
 }
      return * this;
    }
# 111 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    locale
    basic_ios < _CharT, _Traits > :: imbue ( const locale & __loc )
    {
      locale __old ( this -> getloc ( ) );
      ios_base :: imbue ( __loc );
      _M_cache_locale ( __loc );
      if ( this -> rdbuf ( ) != 0 )
 this -> rdbuf ( ) -> pubimbue ( __loc );
      return __old;
    }
# 123 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: init ( basic_streambuf < _CharT, _Traits > * __sb )
    {

      ios_base :: _M_init ( );


      _M_cache_locale ( _M_ios_locale );

      _M_fill = _CharT ( );
      _M_fill_init = false;

      _M_tie = 0;
      _M_exception = goodbit;
      _M_streambuf = __sb;
      _M_streambuf_state = __sb ? goodbit : badbit;
    }
# 154 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: _M_cache_locale ( const locale & __loc )
    {
      if ( __builtin_expect ( has_facet < __ctype_type > ( __loc ), true ) )
 _M_ctype = & use_facet < __ctype_type > ( __loc );
      else
 _M_ctype = 0;

      if ( __builtin_expect ( has_facet < __num_put_type > ( __loc ), true ) )
 _M_num_put = & use_facet < __num_put_type > ( __loc );
      else
 _M_num_put = 0;

      if ( __builtin_expect ( has_facet < __num_get_type > ( __loc ), true ) )
 _M_num_get = & use_facet < __num_get_type > ( __loc );
      else
 _M_num_get = 0;
    }
# 178 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 185 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
}
# 43 "/usr/include/c++/4.4/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
             __num_put_type;
      typedef ctype < _CharT > __ctype_type;

      explicit
      basic_ostream ( __streambuf_type * __sb )
      { this -> init ( __sb ); }






      virtual
      ~ basic_ostream ( ) { }


      class sentry;
      friend class sentry;

      __ostream_type &
      operator << ( __ostream_type & ( * __pf ) ( __ostream_type & ) )
      {



 return __pf ( * this );
      }

      __ostream_type &
      operator << ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( ios_base & ( * __pf ) ( ios_base & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( bool __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( short __n );

      __ostream_type &
      operator << ( unsigned short __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }

      __ostream_type &
      operator << ( int __n );

      __ostream_type &
      operator << ( unsigned int __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }


      __ostream_type &
      operator << ( long long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long long __n )
      { return _M_insert ( __n ); }


      __ostream_type &
      operator << ( double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( float __f )
      {


 return _M_insert ( static_cast < double > ( __f ) );
      }

      __ostream_type &
      operator << ( long double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( const void * __p )
      { return _M_insert ( __p ); }

      __ostream_type &
      operator << ( __streambuf_type * __sb );

      __ostream_type &
      put ( char_type __c );


      void
      _M_write ( const char_type * __s, streamsize __n )
      {
 const streamsize __put = this -> rdbuf ( ) -> sputn ( __s, __n );
 if ( __put != __n )
   this -> setstate ( ios_base :: badbit );
      }

      __ostream_type &
      write ( const char_type * __s, streamsize __n );

      __ostream_type &
      flush ( );

      pos_type
      tellp ( );

      __ostream_type &
      seekp ( pos_type );

       __ostream_type &
      seekp ( off_type, ios_base :: seekdir );

    protected :
      basic_ostream ( )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __ostream_type &
        _M_insert ( _ValueT __v );
    };
# 376 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream < _CharT, _Traits > :: sentry
    {

      bool _M_ok;
      basic_ostream < _CharT, _Traits > & _M_os;

    public :

      explicit
      sentry ( basic_ostream < _CharT, _Traits > & __os );

      ~ sentry ( )
      {

 if ( bool ( _M_os . flags ( ) & ios_base :: unitbuf ) && ! uncaught_exception ( ) )
   {

     if ( _M_os . rdbuf ( ) && _M_os . rdbuf ( ) -> pubsync ( ) == - 1 )
       _M_os . setstate ( ios_base :: badbit );
   }
      }

      operator bool ( ) const
      { return _M_ok; }
    };
# 444 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, _CharT __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 449 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, char __c )
    { return ( __out << __out . widen ( __c ) ); }
# 455 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, char __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 461 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, signed char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 466 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, unsigned char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 486 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const _CharT * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 498 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s );
# 503 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 516 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const signed char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 521 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const unsigned char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 536 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    endl ( basic_ostream < _CharT, _Traits > & __os )
    { return flush ( __os . put ( __os . widen ( '\n' ) ) ); }
# 547 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    ends ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . put ( _CharT ( ) ); }
# 557 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    flush ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . flush ( ); }
# 562 "/usr/include/c++/4.4/ostream" 3
}
# 43 "/usr/include/c++/4.4/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > :: sentry ::
    sentry ( basic_ostream < _CharT, _Traits > & __os )
    : _M_ok ( false ), _M_os ( __os )
    {

      if ( __os . tie ( ) && __os . good ( ) )
 __os . tie ( ) -> flush ( );

      if ( __os . good ( ) )
 _M_ok = true;
      else
 __os . setstate ( ios_base :: failbit );
    }
# 60 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_ostream < _CharT, _Traits > &
      basic_ostream < _CharT, _Traits > ::
      _M_insert ( _ValueT __v )
      {
 sentry __cerb ( * this );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_put_type & __np = __check_facet ( this -> _M_num_put );
  if ( __np . put ( * this, * this, this -> fill ( ), __v ) . failed ( ) )
    __err |= ios_base :: badbit;
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 89 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( short __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned short > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 103 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( int __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned int > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 117 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( __streambuf_type * __sbin )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this );
      if ( __cerb && __sbin )
 {
   try
     {
       if ( ! __copy_streambufs ( __sbin, this -> rdbuf ( ) ) )
  __err |= ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbin )
 __err |= ios_base :: badbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 146 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    put ( char_type __c )
    {






      sentry __cerb ( * this );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __put = this -> rdbuf ( ) -> sputc ( __c );
       if ( traits_type :: eq_int_type ( __put, traits_type :: eof ( ) ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 180 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    write ( const _CharT * __s, streamsize __n )
    {







      sentry __cerb ( * this );
      if ( __cerb )
 {
   try
     { _M_write ( __s, __n ); }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      return * this;
    }
# 208 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    flush ( )
    {



      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( this -> rdbuf ( ) && this -> rdbuf ( ) -> pubsync ( ) == - 1 )
     __err |= ios_base :: badbit;
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 234 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_ostream < _CharT, _Traits > :: pos_type
    basic_ostream < _CharT, _Traits > ::
    tellp ( )
    {
      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur, ios_base :: out );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 255 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( pos_type __pos )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 287 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( off_type __off, ios_base :: seekdir __dir )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 319 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 {


   const size_t __clen = char_traits < char > :: length ( __s );
   try
     {
       struct __ptr_guard
       {
  _CharT * __p;
  __ptr_guard ( _CharT * __ip ) : __p ( __ip ) { }
  ~ __ptr_guard ( ) { delete [ ] __p; }
  _CharT * __get ( ) { return __p; }
       } __pg ( new _CharT [ __clen ] );

       _CharT * __ws = __pg . __get ( );
       for ( size_t __i = 0; __i < __clen; ++ __i )
  __ws [ __i ] = __out . widen ( __s [ __i ] );
       __ostream_insert ( __out, __ws, __clen );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( ios_base :: badbit ); }
 }
      return __out;
    }
# 360 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 361 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & );
# 362 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & );
# 363 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & );
# 364 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , char );
# 365 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , unsigned char );
# 366 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , signed char );
# 367 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const char * );
# 368 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const unsigned char * );
# 369 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const signed char * );
# 371 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long );
# 372 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long );
# 373 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool );
# 375 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long );
# 376 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long );
# 378 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double );
# 379 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double );
# 380 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * );
# 383 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 384 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 385 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 386 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 387 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , wchar_t );
# 388 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , char );
# 389 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * );
# 390 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const char * );
# 392 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long );
# 393 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long );
# 394 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool );
# 396 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long );
# 397 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long );
# 399 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double );
# 400 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double );
# 401 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * );
# 405 "/usr/include/c++/4.4/bits/ostream.tcc" 3
}
# 43 "/usr/include/c++/4.4/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
        __num_get_type;
      typedef ctype < _CharT > __ctype_type;

    protected :





      streamsize _M_gcount;

    public :

      explicit
      basic_istream ( __streambuf_type * __sb )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( __sb ); }






      virtual
      ~ basic_istream ( )
      { _M_gcount = streamsize ( 0 ); }


      class sentry;
      friend class sentry;

      __istream_type &
      operator >> ( __istream_type & ( * __pf ) ( __istream_type & ) )
      { return __pf ( * this ); }

      __istream_type &
      operator >> ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( ios_base & ( * __pf ) ( ios_base & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( bool & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( short & __n );

      __istream_type &
      operator >> ( unsigned short & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( int & __n );

      __istream_type &
      operator >> ( unsigned int & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( long long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( float & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( long double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( void * & __p )
      { return _M_extract ( __p ); }

      __istream_type &
      operator >> ( __streambuf_type * __sb );

      streamsize
      gcount ( ) const
      { return _M_gcount; }

      int_type
      get ( );

      __istream_type &
      get ( char_type & __c );

      __istream_type &
      get ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      get ( char_type * __s, streamsize __n )
      { return this -> get ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      get ( __streambuf_type & __sb, char_type __delim );

      __istream_type &
      get ( __streambuf_type & __sb )
      { return this -> get ( __sb, this -> widen ( '\n' ) ); }

      __istream_type &
      getline ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      getline ( char_type * __s, streamsize __n )
      { return this -> getline ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      ignore ( );

      __istream_type &
      ignore ( streamsize __n );

      __istream_type &
      ignore ( streamsize __n, int_type __delim );

      int_type
      peek ( );

      __istream_type &
      read ( char_type * __s, streamsize __n );

      streamsize
      readsome ( char_type * __s, streamsize __n );

      __istream_type &
      putback ( char_type __c );

      __istream_type &
      unget ( );

      int
      sync ( );

      pos_type
      tellg ( );

      __istream_type &
      seekg ( pos_type );

      __istream_type &
      seekg ( off_type, ios_base :: seekdir );


    protected :
      basic_istream ( )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __istream_type &
        _M_extract ( _ValueT & __v );
    };
# 594 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * , streamsize , char_type );
# 599 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize );
# 604 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize , int_type );
# 610 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * , streamsize , char_type );
# 615 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize );
# 620 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize , int_type );
# 631 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream < _CharT, _Traits > :: sentry
    {
    public :

      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: __ctype_type __ctype_type;
      typedef typename _Traits :: int_type __int_type;

      explicit
      sentry ( basic_istream < _CharT, _Traits > & __is, bool __noskipws = false );

      operator bool ( ) const
      { return _M_ok; }

    private :
      bool _M_ok;
    };
# 693 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c );
# 697 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 702 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 734 "/usr/include/c++/4.4/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & , _CharT * );
# 741 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char * );
# 743 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 748 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 762 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_iostream
    : public basic_istream < _CharT, _Traits >,
      public basic_ostream < _CharT, _Traits >
    {
    public :



      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;







      explicit
      basic_iostream ( basic_streambuf < _CharT, _Traits > * __sb )
      : __istream_type ( __sb ), __ostream_type ( __sb ) { }




      virtual
      ~ basic_iostream ( ) { }

    protected :
      basic_iostream ( )
      : __istream_type ( ), __ostream_type ( ) { }
    };
# 823 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __is );
# 827 "/usr/include/c++/4.4/istream" 3
}
# 43 "/usr/include/c++/4.4/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > :: sentry ::
    sentry ( basic_istream < _CharT, _Traits > & __in, bool __noskip ) : _M_ok ( false )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      if ( __in . good ( ) )
 {
   if ( __in . tie ( ) )
     __in . tie ( ) -> flush ( );
   if ( ! __noskip && bool ( __in . flags ( ) & ios_base :: skipws ) )
     {
       const __int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       __int_type __c = __sb -> sgetc ( );

       const __ctype_type & __ct = __check_facet ( __in . _M_ctype );
       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && __ct . is ( ctype_base :: space,
    traits_type :: to_char_type ( __c ) ) )
  __c = __sb -> snextc ( );




       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
 }

      if ( __in . good ( ) && __err == ios_base :: goodbit )
 _M_ok = true;
      else
 {
   __err |= ios_base :: failbit;
   __in . setstate ( __err );
 }
    }
# 83 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_istream < _CharT, _Traits > &
      basic_istream < _CharT, _Traits > ::
      _M_extract ( _ValueT & __v )
      {
 sentry __cerb ( * this, false );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_get_type & __ng = __check_facet ( this -> _M_num_get );
  __ng . get ( * this, 0, * this, __err, __v );
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 111 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( short & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < short > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < short > :: __max )
     __n = short ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 131 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( int & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < int > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < int > :: __max )
     __n = int ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 151 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( __streambuf_type * __sbout )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, false );
      if ( __cerb && __sbout )
 {
   try
     {
       bool __ineof;
       if ( ! __copy_streambufs_eof ( this -> rdbuf ( ), __sbout, __ineof ) )
  __err |= ios_base :: failbit;
       if ( __ineof )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: failbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbout )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 183 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    get ( void )
    {
      const int_type __eof = traits_type :: eof ( );
      int_type __c = __eof;
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       __c = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __c, __eof ) )
  _M_gcount = 1;
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return __c;
    }
# 219 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type & __c )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __cb = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __cb, traits_type :: eof ( ) ) )
  {
    _M_gcount = 1;
    __c = traits_type :: to_char_type ( __cb );
  }
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 256 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( _M_gcount + 1 < __n
       && ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim ) )
  {
    * __s ++ = traits_type :: to_char_type ( __c );
    ++ _M_gcount;
    __c = __sb -> snextc ( );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 303 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( __streambuf_type & __sb, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __this_sb = this -> rdbuf ( );
       int_type __c = __this_sb -> sgetc ( );
       char_type __c2 = traits_type :: to_char_type ( __c );

       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim )
       && ! traits_type :: eq_int_type ( __sb . sputc ( __c2 ), __eof ) )
  {
    ++ _M_gcount;
    __c = __this_sb -> snextc ( );
    __c2 = traits_type :: to_char_type ( __c );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 347 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    getline ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
        {
          try
            {
              const int_type __idelim = traits_type :: to_int_type ( __delim );
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

              while ( _M_gcount + 1 < __n
                     && ! traits_type :: eq_int_type ( __c, __eof )
                     && ! traits_type :: eq_int_type ( __c, __idelim ) )
                {
                  * __s ++ = traits_type :: to_char_type ( __c );
                  __c = __sb -> snextc ( );
                  ++ _M_gcount;
                }
              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
              else
                {
                  if ( traits_type :: eq_int_type ( __c, __idelim ) )
                    {
                      __sb -> sbumpc ( );
                      ++ _M_gcount;
                    }
                  else
                    __err |= ios_base :: failbit;
                }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
        }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
        __err |= ios_base :: failbit;
      if ( __err )
        this -> setstate ( __err );
      return * this;
    }
# 407 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( void )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );

       if ( traits_type :: eq_int_type ( __sb -> sbumpc ( ), __eof ) )
  __err |= ios_base :: eofbit;
       else
  _M_gcount = 1;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 440 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 502 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n, int_type __delim )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );


       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof )
    && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof )
        && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
       else if ( traits_type :: eq_int_type ( __c, __delim ) )
  {
    if ( _M_gcount
        < __gnu_cxx :: __numeric_traits < streamsize > :: __max )
      ++ _M_gcount;
    __sb -> sbumpc ( );
  }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 567 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    peek ( void )
    {
      int_type __c = traits_type :: eof ( );
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __c = this -> rdbuf ( ) -> sgetc ( );
       if ( traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __c;
    }
# 597 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    read ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, __n );
       if ( _M_gcount != __n )
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 626 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_istream < _CharT, _Traits > ::
    readsome ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {

       const streamsize __num = this -> rdbuf ( ) -> in_avail ( );
       if ( __num > 0 )
  _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, std :: min ( __num, __n ) );
       else if ( __num == - 1 )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return _M_gcount;
    }
# 658 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    putback ( char_type __c )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sputbackc ( __c ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 691 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    unget ( void )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sungetc ( ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 724 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_istream < _CharT, _Traits > ::
    sync ( void )
    {


      int __ret = - 1;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( __sb )
  {
    if ( __sb -> pubsync ( ) == - 1 )
      __err |= ios_base :: badbit;
    else
      __ret = 0;
  }
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __ret;
    }
# 760 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: pos_type
    basic_istream < _CharT, _Traits > ::
    tellg ( void )
    {


      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur,
           ios_base :: in );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 784 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( pos_type __pos )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 817 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( off_type __off, ios_base :: seekdir __dir )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 851 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: int_type __int_type;

      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const __int_type __cb = __in . rdbuf ( ) -> sbumpc ( );
       if ( ! _Traits :: eq_int_type ( __cb, _Traits :: eof ( ) ) )
  __c = _Traits :: to_char_type ( __cb );
       else
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     __in . setstate ( __err );
 }
      return __in;
    }
# 883 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT * __s )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename _Traits :: int_type int_type;
      typedef _CharT char_type;
      typedef ctype < _CharT > __ctype_type;

      streamsize __extracted = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       streamsize __num = __in . width ( );
       if ( __num <= 0 )
  __num = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );

       const int_type __eof = _Traits :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( __extracted < __num - 1
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    * __s ++ = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __sb -> snextc ( );
  }
       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;



       * __s = char_type ( );
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! __extracted )
 __err |= ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 944 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __in )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename __istream_type :: int_type __int_type;
      typedef ctype < _CharT > __ctype_type;

      const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
      const __int_type __eof = _Traits :: eof ( );
      __streambuf_type * __sb = __in . rdbuf ( );
      __int_type __c = __sb -> sgetc ( );

      while ( ! _Traits :: eq_int_type ( __c, __eof )
      && __ct . is ( ctype_base :: space, _Traits :: to_char_type ( __c ) ) )
 __c = __sb -> snextc ( );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __in . setstate ( ios_base :: eofbit );
      return __in;
    }
# 971 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 972 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & );
# 973 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char & );
# 974 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 975 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char & );
# 976 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char & );
# 977 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char * );
# 978 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char * );
# 980 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & );
# 981 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & );
# 982 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & );
# 983 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & );
# 984 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & );
# 986 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & );
# 987 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & );
# 989 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & );
# 990 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & );
# 991 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & );
# 992 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& );
# 994 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 997 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 998 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & );
# 999 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , wchar_t & );
# 1000 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1002 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & );
# 1003 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & );
# 1004 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & );
# 1005 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & );
# 1006 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & );
# 1008 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & );
# 1009 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & );
# 1011 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & );
# 1012 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & );
# 1013 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & );
# 1014 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& );
# 1016 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1020 "/usr/include/c++/4.4/bits/istream.tcc" 3
}
# 42 "/usr/include/c++/4.4/bits/codecvt.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/codecvt.h" 3
class codecvt_base {
# 48 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: enum result {
# 50 "/usr/include/c++/4.4/bits/codecvt.h" 3
ok,
# 51 "/usr/include/c++/4.4/bits/codecvt.h" 3
partial,
# 52 "/usr/include/c++/4.4/bits/codecvt.h" 3
error,
# 53 "/usr/include/c++/4.4/bits/codecvt.h" 3
noconv
# 54 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 55 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 66 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class __codecvt_abstract_base
    : public locale :: facet, public codecvt_base
    {
    public :

      typedef codecvt_base :: result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

      result
      out ( state_type & __state, const intern_type * __from,
   const intern_type * __from_end, const intern_type * & __from_next,
   extern_type * __to, extern_type * __to_end,
   extern_type * & __to_next ) const
      {
 return this -> do_out ( __state, __from, __from_end, __from_next,
       __to, __to_end, __to_next );
      }

      result
      unshift ( state_type & __state, extern_type * __to, extern_type * __to_end,
       extern_type * & __to_next ) const
      { return this -> do_unshift ( __state, __to, __to_end, __to_next ); }

      result
      in ( state_type & __state, const extern_type * __from,
  const extern_type * __from_end, const extern_type * & __from_next,
  intern_type * __to, intern_type * __to_end,
  intern_type * & __to_next ) const
      {
 return this -> do_in ( __state, __from, __from_end, __from_next,
      __to, __to_end, __to_next );
      }

      int
      encoding ( ) const throw ( )
      { return this -> do_encoding ( ); }

      bool
      always_noconv ( ) const throw ( )
      { return this -> do_always_noconv ( ); }

      int
      length ( state_type & __state, const extern_type * __from,
      const extern_type * __end, size_t __max ) const
      { return this -> do_length ( __state, __from, __end, __max ); }

      int
      max_length ( ) const throw ( )
      { return this -> do_max_length ( ); }

    protected :
      explicit
      __codecvt_abstract_base ( size_t __refs = 0 ) : locale :: facet ( __refs ) { }

      virtual
      ~ __codecvt_abstract_base ( ) { }

      virtual result
      do_out ( state_type & __state, const intern_type * __from,
      const intern_type * __from_end, const intern_type * & __from_next,
      extern_type * __to, extern_type * __to_end,
      extern_type * & __to_next ) const = 0;

      virtual result
      do_unshift ( state_type & __state, extern_type * __to,
   extern_type * __to_end, extern_type * & __to_next ) const = 0;

      virtual result
      do_in ( state_type & __state, const extern_type * __from,
     const extern_type * __from_end, const extern_type * & __from_next,
     intern_type * __to, intern_type * __to_end,
     intern_type * & __to_next ) const = 0;

      virtual int
      do_encoding ( ) const throw ( ) = 0;

      virtual bool
      do_always_noconv ( ) const throw ( ) = 0;

      virtual int
      do_length ( state_type &, const extern_type * __from,
  const extern_type * __end, size_t __max ) const = 0;

      virtual int
      do_max_length ( ) const throw ( ) = 0;
    };
# 267 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt
    : public __codecvt_abstract_base < _InternT, _ExternT, _StateT >
    {
    public :

      typedef codecvt_base :: result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

    protected :
      __c_locale _M_c_locale_codecvt;

    public :
      static locale :: id id;

      explicit
      codecvt ( size_t __refs = 0 )
      : __codecvt_abstract_base < _InternT, _ExternT, _StateT > ( __refs ) { }

      explicit
      codecvt ( __c_locale __cloc, size_t __refs = 0 );

    protected :
      virtual
      ~ codecvt ( ) { }

      virtual result
      do_out ( state_type & __state, const intern_type * __from,
      const intern_type * __from_end, const intern_type * & __from_next,
      extern_type * __to, extern_type * __to_end,
      extern_type * & __to_next ) const;

      virtual result
      do_unshift ( state_type & __state, extern_type * __to,
   extern_type * __to_end, extern_type * & __to_next ) const;

      virtual result
      do_in ( state_type & __state, const extern_type * __from,
     const extern_type * __from_end, const extern_type * & __from_next,
     intern_type * __to, intern_type * __to_end,
     intern_type * & __to_next ) const;

      virtual int
      do_encoding ( ) const throw ( );

      virtual bool
      do_always_noconv ( ) const throw ( );

      virtual int
      do_length ( state_type &, const extern_type * __from,
  const extern_type * __end, size_t __max ) const;

      virtual int
      do_max_length ( ) const throw ( );
    };
# 325 "/usr/include/c++/4.4/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT> locale::id
# 326 "/usr/include/c++/4.4/bits/codecvt.h" 3
codecvt< _InternT, _ExternT, _StateT> ::id;
# 330 "/usr/include/c++/4.4/bits/codecvt.h" 3
template<> class codecvt< char, char, __mbstate_t> : public __codecvt_abstract_base< char, char, __mbstate_t> {
# 335 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: typedef char intern_type;
# 336 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef char extern_type;
# 337 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 340 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 343 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: static locale::id id;
# 346 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(size_t = (0));
# 349 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(__c_locale , size_t = (0));
# 353 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 356 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_out(state_type & , const intern_type * , const intern_type * , const intern_type *& , extern_type * , extern_type * , extern_type *& ) const;
# 362 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_unshift(state_type & , extern_type * , extern_type * , extern_type *& ) const;
# 366 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_in(state_type & , const extern_type * , const extern_type * , const extern_type *& , intern_type * , intern_type * , intern_type *& ) const;
# 372 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 375 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 378 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * , const extern_type * , size_t ) const;
# 382 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 383 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 388 "/usr/include/c++/4.4/bits/codecvt.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> : public __codecvt_abstract_base< wchar_t, char, __mbstate_t> {
# 393 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: typedef wchar_t intern_type;
# 394 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef char extern_type;
# 395 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 398 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 401 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: static locale::id id;
# 404 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(size_t = (0));
# 407 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(__c_locale , size_t = (0));
# 411 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 414 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_out(state_type & , const intern_type * , const intern_type * , const intern_type *& , extern_type * , extern_type * , extern_type *& ) const;
# 420 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_unshift(state_type & , extern_type * , extern_type * , extern_type *& ) const;
# 425 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_in(state_type & , const extern_type * , const extern_type * , const extern_type *& , intern_type * , intern_type * , intern_type *& ) const;
# 432 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 435 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 438 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * , const extern_type * , size_t ) const;
# 442 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 443 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 447 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt_byname : public codecvt < _InternT, _ExternT, _StateT >
    {
    public :
      explicit
      codecvt_byname ( const char * __s, size_t __refs = 0 )
      : codecvt < _InternT, _ExternT, _StateT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_codecvt );
     this -> _S_create_c_locale ( this -> _M_c_locale_codecvt, __s );
   }
      }

    protected :
      virtual
      ~ codecvt_byname ( ) { }
    };
# 472 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template class codecvt_byname< char, char, __mbstate_t> ;
# 474 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template const codecvt< char, char, __mbstate_t> &use_facet< codecvt< char, char, __mbstate_t> > (const locale &);
# 478 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template bool has_facet< codecvt< char, char, __mbstate_t> > (const locale &) throw();
# 483 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template class codecvt_byname< wchar_t, char, __mbstate_t> ;
# 485 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template const codecvt< wchar_t, char, __mbstate_t> &use_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &);
# 489 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template bool has_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &) throw();
# 495 "/usr/include/c++/4.4/bits/codecvt.h" 3
}
# 93 "/usr/include/c++/4.4/cstdio" 3
namespace std __attribute((__visibility__("default"))) {
# 95 "/usr/include/c++/4.4/cstdio" 3
using ::FILE;
# 96 "/usr/include/c++/4.4/cstdio" 3
using ::fpos_t;
# 98 "/usr/include/c++/4.4/cstdio" 3
using ::clearerr;
# 99 "/usr/include/c++/4.4/cstdio" 3
using ::fclose;
# 100 "/usr/include/c++/4.4/cstdio" 3
using ::feof;
# 101 "/usr/include/c++/4.4/cstdio" 3
using ::ferror;
# 102 "/usr/include/c++/4.4/cstdio" 3
using ::fflush;
# 103 "/usr/include/c++/4.4/cstdio" 3
using ::fgetc;
# 104 "/usr/include/c++/4.4/cstdio" 3
using ::fgetpos;
# 105 "/usr/include/c++/4.4/cstdio" 3
using ::fgets;
# 106 "/usr/include/c++/4.4/cstdio" 3
using ::fopen;
# 107 "/usr/include/c++/4.4/cstdio" 3
using ::fprintf;
# 108 "/usr/include/c++/4.4/cstdio" 3
using ::fputc;
# 109 "/usr/include/c++/4.4/cstdio" 3
using ::fputs;
# 110 "/usr/include/c++/4.4/cstdio" 3
using ::fread;
# 111 "/usr/include/c++/4.4/cstdio" 3
using ::freopen;
# 112 "/usr/include/c++/4.4/cstdio" 3
using ::fscanf;
# 113 "/usr/include/c++/4.4/cstdio" 3
using ::fseek;
# 114 "/usr/include/c++/4.4/cstdio" 3
using ::fsetpos;
# 115 "/usr/include/c++/4.4/cstdio" 3
using ::ftell;
# 116 "/usr/include/c++/4.4/cstdio" 3
using ::fwrite;
# 117 "/usr/include/c++/4.4/cstdio" 3
using ::getc;
# 118 "/usr/include/c++/4.4/cstdio" 3
using ::getchar;
# 119 "/usr/include/c++/4.4/cstdio" 3
using ::gets;
# 120 "/usr/include/c++/4.4/cstdio" 3
using ::perror;
# 121 "/usr/include/c++/4.4/cstdio" 3
using ::printf;
# 122 "/usr/include/c++/4.4/cstdio" 3
using ::putc;
# 123 "/usr/include/c++/4.4/cstdio" 3
using ::putchar;
# 124 "/usr/include/c++/4.4/cstdio" 3
using ::puts;
# 125 "/usr/include/c++/4.4/cstdio" 3
using ::remove;
# 126 "/usr/include/c++/4.4/cstdio" 3
using ::rename;
# 127 "/usr/include/c++/4.4/cstdio" 3
using ::rewind;
# 128 "/usr/include/c++/4.4/cstdio" 3
using ::scanf;
# 129 "/usr/include/c++/4.4/cstdio" 3
using ::setbuf;
# 130 "/usr/include/c++/4.4/cstdio" 3
using ::setvbuf;
# 131 "/usr/include/c++/4.4/cstdio" 3
using ::sprintf;
# 132 "/usr/include/c++/4.4/cstdio" 3
using ::sscanf;
# 133 "/usr/include/c++/4.4/cstdio" 3
using ::tmpfile;
# 134 "/usr/include/c++/4.4/cstdio" 3
using ::tmpnam;
# 135 "/usr/include/c++/4.4/cstdio" 3
using ::ungetc;
# 136 "/usr/include/c++/4.4/cstdio" 3
using ::vfprintf;
# 137 "/usr/include/c++/4.4/cstdio" 3
using ::vprintf;
# 138 "/usr/include/c++/4.4/cstdio" 3
using ::vsprintf;
# 140 "/usr/include/c++/4.4/cstdio" 3
}
# 150 "/usr/include/c++/4.4/cstdio" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 165 "/usr/include/c++/4.4/cstdio" 3
using ::snprintf;
# 166 "/usr/include/c++/4.4/cstdio" 3
using ::vfscanf;
# 167 "/usr/include/c++/4.4/cstdio" 3
using ::vscanf;
# 168 "/usr/include/c++/4.4/cstdio" 3
using ::vsnprintf;
# 169 "/usr/include/c++/4.4/cstdio" 3
using ::vsscanf;
# 172 "/usr/include/c++/4.4/cstdio" 3
}
# 174 "/usr/include/c++/4.4/cstdio" 3
namespace std __attribute((__visibility__("default"))) {
# 176 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::snprintf;
# 177 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vfscanf;
# 178 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vscanf;
# 179 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vsnprintf;
# 180 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vsscanf;
# 182 "/usr/include/c++/4.4/cstdio" 3
}
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++io.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++io.h" 3
typedef __gthread_mutex_t __c_lock;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++io.h" 3
typedef FILE __c_file;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/c++io.h" 3
}
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
template< class _CharT> class __basic_file;
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
template<> class __basic_file< char> {
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
__c_file *_M_cfile;
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
bool _M_cfile_created;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
public: __basic_file(__c_lock * = 0);
# 64 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
std::__basic_file< char> *open(const char * , ios_base::openmode , int = (436));
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
std::__basic_file< char> *sys_open(__c_file * , ios_base::openmode);
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
std::__basic_file< char> *sys_open(int , ios_base::openmode );
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
std::__basic_file< char> *close();
# 76 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
bool is_open() const;
# 79 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
int fd();
# 82 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
__c_file *file();
# 84 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
~__basic_file();
# 87 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
streamsize xsputn(const char * , streamsize );
# 90 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
streamsize xsputn_2(const char * , streamsize , const char * , streamsize );
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
streamsize xsgetn(char * , streamsize );
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
streamoff seekoff(streamoff , ios_base::seekdir );
# 100 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
int sync();
# 103 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
streamsize showmanyc();
# 104 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
};
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/./bits/basic_file.h" 3
}
# 49 "/usr/include/c++/4.4/fstream" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_filebuf : public basic_streambuf < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;

      typedef basic_streambuf < char_type, traits_type > __streambuf_type;
      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef __basic_file < char > __file_type;
      typedef typename traits_type :: state_type __state_type;
      typedef codecvt < char_type, char, __state_type > __codecvt_type;

      friend class ios_base;

    protected :


      __c_lock _M_lock;


      __file_type _M_file;


      ios_base :: openmode _M_mode;


      __state_type _M_state_beg;




      __state_type _M_state_cur;



      __state_type _M_state_last;


      char_type * _M_buf;






      size_t _M_buf_size;


      bool _M_buf_allocated;

      bool _M_reading;
      bool _M_writing;







      char_type _M_pback;
      char_type * _M_pback_cur_save;
      char_type * _M_pback_end_save;
      bool _M_pback_init;



      const __codecvt_type * _M_codecvt;






      char * _M_ext_buf;




      streamsize _M_ext_buf_size;






      const char * _M_ext_next;
      char * _M_ext_end;






      void
      _M_create_pback ( )
      {
 if ( ! _M_pback_init )
   {
     _M_pback_cur_save = this -> gptr ( );
     _M_pback_end_save = this -> egptr ( );
     this -> setg ( & _M_pback, & _M_pback, & _M_pback + 1 );
     _M_pback_init = true;
   }
      }






      void
      _M_destroy_pback ( ) throw ( )
      {
 if ( _M_pback_init )
   {

     _M_pback_cur_save += this -> gptr ( ) != this -> eback ( );
     this -> setg ( _M_buf, _M_pback_cur_save, _M_pback_end_save );
     _M_pback_init = false;
   }
      }

    public :







      basic_filebuf ( );




      virtual
      ~ basic_filebuf ( )
      { this -> close ( ); }





      bool
      is_open ( ) const throw ( )
      { return _M_file . is_open ( ); }

      __filebuf_type *
      open ( const char * __s, ios_base :: openmode __mode );

      __filebuf_type *
      close ( );

    protected :
      void
      _M_allocate_internal_buffer ( );

      void
      _M_destroy_internal_buffer ( ) throw ( );


      virtual streamsize
      showmanyc ( );






      virtual int_type
      underflow ( );

      virtual int_type
      pbackfail ( int_type __c = _Traits :: eof ( ) );

      virtual int_type
      overflow ( int_type __c = _Traits :: eof ( ) );



      bool
      _M_convert_to_external ( char_type *, streamsize );

      virtual __streambuf_type *
      setbuf ( char_type * __s, streamsize __n );

      virtual pos_type
      seekoff ( off_type __off, ios_base :: seekdir __way,
       ios_base :: openmode __mode = ios_base :: in | ios_base :: out );

      virtual pos_type
      seekpos ( pos_type __pos,
       ios_base :: openmode __mode = ios_base :: in | ios_base :: out );


      pos_type
      _M_seek ( off_type __off, ios_base :: seekdir __way, __state_type __state );

      virtual int
      sync ( );

      virtual void
      imbue ( const locale & __loc );

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );


      bool
      _M_terminate_output ( );

      void
      _M_set_buffer ( streamsize __off )
      {
  const bool __testin = _M_mode & ios_base :: in;
  const bool __testout = _M_mode & ios_base :: out;

 if ( __testin && __off > 0 )
   this -> setg ( _M_buf, _M_buf, _M_buf + __off );
 else
   this -> setg ( _M_buf, _M_buf, _M_buf );

 if ( __testout && __off == 0 && _M_buf_size > 1 )
   this -> setp ( _M_buf, _M_buf + _M_buf_size - 1 );
 else
   this -> setp ( __null, __null );
      }
    };
# 413 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_ifstream : public basic_istream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_istream < char_type, traits_type > __istream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_ifstream ( ) : __istream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_ifstream ( const char * __s, ios_base :: openmode __mode = ios_base :: in )
      : __istream_type ( ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_ifstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s, ios_base :: openmode __mode = ios_base :: in )
      {
 if ( ! _M_filebuf . open ( __s, __mode | ios_base :: in ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 581 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_ofstream : public basic_ostream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_ostream < char_type, traits_type > __ostream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_ofstream ( ) : __ostream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_ofstream ( const char * __s,
       ios_base :: openmode __mode = ios_base :: out | ios_base :: trunc )
      : __ostream_type ( ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_ofstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s,
    ios_base :: openmode __mode = ios_base :: out | ios_base :: trunc )
      {
 if ( ! _M_filebuf . open ( __s, __mode | ios_base :: out ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 754 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_fstream : public basic_iostream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_ios < char_type, traits_type > __ios_type;
      typedef basic_iostream < char_type, traits_type > __iostream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_fstream ( )
      : __iostream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_fstream ( const char * __s,
      ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      : __iostream_type ( __null ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_fstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s,
    ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      {
 if ( ! _M_filebuf . open ( __s, __mode ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 912 "/usr/include/c++/4.4/fstream" 3
}
# 43 "/usr/include/c++/4.4/bits/fstream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    _M_allocate_internal_buffer ( )
    {


      if ( ! _M_buf_allocated && ! _M_buf )
 {
   _M_buf = new char_type [ _M_buf_size ];
   _M_buf_allocated = true;
 }
    }
# 59 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    _M_destroy_internal_buffer ( ) throw ( )
    {
      if ( _M_buf_allocated )
 {
   delete [ ] _M_buf;
   _M_buf = __null;
   _M_buf_allocated = false;
 }
      delete [ ] _M_ext_buf;
      _M_ext_buf = __null;
      _M_ext_buf_size = 0;
      _M_ext_next = __null;
      _M_ext_end = __null;
    }
# 77 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_filebuf < _CharT, _Traits > ::
    basic_filebuf ( ) : __streambuf_type ( ), _M_lock ( ), _M_file ( & _M_lock ),
    _M_mode ( ios_base :: openmode ( 0 ) ), _M_state_beg ( ), _M_state_cur ( ),
    _M_state_last ( ), _M_buf ( __null ), _M_buf_size ( 8192 ),
    _M_buf_allocated ( false ), _M_reading ( false ), _M_writing ( false ), _M_pback ( ),
    _M_pback_cur_save ( 0 ), _M_pback_end_save ( 0 ), _M_pback_init ( false ),
    _M_codecvt ( 0 ), _M_ext_buf ( 0 ), _M_ext_buf_size ( 0 ), _M_ext_next ( 0 ),
    _M_ext_end ( 0 )
    {
      if ( has_facet < __codecvt_type > ( this -> _M_buf_locale ) )
 _M_codecvt = & use_facet < __codecvt_type > ( this -> _M_buf_locale );
    }
# 91 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __filebuf_type *
    basic_filebuf < _CharT, _Traits > ::
    open ( const char * __s, ios_base :: openmode __mode )
    {
      __filebuf_type * __ret = __null;
      if ( ! this -> is_open ( ) )
 {
   _M_file . open ( __s, __mode );
   if ( this -> is_open ( ) )
     {
       _M_allocate_internal_buffer ( );
       _M_mode = __mode;


       _M_reading = false;
       _M_writing = false;
       _M_set_buffer ( - 1 );


       _M_state_last = _M_state_cur = _M_state_beg;


       if ( ( __mode & ios_base :: ate )
    && this -> seekoff ( 0, ios_base :: end, __mode )
    == pos_type ( off_type ( - 1 ) ) )
  this -> close ( );
       else
  __ret = this;
     }
 }
      return __ret;
    }
# 125 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __filebuf_type *
    basic_filebuf < _CharT, _Traits > ::
    close ( )
    {
      if ( ! this -> is_open ( ) )
 return __null;

      bool __testfail = false;
      {

 struct __close_sentry
 {
   basic_filebuf * __fb;
   __close_sentry ( basic_filebuf * __fbi ) : __fb ( __fbi ) { }
   ~ __close_sentry ( )
   {
     __fb -> _M_mode = ios_base :: openmode ( 0 );
     __fb -> _M_pback_init = false;
     __fb -> _M_destroy_internal_buffer ( );
     __fb -> _M_reading = false;
     __fb -> _M_writing = false;
     __fb -> _M_set_buffer ( - 1 );
     __fb -> _M_state_last = __fb -> _M_state_cur = __fb -> _M_state_beg;
   }
 } __cs ( this );

 try
   {
     if ( ! _M_terminate_output ( ) )
       __testfail = true;
   }
 catch ( __cxxabiv1 :: __forced_unwind & )
   {
     _M_file . close ( );
     throw;
   }
 catch ( ... )
   { __testfail = true; }
      }

      if ( ! _M_file . close ( ) )
 __testfail = true;

      if ( __testfail )
 return __null;
      else
 return this;
    }
# 175 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_filebuf < _CharT, _Traits > ::
    showmanyc ( )
    {
      streamsize __ret = - 1;
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && this -> is_open ( ) )
 {


   __ret = this -> egptr ( ) - this -> gptr ( );







   if ( __check_facet ( _M_codecvt ) . encoding ( ) >= 0 )

     __ret += _M_file . showmanyc ( ) / _M_codecvt -> max_length ( );
 }
      return __ret;
    }
# 201 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    underflow ( )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && ! _M_writing )
 {



   _M_destroy_pback ( );

   if ( this -> gptr ( ) < this -> egptr ( ) )
     return traits_type :: to_int_type ( * this -> gptr ( ) );


   const size_t __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;


   bool __got_eof = false;

   streamsize __ilen = 0;
   codecvt_base :: result __r = codecvt_base :: ok;
   if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
     {
       __ilen = _M_file . xsgetn ( reinterpret_cast < char * > ( this -> eback ( ) ),
          __buflen );
       if ( __ilen == 0 )
  __got_eof = true;
     }
   else
     {


       const int __enc = _M_codecvt -> encoding ( );
       streamsize __blen;
       streamsize __rlen;
       if ( __enc > 0 )
  __blen = __rlen = __buflen * __enc;
       else
  {
    __blen = __buflen + _M_codecvt -> max_length ( ) - 1;
    __rlen = __buflen;
  }
       const streamsize __remainder = _M_ext_end - _M_ext_next;
       __rlen = __rlen > __remainder ? __rlen - __remainder : 0;



       if ( _M_reading && this -> egptr ( ) == this -> eback ( ) && __remainder )
  __rlen = 0;



       if ( _M_ext_buf_size < __blen )
  {
    char * __buf = new char [ __blen ];
    if ( __remainder )
      __builtin_memcpy ( __buf, _M_ext_next, __remainder );

    delete [ ] _M_ext_buf;
    _M_ext_buf = __buf;
    _M_ext_buf_size = __blen;
  }
       else if ( __remainder )
  __builtin_memmove ( _M_ext_buf, _M_ext_next, __remainder );

       _M_ext_next = _M_ext_buf;
       _M_ext_end = _M_ext_buf + __remainder;
       _M_state_last = _M_state_cur;

       do
  {
    if ( __rlen > 0 )
      {



        if ( _M_ext_end - _M_ext_buf + __rlen > _M_ext_buf_size )
   {
     __throw_ios_failure ( ( "basic_filebuf::underflow codecvt::max_length() is not valid" ) );


   }
        streamsize __elen = _M_file . xsgetn ( _M_ext_end, __rlen );
        if ( __elen == 0 )
   __got_eof = true;
        else if ( __elen == - 1 )
   break;
        _M_ext_end += __elen;
      }

    char_type * __iend = this -> eback ( );
    if ( _M_ext_next < _M_ext_end )
      __r = _M_codecvt -> in ( _M_state_cur, _M_ext_next,
      _M_ext_end, _M_ext_next,
      this -> eback ( ),
      this -> eback ( ) + __buflen, __iend );
    if ( __r == codecvt_base :: noconv )
      {
        size_t __avail = _M_ext_end - _M_ext_buf;
        __ilen = std :: min ( __avail, __buflen );
        traits_type :: copy ( this -> eback ( ),
     reinterpret_cast < char_type * >
     ( _M_ext_buf ), __ilen );
        _M_ext_next = _M_ext_buf + __ilen;
      }
    else
      __ilen = __iend - this -> eback ( );




    if ( __r == codecvt_base :: error )
      break;

    __rlen = 1;
  }
       while ( __ilen == 0 && ! __got_eof );
     }

   if ( __ilen > 0 )
     {
       _M_set_buffer ( __ilen );
       _M_reading = true;
       __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     }
   else if ( __got_eof )
     {



       _M_set_buffer ( - 1 );
       _M_reading = false;


       if ( __r == codecvt_base :: partial )
  __throw_ios_failure ( ( "basic_filebuf::underflow incomplete character in file" ) );

     }
   else if ( __r == codecvt_base :: error )
     __throw_ios_failure ( ( "basic_filebuf::underflow invalid byte sequence in file" ) );

   else
     __throw_ios_failure ( ( "basic_filebuf::underflow error reading the file" ) );

 }
      return __ret;
    }
# 353 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    pbackfail ( int_type __i )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && ! _M_writing )
 {


   const bool __testpb = _M_pback_init;
   const bool __testeof = traits_type :: eq_int_type ( __i, __ret );
   int_type __tmp;
   if ( this -> eback ( ) < this -> gptr ( ) )
     {
       this -> gbump ( - 1 );
       __tmp = traits_type :: to_int_type ( * this -> gptr ( ) );
     }
   else if ( this -> seekoff ( - 1, ios_base :: cur ) != pos_type ( off_type ( - 1 ) ) )
     {
       __tmp = this -> underflow ( );
       if ( traits_type :: eq_int_type ( __tmp, __ret ) )
  return __ret;
     }
   else
     {





       return __ret;
     }



   if ( ! __testeof && traits_type :: eq_int_type ( __i, __tmp ) )
     __ret = __i;
   else if ( __testeof )
     __ret = traits_type :: not_eof ( __i );
   else if ( ! __testpb )
     {
       _M_create_pback ( );
       _M_reading = true;
       * this -> gptr ( ) = traits_type :: to_char_type ( __i );
       __ret = __i;
     }
 }
      return __ret;
    }
# 405 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    overflow ( int_type __c )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testeof = traits_type :: eq_int_type ( __c, __ret );
      const bool __testout = _M_mode & ios_base :: out;
      if ( __testout && ! _M_reading )
 {
   if ( this -> pbase ( ) < this -> pptr ( ) )
     {

       if ( ! __testeof )
  {
    * this -> pptr ( ) = traits_type :: to_char_type ( __c );
    this -> pbump ( 1 );
  }



       if ( _M_convert_to_external ( this -> pbase ( ),
      this -> pptr ( ) - this -> pbase ( ) ) )
  {
    _M_set_buffer ( 0 );
    __ret = traits_type :: not_eof ( __c );
  }
     }
   else if ( _M_buf_size > 1 )
     {



       _M_set_buffer ( 0 );
       _M_writing = true;
       if ( ! __testeof )
  {
    * this -> pptr ( ) = traits_type :: to_char_type ( __c );
    this -> pbump ( 1 );
  }
       __ret = traits_type :: not_eof ( __c );
     }
   else
     {

       char_type __conv = traits_type :: to_char_type ( __c );
       if ( __testeof || _M_convert_to_external ( & __conv, 1 ) )
  {
    _M_writing = true;
    __ret = traits_type :: not_eof ( __c );
  }
     }
 }
      return __ret;
    }
# 461 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    bool
    basic_filebuf < _CharT, _Traits > ::
    _M_convert_to_external ( _CharT * __ibuf, streamsize __ilen )
    {

      streamsize __elen;
      streamsize __plen;
      if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
 {
   __elen = _M_file . xsputn ( reinterpret_cast < char * > ( __ibuf ), __ilen );
   __plen = __ilen;
 }
      else
 {


   streamsize __blen = __ilen * _M_codecvt -> max_length ( );
   char * __buf = static_cast < char * > ( __builtin_alloca ( __blen ) );

   char * __bend;
   const char_type * __iend;
   codecvt_base :: result __r;
   __r = _M_codecvt -> out ( _M_state_cur, __ibuf, __ibuf + __ilen,
    __iend, __buf, __buf + __blen, __bend );

   if ( __r == codecvt_base :: ok || __r == codecvt_base :: partial )
     __blen = __bend - __buf;
   else if ( __r == codecvt_base :: noconv )
     {

       __buf = reinterpret_cast < char * > ( __ibuf );
       __blen = __ilen;
     }
   else
     __throw_ios_failure ( ( "basic_filebuf::_M_convert_to_external conversion error" ) );


   __elen = _M_file . xsputn ( __buf, __blen );
   __plen = __blen;


   if ( __r == codecvt_base :: partial && __elen == __plen )
     {
       const char_type * __iresume = __iend;
       streamsize __rlen = this -> pptr ( ) - __iend;
       __r = _M_codecvt -> out ( _M_state_cur, __iresume,
        __iresume + __rlen, __iend, __buf,
        __buf + __blen, __bend );
       if ( __r != codecvt_base :: error )
  {
    __rlen = __bend - __buf;
    __elen = _M_file . xsputn ( __buf, __rlen );
    __plen = __rlen;
  }
       else
  __throw_ios_failure ( ( "basic_filebuf::_M_convert_to_external conversion error" ) );

     }
 }
      return __elen == __plen;
    }
# 524 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
     streamsize
     basic_filebuf < _CharT, _Traits > ::
     xsgetn ( _CharT * __s, streamsize __n )
     {

       streamsize __ret = 0;
       if ( _M_pback_init )
  {
    if ( __n > 0 && this -> gptr ( ) == this -> eback ( ) )
      {
        * __s ++ = * this -> gptr ( );
        this -> gbump ( 1 );
        __ret = 1;
        -- __n;
      }
    _M_destroy_pback ( );
  }




       const bool __testin = _M_mode & ios_base :: in;
       const streamsize __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;

       if ( __n > __buflen && __check_facet ( _M_codecvt ) . always_noconv ( )
    && __testin && ! _M_writing )
  {

    const streamsize __avail = this -> egptr ( ) - this -> gptr ( );
    if ( __avail != 0 )
      {
        if ( __avail == 1 )
   * __s = * this -> gptr ( );
        else
   traits_type :: copy ( __s, this -> gptr ( ), __avail );
        __s += __avail;
        this -> gbump ( __avail );
        __ret += __avail;
        __n -= __avail;
      }



    streamsize __len;
    for (;; )
      {
        __len = _M_file . xsgetn ( reinterpret_cast < char * > ( __s ),
          __n );
        if ( __len == - 1 )
   __throw_ios_failure ( ( "basic_filebuf::xsgetn error reading the file" ) );

        if ( __len == 0 )
   break;

        __n -= __len;
        __ret += __len;
        if ( __n == 0 )
   break;

        __s += __len;
      }

    if ( __n == 0 )
      {
        _M_set_buffer ( 0 );
        _M_reading = true;
      }
    else if ( __len == 0 )
      {



        _M_set_buffer ( - 1 );
        _M_reading = false;
      }
  }
       else
  __ret += __streambuf_type :: xsgetn ( __s, __n );

       return __ret;
     }
# 607 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
     streamsize
     basic_filebuf < _CharT, _Traits > ::
     xsputn ( const _CharT * __s, streamsize __n )
     {



       streamsize __ret = 0;
       const bool __testout = _M_mode & ios_base :: out;
       if ( __check_facet ( _M_codecvt ) . always_noconv ( )
    && __testout && ! _M_reading )
 {

   const streamsize __chunk = 1UL << 10;
   streamsize __bufavail = this -> epptr ( ) - this -> pptr ( );


   if ( ! _M_writing && _M_buf_size > 1 )
     __bufavail = _M_buf_size - 1;

   const streamsize __limit = std :: min ( __chunk, __bufavail );
   if ( __n >= __limit )
     {
       const streamsize __buffill = this -> pptr ( ) - this -> pbase ( );
       const char * __buf = reinterpret_cast < const char * > ( this -> pbase ( ) );
       __ret = _M_file . xsputn_2 ( __buf, __buffill,
           reinterpret_cast < const char * > ( __s ),
           __n );
       if ( __ret == __buffill + __n )
  {
    _M_set_buffer ( 0 );
    _M_writing = true;
  }
       if ( __ret > __buffill )
  __ret -= __buffill;
       else
  __ret = 0;
     }
   else
     __ret = __streambuf_type :: xsputn ( __s, __n );
 }
       else
  __ret = __streambuf_type :: xsputn ( __s, __n );
       return __ret;
    }
# 654 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __streambuf_type *
    basic_filebuf < _CharT, _Traits > ::
    setbuf ( char_type * __s, streamsize __n )
    {
      if ( ! this -> is_open ( ) )
 {
   if ( __s == 0 && __n == 0 )
     _M_buf_size = 1;
   else if ( __s && __n > 0 )
     {

       _M_buf = __s;
       _M_buf_size = __n;
     }
 }
      return this;
    }
# 683 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    seekoff ( off_type __off, ios_base :: seekdir __way, ios_base :: openmode )
    {
      int __width = 0;
      if ( _M_codecvt )
 __width = _M_codecvt -> encoding ( );
      if ( __width < 0 )
 __width = 0;

      pos_type __ret = pos_type ( off_type ( - 1 ) );
      const bool __testfail = __off != 0 && __width <= 0;
      if ( this -> is_open ( ) && ! __testfail )
 {

   _M_destroy_pback ( );






   __state_type __state = _M_state_beg;
   off_type __computed_off = __off * __width;
   if ( _M_reading && __way == ios_base :: cur )
     {
       if ( _M_codecvt -> always_noconv ( ) )
  __computed_off += this -> gptr ( ) - this -> egptr ( );
       else
  {



    const int __gptr_off =
      _M_codecvt -> length ( _M_state_last, _M_ext_buf, _M_ext_next,
           this -> gptr ( ) - this -> eback ( ) );
    __computed_off += _M_ext_buf + __gptr_off - _M_ext_end;



    __state = _M_state_last;
  }
     }
   __ret = _M_seek ( __computed_off, __way, __state );
 }
      return __ret;
    }
# 736 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    seekpos ( pos_type __pos, ios_base :: openmode )
    {
      pos_type __ret = pos_type ( off_type ( - 1 ) );
      if ( this -> is_open ( ) )
 {

   _M_destroy_pback ( );
   __ret = _M_seek ( off_type ( __pos ), ios_base :: beg, __pos . state ( ) );
 }
      return __ret;
    }
# 751 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    _M_seek ( off_type __off, ios_base :: seekdir __way, __state_type __state )
    {
      pos_type __ret = pos_type ( off_type ( - 1 ) );
      if ( _M_terminate_output ( ) )
 {

   __ret = pos_type ( _M_file . seekoff ( __off, __way ) );
   if ( __ret != pos_type ( off_type ( - 1 ) ) )
     {
       _M_reading = false;
       _M_writing = false;
       _M_ext_next = _M_ext_end = _M_ext_buf;
       _M_set_buffer ( - 1 );
       _M_state_cur = __state;
       __ret . state ( _M_state_cur );
     }
 }
      return __ret;
    }
# 774 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    bool
    basic_filebuf < _CharT, _Traits > ::
    _M_terminate_output ( )
    {

      bool __testvalid = true;
      if ( this -> pbase ( ) < this -> pptr ( ) )
 {
   const int_type __tmp = this -> overflow ( );
   if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
     __testvalid = false;
 }


      if ( _M_writing && ! __check_facet ( _M_codecvt ) . always_noconv ( )
   && __testvalid )
 {



   const size_t __blen = 128;
   char __buf [ __blen ];
   codecvt_base :: result __r;
   streamsize __ilen = 0;

   do
     {
       char * __next;
       __r = _M_codecvt -> unshift ( _M_state_cur, __buf,
     __buf + __blen, __next );
       if ( __r == codecvt_base :: error )
  __testvalid = false;
       else if ( __r == codecvt_base :: ok ||
         __r == codecvt_base :: partial )
  {
    __ilen = __next - __buf;
    if ( __ilen > 0 )
      {
        const streamsize __elen = _M_file . xsputn ( __buf, __ilen );
        if ( __elen != __ilen )
   __testvalid = false;
      }
  }
     }
   while ( __r == codecvt_base :: partial && __ilen > 0 && __testvalid );

   if ( __testvalid )
     {




       const int_type __tmp = this -> overflow ( );
       if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
  __testvalid = false;
     }
 }
      return __testvalid;
    }
# 835 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_filebuf < _CharT, _Traits > ::
    sync ( )
    {


      int __ret = 0;
      if ( this -> pbase ( ) < this -> pptr ( ) )
 {
   const int_type __tmp = this -> overflow ( );
   if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
     __ret = - 1;
 }
      return __ret;
    }
# 852 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    imbue ( const locale & __loc )
    {
      bool __testvalid = true;

      const __codecvt_type * _M_codecvt_tmp = 0;
      if ( __builtin_expect ( has_facet < __codecvt_type > ( __loc ), true ) )
 _M_codecvt_tmp = & use_facet < __codecvt_type > ( __loc );

      if ( this -> is_open ( ) )
 {

   if ( ( _M_reading || _M_writing )
       && __check_facet ( _M_codecvt ) . encoding ( ) == - 1 )
     __testvalid = false;
   else
     {
       if ( _M_reading )
  {
    if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
      {
        if ( _M_codecvt_tmp
     && ! __check_facet ( _M_codecvt_tmp ) . always_noconv ( ) )
   __testvalid = this -> seekoff ( 0, ios_base :: cur, _M_mode )
                 != pos_type ( off_type ( - 1 ) );
      }
    else
      {

        _M_ext_next = _M_ext_buf
   + _M_codecvt -> length ( _M_state_last, _M_ext_buf, _M_ext_next,
          this -> gptr ( ) - this -> eback ( ) );
        const streamsize __remainder = _M_ext_end - _M_ext_next;
        if ( __remainder )
   __builtin_memmove ( _M_ext_buf, _M_ext_next, __remainder );

        _M_ext_next = _M_ext_buf;
        _M_ext_end = _M_ext_buf + __remainder;
        _M_set_buffer ( - 1 );
        _M_state_last = _M_state_cur = _M_state_beg;
      }
  }
       else if ( _M_writing && ( __testvalid = _M_terminate_output ( ) ) )
  _M_set_buffer ( - 1 );
     }
 }

      if ( __testvalid )
 _M_codecvt = _M_codecvt_tmp;
      else
 _M_codecvt = 0;
    }
# 911 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_filebuf< char, char_traits< char> > ;
# 912 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ifstream< char, char_traits< char> > ;
# 913 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ofstream< char, char_traits< char> > ;
# 914 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_fstream< char, char_traits< char> > ;
# 917 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_filebuf< wchar_t, char_traits< wchar_t> > ;
# 918 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ifstream< wchar_t, char_traits< wchar_t> > ;
# 919 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ofstream< wchar_t, char_traits< wchar_t> > ;
# 920 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_fstream< wchar_t, char_traits< wchar_t> > ;
# 924 "/usr/include/c++/4.4/bits/fstream.tcc" 3
}
# 68 "../common/inc/helper_string.h"
inline int stringRemoveDelimiter(char delimiter, const char *string)
# 69 "../common/inc/helper_string.h"
{
# 70 "../common/inc/helper_string.h"
int string_start = 0;
# 72 "../common/inc/helper_string.h"
while ((string[string_start]) == delimiter)
# 73 "../common/inc/helper_string.h"
{
# 74 "../common/inc/helper_string.h"
string_start++;
# 75 "../common/inc/helper_string.h"
}
# 77 "../common/inc/helper_string.h"
if (string_start >= (((int)strlen(string)) - 1))
# 78 "../common/inc/helper_string.h"
{
# 79 "../common/inc/helper_string.h"
return 0;
# 80 "../common/inc/helper_string.h"
}
# 82 "../common/inc/helper_string.h"
return string_start;
# 83 "../common/inc/helper_string.h"
}
# 85 "../common/inc/helper_string.h"
inline int getFileExtension(char *filename, char **extension)
# 86 "../common/inc/helper_string.h"
{
# 87 "../common/inc/helper_string.h"
int string_length = ((int)strlen(filename));
# 89 "../common/inc/helper_string.h"
while ((filename[string_length--]) != ('.')) {
# 90 "../common/inc/helper_string.h"
if (string_length == 0) {
# 91 "../common/inc/helper_string.h"
break; }
# 92 "../common/inc/helper_string.h"
}
# 93 "../common/inc/helper_string.h"
if (string_length > 0) { string_length += 2; }
# 95 "../common/inc/helper_string.h"
if (string_length == 0) {
# 96 "../common/inc/helper_string.h"
(*extension) = (__null); } else {
# 98 "../common/inc/helper_string.h"
(*extension) = (&(filename[string_length])); }
# 100 "../common/inc/helper_string.h"
return string_length;
# 101 "../common/inc/helper_string.h"
}
# 104 "../common/inc/helper_string.h"
inline int checkCmdLineFlag(const int argc, const char **argv, const char *string_ref)
# 105 "../common/inc/helper_string.h"
{
# 106 "../common/inc/helper_string.h"
bool bFound = false;
# 108 "../common/inc/helper_string.h"
if (argc >= 1)
# 109 "../common/inc/helper_string.h"
{
# 110 "../common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 111 "../common/inc/helper_string.h"
{
# 112 "../common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 113 "../common/inc/helper_string.h"
const char *string_argv = (&((argv[i])[string_start]));
# 115 "../common/inc/helper_string.h"
const char *equal_pos = strchr(string_argv, '=');
# 116 "../common/inc/helper_string.h"
int argv_length = ((int)((equal_pos == (0)) ? strlen(string_argv) : (equal_pos - string_argv)));
# 118 "../common/inc/helper_string.h"
int length = ((int)strlen(string_ref));
# 120 "../common/inc/helper_string.h"
if ((length == argv_length) && (!(strncasecmp(string_argv, string_ref, length))))
# 121 "../common/inc/helper_string.h"
{
# 123 "../common/inc/helper_string.h"
bFound = true;
# 124 "../common/inc/helper_string.h"
continue;
# 125 "../common/inc/helper_string.h"
}
# 126 "../common/inc/helper_string.h"
} }
# 127 "../common/inc/helper_string.h"
}
# 129 "../common/inc/helper_string.h"
return (int)bFound;
# 130 "../common/inc/helper_string.h"
}
# 132 "../common/inc/helper_string.h"
inline int getCmdLineArgumentInt(const int argc, const char **argv, const char *string_ref)
# 133 "../common/inc/helper_string.h"
{
# 134 "../common/inc/helper_string.h"
bool bFound = false;
# 135 "../common/inc/helper_string.h"
int value = (-1);
# 137 "../common/inc/helper_string.h"
if (argc >= 1)
# 138 "../common/inc/helper_string.h"
{
# 139 "../common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 140 "../common/inc/helper_string.h"
{
# 141 "../common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 142 "../common/inc/helper_string.h"
const char *string_argv = (&((argv[i])[string_start]));
# 143 "../common/inc/helper_string.h"
int length = ((int)strlen(string_ref));
# 145 "../common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 146 "../common/inc/helper_string.h"
{
# 147 "../common/inc/helper_string.h"
if ((length + 1) <= ((int)strlen(string_argv)))
# 148 "../common/inc/helper_string.h"
{
# 149 "../common/inc/helper_string.h"
int auto_inc = (((string_argv[length]) == ('=')) ? 1 : 0);
# 150 "../common/inc/helper_string.h"
value = atoi(&(string_argv[length + auto_inc]));
# 151 "../common/inc/helper_string.h"
} else
# 153 "../common/inc/helper_string.h"
{
# 154 "../common/inc/helper_string.h"
value = 0;
# 155 "../common/inc/helper_string.h"
}
# 157 "../common/inc/helper_string.h"
bFound = true;
# 158 "../common/inc/helper_string.h"
continue;
# 159 "../common/inc/helper_string.h"
}
# 160 "../common/inc/helper_string.h"
} }
# 161 "../common/inc/helper_string.h"
}
# 163 "../common/inc/helper_string.h"
if (bFound)
# 164 "../common/inc/helper_string.h"
{
# 165 "../common/inc/helper_string.h"
return value;
# 166 "../common/inc/helper_string.h"
} else
# 168 "../common/inc/helper_string.h"
{
# 169 "../common/inc/helper_string.h"
return 0;
# 170 "../common/inc/helper_string.h"
}
# 171 "../common/inc/helper_string.h"
}
# 173 "../common/inc/helper_string.h"
inline float getCmdLineArgumentFloat(const int argc, const char **argv, const char *string_ref)
# 174 "../common/inc/helper_string.h"
{
# 175 "../common/inc/helper_string.h"
bool bFound = false;
# 176 "../common/inc/helper_string.h"
float value = (-1);
# 178 "../common/inc/helper_string.h"
if (argc >= 1)
# 179 "../common/inc/helper_string.h"
{
# 180 "../common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 181 "../common/inc/helper_string.h"
{
# 182 "../common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 183 "../common/inc/helper_string.h"
const char *string_argv = (&((argv[i])[string_start]));
# 184 "../common/inc/helper_string.h"
int length = ((int)strlen(string_ref));
# 186 "../common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 187 "../common/inc/helper_string.h"
{
# 188 "../common/inc/helper_string.h"
if ((length + 1) <= ((int)strlen(string_argv)))
# 189 "../common/inc/helper_string.h"
{
# 190 "../common/inc/helper_string.h"
int auto_inc = (((string_argv[length]) == ('=')) ? 1 : 0);
# 191 "../common/inc/helper_string.h"
value = ((float)atof(&(string_argv[length + auto_inc])));
# 192 "../common/inc/helper_string.h"
} else
# 194 "../common/inc/helper_string.h"
{
# 195 "../common/inc/helper_string.h"
value = (0.0F);
# 196 "../common/inc/helper_string.h"
}
# 198 "../common/inc/helper_string.h"
bFound = true;
# 199 "../common/inc/helper_string.h"
continue;
# 200 "../common/inc/helper_string.h"
}
# 201 "../common/inc/helper_string.h"
} }
# 202 "../common/inc/helper_string.h"
}
# 204 "../common/inc/helper_string.h"
if (bFound)
# 205 "../common/inc/helper_string.h"
{
# 206 "../common/inc/helper_string.h"
return value;
# 207 "../common/inc/helper_string.h"
} else
# 209 "../common/inc/helper_string.h"
{
# 210 "../common/inc/helper_string.h"
return 0;
# 211 "../common/inc/helper_string.h"
}
# 212 "../common/inc/helper_string.h"
}
# 214 "../common/inc/helper_string.h"
inline bool getCmdLineArgumentString(const int argc, const char **argv, const char *
# 215 "../common/inc/helper_string.h"
string_ref, char **string_retval)
# 216 "../common/inc/helper_string.h"
{
# 217 "../common/inc/helper_string.h"
bool bFound = false;
# 219 "../common/inc/helper_string.h"
if (argc >= 1)
# 220 "../common/inc/helper_string.h"
{
# 221 "../common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 222 "../common/inc/helper_string.h"
{
# 223 "../common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 224 "../common/inc/helper_string.h"
char *string_argv = ((char *)(&((argv[i])[string_start])));
# 225 "../common/inc/helper_string.h"
int length = ((int)strlen(string_ref));
# 227 "../common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 228 "../common/inc/helper_string.h"
{
# 229 "../common/inc/helper_string.h"
(*string_retval) = (&(string_argv[length + 1]));
# 230 "../common/inc/helper_string.h"
bFound = true;
# 231 "../common/inc/helper_string.h"
continue;
# 232 "../common/inc/helper_string.h"
}
# 233 "../common/inc/helper_string.h"
} }
# 234 "../common/inc/helper_string.h"
}
# 236 "../common/inc/helper_string.h"
if (!bFound)
# 237 "../common/inc/helper_string.h"
{
# 238 "../common/inc/helper_string.h"
(*string_retval) = (__null);
# 239 "../common/inc/helper_string.h"
}
# 241 "../common/inc/helper_string.h"
return bFound;
# 242 "../common/inc/helper_string.h"
}
# 252 "../common/inc/helper_string.h"
inline char *sdkFindFilePath(const char *filename, const char *executable_path)
# 253 "../common/inc/helper_string.h"
{
# 258 "../common/inc/helper_string.h"
const char *searchPath[] = {("./"), ("./common/"), ("./common/data/"), ("./data/"), ("./src/"), ("./src/<executable_name>/data/"), ("./inc/"), ("./0_Simple/"), ("./1_Utilities/"), ("./2_Graphics/"), ("./3_Imaging/"), ("./4_Financial/"), ("./5_Simulations/"), ("./6_Advanced/"), ("./7_CUDALibraries/"), ("../"), ("../common/"), ("../common/data/"), ("../data/"), ("../src/"), ("../inc/"), ("../C/src/<executable_name>/"), ("../C/src/<executable_name>/data/"), ("../C/src/<executable_name>/src/"), ("../C/src/<executable_name>/inc/"), ("../C/"), ("../C/common/"), ("../C/common/data/"), ("../C/data/"), ("../C/src/"), ("../C/inc/"), ("../C/0_Simple/<executable_name>/data/"), ("../C/1_Utilities/<executable_name>/data/"), ("../C/2_Graphics/<executable_name>/data/"), ("../C/3_Imaging/<executable_name>/data/"), ("../C/4_Financial/<executable_name>/data/"), ("../C/5_Simulations/<executable_name>/data/"), ("../C/6_Advanced/<executable_name>/data/"), ("../C/7_CUDALibraries/<executable_name>/data/"), ("../0_Simple/<executable_name>/data/"), ("../1_Utilities/<executable_name>/data/"), ("../2_Graphics/<executable_name>/data/"), ("../3_Imaging/<executable_name>/data/"), ("../4_Financial/<executable_name>/data/"), ("../5_Simulations/<executable_name>/data/"), ("../6_Advanced/<executable_name>/data/"), ("../7_CUDALibraries/<executable_name>/data/"), ("../../"), ("../../common/"), ("../../common/data/"), ("../../data/"), ("../../src/"), ("../../inc/"), ("../../sandbox/<executable_name>/data/"), ("../../0_Simple/<executable_name>/data/"), ("../../1_Utilities/<executable_name>/data/"), ("../../2_Graphics/<executable_name>/data/"), ("../../3_Imaging/<executable_name>/data/"), ("../../4_Financial/<executable_name>/data/"), ("../../5_Simulations/<executable_name>/data/"), ("../../6_Advanced/<executable_name>/data/"), ("../../7_CUDALibraries/<executable_name>/data/"), ("../../../"), ("../../../src/<executable_name>/"), ("../../../src/<executable_name>/data/"), ("../../../src/<executable_name>/src/"), ("../../../src/<executable_name>/inc/"), ("../../../sandbox/<executable_name>/"), ("../../../sandbox/<executable_name>/data/"), ("../../../sandbox/<executable_name>/src/"), ("../../../sandbox/<executable_name>/inc/"), ("../../../0_Simple/<executable_name>/data/"), ("../../../1_Utilities/<executable_name>/data/"), ("../../../2_Graphics/<executable_name>/data/"), ("../../../3_Imaging/<executable_name>/data/"), ("../../../4_Financial/<executable_name>/data/"), ("../../../5_Simulations/<executable_name>/data/"), ("../../../6_Advanced/<executable_name>/data/"), ("../../../7_CUDALibraries/<executable_name>/data/"), ("../../../common/"), ("../../../common/data/"), ("../../../data/")};
# 347 "../common/inc/helper_string.h"
std::string executable_name;
# 349 "../common/inc/helper_string.h"
if (executable_path != (0))
# 350 "../common/inc/helper_string.h"
{
# 351 "../common/inc/helper_string.h"
(executable_name = ((std::basic_string< char, std::char_traits< char> , std::allocator< char> > )(executable_path)));
# 366 "../common/inc/helper_string.h"
size_t delimiter_pos = executable_name.find_last_of('/');
# 367 "../common/inc/helper_string.h"
executable_name.erase(0, delimiter_pos + (1));
# 369 "../common/inc/helper_string.h"
}
# 372 "../common/inc/helper_string.h"
for (unsigned i = (0); i < (sizeof searchPath / sizeof(char *)); ++i) {
# 373 "../common/inc/helper_string.h"
{
# 374 "../common/inc/helper_string.h"
std::string path((searchPath)[i]);
# 375 "../common/inc/helper_string.h"
size_t executable_name_pos = path.find("<executable_name>");
# 379 "../common/inc/helper_string.h"
if (executable_name_pos != std::basic_string< char, std::char_traits< char> , std::allocator< char> > ::npos)
# 380 "../common/inc/helper_string.h"
{
# 381 "../common/inc/helper_string.h"
if (executable_path != (0))
# 382 "../common/inc/helper_string.h"
{
# 383 "../common/inc/helper_string.h"
path.replace(executable_name_pos, strlen("<executable_name>"), executable_name);
# 384 "../common/inc/helper_string.h"
} else
# 386 "../common/inc/helper_string.h"
{
# 388 "../common/inc/helper_string.h"
continue;
# 389 "../common/inc/helper_string.h"
}
# 390 "../common/inc/helper_string.h"
}
# 397 "../common/inc/helper_string.h"
path.append(filename);
# 398 "../common/inc/helper_string.h"
FILE *fp;
# 399 "../common/inc/helper_string.h"
fp = fopen(path.c_str(), "rb");
# 401 "../common/inc/helper_string.h"
if (fp != (__null))
# 402 "../common/inc/helper_string.h"
{
# 403 "../common/inc/helper_string.h"
fclose(fp);
# 406 "../common/inc/helper_string.h"
char *file_path = ((char *)malloc(path.length() + (1)));
# 407 "../common/inc/helper_string.h"
strcpy(file_path, path.c_str());
# 408 "../common/inc/helper_string.h"
return file_path;
# 409 "../common/inc/helper_string.h"
}
# 411 "../common/inc/helper_string.h"
if (fp)
# 412 "../common/inc/helper_string.h"
{
# 413 "../common/inc/helper_string.h"
fclose(fp);
# 414 "../common/inc/helper_string.h"
}
# 415 "../common/inc/helper_string.h"
} }
# 418 "../common/inc/helper_string.h"
return 0;
# 419 "../common/inc/helper_string.h"
}
# 36 "../common/inc/helper_cuda.h"
static const char *_cudaGetErrorEnum(cudaError_t error)
# 37 "../common/inc/helper_cuda.h"
{
# 38 "../common/inc/helper_cuda.h"
switch (error)
# 39 "../common/inc/helper_cuda.h"
{
# 40 "../common/inc/helper_cuda.h"
case cudaSuccess:
# 41 "../common/inc/helper_cuda.h"
return "cudaSuccess";
# 43 "../common/inc/helper_cuda.h"
case cudaErrorMissingConfiguration:
# 44 "../common/inc/helper_cuda.h"
return "cudaErrorMissingConfiguration";
# 46 "../common/inc/helper_cuda.h"
case cudaErrorMemoryAllocation:
# 47 "../common/inc/helper_cuda.h"
return "cudaErrorMemoryAllocation";
# 49 "../common/inc/helper_cuda.h"
case cudaErrorInitializationError:
# 50 "../common/inc/helper_cuda.h"
return "cudaErrorInitializationError";
# 52 "../common/inc/helper_cuda.h"
case cudaErrorLaunchFailure:
# 53 "../common/inc/helper_cuda.h"
return "cudaErrorLaunchFailure";
# 55 "../common/inc/helper_cuda.h"
case cudaErrorPriorLaunchFailure:
# 56 "../common/inc/helper_cuda.h"
return "cudaErrorPriorLaunchFailure";
# 58 "../common/inc/helper_cuda.h"
case cudaErrorLaunchTimeout:
# 59 "../common/inc/helper_cuda.h"
return "cudaErrorLaunchTimeout";
# 61 "../common/inc/helper_cuda.h"
case cudaErrorLaunchOutOfResources:
# 62 "../common/inc/helper_cuda.h"
return "cudaErrorLaunchOutOfResources";
# 64 "../common/inc/helper_cuda.h"
case cudaErrorInvalidDeviceFunction:
# 65 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidDeviceFunction";
# 67 "../common/inc/helper_cuda.h"
case cudaErrorInvalidConfiguration:
# 68 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidConfiguration";
# 70 "../common/inc/helper_cuda.h"
case cudaErrorInvalidDevice:
# 71 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidDevice";
# 73 "../common/inc/helper_cuda.h"
case cudaErrorInvalidValue:
# 74 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidValue";
# 76 "../common/inc/helper_cuda.h"
case cudaErrorInvalidPitchValue:
# 77 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidPitchValue";
# 79 "../common/inc/helper_cuda.h"
case cudaErrorInvalidSymbol:
# 80 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidSymbol";
# 82 "../common/inc/helper_cuda.h"
case cudaErrorMapBufferObjectFailed:
# 83 "../common/inc/helper_cuda.h"
return "cudaErrorMapBufferObjectFailed";
# 85 "../common/inc/helper_cuda.h"
case cudaErrorUnmapBufferObjectFailed:
# 86 "../common/inc/helper_cuda.h"
return "cudaErrorUnmapBufferObjectFailed";
# 88 "../common/inc/helper_cuda.h"
case cudaErrorInvalidHostPointer:
# 89 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidHostPointer";
# 91 "../common/inc/helper_cuda.h"
case cudaErrorInvalidDevicePointer:
# 92 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidDevicePointer";
# 94 "../common/inc/helper_cuda.h"
case cudaErrorInvalidTexture:
# 95 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidTexture";
# 97 "../common/inc/helper_cuda.h"
case cudaErrorInvalidTextureBinding:
# 98 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidTextureBinding";
# 100 "../common/inc/helper_cuda.h"
case cudaErrorInvalidChannelDescriptor:
# 101 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidChannelDescriptor";
# 103 "../common/inc/helper_cuda.h"
case cudaErrorInvalidMemcpyDirection:
# 104 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidMemcpyDirection";
# 106 "../common/inc/helper_cuda.h"
case cudaErrorAddressOfConstant:
# 107 "../common/inc/helper_cuda.h"
return "cudaErrorAddressOfConstant";
# 109 "../common/inc/helper_cuda.h"
case cudaErrorTextureFetchFailed:
# 110 "../common/inc/helper_cuda.h"
return "cudaErrorTextureFetchFailed";
# 112 "../common/inc/helper_cuda.h"
case cudaErrorTextureNotBound:
# 113 "../common/inc/helper_cuda.h"
return "cudaErrorTextureNotBound";
# 115 "../common/inc/helper_cuda.h"
case cudaErrorSynchronizationError:
# 116 "../common/inc/helper_cuda.h"
return "cudaErrorSynchronizationError";
# 118 "../common/inc/helper_cuda.h"
case cudaErrorInvalidFilterSetting:
# 119 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidFilterSetting";
# 121 "../common/inc/helper_cuda.h"
case cudaErrorInvalidNormSetting:
# 122 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidNormSetting";
# 124 "../common/inc/helper_cuda.h"
case cudaErrorMixedDeviceExecution:
# 125 "../common/inc/helper_cuda.h"
return "cudaErrorMixedDeviceExecution";
# 127 "../common/inc/helper_cuda.h"
case cudaErrorCudartUnloading:
# 128 "../common/inc/helper_cuda.h"
return "cudaErrorCudartUnloading";
# 130 "../common/inc/helper_cuda.h"
case cudaErrorUnknown:
# 131 "../common/inc/helper_cuda.h"
return "cudaErrorUnknown";
# 133 "../common/inc/helper_cuda.h"
case cudaErrorNotYetImplemented:
# 134 "../common/inc/helper_cuda.h"
return "cudaErrorNotYetImplemented";
# 136 "../common/inc/helper_cuda.h"
case cudaErrorMemoryValueTooLarge:
# 137 "../common/inc/helper_cuda.h"
return "cudaErrorMemoryValueTooLarge";
# 139 "../common/inc/helper_cuda.h"
case cudaErrorInvalidResourceHandle:
# 140 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidResourceHandle";
# 142 "../common/inc/helper_cuda.h"
case cudaErrorNotReady:
# 143 "../common/inc/helper_cuda.h"
return "cudaErrorNotReady";
# 145 "../common/inc/helper_cuda.h"
case cudaErrorInsufficientDriver:
# 146 "../common/inc/helper_cuda.h"
return "cudaErrorInsufficientDriver";
# 148 "../common/inc/helper_cuda.h"
case cudaErrorSetOnActiveProcess:
# 149 "../common/inc/helper_cuda.h"
return "cudaErrorSetOnActiveProcess";
# 151 "../common/inc/helper_cuda.h"
case cudaErrorInvalidSurface:
# 152 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidSurface";
# 154 "../common/inc/helper_cuda.h"
case cudaErrorNoDevice:
# 155 "../common/inc/helper_cuda.h"
return "cudaErrorNoDevice";
# 157 "../common/inc/helper_cuda.h"
case cudaErrorECCUncorrectable:
# 158 "../common/inc/helper_cuda.h"
return "cudaErrorECCUncorrectable";
# 160 "../common/inc/helper_cuda.h"
case cudaErrorSharedObjectSymbolNotFound:
# 161 "../common/inc/helper_cuda.h"
return "cudaErrorSharedObjectSymbolNotFound";
# 163 "../common/inc/helper_cuda.h"
case cudaErrorSharedObjectInitFailed:
# 164 "../common/inc/helper_cuda.h"
return "cudaErrorSharedObjectInitFailed";
# 166 "../common/inc/helper_cuda.h"
case cudaErrorUnsupportedLimit:
# 167 "../common/inc/helper_cuda.h"
return "cudaErrorUnsupportedLimit";
# 169 "../common/inc/helper_cuda.h"
case cudaErrorDuplicateVariableName:
# 170 "../common/inc/helper_cuda.h"
return "cudaErrorDuplicateVariableName";
# 172 "../common/inc/helper_cuda.h"
case cudaErrorDuplicateTextureName:
# 173 "../common/inc/helper_cuda.h"
return "cudaErrorDuplicateTextureName";
# 175 "../common/inc/helper_cuda.h"
case cudaErrorDuplicateSurfaceName:
# 176 "../common/inc/helper_cuda.h"
return "cudaErrorDuplicateSurfaceName";
# 178 "../common/inc/helper_cuda.h"
case cudaErrorDevicesUnavailable:
# 179 "../common/inc/helper_cuda.h"
return "cudaErrorDevicesUnavailable";
# 181 "../common/inc/helper_cuda.h"
case cudaErrorInvalidKernelImage:
# 182 "../common/inc/helper_cuda.h"
return "cudaErrorInvalidKernelImage";
# 184 "../common/inc/helper_cuda.h"
case cudaErrorNoKernelImageForDevice:
# 185 "../common/inc/helper_cuda.h"
return "cudaErrorNoKernelImageForDevice";
# 187 "../common/inc/helper_cuda.h"
case cudaErrorIncompatibleDriverContext:
# 188 "../common/inc/helper_cuda.h"
return "cudaErrorIncompatibleDriverContext";
# 190 "../common/inc/helper_cuda.h"
case cudaErrorPeerAccessAlreadyEnabled:
# 191 "../common/inc/helper_cuda.h"
return "cudaErrorPeerAccessAlreadyEnabled";
# 193 "../common/inc/helper_cuda.h"
case cudaErrorPeerAccessNotEnabled:
# 194 "../common/inc/helper_cuda.h"
return "cudaErrorPeerAccessNotEnabled";
# 196 "../common/inc/helper_cuda.h"
case cudaErrorDeviceAlreadyInUse:
# 197 "../common/inc/helper_cuda.h"
return "cudaErrorDeviceAlreadyInUse";
# 199 "../common/inc/helper_cuda.h"
case cudaErrorProfilerDisabled:
# 200 "../common/inc/helper_cuda.h"
return "cudaErrorProfilerDisabled";
# 202 "../common/inc/helper_cuda.h"
case cudaErrorProfilerNotInitialized:
# 203 "../common/inc/helper_cuda.h"
return "cudaErrorProfilerNotInitialized";
# 205 "../common/inc/helper_cuda.h"
case cudaErrorProfilerAlreadyStarted:
# 206 "../common/inc/helper_cuda.h"
return "cudaErrorProfilerAlreadyStarted";
# 208 "../common/inc/helper_cuda.h"
case cudaErrorProfilerAlreadyStopped:
# 209 "../common/inc/helper_cuda.h"
return "cudaErrorProfilerAlreadyStopped";
# 226 "../common/inc/helper_cuda.h"
case cudaErrorStartupFailure:
# 227 "../common/inc/helper_cuda.h"
return "cudaErrorStartupFailure";
# 229 "../common/inc/helper_cuda.h"
case cudaErrorApiFailureBase:
# 230 "../common/inc/helper_cuda.h"
return "cudaErrorApiFailureBase";
# 231 "../common/inc/helper_cuda.h"
}
# 233 "../common/inc/helper_cuda.h"
return "<unknown>";
# 234 "../common/inc/helper_cuda.h"
}
# 679 "../common/inc/helper_cuda.h"
template< class T> bool
# 680 "../common/inc/helper_cuda.h"
check(T result, const char *const func, const char *const file, const int line)
# 681 "../common/inc/helper_cuda.h"
{
# 682 "../common/inc/helper_cuda.h"
if (result)
# 683 "../common/inc/helper_cuda.h"
{
# 684 "../common/inc/helper_cuda.h"
fprintf(stderr, "CUDA error at %s:%d code=%d(%s) \"%s\" \n", file, line, static_cast< unsigned>(result), _cudaGetErrorEnum(result), func);
# 704 "../common/inc/helper_cuda.h"
return true;
# 705 "../common/inc/helper_cuda.h"
} else
# 707 "../common/inc/helper_cuda.h"
{
# 708 "../common/inc/helper_cuda.h"
return false;
# 709 "../common/inc/helper_cuda.h"
}
# 710 "../common/inc/helper_cuda.h"
}
# 719 "../common/inc/helper_cuda.h"
inline void __getLastCudaError(const char *errorMessage, const char *file, const int line)
# 720 "../common/inc/helper_cuda.h"
{
# 721 "../common/inc/helper_cuda.h"
cudaError_t err = cudaGetLastError();
# 723 "../common/inc/helper_cuda.h"
if ((cudaSuccess) != err)
# 724 "../common/inc/helper_cuda.h"
{
# 725 "../common/inc/helper_cuda.h"
fprintf(stderr, "%s(%i) : getLastCudaError() CUDA error : %s : (%d) %s.\n", file, line, errorMessage, (int)err, cudaGetErrorString(err));
# 727 "../common/inc/helper_cuda.h"
exit(1);
# 728 "../common/inc/helper_cuda.h"
}
# 729 "../common/inc/helper_cuda.h"
}
# 737 "../common/inc/helper_cuda.h"
inline int _ConvertSMVer2Cores(int major, int minor)
# 738 "../common/inc/helper_cuda.h"
{
# 744 "../common/inc/helper_cuda.h"
typedef
# 741 "../common/inc/helper_cuda.h"
struct {
# 742 "../common/inc/helper_cuda.h"
int SM;
# 743 "../common/inc/helper_cuda.h"
int Cores;
# 744 "../common/inc/helper_cuda.h"
} sSMtoCores;
# 746 "../common/inc/helper_cuda.h"
sSMtoCores nGpuArchCoresPerSM[] = {{16, 8}, {17, 8}, {18, 8}, {19, 8}, {32, 32}, {33, 48}, {48, 192}, {53, 192}, {(-1), (-1)}};
# 759 "../common/inc/helper_cuda.h"
int index = 0;
# 761 "../common/inc/helper_cuda.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1))
# 762 "../common/inc/helper_cuda.h"
{
# 763 "../common/inc/helper_cuda.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor))
# 764 "../common/inc/helper_cuda.h"
{
# 765 "../common/inc/helper_cuda.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 766 "../common/inc/helper_cuda.h"
}
# 768 "../common/inc/helper_cuda.h"
index++;
# 769 "../common/inc/helper_cuda.h"
}
# 772 "../common/inc/helper_cuda.h"
printf("MapSMtoCores for SM %d.%d is undefined.  Default to use %d Cores/SM\n", major, minor, ((nGpuArchCoresPerSM)[7]).Cores);
# 773 "../common/inc/helper_cuda.h"
return ((nGpuArchCoresPerSM)[7]).Cores;
# 774 "../common/inc/helper_cuda.h"
}
# 779 "../common/inc/helper_cuda.h"
inline int gpuDeviceInit(int devID)
# 780 "../common/inc/helper_cuda.h"
{
# 781 "../common/inc/helper_cuda.h"
int deviceCount;
# 782 "../common/inc/helper_cuda.h"
check(cudaGetDeviceCount(&deviceCount), "cudaGetDeviceCount(&deviceCount)", "../common/inc/helper_cuda.h", 782);
# 784 "../common/inc/helper_cuda.h"
if (deviceCount == 0)
# 785 "../common/inc/helper_cuda.h"
{
# 786 "../common/inc/helper_cuda.h"
fprintf(stderr, "gpuDeviceInit() CUDA error: no devices supporting CUDA.\n");
# 787 "../common/inc/helper_cuda.h"
exit(1);
# 788 "../common/inc/helper_cuda.h"
}
# 790 "../common/inc/helper_cuda.h"
if (devID < 0)
# 791 "../common/inc/helper_cuda.h"
{
# 792 "../common/inc/helper_cuda.h"
devID = 0;
# 793 "../common/inc/helper_cuda.h"
}
# 795 "../common/inc/helper_cuda.h"
if (devID > (deviceCount - 1))
# 796 "../common/inc/helper_cuda.h"
{
# 797 "../common/inc/helper_cuda.h"
fprintf(stderr, "\n");
# 798 "../common/inc/helper_cuda.h"
fprintf(stderr, ">> %d CUDA capable GPU device(s) detected. <<\n", deviceCount);
# 799 "../common/inc/helper_cuda.h"
fprintf(stderr, ">> gpuDeviceInit (-device=%d) is not a valid GPU device. <<\n", devID);
# 800 "../common/inc/helper_cuda.h"
fprintf(stderr, "\n");
# 801 "../common/inc/helper_cuda.h"
return -devID;
# 802 "../common/inc/helper_cuda.h"
}
# 804 "../common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 805 "../common/inc/helper_cuda.h"
check(cudaGetDeviceProperties(&deviceProp, devID), "cudaGetDeviceProperties(&deviceProp, devID)", "../common/inc/helper_cuda.h", 805);
# 807 "../common/inc/helper_cuda.h"
if ((deviceProp.computeMode) == (cudaComputeModeProhibited))
# 808 "../common/inc/helper_cuda.h"
{
# 809 "../common/inc/helper_cuda.h"
fprintf(stderr, "Error: device is running in <Compute Mode Prohibited>, no threads can use ::cudaSetDevice().\n");
# 810 "../common/inc/helper_cuda.h"
return -1;
# 811 "../common/inc/helper_cuda.h"
}
# 813 "../common/inc/helper_cuda.h"
if ((deviceProp.major) < 1)
# 814 "../common/inc/helper_cuda.h"
{
# 815 "../common/inc/helper_cuda.h"
fprintf(stderr, "gpuDeviceInit(): GPU device does not support CUDA.\n");
# 816 "../common/inc/helper_cuda.h"
exit(1);
# 817 "../common/inc/helper_cuda.h"
}
# 819 "../common/inc/helper_cuda.h"
check(cudaSetDevice(devID), "cudaSetDevice(devID)", "../common/inc/helper_cuda.h", 819);
# 820 "../common/inc/helper_cuda.h"
printf("gpuDeviceInit() CUDA Device [%d]: \"%s\n", devID, deviceProp.name);
# 822 "../common/inc/helper_cuda.h"
return devID;
# 823 "../common/inc/helper_cuda.h"
}
# 826 "../common/inc/helper_cuda.h"
inline int gpuGetMaxGflopsDeviceId()
# 827 "../common/inc/helper_cuda.h"
{
# 828 "../common/inc/helper_cuda.h"
int current_device = 0, sm_per_multiproc = 0;
# 829 "../common/inc/helper_cuda.h"
int max_compute_perf = 0, max_perf_device = 0;
# 830 "../common/inc/helper_cuda.h"
int device_count = 0, best_SM_arch = 0;
# 831 "../common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 832 "../common/inc/helper_cuda.h"
cudaGetDeviceCount(&device_count);
# 835 "../common/inc/helper_cuda.h"
while (current_device < device_count)
# 836 "../common/inc/helper_cuda.h"
{
# 837 "../common/inc/helper_cuda.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 840 "../common/inc/helper_cuda.h"
if ((deviceProp.computeMode) != (cudaComputeModeProhibited))
# 841 "../common/inc/helper_cuda.h"
{
# 842 "../common/inc/helper_cuda.h"
if (((deviceProp.major) > 0) && ((deviceProp.major) < 9999))
# 843 "../common/inc/helper_cuda.h"
{
# 844 "../common/inc/helper_cuda.h"
best_SM_arch = ((best_SM_arch > (deviceProp.major)) ? best_SM_arch : (deviceProp.major));
# 845 "../common/inc/helper_cuda.h"
}
# 846 "../common/inc/helper_cuda.h"
}
# 848 "../common/inc/helper_cuda.h"
current_device++;
# 849 "../common/inc/helper_cuda.h"
}
# 852 "../common/inc/helper_cuda.h"
current_device = 0;
# 854 "../common/inc/helper_cuda.h"
while (current_device < device_count)
# 855 "../common/inc/helper_cuda.h"
{
# 856 "../common/inc/helper_cuda.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 859 "../common/inc/helper_cuda.h"
if ((deviceProp.computeMode) != (cudaComputeModeProhibited))
# 860 "../common/inc/helper_cuda.h"
{
# 861 "../common/inc/helper_cuda.h"
if (((deviceProp.major) == 9999) && ((deviceProp.minor) == 9999))
# 862 "../common/inc/helper_cuda.h"
{
# 863 "../common/inc/helper_cuda.h"
sm_per_multiproc = 1;
# 864 "../common/inc/helper_cuda.h"
} else
# 866 "../common/inc/helper_cuda.h"
{
# 867 "../common/inc/helper_cuda.h"
sm_per_multiproc = _ConvertSMVer2Cores(deviceProp.major, deviceProp.minor);
# 868 "../common/inc/helper_cuda.h"
}
# 870 "../common/inc/helper_cuda.h"
int compute_perf = (((deviceProp.multiProcessorCount) * sm_per_multiproc) * (deviceProp.clockRate));
# 872 "../common/inc/helper_cuda.h"
if (compute_perf > max_compute_perf)
# 873 "../common/inc/helper_cuda.h"
{
# 875 "../common/inc/helper_cuda.h"
if (best_SM_arch > 2)
# 876 "../common/inc/helper_cuda.h"
{
# 878 "../common/inc/helper_cuda.h"
if ((deviceProp.major) == best_SM_arch)
# 879 "../common/inc/helper_cuda.h"
{
# 880 "../common/inc/helper_cuda.h"
max_compute_perf = compute_perf;
# 881 "../common/inc/helper_cuda.h"
max_perf_device = current_device;
# 882 "../common/inc/helper_cuda.h"
}
# 883 "../common/inc/helper_cuda.h"
} else
# 885 "../common/inc/helper_cuda.h"
{
# 886 "../common/inc/helper_cuda.h"
max_compute_perf = compute_perf;
# 887 "../common/inc/helper_cuda.h"
max_perf_device = current_device;
# 888 "../common/inc/helper_cuda.h"
}
# 889 "../common/inc/helper_cuda.h"
}
# 890 "../common/inc/helper_cuda.h"
}
# 892 "../common/inc/helper_cuda.h"
++current_device;
# 893 "../common/inc/helper_cuda.h"
}
# 895 "../common/inc/helper_cuda.h"
return max_perf_device;
# 896 "../common/inc/helper_cuda.h"
}
# 900 "../common/inc/helper_cuda.h"
inline int findCudaDevice(int argc, const char **argv)
# 901 "../common/inc/helper_cuda.h"
{
# 902 "../common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 903 "../common/inc/helper_cuda.h"
int devID = 0;
# 906 "../common/inc/helper_cuda.h"
if (checkCmdLineFlag(argc, argv, "device"))
# 907 "../common/inc/helper_cuda.h"
{
# 908 "../common/inc/helper_cuda.h"
devID = getCmdLineArgumentInt(argc, argv, "device=");
# 910 "../common/inc/helper_cuda.h"
if (devID < 0)
# 911 "../common/inc/helper_cuda.h"
{
# 912 "../common/inc/helper_cuda.h"
printf("Invalid command line parameter\n ");
# 913 "../common/inc/helper_cuda.h"
exit(1);
# 914 "../common/inc/helper_cuda.h"
} else
# 916 "../common/inc/helper_cuda.h"
{
# 917 "../common/inc/helper_cuda.h"
devID = gpuDeviceInit(devID);
# 919 "../common/inc/helper_cuda.h"
if (devID < 0)
# 920 "../common/inc/helper_cuda.h"
{
# 921 "../common/inc/helper_cuda.h"
printf("exiting...\n");
# 922 "../common/inc/helper_cuda.h"
exit(1);
# 923 "../common/inc/helper_cuda.h"
}
# 924 "../common/inc/helper_cuda.h"
}
# 925 "../common/inc/helper_cuda.h"
} else
# 927 "../common/inc/helper_cuda.h"
{
# 929 "../common/inc/helper_cuda.h"
devID = gpuGetMaxGflopsDeviceId();
# 930 "../common/inc/helper_cuda.h"
check(cudaSetDevice(devID), "cudaSetDevice(devID)", "../common/inc/helper_cuda.h", 930);
# 931 "../common/inc/helper_cuda.h"
check(cudaGetDeviceProperties(&deviceProp, devID), "cudaGetDeviceProperties(&deviceProp, devID)", "../common/inc/helper_cuda.h", 931);
# 932 "../common/inc/helper_cuda.h"
printf("GPU Device %d: \"%s\" with compute capability %d.%d\n\n", devID, deviceProp.name, deviceProp.major, deviceProp.minor);
# 933 "../common/inc/helper_cuda.h"
}
# 935 "../common/inc/helper_cuda.h"
return devID;
# 936 "../common/inc/helper_cuda.h"
}
# 939 "../common/inc/helper_cuda.h"
inline bool checkCudaCapabilities(int major_version, int minor_version)
# 940 "../common/inc/helper_cuda.h"
{
# 941 "../common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 942 "../common/inc/helper_cuda.h"
(deviceProp.major) = 0;
# 943 "../common/inc/helper_cuda.h"
(deviceProp.minor) = 0;
# 944 "../common/inc/helper_cuda.h"
int dev;
# 946 "../common/inc/helper_cuda.h"
check(cudaGetDevice(&dev), "cudaGetDevice(&dev)", "../common/inc/helper_cuda.h", 946);
# 947 "../common/inc/helper_cuda.h"
check(cudaGetDeviceProperties(&deviceProp, dev), "cudaGetDeviceProperties(&deviceProp, dev)", "../common/inc/helper_cuda.h", 947);
# 949 "../common/inc/helper_cuda.h"
if (((deviceProp.major) > major_version) || (((deviceProp.major) == major_version) && ((deviceProp.minor) >= minor_version)))
# 951 "../common/inc/helper_cuda.h"
{
# 952 "../common/inc/helper_cuda.h"
printf("> Device %d: <%16s >, Compute SM %d.%d detected\n", dev, deviceProp.name, deviceProp.major, deviceProp.minor);
# 953 "../common/inc/helper_cuda.h"
return true;
# 954 "../common/inc/helper_cuda.h"
} else
# 956 "../common/inc/helper_cuda.h"
{
# 957 "../common/inc/helper_cuda.h"
printf("No GPU device was found that can support CUDA compute capability %d.%d.\n", major_version, minor_version);
# 958 "../common/inc/helper_cuda.h"
return false;
# 959 "../common/inc/helper_cuda.h"
}
# 960 "../common/inc/helper_cuda.h"
}
# 82 "/usr/local/cuda-5.0//include/curand.h"
enum curandStatus {
# 83 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_SUCCESS,
# 84 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_VERSION_MISMATCH = 100,
# 85 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_NOT_INITIALIZED,
# 86 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_ALLOCATION_FAILED,
# 87 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_TYPE_ERROR,
# 88 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_OUT_OF_RANGE,
# 89 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_LENGTH_NOT_MULTIPLE,
# 90 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_DOUBLE_PRECISION_REQUIRED,
# 91 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_LAUNCH_FAILURE = 201,
# 92 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_PREEXISTING_FAILURE,
# 93 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_INITIALIZATION_FAILED,
# 94 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_ARCH_MISMATCH,
# 95 "/usr/local/cuda-5.0//include/curand.h"
CURAND_STATUS_INTERNAL_ERROR = 999
# 96 "/usr/local/cuda-5.0//include/curand.h"
};
# 102 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandStatus curandStatus_t; }
# 108 "/usr/local/cuda-5.0//include/curand.h"
enum curandRngType {
# 109 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_TEST,
# 110 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_PSEUDO_DEFAULT = 100,
# 111 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_PSEUDO_XORWOW,
# 112 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_PSEUDO_MRG32K3A = 121,
# 113 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_PSEUDO_MTGP32 = 141,
# 114 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_QUASI_DEFAULT = 200,
# 115 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_QUASI_SOBOL32,
# 116 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_QUASI_SCRAMBLED_SOBOL32,
# 117 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_QUASI_SOBOL64,
# 118 "/usr/local/cuda-5.0//include/curand.h"
CURAND_RNG_QUASI_SCRAMBLED_SOBOL64
# 119 "/usr/local/cuda-5.0//include/curand.h"
};
# 125 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandRngType curandRngType_t; }
# 131 "/usr/local/cuda-5.0//include/curand.h"
enum curandOrdering {
# 132 "/usr/local/cuda-5.0//include/curand.h"
CURAND_ORDERING_PSEUDO_BEST = 100,
# 133 "/usr/local/cuda-5.0//include/curand.h"
CURAND_ORDERING_PSEUDO_DEFAULT,
# 134 "/usr/local/cuda-5.0//include/curand.h"
CURAND_ORDERING_PSEUDO_SEEDED,
# 135 "/usr/local/cuda-5.0//include/curand.h"
CURAND_ORDERING_QUASI_DEFAULT = 201
# 136 "/usr/local/cuda-5.0//include/curand.h"
};
# 142 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandOrdering curandOrdering_t; }
# 148 "/usr/local/cuda-5.0//include/curand.h"
enum curandDirectionVectorSet {
# 149 "/usr/local/cuda-5.0//include/curand.h"
CURAND_DIRECTION_VECTORS_32_JOEKUO6 = 101,
# 150 "/usr/local/cuda-5.0//include/curand.h"
CURAND_SCRAMBLED_DIRECTION_VECTORS_32_JOEKUO6,
# 151 "/usr/local/cuda-5.0//include/curand.h"
CURAND_DIRECTION_VECTORS_64_JOEKUO6,
# 152 "/usr/local/cuda-5.0//include/curand.h"
CURAND_SCRAMBLED_DIRECTION_VECTORS_64_JOEKUO6
# 153 "/usr/local/cuda-5.0//include/curand.h"
};
# 159 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandDirectionVectorSet curandDirectionVectorSet_t; }
# 166 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef unsigned curandDirectionVectors32_t[32]; }
# 173 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef unsigned long long curandDirectionVectors64_t[64]; }
# 179 "/usr/local/cuda-5.0//include/curand.h"
struct curandGenerator_st;
# 185 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandGenerator_st *curandGenerator_t; }
# 192 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef double curandDistribution_st; }
# 193 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandDistribution_st *curandDistribution_t; }
# 194 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef struct curandDistributionShift_st *curandDistributionShift_t; }
# 200 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef struct curandDistributionM2Shift_st *curandDistributionM2Shift_t; }
# 201 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef struct curandHistogramM2_st *curandHistogramM2_t; }
# 202 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef unsigned curandHistogramM2K_st; }
# 203 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandHistogramM2K_st *curandHistogramM2K_t; }
# 204 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandDistribution_st curandHistogramM2V_st; }
# 205 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandHistogramM2V_st *curandHistogramM2V_t; }
# 207 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef struct curandDiscreteDistribution_st *curandDiscreteDistribution_t; }
# 214 "/usr/local/cuda-5.0//include/curand.h"
enum curandMethod {
# 215 "/usr/local/cuda-5.0//include/curand.h"
CURAND_CHOOSE_BEST,
# 216 "/usr/local/cuda-5.0//include/curand.h"
CURAND_ITR,
# 217 "/usr/local/cuda-5.0//include/curand.h"
CURAND_KNUTH,
# 218 "/usr/local/cuda-5.0//include/curand.h"
CURAND_HITR,
# 219 "/usr/local/cuda-5.0//include/curand.h"
CURAND_M1,
# 220 "/usr/local/cuda-5.0//include/curand.h"
CURAND_M2,
# 221 "/usr/local/cuda-5.0//include/curand.h"
CURAND_BINARY_SEARCH,
# 222 "/usr/local/cuda-5.0//include/curand.h"
CURAND_DISCRETE_GAUSS,
# 223 "/usr/local/cuda-5.0//include/curand.h"
CURAND_REJECTION,
# 224 "/usr/local/cuda-5.0//include/curand.h"
CURAND_DEVICE_API,
# 225 "/usr/local/cuda-5.0//include/curand.h"
CURAND_FAST_REJECTION,
# 226 "/usr/local/cuda-5.0//include/curand.h"
CURAND_3RD,
# 227 "/usr/local/cuda-5.0//include/curand.h"
CURAND_DEFINITION,
# 228 "/usr/local/cuda-5.0//include/curand.h"
CURAND_POISSON
# 229 "/usr/local/cuda-5.0//include/curand.h"
};
# 231 "/usr/local/cuda-5.0//include/curand.h"
extern "C" { typedef curandMethod curandMethod_t; }
# 308 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandCreateGenerator(curandGenerator_t * , curandRngType_t );
# 376 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandCreateGeneratorHost(curandGenerator_t * , curandRngType_t );
# 390 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandDestroyGenerator(curandGenerator_t );
# 406 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGetVersion(int * );
# 422 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandSetStream(curandGenerator_t , cudaStream_t );
# 441 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandSetPseudoRandomGeneratorSeed(curandGenerator_t , unsigned long long );
# 459 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandSetGeneratorOffset(curandGenerator_t , unsigned long long );
# 483 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandSetGeneratorOrdering(curandGenerator_t , curandOrdering_t );
# 503 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandSetQuasiRandomGeneratorDimensions(curandGenerator_t , unsigned );
# 532 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerate(curandGenerator_t , unsigned * , size_t );
# 560 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateLongLong(curandGenerator_t , unsigned long long * , size_t );
# 588 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateUniform(curandGenerator_t , float * , size_t );
# 617 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateUniformDouble(curandGenerator_t , double * , size_t );
# 662 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateNormal(curandGenerator_t , float * , size_t , float , float );
# 709 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateNormalDouble(curandGenerator_t , double * , size_t , double , double );
# 756 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateLogNormal(curandGenerator_t , float * , size_t , float , float );
# 804 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateLogNormalDouble(curandGenerator_t , double * , size_t , double , double );
# 829 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandCreatePoissonDistribution(double , curandDiscreteDistribution_t * );
# 845 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandDestroyDistribution(curandDiscreteDistribution_t );
# 877 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGeneratePoisson(curandGenerator_t , unsigned * , size_t , double );
# 881 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGeneratePoissonMethod(curandGenerator_t , unsigned * , size_t , double , curandMethod_t );
# 904 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGenerateSeeds(curandGenerator_t );
# 928 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGetDirectionVectors32(curandDirectionVectors32_t * [], curandDirectionVectorSet_t );
# 946 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGetScrambleConstants32(unsigned ** );
# 970 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGetDirectionVectors64(curandDirectionVectors64_t * [], curandDirectionVectorSet_t );
# 988 "/usr/local/cuda-5.0//include/curand.h"
extern "C" curandStatus_t curandGetScrambleConstants64(unsigned long long ** );
# 5 "/usr/local/cuda-5.0//include/curandDiscrete.h"
struct curandDistributionShift_st {
# 6 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandDistribution_t probability;
# 7 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandDistribution_t host_probability;
# 8 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned shift;
# 9 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned length;
# 10 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned host_gen;
# 11 "/usr/local/cuda-5.0//include/curandDiscrete.h"
};
# 13 "/usr/local/cuda-5.0//include/curandDiscrete.h"
struct curandHistogramM2_st {
# 14 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandHistogramM2V_t V;
# 15 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandHistogramM2V_t host_V;
# 16 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandHistogramM2K_t K;
# 17 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandHistogramM2K_t host_K;
# 18 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned host_gen;
# 19 "/usr/local/cuda-5.0//include/curandDiscrete.h"
};
# 22 "/usr/local/cuda-5.0//include/curandDiscrete.h"
struct curandDistributionM2Shift_st {
# 23 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandHistogramM2_t histogram;
# 24 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandHistogramM2_t host_histogram;
# 25 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned shift;
# 26 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned length;
# 27 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned host_gen;
# 28 "/usr/local/cuda-5.0//include/curandDiscrete.h"
};
# 30 "/usr/local/cuda-5.0//include/curandDiscrete.h"
struct curandDiscreteDistribution_st {
# 31 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandDiscreteDistribution_t self_host_ptr;
# 32 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandDistributionM2Shift_t M2;
# 33 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandDistributionM2Shift_t host_M2;
# 34 "/usr/local/cuda-5.0//include/curandDiscrete.h"
double stddev;
# 35 "/usr/local/cuda-5.0//include/curandDiscrete.h"
double mean;
# 36 "/usr/local/cuda-5.0//include/curandDiscrete.h"
curandMethod_t method;
# 37 "/usr/local/cuda-5.0//include/curandDiscrete.h"
unsigned host_gen;
# 38 "/usr/local/cuda-5.0//include/curandDiscrete.h"
};
# 56 "/usr/local/cuda-5.0//include/curand_precalc.h"
static unsigned precalc_xorwow_matrix[8][800];
# 276 "/usr/local/cuda-5.0//include/curand_precalc.h"
static unsigned precalc_xorwow_matrix_host[8][800] = {{(850664906UL), (2293210629UL), (1517805917UL), (1215500405UL), (1612415445UL), (645388200UL), (824349799UL), (3517232886UL), (4075591755UL), (3089899292UL), (4249786064UL), (3811424903UL), (1100783479UL), (53649761UL), (2817264826UL), (3159462529UL), (1654848550UL), (950025444UL), (3095510002UL), (4080567211UL), (4111078399UL), (3241719305UL), (2788212779UL), (4256963770UL), (2426893717UL), (4190211142UL), (1420776905UL), (3780537969UL), (1102912875UL), (1657948873UL), (3354905256UL), (2519610308UL), (515777663UL), (3396785394UL), (1832603711UL), (1154211550UL), (1915690212UL), (1933919046UL), (789578337UL), (337961173UL), (1359089498UL), (2249086205UL), (3417955173UL), (862571348UL), (528120760UL), (1265685672UL), (1970052076UL), (3585976752UL), (3645339918UL), (312171257UL), (1360991400UL), (1994321680UL), (2327168468UL), (2540437053UL), (1180483641UL), (2217962701UL), (182726833UL), (590204372UL), (1904496495UL), (2545607041UL), (3697978033UL), (1084030545UL), (3397906968UL), (2192325323UL), (2704204176UL), (1069092002UL), (2364406907UL), (1578647245UL), (3561974633UL), (3437665426UL), (1464127305UL), (1616628807UL), (2243114101UL), (3639967880UL), (1702613633UL), (2437350057UL), (39991274UL), (2024323584UL), (3795072940UL), (3604530798UL), (443099203UL), (643536212UL), (1919517328UL), (3931285769UL), (427935569UL), (276421624UL), (2492081750UL), (262729512UL), (3088549877UL), (2922650665UL), (1816283755UL), (4246096489UL), (842575914UL), (1460435650UL), (3050522190UL), (2640849794UL), (3697925816UL), (3465779075UL), (3856929655UL), (1365559780UL), (2897029415UL), (2747033756UL), (3611830629UL), (1891542518UL), (1897590206UL), (437451803UL), (677924906UL), (123809117UL), (3940574372UL), (687640291UL), (3488484529UL), (470218446UL), (1092571016UL), (1537938503UL), (1073323937UL), (611300083UL), (3809285994UL), (3975678726UL), (925845389UL), (2514775760UL), (2859302390UL), (2761919483UL), (993285307UL), (164095287UL), (3736193671UL), (2078946336UL), (1418537059UL), (1202525920UL), (4234029440UL), (1313593624UL), (2484428922UL), (1833969372UL), (661495122UL), (2217907395UL), (2795045321UL), (2950835531UL), (1402379354UL), (351314168UL), (1902476749UL), (1914974334UL), (2873973176UL), (1321203603UL), (3316118265UL), (3282193947UL), (1342191737UL), (793441242UL), (3281524559UL), (296088733UL), (487851702UL), (712098215UL), (1388727135UL), (1705533557UL), (3557800292UL), (399729516UL), (1355829467UL), (291276309UL), (421164833UL), (1318404599UL), (2064519128UL), (1161612642UL), (2076623594UL), (850664906UL), (2293210629UL), (1517805917UL), (1215500405UL), (3847487204UL), (645388200UL), (824349799UL), (3517232886UL), (4075591755UL), (2755872609UL), (4249786064UL), (3811424903UL), (1100783479UL), (53649761UL), (1417544262UL), (3159462529UL), (1654848550UL), (950025444UL), (3095510002UL), (1908900347UL), (4111078399UL), (3241719305UL), (2788212779UL), (4256963770UL), (3750258343UL), (4190211142UL), (1420776905UL), (3780537969UL), (1102912875UL), (1690550UL), (3354905256UL), (2519610308UL), (515777663UL), (3396785394UL), (2658162202UL), (1154211550UL), (1915690212UL), (1933919046UL), (789578337UL), (189880016UL), (1359089498UL), (2249086205UL), (3417955173UL), (862571348UL), (998719835UL), (1265685672UL), (1970052076UL), (3585976752UL), (3645339918UL), (2973042959UL), (1360991400UL), (1994321680UL), (2327168468UL), (2540437053UL), (2283905032UL), (2217962701UL), (182726833UL), (590204372UL), (1904496495UL), (110719262UL), (3697978033UL), (1084030545UL), (3397906968UL), (2192325323UL), (4133333579UL), (1069092002UL), (2364406907UL), (1578647245UL), (3561974633UL), (3629845331UL), (1464127305UL), (1616628807UL), (2243114101UL), (3639967880UL), (3256744141UL), (2437350057UL), (39991274UL), (2024323584UL), (3795072940UL), (1024703328UL), (443099203UL), (643536212UL), (1919517328UL), (3931285769UL), (2755167056UL), (276421624UL), (2492081750UL), (262729512UL), (3088549877UL), (2817867653UL), (1816283755UL), (4246096489UL), (842575914UL), (1460435650UL), (2276077438UL), (2640849794UL), (3697925816UL), (3465779075UL), (3856929655UL), (130551477UL), (2897029415UL), (2747033756UL), (3611830629UL), (1891542518UL), (804565809UL), (437451803UL), (677924906UL), (123809117UL), (3940574372UL), (2446610749UL), (3488484529UL), (470218446UL), (1092571016UL), (1537938503UL), (1502147484UL), (611300083UL), (3809285994UL), (3975678726UL), (925845389UL), (872826112UL), (2859302390UL), (2761919483UL), (993285307UL), (164095287UL), (3901654538UL), (2078946336UL), (1418537059UL), (1202525920UL), (4234029440UL), (704759480UL), (2484428922UL), (1833969372UL), (661495122UL), (2217907395UL), (3287413716UL), (2950835531UL), (1402379354UL), (351314168UL), (1902476749UL), (2033316109UL), (2873973176UL), (1321203603UL), (3316118265UL), (3282193947UL), (1316780684UL), (793441242UL), (3281524559UL), (296088733UL), (487851702UL), (314311643UL), (1388727135UL), (1705533557UL), (3557800292UL), (399729516UL), (1660074989UL), (291276309UL), (421164833UL), (1318404599UL), (2064519128UL), (3156334112UL), (2076623594UL), (850664906UL), (2293210629UL), (1517805917UL), (335452425UL), (3847487204UL), (645388200UL), (824349799UL), (3517232886UL), (954487767UL), (2755872609UL), (4249786064UL), (3811424903UL), (1100783479UL), (3408594583UL), (1417544262UL), (3159462529UL), (1654848550UL), (950025444UL), (324339737UL), (1908900347UL), (4111078399UL), (3241719305UL), (2788212779UL), (1890540205UL), (3750258343UL), (4190211142UL), (1420776905UL), (3780537969UL), (3716648585UL), (1690550UL), (3354905256UL), (2519610308UL), (515777663UL), (3758156132UL), (2658162202UL), (1154211550UL), (1915690212UL), (1933919046UL), (844149171UL), (189880016UL), (1359089498UL), (2249086205UL), (3417955173UL), (1031812215UL), (998719835UL), (1265685672UL), (1970052076UL), (3585976752UL), (3174204115UL), (2973042959UL), (1360991400UL), (1994321680UL), (2327168468UL), (714016907UL), (2283905032UL), (2217962701UL), (182726833UL), (590204372UL), (2151450260UL), (110719262UL), (3697978033UL), (1084030545UL), (3397906968UL), (767772303UL), (4133333579UL), (1069092002UL), (2364406907UL), (1578647245UL), (42955292UL), (3629845331UL), (1464127305UL), (1616628807UL), (2243114101UL), (3222189776UL), (3256744141UL), (2437350057UL), (39991274UL), (2024323584UL), (3142424684UL), (1024703328UL), (443099203UL), (643536212UL), (1919517328UL), (918511196UL), (2755167056UL), (276421624UL), (2492081750UL), (262729512UL), (4246877536UL), (2817867653UL), (1816283755UL), (4246096489UL), (842575914UL), (1425765936UL), (2276077438UL), (2640849794UL), (3697925816UL), (3465779075UL), (1491702526UL), (130551477UL), (2897029415UL), (2747033756UL), (3611830629UL), (1844578694UL), (804565809UL), (437451803UL), (677924906UL), (123809117UL), (3419189841UL), (2446610749UL), (3488484529UL), (470218446UL), (1092571016UL), (3272535988UL), (1502147484UL), (611300083UL), (3809285994UL), (3975678726UL), (2853681168UL), (872826112UL), (2859302390UL), (2761919483UL), (993285307UL), (1434560128UL), (3901654538UL), (2078946336UL), (1418537059UL), (1202525920UL), (2530097881UL), (704759480UL), (2484428922UL), (1833969372UL), (661495122UL), (503878844UL), (3287413716UL), (2950835531UL), (1402379354UL), (351314168UL), (4131886119UL), (2033316109UL), (2873973176UL), (1321203603UL), (3316118265UL), (237900321UL), (1316780684UL), (793441242UL), (3281524559UL), (296088733UL), (1730738847UL), (314311643UL), (1388727135UL), (1705533557UL), (3557800292UL), (1553835665UL), (1660074989UL), (291276309UL), (421164833UL), (1318404599UL), (964731488UL), (3156334112UL), (2076623594UL), (850664906UL), (2293210629UL), (1105350579UL), (335452425UL), (3847487204UL), (645388200UL), (824349799UL), (2789953706UL), (954487767UL), (2755872609UL), (4249786064UL), (3811424903UL), (3937839949UL), (3408594583UL), (1417544262UL), (3159462529UL), (1654848550UL), (624060530UL), (324339737UL), (1908900347UL), (4111078399UL), (3241719305UL), (2294919498UL), (1890540205UL), (3750258343UL), (4190211142UL), (1420776905UL), (2279133729UL), (3716648585UL), (1690550UL), (3354905256UL), (2519610308UL), (3563975602UL), (3758156132UL), (2658162202UL), (1154211550UL), (1915690212UL), (3505586122UL), (844149171UL), (189880016UL), (1359089498UL), (2249086205UL), (2389487504UL), (1031812215UL), (998719835UL), (1265685672UL), (1970052076UL), (2798611919UL), (3174204115UL), (2973042959UL), (1360991400UL), (1994321680UL), (1684134678UL), (714016907UL), (2283905032UL), (2217962701UL), (182726833UL), (1734988742UL), (2151450260UL), (110719262UL), (3697978033UL), (1084030545UL), (159906818UL), (767772303UL), (4133333579UL), (1069092002UL), (2364406907UL), (1290801202UL), (42955292UL), (3629845331UL), (1464127305UL), (1616628807UL), (987794861UL), (3222189776UL), (3256744141UL), (2437350057UL), (39991274UL), (3644076751UL), (3142424684UL), (1024703328UL), (443099203UL), (643536212UL), (1487589384UL), (918511196UL), (2755167056UL), (276421624UL), (2492081750UL), (137688638UL), (4246877536UL), (2817867653UL), (1816283755UL), (4246096489UL), (1518475380UL), (1425765936UL), (2276077438UL), (2640849794UL), (3697925816UL), (4226506771UL), (1491702526UL), (130551477UL), (2897029415UL), (2747033756UL), (2033599579UL), (1844578694UL), (804565809UL), (437451803UL), (677924906UL), (2749065512UL), (3419189841UL), (2446610749UL), (3488484529UL), (470218446UL), (290444026UL), (3272535988UL), (1502147484UL), (611300083UL), (3809285994UL), (2546040767UL), (2853681168UL), (872826112UL), (2859302390UL), (2761919483UL), (4097961150UL), (1434560128UL), (3901654538UL), (2078946336UL), (1418537059UL), (2725734455UL), (2530097881UL), (704759480UL), (2484428922UL), (1833969372UL), (3999408333UL), (503878844UL), (3287413716UL), (2950835531UL), (1402379354UL), (3861442503UL), (4131886119UL), (2033316109UL), (2873973176UL), (1321203603UL), (1267331405UL), (237900321UL), (1316780684UL), (793441242UL), (3281524559UL), (1273427916UL), (1730738847UL), (314311643UL), (1388727135UL), (1705533557UL), (1474310231UL), (1553835665UL), (1660074989UL), (291276309UL), (421164833UL), (3884815658UL), (3088049345UL), (3307042227UL), (3228948601UL), (1717605083UL), (1864502063UL), (3799516572UL), (2372822470UL), (2691586476UL), (1172840854UL), (1577099080UL), (870101866UL), (2139291021UL), (406996656UL), (255568268UL), (897760202UL), (674745664UL), (885214361UL), (3753233375UL), (3015215223UL), (1711461259UL), (3241363282UL), (2125360928UL), (2493601640UL), (2350228245UL), (3434627328UL), (2095642963UL), (3360932494UL), (3287396242UL), (4070512427UL), (3415702664UL), (1958354224UL), (3280206940UL), (3929504236UL), (3390499817UL), (4144225735UL), (3621750606UL), (3205006592UL), (3495743785UL), (269239326UL), (2181299371UL), (2898796651UL), (2613623219UL), (3988711298UL), (2162437858UL), (949553433UL), (3289670000UL), (3559525307UL), (3366925567UL), (2112148665UL), (955626393UL), (1790865381UL), (699223558UL), (3889584301UL), (1020750250UL), (4105283899UL), (2295851818UL), (4045668915UL), (2224770025UL), (766386910UL), (4265157386UL), (89139307UL), (2099710177UL), (1012450874UL), (1875492446UL), (1927399417UL), (767450812UL), (654474783UL), (4265293038UL), (4041215389UL), (4102336947UL), (4263617328UL), (2135826340UL), (2317231535UL), (3773895729UL), (403151111UL), (1400693138UL), (4255050194UL), (755369466UL), (2325764302UL), (2617301159UL), (4165707294UL), (1206304709UL), (2415645397UL), (4276004841UL), (1457022279UL), (662660652UL), (795140282UL), (828519889UL), (805830562UL), (1179976369UL), (2212548232UL), (755708248UL), (1034682071UL), (899950902UL), (1906046264UL), (1861009040UL), (310711525UL), (920739741UL), (2322414272UL), (3179236470UL), (81822135UL), (4111390320UL), (1800166783UL), (112253014UL), (688771939UL), (1050990794UL), (3124647483UL), (287052171UL), (1363630156UL), (3447798279UL), (1405733552UL), (3075862538UL), (1682808202UL), (1595154222UL), (1173705692UL), (680713285UL), (2748212230UL), (568610527UL), (3434965538UL), (1114942930UL), (2835858745UL), (2575992250UL), (3243355150UL), (2127580225UL), (1855934450UL), (3915941751UL), (2228679809UL), (1514780124UL), (1506688039UL), (1033083295UL), (793807083UL), (1120681149UL), (4105670165UL), (3999570340UL), (2083020131UL), (1213356023UL), (3684882757UL), (3375797774UL), (3577986103UL), (2092046164UL), (2593847443UL), (1826450612UL), (367828409UL), (3198272513UL), (1941316667UL), (943707510UL), (907134807UL), (2020457947UL), (1462193665UL), (2964617539UL), (4216491663UL), (2625270800UL), (2395371467UL), (3691003028UL), (3659016793UL), (2381847054UL), (3513105567UL), (3013019506UL), (2731245927UL)}, {(1680024716UL), (2112340059UL), (3387475367UL), (2080916186UL), (1431532386UL), (3907378472UL), (2636491350UL), (2176128529UL), (2236616671UL), (3736851460UL), (2604001339UL), (3893075234UL), (3495918635UL), (4116370522UL), (1384310379UL), (3660102574UL), (2030233939UL), (2759207091UL), (49347923UL), (97526506UL), (2566932710UL), (1566181275UL), (3127827248UL), (578401670UL), (1499229308UL), (2581732444UL), (279715551UL), (809690877UL), (1438444015UL), (878935323UL), (1495277039UL), (3417305339UL), (2858903785UL), (3074075088UL), (603749086UL), (2370669734UL), (391683868UL), (3933465331UL), (2884128106UL), (1478317876UL), (1864988335UL), (2925823809UL), (4133578805UL), (218104493UL), (368652174UL), (1998600344UL), (1109346044UL), (1716435313UL), (415435111UL), (91393686UL), (2536620737UL), (1440068573UL), (481874870UL), (142128108UL), (988825519UL), (2077118779UL), (2858045339UL), (4068162251UL), (115593872UL), (1364244587UL), (3550167006UL), (3728768059UL), (1772423685UL), (2504624145UL), (248732306UL), (1412607307UL), (4081166331UL), (154438218UL), (1652901877UL), (3932533490UL), (3142799969UL), (3154073676UL), (3112018078UL), (2757873595UL), (2364830126UL), (2855791484UL), (793851407UL), (507785167UL), (263713916UL), (4060700051UL), (3291978358UL), (1584226715UL), (2546417990UL), (450747961UL), (2951067700UL), (2706009093UL), (1788578194UL), (4030171132UL), (2610979903UL), (573420740UL), (4269115622UL), (2180305819UL), (2646894726UL), (716649335UL), (3875715683UL), (853428184UL), (2436760738UL), (4190071217UL), (2754423535UL), (540698101UL), (4082489821UL), (741976046UL), (267559495UL), (1591532642UL), (2500610323UL), (3203248679UL), (147312102UL), (2772368222UL), (1412987047UL), (2295185573UL), (1932341300UL), (898396308UL), (1837129999UL), (3113914292UL), (2613354524UL), (3141601915UL), (276087167UL), (1887389351UL), (757801450UL), (3752353732UL), (2745818074UL), (1442953464UL), (3802648347UL), (223728071UL), (2169947402UL), (1338125300UL), (3642174036UL), (2794462634UL), (2326349851UL), (862746036UL), (3577092599UL), (627103363UL), (552173564UL), (4142604459UL), (2310329406UL), (583522272UL), (189323282UL), (1217612313UL), (73550248UL), (2434692829UL), (2757269706UL), (2392210091UL), (3032922600UL), (3573904125UL), (2897178037UL), (2632631469UL), (3085332665UL), (3775619904UL), (2563291734UL), (1351375865UL), (4043427793UL), (1803743084UL), (3112116579UL), (522940594UL), (2690374983UL), (2613871529UL), (3810037031UL), (1765642390UL), (534554747UL), (1930852049UL), (2264349344UL), (1680024716UL), (2112340059UL), (3387475367UL), (2080916186UL), (75966494UL), (3907378472UL), (2636491350UL), (2176128529UL), (2236616671UL), (2372987046UL), (2604001339UL), (3893075234UL), (3495918635UL), (4116370522UL), (534929913UL), (3660102574UL), (2030233939UL), (2759207091UL), (49347923UL), (987575186UL), (2566932710UL), (1566181275UL), (3127827248UL), (578401670UL), (3731513754UL), (2581732444UL), (279715551UL), (809690877UL), (1438444015UL), (2185866850UL), (1495277039UL), (3417305339UL), (2858903785UL), (3074075088UL), (4198538376UL), (2370669734UL), (391683868UL), (3933465331UL), (2884128106UL), (1400216510UL), (1864988335UL), (2925823809UL), (4133578805UL), (218104493UL), (2798390374UL), (1998600344UL), (1109346044UL), (1716435313UL), (415435111UL), (1892535124UL), (2536620737UL), (1440068573UL), (481874870UL), (142128108UL), (329082740UL), (2077118779UL), (2858045339UL), (4068162251UL), (115593872UL), (2644000449UL), (3550167006UL), (3728768059UL), (1772423685UL), (2504624145UL), (2140118619UL), (1412607307UL), (4081166331UL), (154438218UL), (1652901877UL), (3804911318UL), (3142799969UL), (3154073676UL), (3112018078UL), (2757873595UL), (50297646UL), (2855791484UL), (793851407UL), (507785167UL), (263713916UL), (3324588195UL), (3291978358UL), (1584226715UL), (2546417990UL), (450747961UL), (3455625012UL), (2706009093UL), (1788578194UL), (4030171132UL), (2610979903UL), (3835380965UL), (4269115622UL), (2180305819UL), (2646894726UL), (716649335UL), (2607142354UL), (853428184UL), (2436760738UL), (4190071217UL), (2754423535UL), (456808691UL), (4082489821UL), (741976046UL), (267559495UL), (1591532642UL), (2722205042UL), (3203248679UL), (147312102UL), (2772368222UL), (1412987047UL), (1950543946UL), (1932341300UL), (898396308UL), (1837129999UL), (3113914292UL), (428616392UL), (3141601915UL), (276087167UL), (1887389351UL), (757801450UL), (963534966UL), (2745818074UL), (1442953464UL), (3802648347UL), (223728071UL), (229039300UL), (1338125300UL), (3642174036UL), (2794462634UL), (2326349851UL), (206115203UL), (3577092599UL), (627103363UL), (552173564UL), (4142604459UL), (1492461846UL), (583522272UL), (189323282UL), (1217612313UL), (73550248UL), (3552211807UL), (2757269706UL), (2392210091UL), (3032922600UL), (3573904125UL), (810640644UL), (2632631469UL), (3085332665UL), (3775619904UL), (2563291734UL), (922608790UL), (4043427793UL), (1803743084UL), (3112116579UL), (522940594UL), (1785093944UL), (2613871529UL), (3810037031UL), (1765642390UL), (534554747UL), (3528050076UL), (2264349344UL), (1680024716UL), (2112340059UL), (3387475367UL), (3295682653UL), (75966494UL), (3907378472UL), (2636491350UL), (2176128529UL), (3574915532UL), (2372987046UL), (2604001339UL), (3893075234UL), (3495918635UL), (1280296085UL), (534929913UL), (3660102574UL), (2030233939UL), (2759207091UL), (299776535UL), (987575186UL), (2566932710UL), (1566181275UL), (3127827248UL), (3874691533UL), (3731513754UL), (2581732444UL), (279715551UL), (809690877UL), (3100791084UL), (2185866850UL), (1495277039UL), (3417305339UL), (2858903785UL), (1310351481UL), (4198538376UL), (2370669734UL), (391683868UL), (3933465331UL), (2749085130UL), (1400216510UL), (1864988335UL), (2925823809UL), (4133578805UL), (3352814594UL), (2798390374UL), (1998600344UL), (1109346044UL), (1716435313UL), (1571752941UL), (1892535124UL), (2536620737UL), (1440068573UL), (481874870UL), (2485033697UL), (329082740UL), (2077118779UL), (2858045339UL), (4068162251UL), (3837440666UL), (2644000449UL), (3550167006UL), (3728768059UL), (1772423685UL), (1176559812UL), (2140118619UL), (1412607307UL), (4081166331UL), (154438218UL), (2902622972UL), (3804911318UL), (3142799969UL), (3154073676UL), (3112018078UL), (2403391233UL), (50297646UL), (2855791484UL), (793851407UL), (507785167UL), (2351826747UL), (3324588195UL), (3291978358UL), (1584226715UL), (2546417990UL), (746876926UL), (3455625012UL), (2706009093UL), (1788578194UL), (4030171132UL), (3779307353UL), (3835380965UL), (4269115622UL), (2180305819UL), (2646894726UL), (2602235234UL), (2607142354UL), (853428184UL), (2436760738UL), (4190071217UL), (2066757692UL), (456808691UL), (4082489821UL), (741976046UL), (267559495UL), (3001080633UL), (2722205042UL), (3203248679UL), (147312102UL), (2772368222UL), (89950260UL), (1950543946UL), (1932341300UL), (898396308UL), (1837129999UL), (947911286UL), (428616392UL), (3141601915UL), (276087167UL), (1887389351UL), (2583987247UL), (963534966UL), (2745818074UL), (1442953464UL), (3802648347UL), (4229124441UL), (229039300UL), (1338125300UL), (3642174036UL), (2794462634UL), (2472155633UL), (206115203UL), (3577092599UL), (627103363UL), (552173564UL), (2586882739UL), (1492461846UL), (583522272UL), (189323282UL), (1217612313UL), (3501549884UL), (3552211807UL), (2757269706UL), (2392210091UL), (3032922600UL), (740675778UL), (810640644UL), (2632631469UL), (3085332665UL), (3775619904UL), (3643289881UL), (922608790UL), (4043427793UL), (1803743084UL), (3112116579UL), (2213337398UL), (1785093944UL), (2613871529UL), (3810037031UL), (1765642390UL), (762472016UL), (3528050076UL), (2264349344UL), (1680024716UL), (2112340059UL), (1372272974UL), (3295682653UL), (75966494UL), (3907378472UL), (2636491350UL), (3117471955UL), (3574915532UL), (2372987046UL), (2604001339UL), (3893075234UL), (915576383UL), (1280296085UL), (534929913UL), (3660102574UL), (2030233939UL), (346368350UL), (299776535UL), (987575186UL), (2566932710UL), (1566181275UL), (3535223896UL), (3874691533UL), (3731513754UL), (2581732444UL), (279715551UL), (2456894951UL), (3100791084UL), (2185866850UL), (1495277039UL), (3417305339UL), (1618871086UL), (1310351481UL), (4198538376UL), (2370669734UL), (391683868UL), (2009676005UL), (2749085130UL), (1400216510UL), (1864988335UL), (2925823809UL), (58955107UL), (3352814594UL), (2798390374UL), (1998600344UL), (1109346044UL), (3273979614UL), (1571752941UL), (1892535124UL), (2536620737UL), (1440068573UL), (1174168447UL), (2485033697UL), (329082740UL), (2077118779UL), (2858045339UL), (4062921629UL), (3837440666UL), (2644000449UL), (3550167006UL), (3728768059UL), (2642133401UL), (1176559812UL), (2140118619UL), (1412607307UL), (4081166331UL), (3124905304UL), (2902622972UL), (3804911318UL), (3142799969UL), (3154073676UL), (1449454613UL), (2403391233UL), (50297646UL), (2855791484UL), (793851407UL), (3514201526UL), (2351826747UL), (3324588195UL), (3291978358UL), (1584226715UL), (3636681672UL), (746876926UL), (3455625012UL), (2706009093UL), (1788578194UL), (3451519459UL), (3779307353UL), (3835380965UL), (4269115622UL), (2180305819UL), (3987989524UL), (2602235234UL), (2607142354UL), (853428184UL), (2436760738UL), (2151617107UL), (2066757692UL), (456808691UL), (4082489821UL), (741976046UL), (3590081269UL), (3001080633UL), (2722205042UL), (3203248679UL), (147312102UL), (3432947806UL), (89950260UL), (1950543946UL), (1932341300UL), (898396308UL), (3828432864UL), (947911286UL), (428616392UL), (3141601915UL), (276087167UL), (2517666433UL), (2583987247UL), (963534966UL), (2745818074UL), (1442953464UL), (2223986807UL), (4229124441UL), (229039300UL), (1338125300UL), (3642174036UL), (1053796945UL), (2472155633UL), (206115203UL), (3577092599UL), (627103363UL), (1113276084UL), (2586882739UL), (1492461846UL), (583522272UL), (189323282UL), (1490604990UL), (3501549884UL), (3552211807UL), (2757269706UL), (2392210091UL), (3545407532UL), (740675778UL), (810640644UL), (2632631469UL), (3085332665UL), (755862267UL), (3643289881UL), (922608790UL), (4043427793UL), (1803743084UL), (1954166630UL), (2213337398UL), (1785093944UL), (2613871529UL), (3810037031UL), (3042935707UL), (3162182177UL), (2791346436UL), (1901925289UL), (863100941UL), (3367519168UL), (1972623238UL), (3664303070UL), (604922059UL), (3026817982UL), (1436412310UL), (4096180631UL), (1597561857UL), (4206212303UL), (4127914332UL), (3228677359UL), (3985733659UL), (3597290113UL), (4251197894UL), (3451370603UL), (609679338UL), (3360835257UL), (1372239885UL), (638572328UL), (3806422284UL), (3974147336UL), (1804280837UL), (4209089291UL), (2021797469UL), (3557188838UL), (409727186UL), (2114649178UL), (687702120UL), (2542445992UL), (1235991799UL), (460479179UL), (2008348175UL), (887884478UL), (3942327811UL), (2999928223UL), (4171339789UL), (2286339235UL), (1293442231UL), (1575942850UL), (76122475UL), (1440527701UL), (2006558403UL), (1544148172UL), (895899367UL), (681826913UL), (4094701935UL), (3995413790UL), (1027509154UL), (2264990896UL), (1938238113UL), (213430250UL), (222469320UL), (609726517UL), (3581538106UL), (492802663UL), (120480843UL), (1720004062UL), (1132674507UL), (911082758UL), (2909148131UL), (566658805UL), (3964114445UL), (3483602509UL), (1793438750UL), (165562604UL), (3641830063UL), (2394205521UL), (3404874822UL), (1672998096UL), (916151953UL), (1141264477UL), (3171661340UL), (3803396219UL), (3018337382UL), (1863902683UL), (2474641928UL), (3250365071UL), (3897886220UL), (1219701051UL), (51332576UL), (1358614881UL), (1707407492UL), (3670647816UL), (923357625UL), (343687395UL), (3991339686UL), (3913575403UL), (1267727936UL), (4001357856UL), (3820224848UL), (2942896724UL), (3505936742UL), (1403285299UL), (1992762049UL), (567748449UL), (2202721585UL), (2781324216UL), (1724850068UL), (2408314541UL), (3073975813UL), (3992810029UL), (2475242354UL), (540562053UL), (2185198943UL), (3759352041UL), (3373885614UL), (1132999410UL), (1097554565UL), (4089342358UL), (3239542922UL), (2451748646UL), (407290679UL), (3188103200UL), (1708016248UL), (26848241UL), (2796711130UL), (3090711568UL), (4068389322UL), (3420916085UL), (3137567033UL), (2877819818UL), (22133454UL), (4629160UL), (3703695249UL), (1920151708UL), (1175452162UL), (130015299UL), (3331834713UL), (1099225384UL), (689254331UL), (1851083761UL), (2654970209UL), (3259297936UL), (3742819314UL), (3524284766UL), (2291819083UL), (3494031861UL), (16242889UL), (3545082774UL), (1997878108UL), (777447699UL), (4244916543UL), (3508640253UL), (3782278393UL), (2107258964UL), (2139074576UL), (1383217899UL), (2337934322UL), (3181899620UL), (1285955765UL), (2989610020UL), (3326862146UL), (1168587380UL), (801203532UL), (3020809957UL)}, {(3810471203UL), (1017064446UL), (1595207573UL), (441087832UL), (3326746890UL), (3294064431UL), (167972517UL), (3625210015UL), (1011845006UL), (2980240819UL), (1778354660UL), (3041730987UL), (1598611350UL), (2015169745UL), (2321724978UL), (3390812967UL), (2432904511UL), (113261909UL), (3957193232UL), (3806115908UL), (2965828929UL), (2035392295UL), (3500116619UL), (2881232416UL), (1672212265UL), (1607201428UL), (425148945UL), (1262591961UL), (2221781268UL), (4215047456UL), (2148245850UL), (2787488981UL), (1077262192UL), (2085467561UL), (3053954888UL), (3584435116UL), (3013084787UL), (287099941UL), (1290407232UL), (4078552287UL), (2658945475UL), (4251530898UL), (2403086478UL), (2884923598UL), (3545110453UL), (4105390090UL), (343200643UL), (3189888821UL), (4086304363UL), (3466483195UL), (259435633UL), (2846377387UL), (497258846UL), (272775541UL), (985737911UL), (2957688879UL), (2180784344UL), (3434619542UL), (3643384838UL), (2228652440UL), (3107480718UL), (2208729807UL), (596436263UL), (3255120711UL), (3248886970UL), (519242965UL), (602979109UL), (1619614UL), (1391563565UL), (56262588UL), (1584463910UL), (1849038201UL), (728022295UL), (848624947UL), (1813827408UL), (428214945UL), (1246345586UL), (4213351865UL), (168985863UL), (456608054UL), (4277869380UL), (3886828599UL), (2264054549UL), (3110967170UL), (3138175314UL), (2649164828UL), (3369378320UL), (3648350039UL), (3524848759UL), (1468470706UL), (3558859222UL), (2669673235UL), (831851874UL), (4285651092UL), (4224147373UL), (1088456706UL), (231954609UL), (3118005852UL), (225508069UL), (883105389UL), (856371341UL), (2001356578UL), (639336670UL), (2363501707UL), (3622399552UL), (4024065226UL), (1093546838UL), (4263608561UL), (1852072422UL), (425195042UL), (2441102396UL), (296426333UL), (384641750UL), (3559334435UL), (1757327033UL), (1016016207UL), (3595686646UL), (24777793UL), (623926105UL), (2169195923UL), (1779396793UL), (646997837UL), (1459728476UL), (2644865980UL), (1994581089UL), (3956278544UL), (919592580UL), (2153558858UL), (2029633394UL), (3837501009UL), (4016560170UL), (484838096UL), (3652199054UL), (1971790561UL), (605295089UL), (637470291UL), (278970544UL), (3574824693UL), (295866521UL), (1755035156UL), (2542341803UL), (1588716357UL), (1502596918UL), (4124554133UL), (3547049843UL), (1768033045UL), (1531734630UL), (101448323UL), (3233017580UL), (1793222944UL), (3187853500UL), (186000900UL), (803444571UL), (2820254958UL), (2009384608UL), (2384668855UL), (2222812920UL), (633608665UL), (2028480056UL), (1258028235UL), (545095949UL), (3810471203UL), (1017064446UL), (1595207573UL), (441087832UL), (899068662UL), (3294064431UL), (167972517UL), (3625210015UL), (1011845006UL), (3951305793UL), (1778354660UL), (3041730987UL), (1598611350UL), (2015169745UL), (1885149424UL), (3390812967UL), (2432904511UL), (113261909UL), (3957193232UL), (3953443155UL), (2965828929UL), (2035392295UL), (3500116619UL), (2881232416UL), (329153573UL), (1607201428UL), (425148945UL), (1262591961UL), (2221781268UL), (78028761UL), (2148245850UL), (2787488981UL), (1077262192UL), (2085467561UL), (647235899UL), (3584435116UL), (3013084787UL), (287099941UL), (1290407232UL), (1467385694UL), (2658945475UL), (4251530898UL), (2403086478UL), (2884923598UL), (3489351040UL), (4105390090UL), (343200643UL), (3189888821UL), (4086304363UL), (3521512280UL), (259435633UL), (2846377387UL), (497258846UL), (272775541UL), (1367093111UL), (2957688879UL), (2180784344UL), (3434619542UL), (3643384838UL), (411877686UL), (3107480718UL), (2208729807UL), (596436263UL), (3255120711UL), (584605030UL), (519242965UL), (602979109UL), (1619614UL), (1391563565UL), (3902518209UL), (1584463910UL), (1849038201UL), (728022295UL), (848624947UL), (1932969318UL), (428214945UL), (1246345586UL), (4213351865UL), (168985863UL), (2770345237UL), (4277869380UL), (3886828599UL), (2264054549UL), (3110967170UL), (2953581033UL), (2649164828UL), (3369378320UL), (3648350039UL), (3524848759UL), (2380353977UL), (3558859222UL), (2669673235UL), (831851874UL), (4285651092UL), (1214052447UL), (1088456706UL), (231954609UL), (3118005852UL), (225508069UL), (1766983646UL), (856371341UL), (2001356578UL), (639336670UL), (2363501707UL), (1782816591UL), (4024065226UL), (1093546838UL), (4263608561UL), (1852072422UL), (1149716600UL), (2441102396UL), (296426333UL), (384641750UL), (3559334435UL), (2391309970UL), (1016016207UL), (3595686646UL), (24777793UL), (623926105UL), (362098678UL), (1779396793UL), (646997837UL), (1459728476UL), (2644865980UL), (3238673748UL), (3956278544UL), (919592580UL), (2153558858UL), (2029633394UL), (115778559UL), (4016560170UL), (484838096UL), (3652199054UL), (1971790561UL), (737357475UL), (637470291UL), (278970544UL), (3574824693UL), (295866521UL), (3989745853UL), (2542341803UL), (1588716357UL), (1502596918UL), (4124554133UL), (3016849744UL), (1768033045UL), (1531734630UL), (101448323UL), (3233017580UL), (4157527581UL), (3187853500UL), (186000900UL), (803444571UL), (2820254958UL), (1980528062UL), (2384668855UL), (2222812920UL), (633608665UL), (2028480056UL), (3166710281UL), (545095949UL), (3810471203UL), (1017064446UL), (1595207573UL), (693962828UL), (899068662UL), (3294064431UL), (167972517UL), (3625210015UL), (1486040398UL), (3951305793UL), (1778354660UL), (3041730987UL), (1598611350UL), (2859363132UL), (1885149424UL), (3390812967UL), (2432904511UL), (113261909UL), (664880478UL), (3953443155UL), (2965828929UL), (2035392295UL), (3500116619UL), (558081801UL), (329153573UL), (1607201428UL), (425148945UL), (1262591961UL), (3716247699UL), (78028761UL), (2148245850UL), (2787488981UL), (1077262192UL), (4206362947UL), (647235899UL), (3584435116UL), (3013084787UL), (287099941UL), (2536781098UL), (1467385694UL), (2658945475UL), (4251530898UL), (2403086478UL), (3075072413UL), (3489351040UL), (4105390090UL), (343200643UL), (3189888821UL), (2540485172UL), (3521512280UL), (259435633UL), (2846377387UL), (497258846UL), (2442427327UL), (1367093111UL), (2957688879UL), (2180784344UL), (3434619542UL), (1593967423UL), (411877686UL), (3107480718UL), (2208729807UL), (596436263UL), (1048686529UL), (584605030UL), (519242965UL), (602979109UL), (1619614UL), (2072745381UL), (3902518209UL), (1584463910UL), (1849038201UL), (728022295UL), (846033949UL), (1932969318UL), (428214945UL), (1246345586UL), (4213351865UL), (1066373275UL), (2770345237UL), (4277869380UL), (3886828599UL), (2264054549UL), (1877859690UL), (2953581033UL), (2649164828UL), (3369378320UL), (3648350039UL), (2537763389UL), (2380353977UL), (3558859222UL), (2669673235UL), (831851874UL), (522748140UL), (1214052447UL), (1088456706UL), (231954609UL), (3118005852UL), (1381269315UL), (1766983646UL), (856371341UL), (2001356578UL), (639336670UL), (667275675UL), (1782816591UL), (4024065226UL), (1093546838UL), (4263608561UL), (2057337961UL), (1149716600UL), (2441102396UL), (296426333UL), (384641750UL), (340523210UL), (2391309970UL), (1016016207UL), (3595686646UL), (24777793UL), (3094832341UL), (362098678UL), (1779396793UL), (646997837UL), (1459728476UL), (1169681568UL), (3238673748UL), (3956278544UL), (919592580UL), (2153558858UL), (388335108UL), (115778559UL), (4016560170UL), (484838096UL), (3652199054UL), (1764858181UL), (737357475UL), (637470291UL), (278970544UL), (3574824693UL), (3671458900UL), (3989745853UL), (2542341803UL), (1588716357UL), (1502596918UL), (2102871406UL), (3016849744UL), (1768033045UL), (1531734630UL), (101448323UL), (3964942332UL), (4157527581UL), (3187853500UL), (186000900UL), (803444571UL), (3425652083UL), (1980528062UL), (2384668855UL), (2222812920UL), (633608665UL), (3035373876UL), (3166710281UL), (545095949UL), (3810471203UL), (1017064446UL), (669282349UL), (693962828UL), (899068662UL), (3294064431UL), (167972517UL), (2007256988UL), (1486040398UL), (3951305793UL), (1778354660UL), (3041730987UL), (2827768941UL), (2859363132UL), (1885149424UL), (3390812967UL), (2432904511UL), (3700915653UL), (664880478UL), (3953443155UL), (2965828929UL), (2035392295UL), (1461208330UL), (558081801UL), (329153573UL), (1607201428UL), (425148945UL), (1700881129UL), (3716247699UL), (78028761UL), (2148245850UL), (2787488981UL), (2706775080UL), (4206362947UL), (647235899UL), (3584435116UL), (3013084787UL), (2958545221UL), (2536781098UL), (1467385694UL), (2658945475UL), (4251530898UL), (2241012567UL), (3075072413UL), (3489351040UL), (4105390090UL), (343200643UL), (490164649UL), (2540485172UL), (3521512280UL), (259435633UL), (2846377387UL), (4073611831UL), (2442427327UL), (1367093111UL), (2957688879UL), (2180784344UL), (1835510773UL), (1593967423UL), (411877686UL), (3107480718UL), (2208729807UL), (3306732468UL), (1048686529UL), (584605030UL), (519242965UL), (602979109UL), (2978864605UL), (2072745381UL), (3902518209UL), (1584463910UL), (1849038201UL), (3284115169UL), (846033949UL), (1932969318UL), (428214945UL), (1246345586UL), (194166002UL), (1066373275UL), (2770345237UL), (4277869380UL), (3886828599UL), (1874087886UL), (1877859690UL), (2953581033UL), (2649164828UL), (3369378320UL), (4145454028UL), (2537763389UL), (2380353977UL), (3558859222UL), (2669673235UL), (739345884UL), (522748140UL), (1214052447UL), (1088456706UL), (231954609UL), (3605603781UL), (1381269315UL), (1766983646UL), (856371341UL), (2001356578UL), (2049940324UL), (667275675UL), (1782816591UL), (4024065226UL), (1093546838UL), (152524382UL), (2057337961UL), (1149716600UL), (2441102396UL), (296426333UL), (3195130788UL), (340523210UL), (2391309970UL), (1016016207UL), (3595686646UL), (180492441UL), (3094832341UL), (362098678UL), (1779396793UL), (646997837UL), (2458167607UL), (1169681568UL), (3238673748UL), (3956278544UL), (919592580UL), (3421005218UL), (388335108UL), (115778559UL), (4016560170UL), (484838096UL), (2649676374UL), (1764858181UL), (737357475UL), (637470291UL), (278970544UL), (2236401278UL), (3671458900UL), (3989745853UL), (2542341803UL), (1588716357UL), (1241570134UL), (2102871406UL), (3016849744UL), (1768033045UL), (1531734630UL), (1765654724UL), (3964942332UL), (4157527581UL), (3187853500UL), (186000900UL), (2189716659UL), (3425652083UL), (1980528062UL), (2384668855UL), (2222812920UL), (3955466207UL), (2426547616UL), (3846752458UL), (3015538636UL), (2342593365UL), (3613176865UL), (3484860981UL), (4278370194UL), (1979143878UL), (1159739458UL), (3714038404UL), (396530346UL), (3276617756UL), (3293940597UL), (4050183149UL), (1418571985UL), (402563753UL), (2702853013UL), (2289900621UL), (2267058511UL), (3482161995UL), (3375026019UL), (1988640267UL), (3674438074UL), (4124612310UL), (1057883705UL), (434730475UL), (3210959778UL), (4102029739UL), (2140938750UL), (3176753074UL), (2356971512UL), (3969685288UL), (1556275580UL), (2648433428UL), (3959375381UL), (478841344UL), (1496991528UL), (3309714981UL), (569990368UL), (3660587501UL), (2550379574UL), (1177519842UL), (2652707373UL), (543943404UL), (1912551128UL), (2278132032UL), (1484596780UL), (3570913985UL), (2982401320UL), (1413776035UL), (3177275459UL), (3036211597UL), (1091740466UL), (3448424311UL), (1445187645UL), (3205024875UL), (3135795254UL), (823738729UL), (3742134467UL), (4066657438UL), (1226311678UL), (2403605393UL), (537573634UL), (3457409768UL), (1940233423UL), (1761431281UL), (1129427309UL), (2443661283UL), (3200814257UL), (4094866249UL), (2666869754UL), (604785127UL), (2213464116UL), (3002782918UL), (468024929UL), (2490681314UL), (3666681384UL), (1583346053UL), (3049668798UL), (3592153237UL), (2573082448UL), (3082970021UL), (1461796708UL), (832526980UL), (3728763274UL), (355291229UL), (4029588456UL), (832358279UL), (2125298737UL), (3681181038UL), (3245535160UL), (1333342738UL), (1868897492UL), (446790068UL), (1278093154UL), (2090118615UL), (4158925515UL), (4062165914UL), (822726809UL), (1154960183UL), (286518382UL), (1170424276UL), (2554691236UL), (3674133415UL), (2765714969UL), (2330865375UL), (1908307334UL), (3537287082UL), (410252600UL), (3977128218UL), (424210327UL), (2919071615UL), (2715518134UL), (64568844UL), (480972649UL), (2488797168UL), (1302817038UL), (2213995265UL), (4229997295UL), (2200797852UL), (109368057UL), (3033807022UL), (1907400078UL), (645977948UL), (1410909090UL), (3700787906UL), (3375062371UL), (629087832UL), (1344281719UL), (4249981139UL), (3457543297UL), (1218556849UL), (864222854UL), (1458445945UL), (914545469UL), (3451164212UL), (1088025757UL), (1129933985UL), (953788883UL), (2406172924UL), (170364546UL), (3505490646UL), (1027553899UL), (2864067776UL), (436854871UL), (1342782209UL), (761167471UL), (2660173631UL), (4159507498UL), (4172028400UL), (2442254644UL), (2110123720UL), (2315991253UL), (873066601UL), (1725470559UL), (3831299052UL), (678672031UL), (1585431329UL), (3495750550UL)}, {(1998393432UL), (2665389278UL), (3989307699UL), (3267631636UL), (3861682977UL), (3243522970UL), (1243992413UL), (2200497260UL), (3821883021UL), (4187123083UL), (3451270040UL), (3044132745UL), (2101287249UL), (2340839784UL), (227040990UL), (1724350416UL), (3228881240UL), (3123386528UL), (4279362126UL), (3098224464UL), (2635534069UL), (3622906431UL), (206207480UL), (1894245533UL), (2152374527UL), (1011223653UL), (7271757UL), (2972858087UL), (207942127UL), (3355362797UL), (2593296740UL), (174093751UL), (3713822176UL), (4212355586UL), (3335605224UL), (1171716408UL), (2867257989UL), (1522213957UL), (2016192462UL), (4229688395UL), (2174928148UL), (1468226225UL), (3938290338UL), (493240317UL), (3229423344UL), (2585475729UL), (3112454413UL), (1881171707UL), (2555908056UL), (1997546352UL), (380428329UL), (3341885423UL), (3307510279UL), (3519476676UL), (3613100811UL), (2555826262UL), (109341943UL), (2382715395UL), (3883409616UL), (1593551879UL), (2163678014UL), (3379783137UL), (2810374300UL), (1516064864UL), (561144874UL), (316017838UL), (1899237567UL), (70857401UL), (3435185465UL), (4234661323UL), (2580352177UL), (32879620UL), (4171670150UL), (1986234067UL), (3589478191UL), (2073132526UL), (2603712175UL), (377997975UL), (2474419397UL), (3110698341UL), (812664089UL), (1778922726UL), (1686111212UL), (972784138UL), (3936486236UL), (2711468739UL), (423435866UL), (1661961159UL), (802312780UL), (1868728136UL), (1760295704UL), (3357409828UL), (215039860UL), (683184627UL), (4019111064UL), (3609261689UL), (2167554309UL), (1831085281UL), (3389357802UL), (4193421575UL), (628277197UL), (2900207619UL), (993609502UL), (3429627083UL), (2636466084UL), (3652352199UL), (1780133580UL), (1670387713UL), (4086070210UL), (4004540729UL), (783029246UL), (2165667566UL), (1739001057UL), (377639972UL), (1102689625UL), (1945278055UL), (3941185940UL), (3685368326UL), (1881761572UL), (2201338934UL), (801752UL), (2729497735UL), (492844690UL), (2998826141UL), (3844964457UL), (3679088359UL), (2196391660UL), (4222269404UL), (357321611UL), (3727170055UL), (1819614072UL), (2348798457UL), (4294366646UL), (1952884323UL), (3574345216UL), (2040734807UL), (232392443UL), (4183498179UL), (2614866055UL), (112120292UL), (3624018350UL), (3340709877UL), (3097507723UL), (1268833488UL), (3570501956UL), (3338260086UL), (293812421UL), (3683058169UL), (1147960351UL), (283731890UL), (2171233479UL), (1830154455UL), (4036602681UL), (1996981699UL), (132803834UL), (40256165UL), (2158110401UL), (3575159090UL), (3196553513UL), (3559872992UL), (3402884675UL), (1998393432UL), (2665389278UL), (3989307699UL), (3267631636UL), (3617519767UL), (3243522970UL), (1243992413UL), (2200497260UL), (3821883021UL), (3715729085UL), (3451270040UL), (3044132745UL), (2101287249UL), (2340839784UL), (3173635549UL), (1724350416UL), (3228881240UL), (3123386528UL), (4279362126UL), (2287520039UL), (2635534069UL), (3622906431UL), (206207480UL), (1894245533UL), (96723416UL), (1011223653UL), (7271757UL), (2972858087UL), (207942127UL), (1668335352UL), (2593296740UL), (174093751UL), (3713822176UL), (4212355586UL), (49226793UL), (1171716408UL), (2867257989UL), (1522213957UL), (2016192462UL), (118712412UL), (2174928148UL), (1468226225UL), (3938290338UL), (493240317UL), (3788174304UL), (2585475729UL), (3112454413UL), (1881171707UL), (2555908056UL), (3351139844UL), (380428329UL), (3341885423UL), (3307510279UL), (3519476676UL), (1368994724UL), (2555826262UL), (109341943UL), (2382715395UL), (3883409616UL), (1561509458UL), (2163678014UL), (3379783137UL), (2810374300UL), (1516064864UL), (2313252274UL), (316017838UL), (1899237567UL), (70857401UL), (3435185465UL), (2585770746UL), (2580352177UL), (32879620UL), (4171670150UL), (1986234067UL), (3317983509UL), (2073132526UL), (2603712175UL), (377997975UL), (2474419397UL), (908728599UL), (812664089UL), (1778922726UL), (1686111212UL), (972784138UL), (1992540005UL), (2711468739UL), (423435866UL), (1661961159UL), (802312780UL), (907108769UL), (1760295704UL), (3357409828UL), (215039860UL), (683184627UL), (2806826652UL), (3609261689UL), (2167554309UL), (1831085281UL), (3389357802UL), (2755692689UL), (628277197UL), (2900207619UL), (993609502UL), (3429627083UL), (3605915742UL), (3652352199UL), (1780133580UL), (1670387713UL), (4086070210UL), (3717326627UL), (783029246UL), (2165667566UL), (1739001057UL), (377639972UL), (2355216626UL), (1945278055UL), (3941185940UL), (3685368326UL), (1881761572UL), (4024097818UL), (801752UL), (2729497735UL), (492844690UL), (2998826141UL), (2719601647UL), (3679088359UL), (2196391660UL), (4222269404UL), (357321611UL), (1319821972UL), (1819614072UL), (2348798457UL), (4294366646UL), (1952884323UL), (3573866689UL), (2040734807UL), (232392443UL), (4183498179UL), (2614866055UL), (440744432UL), (3624018350UL), (3340709877UL), (3097507723UL), (1268833488UL), (224895395UL), (3338260086UL), (293812421UL), (3683058169UL), (1147960351UL), (3433425235UL), (2171233479UL), (1830154455UL), (4036602681UL), (1996981699UL), (2875889721UL), (40256165UL), (2158110401UL), (3575159090UL), (3196553513UL), (1094082574UL), (3402884675UL), (1998393432UL), (2665389278UL), (3989307699UL), (4068940467UL), (3617519767UL), (3243522970UL), (1243992413UL), (2200497260UL), (441678457UL), (3715729085UL), (3451270040UL), (3044132745UL), (2101287249UL), (2181502237UL), (3173635549UL), (1724350416UL), (3228881240UL), (3123386528UL), (1968352124UL), (2287520039UL), (2635534069UL), (3622906431UL), (206207480UL), (2065093599UL), (96723416UL), (1011223653UL), (7271757UL), (2972858087UL), (1094044749UL), (1668335352UL), (2593296740UL), (174093751UL), (3713822176UL), (2887397643UL), (49226793UL), (1171716408UL), (2867257989UL), (1522213957UL), (984348433UL), (118712412UL), (2174928148UL), (1468226225UL), (3938290338UL), (2279430036UL), (3788174304UL), (2585475729UL), (3112454413UL), (1881171707UL), (4247636500UL), (3351139844UL), (380428329UL), (3341885423UL), (3307510279UL), (2887754196UL), (1368994724UL), (2555826262UL), (109341943UL), (2382715395UL), (2836761616UL), (1561509458UL), (2163678014UL), (3379783137UL), (2810374300UL), (1635278016UL), (2313252274UL), (316017838UL), (1899237567UL), (70857401UL), (3481535811UL), (2585770746UL), (2580352177UL), (32879620UL), (4171670150UL), (2248003250UL), (3317983509UL), (2073132526UL), (2603712175UL), (377997975UL), (3286162818UL), (908728599UL), (812664089UL), (1778922726UL), (1686111212UL), (4024815755UL), (1992540005UL), (2711468739UL), (423435866UL), (1661961159UL), (2257259057UL), (907108769UL), (1760295704UL), (3357409828UL), (215039860UL), (3917391198UL), (2806826652UL), (3609261689UL), (2167554309UL), (1831085281UL), (4238043113UL), (2755692689UL), (628277197UL), (2900207619UL), (993609502UL), (2036092353UL), (3605915742UL), (3652352199UL), (1780133580UL), (1670387713UL), (118446953UL), (3717326627UL), (783029246UL), (2165667566UL), (1739001057UL), (203160626UL), (2355216626UL), (1945278055UL), (3941185940UL), (3685368326UL), (546361979UL), (4024097818UL), (801752UL), (2729497735UL), (492844690UL), (1023017124UL), (2719601647UL), (3679088359UL), (2196391660UL), (4222269404UL), (621859651UL), (1319821972UL), (1819614072UL), (2348798457UL), (4294366646UL), (1114888560UL), (3573866689UL), (2040734807UL), (232392443UL), (4183498179UL), (3959504609UL), (440744432UL), (3624018350UL), (3340709877UL), (3097507723UL), (3613295037UL), (224895395UL), (3338260086UL), (293812421UL), (3683058169UL), (1655305863UL), (3433425235UL), (2171233479UL), (1830154455UL), (4036602681UL), (3731384097UL), (2875889721UL), (40256165UL), (2158110401UL), (3575159090UL), (1847744924UL), (1094082574UL), (3402884675UL), (1998393432UL), (2665389278UL), (3781866777UL), (4068940467UL), (3617519767UL), (3243522970UL), (1243992413UL), (2723708256UL), (441678457UL), (3715729085UL), (3451270040UL), (3044132745UL), (4013832842UL), (2181502237UL), (3173635549UL), (1724350416UL), (3228881240UL), (2092292494UL), (1968352124UL), (2287520039UL), (2635534069UL), (3622906431UL), (3186333458UL), (2065093599UL), (96723416UL), (1011223653UL), (7271757UL), (649658033UL), (1094044749UL), (1668335352UL), (2593296740UL), (174093751UL), (4159420309UL), (2887397643UL), (49226793UL), (1171716408UL), (2867257989UL), (2590077953UL), (984348433UL), (118712412UL), (2174928148UL), (1468226225UL), (1065322711UL), (2279430036UL), (3788174304UL), (2585475729UL), (3112454413UL), (3932517386UL), (4247636500UL), (3351139844UL), (380428329UL), (3341885423UL), (1285273904UL), (2887754196UL), (1368994724UL), (2555826262UL), (109341943UL), (2318470582UL), (2836761616UL), (1561509458UL), (2163678014UL), (3379783137UL), (674658583UL), (1635278016UL), (2313252274UL), (316017838UL), (1899237567UL), (2192372173UL), (3481535811UL), (2585770746UL), (2580352177UL), (32879620UL), (300323274UL), (2248003250UL), (3317983509UL), (2073132526UL), (2603712175UL), (3086543917UL), (3286162818UL), (908728599UL), (812664089UL), (1778922726UL), (2263290659UL), (4024815755UL), (1992540005UL), (2711468739UL), (423435866UL), (819027349UL), (2257259057UL), (907108769UL), (1760295704UL), (3357409828UL), (1142221093UL), (3917391198UL), (2806826652UL), (3609261689UL), (2167554309UL), (4108155875UL), (4238043113UL), (2755692689UL), (628277197UL), (2900207619UL), (3041719497UL), (2036092353UL), (3605915742UL), (3652352199UL), (1780133580UL), (2397410862UL), (118446953UL), (3717326627UL), (783029246UL), (2165667566UL), (2721690354UL), (203160626UL), (2355216626UL), (1945278055UL), (3941185940UL), (2768842108UL), (546361979UL), (4024097818UL), (801752UL), (2729497735UL), (4045063232UL), (1023017124UL), (2719601647UL), (3679088359UL), (2196391660UL), (2666107451UL), (621859651UL), (1319821972UL), (1819614072UL), (2348798457UL), (3555102623UL), (1114888560UL), (3573866689UL), (2040734807UL), (232392443UL), (3359040541UL), (3959504609UL), (440744432UL), (3624018350UL), (3340709877UL), (1477919696UL), (3613295037UL), (224895395UL), (3338260086UL), (293812421UL), (4210187101UL), (1655305863UL), (3433425235UL), (2171233479UL), (1830154455UL), (4150241150UL), (3731384097UL), (2875889721UL), (40256165UL), (2158110401UL), (3350246687UL), (455561037UL), (2250400255UL), (3192153445UL), (3258870230UL), (1500391873UL), (4142878334UL), (1155955691UL), (1483275844UL), (4189436981UL), (323745948UL), (1976017426UL), (2804626790UL), (2717553615UL), (2315409034UL), (954508235UL), (3845175920UL), (3999878682UL), (1247696432UL), (1743319509UL), (2998248398UL), (3694350012UL), (4072006361UL), (191306987UL), (2816321878UL), (1324077734UL), (1083060006UL), (3406855480UL), (1619622379UL), (2160350UL), (3302238190UL), (3368021261UL), (3685228564UL), (3863934685UL), (771728612UL), (854205233UL), (2304696695UL), (421449207UL), (1265752117UL), (3852292419UL), (305345788UL), (1540622105UL), (1904883477UL), (833469256UL), (134406680UL), (3012455058UL), (4035477953UL), (2925192459UL), (1559200592UL), (3851612860UL), (718484562UL), (1377960276UL), (1586892849UL), (1361298269UL), (3417917896UL), (1281324499UL), (1012538763UL), (1350578667UL), (3946475598UL), (2982283954UL), (3548792804UL), (284542749UL), (1194648577UL), (3087899716UL), (3966595444UL), (2088330116UL), (3641652062UL), (327128507UL), (593906557UL), (1092448919UL), (2459189516UL), (4053392241UL), (3356198248UL), (2352376508UL), (470648997UL), (1017041256UL), (3234172340UL), (3928191489UL), (3266226858UL), (4219289150UL), (1229098319UL), (4275351308UL), (2720777751UL), (3566728718UL), (638322822UL), (2369792461UL), (2869492261UL), (3120083828UL), (1890399556UL), (3309991008UL), (3785452464UL), (4128660314UL), (3726791982UL), (167177896UL), (461294981UL), (3988638998UL), (2937794823UL), (3981029822UL), (1111681402UL), (2015965721UL), (7261806UL), (2669786265UL), (1083582734UL), (3270228881UL), (3892235938UL), (2695872715UL), (4246051290UL), (3214293333UL), (343604199UL), (3215604888UL), (661024127UL), (2931754053UL), (3787840039UL), (2053363765UL), (363432336UL), (112334132UL), (2871797223UL), (138911320UL), (3981126938UL), (2027332192UL), (1804730644UL), (590150270UL), (641538574UL), (6802174UL), (3551446076UL), (3908480472UL), (1004531022UL), (2097228524UL), (1919074232UL), (154482247UL), (121437972UL), (1215661323UL), (1178068273UL), (1097220699UL), (2823681422UL), (262636065UL), (2943371149UL), (1768780720UL), (3866040605UL), (1855991583UL), (3988248086UL), (629223947UL), (3380612330UL), (3552916762UL), (197596340UL), (573801686UL), (2049230598UL), (2910471867UL), (2686314264UL), (1726228846UL), (3516983332UL), (726840185UL), (1241204222UL), (2237574317UL), (70568042UL), (1932610099UL), (2221862221UL), (1510378092UL), (4050391637UL), (4077539568UL)}, {(3872117793UL), (803220151UL), (70843412UL), (1661103032UL), (1976811457UL), (2186373604UL), (564259972UL), (1475436923UL), (2260980893UL), (4245534505UL), (1075107552UL), (3692990573UL), (370098873UL), (4045905424UL), (2420395420UL), (2332395402UL), (207483321UL), (622317750UL), (3004242500UL), (833623111UL), (3151161301UL), (1629139881UL), (352228793UL), (2439953368UL), (3183333619UL), (2703537080UL), (3218957129UL), (3164695888UL), (1741641842UL), (963394141UL), (4241612717UL), (1034476784UL), (2035880432UL), (3977821313UL), (1543311495UL), (3010014356UL), (1638490901UL), (2364265378UL), (3420329129UL), (333361555UL), (1133565821UL), (1450937015UL), (616059115UL), (3216393887UL), (3041978455UL), (3990855695UL), (1238628750UL), (512746184UL), (3256670217UL), (1616316512UL), (2791405051UL), (93474487UL), (2865892488UL), (1901471398UL), (2930857966UL), (2178431077UL), (2325598341UL), (3189256113UL), (1302432091UL), (808592927UL), (2945846737UL), (3487931071UL), (2018175258UL), (752981057UL), (1097082589UL), (1307115286UL), (175147508UL), (3611190164UL), (850238914UL), (3318706185UL), (199743319UL), (328621708UL), (3183670050UL), (3609998315UL), (4075306371UL), (3554549067UL), (2119566187UL), (1498503842UL), (1261870696UL), (2216745780UL), (950288337UL), (1117344941UL), (2150569143UL), (2899286760UL), (1594966374UL), (888858617UL), (35840654UL), (2829539211UL), (2511395669UL), (3607190544UL), (3278412778UL), (2249895907UL), (1320858068UL), (3576889788UL), (266766189UL), (1522426851UL), (1903494122UL), (1928370573UL), (2628132591UL), (3322025904UL), (220280169UL), (433606853UL), (1428961479UL), (986074592UL), (2128892987UL), (467697583UL), (1616913929UL), (325674890UL), (444442578UL), (649166208UL), (1689709565UL), (1493452467UL), (2222122038UL), (121114616UL), (2134348225UL), (3512035688UL), (1283058921UL), (4230441398UL), (3701238559UL), (337534132UL), (1418548715UL), (1190006478UL), (500654385UL), (1766924757UL), (1944680746UL), (940574010UL), (922744002UL), (186142284UL), (3131162902UL), (1693891092UL), (3031823448UL), (2143051534UL), (1429025284UL), (1487843160UL), (3606456133UL), (2079235652UL), (2447285474UL), (2669283767UL), (3232117829UL), (2490054343UL), (3225501736UL), (2911340385UL), (382319031UL), (1516937595UL), (622543191UL), (1388990570UL), (1749179860UL), (1924483707UL), (2593474505UL), (472539197UL), (122872799UL), (2586347240UL), (880588515UL), (4046335279UL), (1712182607UL), (4270737941UL), (1336703451UL), (3390078162UL), (382216945UL), (3733326081UL), (460422073UL), (3872117793UL), (803220151UL), (70843412UL), (1661103032UL), (250339760UL), (2186373604UL), (564259972UL), (1475436923UL), (2260980893UL), (657986735UL), (1075107552UL), (3692990573UL), (370098873UL), (4045905424UL), (3201950123UL), (2332395402UL), (207483321UL), (622317750UL), (3004242500UL), (3732213278UL), (3151161301UL), (1629139881UL), (352228793UL), (2439953368UL), (3572618926UL), (2703537080UL), (3218957129UL), (3164695888UL), (1741641842UL), (685933373UL), (4241612717UL), (1034476784UL), (2035880432UL), (3977821313UL), (3855995181UL), (3010014356UL), (1638490901UL), (2364265378UL), (3420329129UL), (2355603679UL), (1133565821UL), (1450937015UL), (616059115UL), (3216393887UL), (1733804102UL), (3990855695UL), (1238628750UL), (512746184UL), (3256670217UL), (2651059231UL), (2791405051UL), (93474487UL), (2865892488UL), (1901471398UL), (2113461797UL), (2178431077UL), (2325598341UL), (3189256113UL), (1302432091UL), (2986990416UL), (2945846737UL), (3487931071UL), (2018175258UL), (752981057UL), (2428033310UL), (1307115286UL), (175147508UL), (3611190164UL), (850238914UL), (1033628405UL), (199743319UL), (328621708UL), (3183670050UL), (3609998315UL), (4024297327UL), (3554549067UL), (2119566187UL), (1498503842UL), (1261870696UL), (290361143UL), (950288337UL), (1117344941UL), (2150569143UL), (2899286760UL), (168826051UL), (888858617UL), (35840654UL), (2829539211UL), (2511395669UL), (2890882060UL), (3278412778UL), (2249895907UL), (1320858068UL), (3576889788UL), (1794920145UL), (1522426851UL), (1903494122UL), (1928370573UL), (2628132591UL), (1251697758UL), (220280169UL), (433606853UL), (1428961479UL), (986074592UL), (2707115661UL), (467697583UL), (1616913929UL), (325674890UL), (444442578UL), (122781510UL), (1689709565UL), (1493452467UL), (2222122038UL), (121114616UL), (3425723636UL), (3512035688UL), (1283058921UL), (4230441398UL), (3701238559UL), (1646155473UL), (1418548715UL), (1190006478UL), (500654385UL), (1766924757UL), (3920475367UL), (940574010UL), (922744002UL), (186142284UL), (3131162902UL), (54639113UL), (3031823448UL), (2143051534UL), (1429025284UL), (1487843160UL), (4152687885UL), (2079235652UL), (2447285474UL), (2669283767UL), (3232117829UL), (1601035152UL), (3225501736UL), (2911340385UL), (382319031UL), (1516937595UL), (3508441679UL), (1388990570UL), (1749179860UL), (1924483707UL), (2593474505UL), (2835403456UL), (122872799UL), (2586347240UL), (880588515UL), (4046335279UL), (2958058367UL), (4270737941UL), (1336703451UL), (3390078162UL), (382216945UL), (450517882UL), (460422073UL), (3872117793UL), (803220151UL), (70843412UL), (2066343874UL), (250339760UL), (2186373604UL), (564259972UL), (1475436923UL), (1683787449UL), (657986735UL), (1075107552UL), (3692990573UL), (370098873UL), (2615082840UL), (3201950123UL), (2332395402UL), (207483321UL), (622317750UL), (2655424371UL), (3732213278UL), (3151161301UL), (1629139881UL), (352228793UL), (3236724760UL), (3572618926UL), (2703537080UL), (3218957129UL), (3164695888UL), (9775065UL), (685933373UL), (4241612717UL), (1034476784UL), (2035880432UL), (1621920075UL), (3855995181UL), (3010014356UL), (1638490901UL), (2364265378UL), (1509475888UL), (2355603679UL), (1133565821UL), (1450937015UL), (616059115UL), (3666188236UL), (1733804102UL), (3990855695UL), (1238628750UL), (512746184UL), (3900473826UL), (2651059231UL), (2791405051UL), (93474487UL), (2865892488UL), (222759186UL), (2113461797UL), (2178431077UL), (2325598341UL), (3189256113UL), (2505499508UL), (2986990416UL), (2945846737UL), (3487931071UL), (2018175258UL), (2766733928UL), (2428033310UL), (1307115286UL), (175147508UL), (3611190164UL), (1909211603UL), (1033628405UL), (199743319UL), (328621708UL), (3183670050UL), (1680331218UL), (4024297327UL), (3554549067UL), (2119566187UL), (1498503842UL), (3516256046UL), (290361143UL), (950288337UL), (1117344941UL), (2150569143UL), (3182619063UL), (168826051UL), (888858617UL), (35840654UL), (2829539211UL), (645798943UL), (2890882060UL), (3278412778UL), (2249895907UL), (1320858068UL), (1436708568UL), (1794920145UL), (1522426851UL), (1903494122UL), (1928370573UL), (3693049252UL), (1251697758UL), (220280169UL), (433606853UL), (1428961479UL), (3724415861UL), (2707115661UL), (467697583UL), (1616913929UL), (325674890UL), (1448052253UL), (122781510UL), (1689709565UL), (1493452467UL), (2222122038UL), (2177448198UL), (3425723636UL), (3512035688UL), (1283058921UL), (4230441398UL), (3050940272UL), (1646155473UL), (1418548715UL), (1190006478UL), (500654385UL), (1106232UL), (3920475367UL), (940574010UL), (922744002UL), (186142284UL), (4144806511UL), (54639113UL), (3031823448UL), (2143051534UL), (1429025284UL), (2067453848UL), (4152687885UL), (2079235652UL), (2447285474UL), (2669283767UL), (428527087UL), (1601035152UL), (3225501736UL), (2911340385UL), (382319031UL), (2565464472UL), (3508441679UL), (1388990570UL), (1749179860UL), (1924483707UL), (1737735237UL), (2835403456UL), (122872799UL), (2586347240UL), (880588515UL), (597822462UL), (2958058367UL), (4270737941UL), (1336703451UL), (3390078162UL), (2532634475UL), (450517882UL), (460422073UL), (3872117793UL), (803220151UL), (801648827UL), (2066343874UL), (250339760UL), (2186373604UL), (564259972UL), (3417948976UL), (1683787449UL), (657986735UL), (1075107552UL), (3692990573UL), (2235306692UL), (2615082840UL), (3201950123UL), (2332395402UL), (207483321UL), (699310933UL), (2655424371UL), (3732213278UL), (3151161301UL), (1629139881UL), (1152704006UL), (3236724760UL), (3572618926UL), (2703537080UL), (3218957129UL), (2726926336UL), (9775065UL), (685933373UL), (4241612717UL), (1034476784UL), (2398119652UL), (1621920075UL), (3855995181UL), (3010014356UL), (1638490901UL), (252854480UL), (1509475888UL), (2355603679UL), (1133565821UL), (1450937015UL), (2655911639UL), (3666188236UL), (1733804102UL), (3990855695UL), (1238628750UL), (1115900497UL), (3900473826UL), (2651059231UL), (2791405051UL), (93474487UL), (1862985957UL), (222759186UL), (2113461797UL), (2178431077UL), (2325598341UL), (4179075132UL), (2505499508UL), (2986990416UL), (2945846737UL), (3487931071UL), (564667776UL), (2766733928UL), (2428033310UL), (1307115286UL), (175147508UL), (1759077815UL), (1909211603UL), (1033628405UL), (199743319UL), (328621708UL), (2552816198UL), (1680331218UL), (4024297327UL), (3554549067UL), (2119566187UL), (2267805778UL), (3516256046UL), (290361143UL), (950288337UL), (1117344941UL), (2897506172UL), (3182619063UL), (168826051UL), (888858617UL), (35840654UL), (2035476068UL), (645798943UL), (2890882060UL), (3278412778UL), (2249895907UL), (3278449102UL), (1436708568UL), (1794920145UL), (1522426851UL), (1903494122UL), (1500763736UL), (3693049252UL), (1251697758UL), (220280169UL), (433606853UL), (3914497854UL), (3724415861UL), (2707115661UL), (467697583UL), (1616913929UL), (918435305UL), (1448052253UL), (122781510UL), (1689709565UL), (1493452467UL), (609575172UL), (2177448198UL), (3425723636UL), (3512035688UL), (1283058921UL), (3661181550UL), (3050940272UL), (1646155473UL), (1418548715UL), (1190006478UL), (1047301661UL), (1106232UL), (3920475367UL), (940574010UL), (922744002UL), (2510633517UL), (4144806511UL), (54639113UL), (3031823448UL), (2143051534UL), (3242814908UL), (2067453848UL), (4152687885UL), (2079235652UL), (2447285474UL), (736638210UL), (428527087UL), (1601035152UL), (3225501736UL), (2911340385UL), (1849570436UL), (2565464472UL), (3508441679UL), (1388990570UL), (1749179860UL), (84517579UL), (1737735237UL), (2835403456UL), (122872799UL), (2586347240UL), (4002124614UL), (597822462UL), (2958058367UL), (4270737941UL), (1336703451UL), (3078170472UL), (1186434751UL), (700631413UL), (1497890797UL), (1195347450UL), (2560167391UL), (1116697259UL), (1254138573UL), (747913260UL), (240954704UL), (3107512667UL), (360584144UL), (3422778960UL), (3516528389UL), (3301260366UL), (1254513537UL), (122269053UL), (1579582456UL), (873334104UL), (3918835024UL), (1731872444UL), (1974410416UL), (1811172641UL), (4172523062UL), (4092675777UL), (4124987343UL), (1936078756UL), (1757348689UL), (2694415512UL), (128641660UL), (1744777659UL), (3173116729UL), (983733754UL), (1430789547UL), (701906842UL), (3367232568UL), (3266433501UL), (3572590347UL), (1453272962UL), (2106553114UL), (993786201UL), (2149441250UL), (1295181065UL), (2962229026UL), (3709052556UL), (3255608941UL), (3677730029UL), (483873127UL), (102227292UL), (2626265293UL), (2018984578UL), (2266388762UL), (1191709548UL), (2152725916UL), (583672623UL), (2230473473UL), (1995194269UL), (1740347812UL), (2558095372UL), (3070195183UL), (3023333227UL), (2497183195UL), (1908755188UL), (773027539UL), (3646876518UL), (2272586839UL), (493318726UL), (2107067517UL), (2000805278UL), (2530829636UL), (3183628745UL), (677565332UL), (1497629423UL), (82094920UL), (2214054433UL), (2635367545UL), (470855467UL), (2184853389UL), (2942188934UL), (188335670UL), (3656661644UL), (1883526235UL), (3990873975UL), (1490784356UL), (4047548172UL), (3149642641UL), (3289988179UL), (2590918909UL), (2893039564UL), (2350687346UL), (4252624874UL), (15372456UL), (1614496594UL), (2364847678UL), (2604511825UL), (422365460UL), (4195174772UL), (3266964836UL), (2008671995UL), (54038434UL), (781948549UL), (1276017666UL), (2756376612UL), (2436825273UL), (1711863836UL), (3541493950UL), (3821378841UL), (1007557618UL), (345375815UL), (2081905201UL), (2227278118UL), (1185927141UL), (1082173792UL), (3567361925UL), (1940465859UL), (541632942UL), (1830210248UL), (3757851982UL), (775883450UL), (1666577465UL), (1004944607UL), (878440834UL), (2146344131UL), (4195798476UL), (370164841UL), (3649112729UL), (37066142UL), (2311278904UL), (1935745497UL), (2304799402UL), (4107299626UL), (1348526232UL), (2473609635UL), (3284032699UL), (2374292786UL), (1762329186UL), (857978496UL), (1039346432UL), (2621413355UL), (29961014UL), (3582263091UL), (4268542513UL), (3890612190UL), (3096173646UL), (2026544230UL), (3856142618UL), (2347115934UL), (319800326UL), (3255916105UL), (2430273059UL), (823505311UL), (874255188UL), (1401925393UL), (4203707857UL), (4259159566UL), (2606881118UL), (1978288664UL), (1447576038UL), (3860341401UL), (412510348UL)}, {(4052471963UL), (683640040UL), (3043876021UL), (3466644483UL), (4222418025UL), (3035140128UL), (1466027937UL), (18198088UL), (3410320851UL), (3040963721UL), (488404231UL), (3157371815UL), (769336092UL), (3240417718UL), (808582581UL), (2075839263UL), (835026995UL), (3123726486UL), (3284240985UL), (1898453053UL), (3606056482UL), (512836002UL), (2715428547UL), (4182302879UL), (1644882480UL), (3160187826UL), (390292489UL), (980889545UL), (2776206633UL), (2482799995UL), (617042280UL), (3501667414UL), (689451808UL), (497018701UL), (238525753UL), (3890163301UL), (896679896UL), (1544533015UL), (3412477225UL), (3116575138UL), (4250402651UL), (3990990746UL), (819056741UL), (1459334146UL), (158377590UL), (3444755752UL), (8230450UL), (1378706455UL), (684191332UL), (3217423797UL), (2842520097UL), (1631477948UL), (2591254230UL), (959644473UL), (1020694107UL), (1748401915UL), (3452514983UL), (3892766171UL), (1227786994UL), (2086180800UL), (2394613217UL), (2091953150UL), (870094953UL), (2306851481UL), (571550601UL), (488878212UL), (873197214UL), (2630100528UL), (2067476907UL), (2162307009UL), (2026119728UL), (115875280UL), (2905867426UL), (248774881UL), (3110900450UL), (2236032812UL), (1888510348UL), (708001855UL), (996960491UL), (3514196956UL), (1407967546UL), (1826568876UL), (3659618284UL), (2614104317UL), (2230066308UL), (1055135881UL), (2537437343UL), (1858044413UL), (2608594891UL), (2750681169UL), (3241939420UL), (3966440877UL), (2375002886UL), (2417753441UL), (1405878685UL), (1081133199UL), (1496940727UL), (382467042UL), (2745477587UL), (1209424459UL), (811187075UL), (1385604734UL), (2623887355UL), (3443875720UL), (394141555UL), (4142998949UL), (4195414618UL), (1489846841UL), (2253433808UL), (1171450286UL), (84131191UL), (4387588UL), (2641405140UL), (3525405389UL), (3273000909UL), (423660319UL), (2366546732UL), (3698878607UL), (2161119729UL), (4263629085UL), (3029102089UL), (2692507376UL), (3266869596UL), (1658012061UL), (1960169440UL), (1002311379UL), (3724446882UL), (2004188516UL), (999513506UL), (2200093802UL), (4141037460UL), (351865836UL), (412875013UL), (1535823315UL), (3880657632UL), (3109944987UL), (3207577548UL), (3462087941UL), (584875517UL), (2635241084UL), (3834145971UL), (1693380373UL), (3524443732UL), (934775214UL), (1960588847UL), (2226778032UL), (1044609478UL), (12199016UL), (1120582000UL), (226430296UL), (665553142UL), (2570993348UL), (1685535237UL), (3325420136UL), (3925248326UL), (2855346376UL), (1205558328UL), (808835317UL), (3295908896UL), (4170076136UL), (2438272365UL), (4052471963UL), (683640040UL), (3043876021UL), (3466644483UL), (1385549869UL), (3035140128UL), (1466027937UL), (18198088UL), (3410320851UL), (2171386836UL), (488404231UL), (3157371815UL), (769336092UL), (3240417718UL), (2921774554UL), (2075839263UL), (835026995UL), (3123726486UL), (3284240985UL), (72352110UL), (3606056482UL), (512836002UL), (2715428547UL), (4182302879UL), (3869483469UL), (3160187826UL), (390292489UL), (980889545UL), (2776206633UL), (1385691983UL), (617042280UL), (3501667414UL), (689451808UL), (497018701UL), (2600411809UL), (3890163301UL), (896679896UL), (1544533015UL), (3412477225UL), (356556378UL), (4250402651UL), (3990990746UL), (819056741UL), (1459334146UL), (199003993UL), (3444755752UL), (8230450UL), (1378706455UL), (684191332UL), (1750733272UL), (2842520097UL), (1631477948UL), (2591254230UL), (959644473UL), (2113375576UL), (1748401915UL), (3452514983UL), (3892766171UL), (1227786994UL), (275473920UL), (2394613217UL), (2091953150UL), (870094953UL), (2306851481UL), (897057645UL), (488878212UL), (873197214UL), (2630100528UL), (2067476907UL), (944114068UL), (2026119728UL), (115875280UL), (2905867426UL), (248774881UL), (989201307UL), (2236032812UL), (1888510348UL), (708001855UL), (996960491UL), (2121706374UL), (1407967546UL), (1826568876UL), (3659618284UL), (2614104317UL), (2931815032UL), (1055135881UL), (2537437343UL), (1858044413UL), (2608594891UL), (1423973935UL), (3241939420UL), (3966440877UL), (2375002886UL), (2417753441UL), (2514473440UL), (1081133199UL), (1496940727UL), (382467042UL), (2745477587UL), (81977310UL), (811187075UL), (1385604734UL), (2623887355UL), (3443875720UL), (2100629879UL), (4142998949UL), (4195414618UL), (1489846841UL), (2253433808UL), (337182869UL), (84131191UL), (4387588UL), (2641405140UL), (3525405389UL), (661876463UL), (423660319UL), (2366546732UL), (3698878607UL), (2161119729UL), (309510684UL), (3029102089UL), (2692507376UL), (3266869596UL), (1658012061UL), (11119541UL), (1002311379UL), (3724446882UL), (2004188516UL), (999513506UL), (3486722046UL), (4141037460UL), (351865836UL), (412875013UL), (1535823315UL), (2818130700UL), (3109944987UL), (3207577548UL), (3462087941UL), (584875517UL), (322875622UL), (3834145971UL), (1693380373UL), (3524443732UL), (934775214UL), (3879414752UL), (2226778032UL), (1044609478UL), (12199016UL), (1120582000UL), (4207259464UL), (665553142UL), (2570993348UL), (1685535237UL), (3325420136UL), (553869152UL), (2855346376UL), (1205558328UL), (808835317UL), (3295908896UL), (470585896UL), (2438272365UL), (4052471963UL), (683640040UL), (3043876021UL), (1588419572UL), (1385549869UL), (3035140128UL), (1466027937UL), (18198088UL), (363815288UL), (2171386836UL), (488404231UL), (3157371815UL), (769336092UL), (2464768302UL), (2921774554UL), (2075839263UL), (835026995UL), (3123726486UL), (4229246330UL), (72352110UL), (3606056482UL), (512836002UL), (2715428547UL), (319830805UL), (3869483469UL), (3160187826UL), (390292489UL), (980889545UL), (2966401462UL), (1385691983UL), (617042280UL), (3501667414UL), (689451808UL), (4047377762UL), (2600411809UL), (3890163301UL), (896679896UL), (1544533015UL), (764316452UL), (356556378UL), (4250402651UL), (3990990746UL), (819056741UL), (965331966UL), (199003993UL), (3444755752UL), (8230450UL), (1378706455UL), (51902971UL), (1750733272UL), (2842520097UL), (1631477948UL), (2591254230UL), (426039404UL), (2113375576UL), (1748401915UL), (3452514983UL), (3892766171UL), (2833368447UL), (275473920UL), (2394613217UL), (2091953150UL), (870094953UL), (3524323828UL), (897057645UL), (488878212UL), (873197214UL), (2630100528UL), (3939852929UL), (944114068UL), (2026119728UL), (115875280UL), (2905867426UL), (3192643919UL), (989201307UL), (2236032812UL), (1888510348UL), (708001855UL), (2166012172UL), (2121706374UL), (1407967546UL), (1826568876UL), (3659618284UL), (135277096UL), (2931815032UL), (1055135881UL), (2537437343UL), (1858044413UL), (2588429924UL), (1423973935UL), (3241939420UL), (3966440877UL), (2375002886UL), (2477142003UL), (2514473440UL), (1081133199UL), (1496940727UL), (382467042UL), (1760129281UL), (81977310UL), (811187075UL), (1385604734UL), (2623887355UL), (4070531513UL), (2100629879UL), (4142998949UL), (4195414618UL), (1489846841UL), (2688068550UL), (337182869UL), (84131191UL), (4387588UL), (2641405140UL), (1837403234UL), (661876463UL), (423660319UL), (2366546732UL), (3698878607UL), (2916121190UL), (309510684UL), (3029102089UL), (2692507376UL), (3266869596UL), (303422295UL), (11119541UL), (1002311379UL), (3724446882UL), (2004188516UL), (2652711421UL), (3486722046UL), (4141037460UL), (351865836UL), (412875013UL), (113149471UL), (2818130700UL), (3109944987UL), (3207577548UL), (3462087941UL), (1443140792UL), (322875622UL), (3834145971UL), (1693380373UL), (3524443732UL), (901891935UL), (3879414752UL), (2226778032UL), (1044609478UL), (12199016UL), (2213168758UL), (4207259464UL), (665553142UL), (2570993348UL), (1685535237UL), (1114492412UL), (553869152UL), (2855346376UL), (1205558328UL), (808835317UL), (3266626294UL), (470585896UL), (2438272365UL), (4052471963UL), (683640040UL), (3581539398UL), (1588419572UL), (1385549869UL), (3035140128UL), (1466027937UL), (4075470388UL), (363815288UL), (2171386836UL), (488404231UL), (3157371815UL), (2759472233UL), (2464768302UL), (2921774554UL), (2075839263UL), (835026995UL), (1030654310UL), (4229246330UL), (72352110UL), (3606056482UL), (512836002UL), (961858496UL), (319830805UL), (3869483469UL), (3160187826UL), (390292489UL), (2366221117UL), (2966401462UL), (1385691983UL), (617042280UL), (3501667414UL), (295865937UL), (4047377762UL), (2600411809UL), (3890163301UL), (896679896UL), (21714884UL), (764316452UL), (356556378UL), (4250402651UL), (3990990746UL), (1012967081UL), (965331966UL), (199003993UL), (3444755752UL), (8230450UL), (1255302023UL), (51902971UL), (1750733272UL), (2842520097UL), (1631477948UL), (2321320272UL), (426039404UL), (2113375576UL), (1748401915UL), (3452514983UL), (2847013518UL), (2833368447UL), (275473920UL), (2394613217UL), (2091953150UL), (1250695522UL), (3524323828UL), (897057645UL), (488878212UL), (873197214UL), (1452317325UL), (3939852929UL), (944114068UL), (2026119728UL), (115875280UL), (4061820350UL), (3192643919UL), (989201307UL), (2236032812UL), (1888510348UL), (3986446165UL), (2166012172UL), (2121706374UL), (1407967546UL), (1826568876UL), (2910745432UL), (135277096UL), (2931815032UL), (1055135881UL), (2537437343UL), (2976455307UL), (2588429924UL), (1423973935UL), (3241939420UL), (3966440877UL), (2418897705UL), (2477142003UL), (2514473440UL), (1081133199UL), (1496940727UL), (1321648771UL), (1760129281UL), (81977310UL), (811187075UL), (1385604734UL), (17644628UL), (4070531513UL), (2100629879UL), (4142998949UL), (4195414618UL), (2697310527UL), (2688068550UL), (337182869UL), (84131191UL), (4387588UL), (1724191700UL), (1837403234UL), (661876463UL), (423660319UL), (2366546732UL), (693430992UL), (2916121190UL), (309510684UL), (3029102089UL), (2692507376UL), (3917396098UL), (303422295UL), (11119541UL), (1002311379UL), (3724446882UL), (841468294UL), (2652711421UL), (3486722046UL), (4141037460UL), (351865836UL), (1733384185UL), (113149471UL), (2818130700UL), (3109944987UL), (3207577548UL), (2326233100UL), (1443140792UL), (322875622UL), (3834145971UL), (1693380373UL), (1580706359UL), (901891935UL), (3879414752UL), (2226778032UL), (1044609478UL), (3805470822UL), (2213168758UL), (4207259464UL), (665553142UL), (2570993348UL), (3406548636UL), (1114492412UL), (553869152UL), (2855346376UL), (1205558328UL), (4287831475UL), (1329654114UL), (2347235746UL), (2477803138UL), (2962371859UL), (3610024283UL), (4197266903UL), (1162294689UL), (1746713323UL), (2815058477UL), (2152552186UL), (4214791071UL), (2382522482UL), (3713914466UL), (3974765132UL), (348354997UL), (1670276150UL), (2173074887UL), (381736894UL), (3866219357UL), (1919366695UL), (3635118824UL), (2298653261UL), (3534332682UL), (1627699897UL), (4168636618UL), (3787938690UL), (2144231271UL), (2067679462UL), (217001062UL), (2308928337UL), (1620415125UL), (3526559172UL), (749451561UL), (2456947371UL), (3543607786UL), (1893824735UL), (962598819UL), (2332807164UL), (1691114891UL), (2543992233UL), (2914780639UL), (1610287145UL), (1700599697UL), (3185174208UL), (552323208UL), (2367242224UL), (3797136972UL), (3415066418UL), (2468049249UL), (1677937401UL), (40445671UL), (2886682530UL), (2585715434UL), (194932329UL), (2994003812UL), (3099556382UL), (680852222UL), (135838738UL), (1371063256UL), (995454898UL), (3754526418UL), (803635682UL), (634588682UL), (3869250783UL), (2442285521UL), (1455637058UL), (570621479UL), (2512681851UL), (1220136924UL), (750260121UL), (2909903038UL), (1582019728UL), (955115170UL), (1608265445UL), (2157390890UL), (2303678604UL), (1568394164UL), (831914289UL), (1971271392UL), (1294799854UL), (1489945167UL), (442427880UL), (1305083700UL), (1211218668UL), (2380073713UL), (2798736785UL), (2193524273UL), (3227386915UL), (1636588977UL), (3612937642UL), (435113647UL), (1591761830UL), (536210039UL), (2475747073UL), (4223795480UL), (1786737271UL), (1444661534UL), (3249410301UL), (3333695212UL), (4169107188UL), (3280638635UL), (702659930UL), (1444127970UL), (225340755UL), (2255629368UL), (746584456UL), (3965677674UL), (2671132955UL), (2080717656UL), (2145343886UL), (3712441197UL), (368422910UL), (1297685674UL), (4076123901UL), (26214470UL), (2948764826UL), (40503299UL), (1198194334UL), (2100063637UL), (1966331612UL), (2189582064UL), (2064696934UL), (1797550642UL), (3469793941UL), (2868963812UL), (851437659UL), (240918534UL), (365060070UL), (3530600064UL), (39695324UL), (1753898837UL), (1286976449UL), (3131971360UL), (2406485219UL), (3365373704UL), (3224113403UL), (1651742834UL), (587601940UL), (1574206085UL), (3739575036UL), (1413669616UL), (38172232UL), (293127854UL), (4126190109UL), (1891744061UL), (787878666UL), (456643669UL), (4228710325UL), (2025132037UL), (1492133135UL), (3122840937UL), (969442079UL), (3272420439UL), (3836126369UL), (1877655562UL), (2766212758UL), (3867984746UL), (3348077578UL), (1841216706UL)}, {(1676507466UL), (1017841240UL), (2992644565UL), (476936158UL), (2468072723UL), (3113105154UL), (1154120402UL), (460889625UL), (1942263502UL), (1761593999UL), (3020908939UL), (3078194866UL), (310971889UL), (1644896012UL), (3756044556UL), (3549937583UL), (3710822994UL), (3554313733UL), (2174654326UL), (4251063242UL), (2340485150UL), (950951909UL), (4288936895UL), (3744348848UL), (706644559UL), (1085927825UL), (1595992020UL), (3288724966UL), (1367247946UL), (2950094970UL), (3925419886UL), (2628739022UL), (2528254629UL), (3582224789UL), (3907345559UL), (3373329273UL), (4255542251UL), (1185418446UL), (4018656113UL), (2854344020UL), (1381160022UL), (3642438773UL), (4284399225UL), (935780030UL), (4142412144UL), (1263328494UL), (1154237693UL), (2684443667UL), (3067549398UL), (4253090033UL), (1251034970UL), (1874233020UL), (3222830495UL), (3866931656UL), (286048055UL), (3146635362UL), (1436483376UL), (2821876495UL), (3927829532UL), (2648886905UL), (2142862852UL), (1368937545UL), (2647327844UL), (1072219385UL), (2621337706UL), (3543274652UL), (911792564UL), (1204178178UL), (4127214323UL), (2821691380UL), (3101998294UL), (730811902UL), (1989156224UL), (2872353003UL), (278290276UL), (1390223786UL), (2657819643UL), (552729795UL), (1736270535UL), (2759207116UL), (1897013739UL), (3657020278UL), (1387364861UL), (1966588302UL), (1049203087UL), (486446521UL), (3675999281UL), (714737345UL), (686837530UL), (85509025UL), (3609089773UL), (2117061768UL), (3935682560UL), (3859508784UL), (4105287041UL), (1808988481UL), (83680601UL), (1464326680UL), (1657693523UL), (3318062731UL), (1391154023UL), (234460119UL), (3551348221UL), (2245244809UL), (3635923821UL), (2814385745UL), (3497626257UL), (916790795UL), (245338628UL), (2514528380UL), (3711787525UL), (2239286063UL), (1054058916UL), (3963706010UL), (3176203796UL), (2230543409UL), (2173597546UL), (3786733892UL), (1396036965UL), (1038764273UL), (2032556038UL), (3216540537UL), (3298170974UL), (1008892557UL), (141155464UL), (1863766055UL), (3931110690UL), (191299053UL), (2019139711UL), (2409528317UL), (739418419UL), (1377144055UL), (2876702705UL), (3911939673UL), (1197696462UL), (2814009721UL), (600813233UL), (1535885024UL), (1486280357UL), (3084650548UL), (2324695947UL), (2293284974UL), (2036339249UL), (3465600153UL), (1624446108UL), (327866771UL), (3356772175UL), (1826625240UL), (1947102360UL), (3661848193UL), (1421374867UL), (3228945021UL), (1358646008UL), (1067180174UL), (2190741258UL), (643362354UL), (109899594UL), (2064362635UL), (3249674888UL), (2165543887UL), (4180291913UL), (1676507466UL), (1017841240UL), (2992644565UL), (476936158UL), (3608467942UL), (3113105154UL), (1154120402UL), (460889625UL), (1942263502UL), (1862994005UL), (3020908939UL), (3078194866UL), (310971889UL), (1644896012UL), (693774191UL), (3549937583UL), (3710822994UL), (3554313733UL), (2174654326UL), (37658897UL), (2340485150UL), (950951909UL), (4288936895UL), (3744348848UL), (2258231402UL), (1085927825UL), (1595992020UL), (3288724966UL), (1367247946UL), (3850509554UL), (3925419886UL), (2628739022UL), (2528254629UL), (3582224789UL), (3124287811UL), (3373329273UL), (4255542251UL), (1185418446UL), (4018656113UL), (1989726178UL), (1381160022UL), (3642438773UL), (4284399225UL), (935780030UL), (3622052196UL), (1263328494UL), (1154237693UL), (2684443667UL), (3067549398UL), (2786224913UL), (1251034970UL), (1874233020UL), (3222830495UL), (3866931656UL), (1529490307UL), (3146635362UL), (1436483376UL), (2821876495UL), (3927829532UL), (979247444UL), (2142862852UL), (1368937545UL), (2647327844UL), (1072219385UL), (294065371UL), (3543274652UL), (911792564UL), (1204178178UL), (4127214323UL), (103582737UL), (3101998294UL), (730811902UL), (1989156224UL), (2872353003UL), (1885087777UL), (1390223786UL), (2657819643UL), (552729795UL), (1736270535UL), (3325206451UL), (1897013739UL), (3657020278UL), (1387364861UL), (1966588302UL), (2117065739UL), (486446521UL), (3675999281UL), (714737345UL), (686837530UL), (3946214694UL), (3609089773UL), (2117061768UL), (3935682560UL), (3859508784UL), (2916136885UL), (1808988481UL), (83680601UL), (1464326680UL), (1657693523UL), (3438751781UL), (1391154023UL), (234460119UL), (3551348221UL), (2245244809UL), (3948410079UL), (2814385745UL), (3497626257UL), (916790795UL), (245338628UL), (1767303496UL), (3711787525UL), (2239286063UL), (1054058916UL), (3963706010UL), (4140631909UL), (2230543409UL), (2173597546UL), (3786733892UL), (1396036965UL), (1116033475UL), (2032556038UL), (3216540537UL), (3298170974UL), (1008892557UL), (667272562UL), (1863766055UL), (3931110690UL), (191299053UL), (2019139711UL), (272901326UL), (739418419UL), (1377144055UL), (2876702705UL), (3911939673UL), (3839312742UL), (2814009721UL), (600813233UL), (1535885024UL), (1486280357UL), (4256065219UL), (2324695947UL), (2293284974UL), (2036339249UL), (3465600153UL), (1215859603UL), (327866771UL), (3356772175UL), (1826625240UL), (1947102360UL), (4240407984UL), (1421374867UL), (3228945021UL), (1358646008UL), (1067180174UL), (4100357988UL), (643362354UL), (109899594UL), (2064362635UL), (3249674888UL), (2898852084UL), (4180291913UL), (1676507466UL), (1017841240UL), (2992644565UL), (1569683812UL), (3608467942UL), (3113105154UL), (1154120402UL), (460889625UL), (966040649UL), (1862994005UL), (3020908939UL), (3078194866UL), (310971889UL), (786634113UL), (693774191UL), (3549937583UL), (3710822994UL), (3554313733UL), (1578429713UL), (37658897UL), (2340485150UL), (950951909UL), (4288936895UL), (2528123823UL), (2258231402UL), (1085927825UL), (1595992020UL), (3288724966UL), (3544041088UL), (3850509554UL), (3925419886UL), (2628739022UL), (2528254629UL), (2562145937UL), (3124287811UL), (3373329273UL), (4255542251UL), (1185418446UL), (3693565710UL), (1989726178UL), (1381160022UL), (3642438773UL), (4284399225UL), (3271478204UL), (3622052196UL), (1263328494UL), (1154237693UL), (2684443667UL), (3615401444UL), (2786224913UL), (1251034970UL), (1874233020UL), (3222830495UL), (2572413057UL), (1529490307UL), (3146635362UL), (1436483376UL), (2821876495UL), (3993894153UL), (979247444UL), (2142862852UL), (1368937545UL), (2647327844UL), (1353904396UL), (294065371UL), (3543274652UL), (911792564UL), (1204178178UL), (3165709748UL), (103582737UL), (3101998294UL), (730811902UL), (1989156224UL), (893293786UL), (1885087777UL), (1390223786UL), (2657819643UL), (552729795UL), (3388458110UL), (3325206451UL), (1897013739UL), (3657020278UL), (1387364861UL), (3025318046UL), (2117065739UL), (486446521UL), (3675999281UL), (714737345UL), (2085926890UL), (3946214694UL), (3609089773UL), (2117061768UL), (3935682560UL), (868009118UL), (2916136885UL), (1808988481UL), (83680601UL), (1464326680UL), (797410789UL), (3438751781UL), (1391154023UL), (234460119UL), (3551348221UL), (4068940987UL), (3948410079UL), (2814385745UL), (3497626257UL), (916790795UL), (3722456098UL), (1767303496UL), (3711787525UL), (2239286063UL), (1054058916UL), (2030352819UL), (4140631909UL), (2230543409UL), (2173597546UL), (3786733892UL), (3211336683UL), (1116033475UL), (2032556038UL), (3216540537UL), (3298170974UL), (2589589144UL), (667272562UL), (1863766055UL), (3931110690UL), (191299053UL), (1139480458UL), (272901326UL), (739418419UL), (1377144055UL), (2876702705UL), (1954361769UL), (3839312742UL), (2814009721UL), (600813233UL), (1535885024UL), (3587775605UL), (4256065219UL), (2324695947UL), (2293284974UL), (2036339249UL), (1534849280UL), (1215859603UL), (327866771UL), (3356772175UL), (1826625240UL), (720372669UL), (4240407984UL), (1421374867UL), (3228945021UL), (1358646008UL), (3409069246UL), (4100357988UL), (643362354UL), (109899594UL), (2064362635UL), (4243434294UL), (2898852084UL), (4180291913UL), (1676507466UL), (1017841240UL), (3243922356UL), (1569683812UL), (3608467942UL), (3113105154UL), (1154120402UL), (1479311403UL), (966040649UL), (1862994005UL), (3020908939UL), (3078194866UL), (1556392996UL), (786634113UL), (693774191UL), (3549937583UL), (3710822994UL), (920664071UL), (1578429713UL), (37658897UL), (2340485150UL), (950951909UL), (740197415UL), (2528123823UL), (2258231402UL), (1085927825UL), (1595992020UL), (2580760267UL), (3544041088UL), (3850509554UL), (3925419886UL), (2628739022UL), (3867556156UL), (2562145937UL), (3124287811UL), (3373329273UL), (4255542251UL), (3185271749UL), (3693565710UL), (1989726178UL), (1381160022UL), (3642438773UL), (3042165367UL), (3271478204UL), (3622052196UL), (1263328494UL), (1154237693UL), (1016814036UL), (3615401444UL), (2786224913UL), (1251034970UL), (1874233020UL), (2956086971UL), (2572413057UL), (1529490307UL), (3146635362UL), (1436483376UL), (1513970396UL), (3993894153UL), (979247444UL), (2142862852UL), (1368937545UL), (3275665128UL), (1353904396UL), (294065371UL), (3543274652UL), (911792564UL), (2209636872UL), (3165709748UL), (103582737UL), (3101998294UL), (730811902UL), (965151434UL), (893293786UL), (1885087777UL), (1390223786UL), (2657819643UL), (3278634059UL), (3388458110UL), (3325206451UL), (1897013739UL), (3657020278UL), (4293473749UL), (3025318046UL), (2117065739UL), (486446521UL), (3675999281UL), (620561205UL), (2085926890UL), (3946214694UL), (3609089773UL), (2117061768UL), (163384588UL), (868009118UL), (2916136885UL), (1808988481UL), (83680601UL), (10243015UL), (797410789UL), (3438751781UL), (1391154023UL), (234460119UL), (1278218413UL), (4068940987UL), (3948410079UL), (2814385745UL), (3497626257UL), (1233272798UL), (3722456098UL), (1767303496UL), (3711787525UL), (2239286063UL), (3968895688UL), (2030352819UL), (4140631909UL), (2230543409UL), (2173597546UL), (2866251044UL), (3211336683UL), (1116033475UL), (2032556038UL), (3216540537UL), (4233849723UL), (2589589144UL), (667272562UL), (1863766055UL), (3931110690UL), (2468422423UL), (1139480458UL), (272901326UL), (739418419UL), (1377144055UL), (4240143411UL), (1954361769UL), (3839312742UL), (2814009721UL), (600813233UL), (3976840004UL), (3587775605UL), (4256065219UL), (2324695947UL), (2293284974UL), (437604123UL), (1534849280UL), (1215859603UL), (327866771UL), (3356772175UL), (2757237699UL), (720372669UL), (4240407984UL), (1421374867UL), (3228945021UL), (3284801305UL), (3409069246UL), (4100357988UL), (643362354UL), (109899594UL), (1301585321UL), (2528806870UL), (1838904064UL), (448772403UL), (1097849740UL), (1899994097UL), (618309123UL), (1911948510UL), (2309256224UL), (1861398151UL), (905306403UL), (1067595802UL), (36868624UL), (3780886191UL), (835126206UL), (3190251977UL), (2672497726UL), (2085944002UL), (2912993968UL), (2493776706UL), (667136329UL), (1474890786UL), (2383346554UL), (943528949UL), (3376706013UL), (2495573574UL), (144956345UL), (793159960UL), (1591274917UL), (477107637UL), (1383815442UL), (67384899UL), (2355242218UL), (1687409818UL), (3801093871UL), (2108217811UL), (3455908733UL), (4172160797UL), (3935534685UL), (631067839UL), (1187677548UL), (2280856137UL), (3020767646UL), (2063176246UL), (3736904984UL), (2952933848UL), (2975164686UL), (4144473303UL), (34670977UL), (1250976509UL), (3484166554UL), (1532744745UL), (225700994UL), (1878713627UL), (2122358980UL), (1456610194UL), (2917522161UL), (2818947075UL), (102678939UL), (53743858UL), (2095250656UL), (4023979225UL), (3094092874UL), (4128760696UL), (3411610028UL), (3020200609UL), (2225866341UL), (586320946UL), (63813522UL), (1238216159UL), (2825692263UL), (2169937231UL), (3298517640UL), (1542128261UL), (2205544184UL), (1258655704UL), (2629012083UL), (4113650203UL), (3198617867UL), (2742310794UL), (3372657381UL), (3115904410UL), (1948638822UL), (1123521744UL), (1080429281UL), (4086706732UL), (4142693211UL), (817377147UL), (2570194641UL), (26001503UL), (2861456160UL), (4185725555UL), (2573003804UL), (1618628779UL), (2588489212UL), (3996192609UL), (1555844274UL), (1003123505UL), (1326350123UL), (1130583849UL), (3017128756UL), (74119042UL), (4041266437UL), (1938014170UL), (3528465794UL), (4203969698UL), (1913054398UL), (3617979809UL), (2218810167UL), (2453899816UL), (1997423206UL), (477446533UL), (303090065UL), (757937082UL), (1523238256UL), (3140505311UL), (1422588701UL), (3642014639UL), (1740624195UL), (1276017154UL), (3072526193UL), (3675105122UL), (1335122682UL), (4080595263UL), (2308519420UL), (3299182769UL), (1461978532UL), (3098694217UL), (2982399822UL), (3088698511UL), (586759229UL), (3548750902UL), (1449857891UL), (2866451663UL), (2525162286UL), (57294602UL), (4107991297UL), (1214672265UL), (2940391280UL), (4285346034UL), (3338216759UL), (737207923UL), (4264163846UL), (59219141UL), (2300024654UL), (1876616814UL), (1976543605UL), (783571061UL), (1724699622UL), (1967524469UL), (1650309916UL), (3322257631UL), (3975521122UL), (273342162UL), (1156754241UL), (185315896UL), (3368133921UL), (66314655UL), (4153777915UL), (3519901897UL)}, {(3672467167UL), (68684525UL), (1738833632UL), (3081329135UL), (2583806115UL), (2291130512UL), (503032614UL), (3658059597UL), (571493931UL), (685537959UL), (3498787788UL), (422428426UL), (3879256913UL), (1173158320UL), (4000800121UL), (298972869UL), (1718342816UL), (2541691685UL), (2490502642UL), (2321452806UL), (4223212804UL), (1812334632UL), (3717655725UL), (4238191852UL), (3001307165UL), (2621896355UL), (2572404999UL), (3590094954UL), (760765206UL), (2293618001UL), (1392353032UL), (1733137169UL), (2674005018UL), (4067961151UL), (1505710487UL), (451078217UL), (2591688848UL), (12635611UL), (507045428UL), (694822241UL), (1789383090UL), (1140183890UL), (1720695967UL), (1994318191UL), (3340349873UL), (2793804971UL), (1054433135UL), (2345087879UL), (3179939285UL), (1651968615UL), (1793223686UL), (1055357758UL), (914271617UL), (483007580UL), (2127727816UL), (2754998083UL), (3179053982UL), (598442002UL), (1950227301UL), (213053613UL), (3566888111UL), (2832258993UL), (4260365359UL), (443662829UL), (1706542890UL), (3852730296UL), (3643260763UL), (2163607277UL), (1812905006UL), (171529637UL), (215187467UL), (2369406909UL), (1929000706UL), (2572441025UL), (2133955541UL), (810692262UL), (1337974799UL), (4030350704UL), (2159178715UL), (3769451556UL), (1026825278UL), (593628480UL), (1817383139UL), (878832429UL), (2253876350UL), (203612980UL), (2102950440UL), (3407143936UL), (1912362251UL), (1595387637UL), (2827580539UL), (305467658UL), (3292706746UL), (44135525UL), (4001933553UL), (3697343089UL), (760470915UL), (587414402UL), (1419378814UL), (2852774010UL), (3891626781UL), (2757016765UL), (1090707384UL), (3997074427UL), (1047182100UL), (2855539022UL), (36229159UL), (1591415533UL), (3471572739UL), (1237952140UL), (2614469314UL), (213338525UL), (886212578UL), (2620301943UL), (713590207UL), (2430496777UL), (1198164420UL), (2644841698UL), (3654164701UL), (36283572UL), (1461695896UL), (1770331341UL), (1641501876UL), (3470919184UL), (3181021559UL), (3053795110UL), (3533531372UL), (3134337355UL), (668308383UL), (388340999UL), (3221275220UL), (1589659138UL), (294382235UL), (1447443579UL), (690177534UL), (1799726917UL), (2838977761UL), (4172949119UL), (2360858031UL), (159385920UL), (2248389027UL), (1790015671UL), (3925738275UL), (1049918544UL), (4107349511UL), (1619955951UL), (4188275966UL), (1672572975UL), (2672697497UL), (1863413666UL), (747724021UL), (4037561738UL), (1605940213UL), (445253292UL), (3362434828UL), (610898209UL), (1473244091UL), (735444769UL), (1540599852UL), (2449351720UL), (1032410949UL), (3672467167UL), (68684525UL), (1738833632UL), (3081329135UL), (519684794UL), (2291130512UL), (503032614UL), (3658059597UL), (571493931UL), (2400186105UL), (3498787788UL), (422428426UL), (3879256913UL), (1173158320UL), (4120704752UL), (298972869UL), (1718342816UL), (2541691685UL), (2490502642UL), (1686027891UL), (4223212804UL), (1812334632UL), (3717655725UL), (4238191852UL), (642431972UL), (2621896355UL), (2572404999UL), (3590094954UL), (760765206UL), (2949609717UL), (1392353032UL), (1733137169UL), (2674005018UL), (4067961151UL), (1526077846UL), (451078217UL), (2591688848UL), (12635611UL), (507045428UL), (2417951415UL), (1789383090UL), (1140183890UL), (1720695967UL), (1994318191UL), (3465605863UL), (2793804971UL), (1054433135UL), (2345087879UL), (3179939285UL), (3079297626UL), (1793223686UL), (1055357758UL), (914271617UL), (483007580UL), (306802527UL), (2754998083UL), (3179053982UL), (598442002UL), (1950227301UL), (2473418737UL), (3566888111UL), (2832258993UL), (4260365359UL), (443662829UL), (2097776414UL), (3852730296UL), (3643260763UL), (2163607277UL), (1812905006UL), (3957721904UL), (215187467UL), (2369406909UL), (1929000706UL), (2572441025UL), (3779486126UL), (810692262UL), (1337974799UL), (4030350704UL), (2159178715UL), (1127012865UL), (1026825278UL), (593628480UL), (1817383139UL), (878832429UL), (361018423UL), (203612980UL), (2102950440UL), (3407143936UL), (1912362251UL), (1475218277UL), (2827580539UL), (305467658UL), (3292706746UL), (44135525UL), (1900092336UL), (3697343089UL), (760470915UL), (587414402UL), (1419378814UL), (343303227UL), (3891626781UL), (2757016765UL), (1090707384UL), (3997074427UL), (745490961UL), (2855539022UL), (36229159UL), (1591415533UL), (3471572739UL), (3920625546UL), (2614469314UL), (213338525UL), (886212578UL), (2620301943UL), (827771411UL), (2430496777UL), (1198164420UL), (2644841698UL), (3654164701UL), (2747674190UL), (1461695896UL), (1770331341UL), (1641501876UL), (3470919184UL), (919857376UL), (3053795110UL), (3533531372UL), (3134337355UL), (668308383UL), (201138876UL), (3221275220UL), (1589659138UL), (294382235UL), (1447443579UL), (4211579707UL), (1799726917UL), (2838977761UL), (4172949119UL), (2360858031UL), (416103844UL), (2248389027UL), (1790015671UL), (3925738275UL), (1049918544UL), (3481887924UL), (1619955951UL), (4188275966UL), (1672572975UL), (2672697497UL), (564854400UL), (747724021UL), (4037561738UL), (1605940213UL), (445253292UL), (604900912UL), (610898209UL), (1473244091UL), (735444769UL), (1540599852UL), (3036173307UL), (1032410949UL), (3672467167UL), (68684525UL), (1738833632UL), (973022696UL), (519684794UL), (2291130512UL), (503032614UL), (3658059597UL), (1500301452UL), (2400186105UL), (3498787788UL), (422428426UL), (3879256913UL), (3923611748UL), (4120704752UL), (298972869UL), (1718342816UL), (2541691685UL), (2323881484UL), (1686027891UL), (4223212804UL), (1812334632UL), (3717655725UL), (2109094458UL), (642431972UL), (2621896355UL), (2572404999UL), (3590094954UL), (1837882537UL), (2949609717UL), (1392353032UL), (1733137169UL), (2674005018UL), (3252348987UL), (1526077846UL), (451078217UL), (2591688848UL), (12635611UL), (3971261781UL), (2417951415UL), (1789383090UL), (1140183890UL), (1720695967UL), (2906966040UL), (3465605863UL), (2793804971UL), (1054433135UL), (2345087879UL), (915518921UL), (3079297626UL), (1793223686UL), (1055357758UL), (914271617UL), (791633499UL), (306802527UL), (2754998083UL), (3179053982UL), (598442002UL), (324402573UL), (2473418737UL), (3566888111UL), (2832258993UL), (4260365359UL), (2168046398UL), (2097776414UL), (3852730296UL), (3643260763UL), (2163607277UL), (2595175979UL), (3957721904UL), (215187467UL), (2369406909UL), (1929000706UL), (657446369UL), (3779486126UL), (810692262UL), (1337974799UL), (4030350704UL), (1865557469UL), (1127012865UL), (1026825278UL), (593628480UL), (1817383139UL), (3414354529UL), (361018423UL), (203612980UL), (2102950440UL), (3407143936UL), (1739372987UL), (1475218277UL), (2827580539UL), (305467658UL), (3292706746UL), (825045562UL), (1900092336UL), (3697343089UL), (760470915UL), (587414402UL), (2000637694UL), (343303227UL), (3891626781UL), (2757016765UL), (1090707384UL), (4015377800UL), (745490961UL), (2855539022UL), (36229159UL), (1591415533UL), (2208656873UL), (3920625546UL), (2614469314UL), (213338525UL), (886212578UL), (2729976209UL), (827771411UL), (2430496777UL), (1198164420UL), (2644841698UL), (1922667440UL), (2747674190UL), (1461695896UL), (1770331341UL), (1641501876UL), (357535311UL), (919857376UL), (3053795110UL), (3533531372UL), (3134337355UL), (1004072597UL), (201138876UL), (3221275220UL), (1589659138UL), (294382235UL), (1148950143UL), (4211579707UL), (1799726917UL), (2838977761UL), (4172949119UL), (892664404UL), (416103844UL), (2248389027UL), (1790015671UL), (3925738275UL), (2612357890UL), (3481887924UL), (1619955951UL), (4188275966UL), (1672572975UL), (2005534713UL), (564854400UL), (747724021UL), (4037561738UL), (1605940213UL), (2620990454UL), (604900912UL), (610898209UL), (1473244091UL), (735444769UL), (3571225334UL), (3036173307UL), (1032410949UL), (3672467167UL), (68684525UL), (3327351604UL), (973022696UL), (519684794UL), (2291130512UL), (503032614UL), (3814902238UL), (1500301452UL), (2400186105UL), (3498787788UL), (422428426UL), (1756753750UL), (3923611748UL), (4120704752UL), (298972869UL), (1718342816UL), (652903081UL), (2323881484UL), (1686027891UL), (4223212804UL), (1812334632UL), (1599640566UL), (2109094458UL), (642431972UL), (2621896355UL), (2572404999UL), (1668409355UL), (1837882537UL), (2949609717UL), (1392353032UL), (1733137169UL), (3691709793UL), (3252348987UL), (1526077846UL), (451078217UL), (2591688848UL), (3353622601UL), (3971261781UL), (2417951415UL), (1789383090UL), (1140183890UL), (4113853791UL), (2906966040UL), (3465605863UL), (2793804971UL), (1054433135UL), (2195882948UL), (915518921UL), (3079297626UL), (1793223686UL), (1055357758UL), (898713552UL), (791633499UL), (306802527UL), (2754998083UL), (3179053982UL), (2469350088UL), (324402573UL), (2473418737UL), (3566888111UL), (2832258993UL), (1377718274UL), (2168046398UL), (2097776414UL), (3852730296UL), (3643260763UL), (3492388484UL), (2595175979UL), (3957721904UL), (215187467UL), (2369406909UL), (4243449339UL), (657446369UL), (3779486126UL), (810692262UL), (1337974799UL), (3960230785UL), (1865557469UL), (1127012865UL), (1026825278UL), (593628480UL), (732793312UL), (3414354529UL), (361018423UL), (203612980UL), (2102950440UL), (2401792405UL), (1739372987UL), (1475218277UL), (2827580539UL), (305467658UL), (2454275289UL), (825045562UL), (1900092336UL), (3697343089UL), (760470915UL), (2146882409UL), (2000637694UL), (343303227UL), (3891626781UL), (2757016765UL), (3997473261UL), (4015377800UL), (745490961UL), (2855539022UL), (36229159UL), (2375394427UL), (2208656873UL), (3920625546UL), (2614469314UL), (213338525UL), (2055366274UL), (2729976209UL), (827771411UL), (2430496777UL), (1198164420UL), (1789631187UL), (1922667440UL), (2747674190UL), (1461695896UL), (1770331341UL), (4284442852UL), (357535311UL), (919857376UL), (3053795110UL), (3533531372UL), (2124270060UL), (1004072597UL), (201138876UL), (3221275220UL), (1589659138UL), (1418386120UL), (1148950143UL), (4211579707UL), (1799726917UL), (2838977761UL), (3540708069UL), (892664404UL), (416103844UL), (2248389027UL), (1790015671UL), (3936883UL), (2612357890UL), (3481887924UL), (1619955951UL), (4188275966UL), (2963623483UL), (2005534713UL), (564854400UL), (747724021UL), (4037561738UL), (3431155922UL), (2620990454UL), (604900912UL), (610898209UL), (1473244091UL), (3880001339UL), (2879060316UL), (3300897679UL), (3960972039UL), (3201086624UL), (3814462934UL), (3426650044UL), (1930881632UL), (1981178788UL), (2956279691UL), (4272406256UL), (372705521UL), (1359389771UL), (1590302979UL), (3940206208UL), (3817999127UL), (2527835456UL), (2739078164UL), (716997849UL), (3235607043UL), (2550297745UL), (3688700200UL), (354502605UL), (2285793656UL), (2339138034UL), (3912354142UL), (2262255668UL), (469322622UL), (1319943359UL), (1916101235UL), (200441823UL), (509436982UL), (2160284593UL), (1687919695UL), (4153615582UL), (495735041UL), (3694469424UL), (2086893117UL), (4223008799UL), (105344742UL), (1698033424UL), (1149223145UL), (4183918790UL), (4176151950UL), (415739351UL), (817762972UL), (3768072560UL), (1931430949UL), (2698979439UL), (3481477932UL), (1994322914UL), (4078299950UL), (1268233995UL), (3254069145UL), (91029129UL), (498234704UL), (1636613942UL), (3710087092UL), (3876816560UL), (3510446387UL), (3870169008UL), (1370156410UL), (2442498047UL), (2324396523UL), (1258730334UL), (621954739UL), (1053015373UL), (491820717UL), (3386515432UL), (2203703266UL), (120167176UL), (2383669740UL), (1038666440UL), (2927342870UL), (3583197824UL), (1236241846UL), (2474675929UL), (679052891UL), (2451259584UL), (2177706146UL), (606842882UL), (3546980104UL), (2289281509UL), (353873434UL), (2041926837UL), (1238346748UL), (2729109726UL), (2843938395UL), (2938124210UL), (2554443866UL), (1494477920UL), (693378319UL), (2020963566UL), (2000385949UL), (3744098787UL), (650307220UL), (2631327075UL), (1529128757UL), (595871428UL), (3206666562UL), (458062987UL), (875238192UL), (3729317374UL), (1368843921UL), (3478430230UL), (3234384578UL), (3232435428UL), (321359326UL), (994274524UL), (361184397UL), (4285497594UL), (915263578UL), (1486882838UL), (9988613UL), (829077170UL), (677216046UL), (4141828204UL), (165804609UL), (1086678519UL), (2933434608UL), (1351662802UL), (2640085040UL), (2611502932UL), (2033698714UL), (2008873254UL), (3995557835UL), (1020873906UL), (67873555UL), (2230337823UL), (1263800417UL), (1148712155UL), (3985159589UL), (2979503513UL), (2854714997UL), (1539343345UL), (2751484352UL), (1569100732UL), (2020758949UL), (2126757134UL), (3426641899UL), (2808587825UL), (1953320148UL), (1096398464UL), (1502907172UL), (3751230087UL), (765557661UL), (765290990UL), (3056075500UL), (2040620632UL), (422573751UL), (3613558930UL), (1741145769UL), (273531216UL), (837238736UL), (494297893UL), (2903251124UL), (1636782182UL), (4256592784UL), (3652746656UL), (4258393217UL)}};
# 496 "/usr/local/cuda-5.0//include/curand_precalc.h"
static unsigned precalc_xorwow_offset_matrix[8][800];
# 716 "/usr/local/cuda-5.0//include/curand_precalc.h"
static unsigned precalc_xorwow_offset_matrix_host[8][800] = {{(0UL), (0UL), (0UL), (0UL), (3UL), (0UL), (0UL), (0UL), (0UL), (6UL), (0UL), (0UL), (0UL), (0UL), (15UL), (0UL), (0UL), (0UL), (0UL), (30UL), (0UL), (0UL), (0UL), (0UL), (60UL), (0UL), (0UL), (0UL), (0UL), (120UL), (0UL), (0UL), (0UL), (0UL), (240UL), (0UL), (0UL), (0UL), (0UL), (480UL), (0UL), (0UL), (0UL), (0UL), (960UL), (0UL), (0UL), (0UL), (0UL), (1920UL), (0UL), (0UL), (0UL), (0UL), (3840UL), (0UL), (0UL), (0UL), (0UL), (7680UL), (0UL), (0UL), (0UL), (0UL), (15360UL), (0UL), (0UL), (0UL), (0UL), (30720UL), (0UL), (0UL), (0UL), (0UL), (61440UL), (0UL), (0UL), (0UL), (0UL), (122880UL), (0UL), (0UL), (0UL), (0UL), (245760UL), (0UL), (0UL), (0UL), (0UL), (491520UL), (0UL), (0UL), (0UL), (0UL), (983040UL), (0UL), (0UL), (0UL), (0UL), (1966080UL), (0UL), (0UL), (0UL), (0UL), (3932160UL), (0UL), (0UL), (0UL), (0UL), (7864320UL), (0UL), (0UL), (0UL), (0UL), (15728640UL), (0UL), (0UL), (0UL), (0UL), (31457280UL), (0UL), (0UL), (0UL), (0UL), (62914560UL), (0UL), (0UL), (0UL), (0UL), (125829120UL), (0UL), (0UL), (0UL), (0UL), (251658240UL), (0UL), (0UL), (0UL), (0UL), (503316480UL), (0UL), (0UL), (0UL), (0UL), (1006632960UL), (0UL), (0UL), (0UL), (0UL), (2013265920UL), (0UL), (0UL), (0UL), (0UL), (4026531840UL), (0UL), (0UL), (0UL), (0UL), (3758096384UL), (1UL), (0UL), (0UL), (0UL), (0UL), (2UL), (0UL), (0UL), (0UL), (0UL), (4UL), (0UL), (0UL), (0UL), (0UL), (8UL), (0UL), (0UL), (0UL), (0UL), (16UL), (0UL), (0UL), (0UL), (0UL), (32UL), (0UL), (0UL), (0UL), (0UL), (64UL), (0UL), (0UL), (0UL), (0UL), (128UL), (0UL), (0UL), (0UL), (0UL), (256UL), (0UL), (0UL), (0UL), (0UL), (512UL), (0UL), (0UL), (0UL), (0UL), (1024UL), (0UL), (0UL), (0UL), (0UL), (2048UL), (0UL), (0UL), (0UL), (0UL), (4096UL), (0UL), (0UL), (0UL), (0UL), (8192UL), (0UL), (0UL), (0UL), (0UL), (16384UL), (0UL), (0UL), (0UL), (0UL), (32768UL), (0UL), (0UL), (0UL), (0UL), (65536UL), (0UL), (0UL), (0UL), (0UL), (131072UL), (0UL), (0UL), (0UL), (0UL), (262144UL), (0UL), (0UL), (0UL), (0UL), (524288UL), (0UL), (0UL), (0UL), (0UL), (1048576UL), (0UL), (0UL), (0UL), (0UL), (2097152UL), (0UL), (0UL), (0UL), (0UL), (4194304UL), (0UL), (0UL), (0UL), (0UL), (8388608UL), (0UL), (0UL), (0UL), (0UL), (16777216UL), (0UL), (0UL), (0UL), (0UL), (33554432UL), (0UL), (0UL), (0UL), (0UL), (67108864UL), (0UL), (0UL), (0UL), (0UL), (134217728UL), (0UL), (0UL), (0UL), (0UL), (268435456UL), (0UL), (0UL), (0UL), (0UL), (536870912UL), (0UL), (0UL), (0UL), (0UL), (1073741824UL), (0UL), (0UL), (0UL), (0UL), (2147483648UL), (0UL), (0UL), (0UL), (0UL), (0UL), (1UL), (0UL), (0UL), (0UL), (0UL), (2UL), (0UL), (0UL), (0UL), (0UL), (4UL), (0UL), (0UL), (0UL), (0UL), (8UL), (0UL), (0UL), (0UL), (0UL), (16UL), (0UL), (0UL), (0UL), (0UL), (32UL), (0UL), (0UL), (0UL), (0UL), (64UL), (0UL), (0UL), (0UL), (0UL), (128UL), (0UL), (0UL), (0UL), (0UL), (256UL), (0UL), (0UL), (0UL), (0UL), (512UL), (0UL), (0UL), (0UL), (0UL), (1024UL), (0UL), (0UL), (0UL), (0UL), (2048UL), (0UL), (0UL), (0UL), (0UL), (4096UL), (0UL), (0UL), (0UL), (0UL), (8192UL), (0UL), (0UL), (0UL), (0UL), (16384UL), (0UL), (0UL), (0UL), (0UL), (32768UL), (0UL), (0UL), (0UL), (0UL), (65536UL), (0UL), (0UL), (0UL), (0UL), (131072UL), (0UL), (0UL), (0UL), (0UL), (262144UL), (0UL), (0UL), (0UL), (0UL), (524288UL), (0UL), (0UL), (0UL), (0UL), (1048576UL), (0UL), (0UL), (0UL), (0UL), (2097152UL), (0UL), (0UL), (0UL), (0UL), (4194304UL), (0UL), (0UL), (0UL), (0UL), (8388608UL), (0UL), (0UL), (0UL), (0UL), (16777216UL), (0UL), (0UL), (0UL), (0UL), (33554432UL), (0UL), (0UL), (0UL), (0UL), (67108864UL), (0UL), (0UL), (0UL), (0UL), (134217728UL), (0UL), (0UL), (0UL), (0UL), (268435456UL), (0UL), (0UL), (0UL), (0UL), (536870912UL), (0UL), (0UL), (0UL), (0UL), (1073741824UL), (0UL), (0UL), (0UL), (0UL), (2147483648UL), (0UL), (0UL), (0UL), (0UL), (0UL), (1UL), (0UL), (0UL), (0UL), (0UL), (2UL), (0UL), (0UL), (0UL), (0UL), (4UL), (0UL), (0UL), (0UL), (0UL), (8UL), (0UL), (0UL), (0UL), (0UL), (16UL), (0UL), (0UL), (0UL), (0UL), (32UL), (0UL), (0UL), (0UL), (0UL), (64UL), (0UL), (0UL), (0UL), (0UL), (128UL), (0UL), (0UL), (0UL), (0UL), (256UL), (0UL), (0UL), (0UL), (0UL), (512UL), (0UL), (0UL), (0UL), (0UL), (1024UL), (0UL), (0UL), (0UL), (0UL), (2048UL), (0UL), (0UL), (0UL), (0UL), (4096UL), (0UL), (0UL), (0UL), (0UL), (8192UL), (0UL), (0UL), (0UL), (0UL), (16384UL), (0UL), (0UL), (0UL), (0UL), (32768UL), (0UL), (0UL), (0UL), (0UL), (65536UL), (0UL), (0UL), (0UL), (0UL), (131072UL), (0UL), (0UL), (0UL), (0UL), (262144UL), (0UL), (0UL), (0UL), (0UL), (524288UL), (0UL), (0UL), (0UL), (0UL), (1048576UL), (0UL), (0UL), (0UL), (0UL), (2097152UL), (0UL), (0UL), (0UL), (0UL), (4194304UL), (0UL), (0UL), (0UL), (0UL), (8388608UL), (0UL), (0UL), (0UL), (0UL), (16777216UL), (0UL), (0UL), (0UL), (0UL), (33554432UL), (0UL), (0UL), (0UL), (0UL), (67108864UL), (0UL), (0UL), (0UL), (0UL), (134217728UL), (0UL), (0UL), (0UL), (0UL), (268435456UL), (0UL), (0UL), (0UL), (0UL), (536870912UL), (0UL), (0UL), (0UL), (0UL), (1073741824UL), (0UL), (0UL), (0UL), (0UL), (2147483648UL), (0UL), (0UL), (0UL), (0UL), (0UL), (1UL), (17UL), (0UL), (0UL), (0UL), (2UL), (34UL), (0UL), (0UL), (0UL), (4UL), (68UL), (0UL), (0UL), (0UL), (8UL), (136UL), (0UL), (0UL), (0UL), (16UL), (272UL), (0UL), (0UL), (0UL), (32UL), (544UL), (0UL), (0UL), (0UL), (64UL), (1088UL), (0UL), (0UL), (0UL), (128UL), (2176UL), (0UL), (0UL), (0UL), (256UL), (4352UL), (0UL), (0UL), (0UL), (512UL), (8704UL), (0UL), (0UL), (0UL), (1024UL), (17408UL), (0UL), (0UL), (0UL), (2048UL), (34816UL), (0UL), (0UL), (0UL), (4096UL), (69632UL), (0UL), (0UL), (0UL), (8192UL), (139264UL), (0UL), (0UL), (0UL), (16384UL), (278528UL), (0UL), (0UL), (0UL), (32768UL), (557056UL), (0UL), (0UL), (0UL), (65536UL), (1114112UL), (0UL), (0UL), (0UL), (131072UL), (2228224UL), (0UL), (0UL), (0UL), (262144UL), (4456448UL), (0UL), (0UL), (0UL), (524288UL), (8912896UL), (0UL), (0UL), (0UL), (1048576UL), (17825792UL), (0UL), (0UL), (0UL), (2097152UL), (35651584UL), (0UL), (0UL), (0UL), (4194304UL), (71303168UL), (0UL), (0UL), (0UL), (8388608UL), (142606336UL), (0UL), (0UL), (0UL), (16777216UL), (285212672UL), (0UL), (0UL), (0UL), (33554432UL), (570425344UL), (0UL), (0UL), (0UL), (67108864UL), (1140850688UL), (0UL), (0UL), (0UL), (134217728UL), (2281701376UL), (0UL), (0UL), (0UL), (268435456UL), (268435456UL), (0UL), (0UL), (0UL), (536870912UL), (536870912UL), (0UL), (0UL), (0UL), (1073741824UL), (1073741824UL), (0UL), (0UL), (0UL), (2147483648UL), (2147483648UL)}, {(0UL), (3UL), (51UL), (771UL), (13107UL), (0UL), (6UL), (102UL), (1542UL), (26214UL), (0UL), (15UL), (255UL), (3855UL), (65535UL), (0UL), (30UL), (510UL), (7710UL), (131070UL), (0UL), (60UL), (1020UL), (15420UL), (262140UL), (0UL), (120UL), (2040UL), (30840UL), (524280UL), (0UL), (240UL), (4080UL), (61680UL), (1048560UL), (0UL), (480UL), (8160UL), (123360UL), (2097120UL), (0UL), (960UL), (16320UL), (246720UL), (4194240UL), (0UL), (1920UL), (32640UL), (493440UL), (8388480UL), (0UL), (3840UL), (65280UL), (986880UL), (16776960UL), (0UL), (7680UL), (130560UL), (1973760UL), (33553920UL), (0UL), (15360UL), (261120UL), (3947520UL), (67107840UL), (0UL), (30720UL), (522240UL), (7895040UL), (134215680UL), (0UL), (61440UL), (1044480UL), (15790080UL), (268431360UL), (0UL), (122880UL), (2088960UL), (31580160UL), (536862720UL), (0UL), (245760UL), (4177920UL), (63160320UL), (1073725440UL), (0UL), (491520UL), (8355840UL), (126320640UL), (2147450880UL), (0UL), (983040UL), (16711680UL), (252641280UL), (4294901760UL), (0UL), (1966080UL), (33423360UL), (505282560UL), (4294836224UL), (0UL), (3932160UL), (66846720UL), (1010565120UL), (4294705152UL), (0UL), (7864320UL), (133693440UL), (2021130240UL), (4294443008UL), (0UL), (15728640UL), (267386880UL), (4042260480UL), (4293918720UL), (0UL), (31457280UL), (534773760UL), (3789553664UL), (4292870144UL), (0UL), (62914560UL), (1069547520UL), (3284140032UL), (4290772992UL), (0UL), (125829120UL), (2139095040UL), (2273312768UL), (4286578688UL), (0UL), (251658240UL), (4278190080UL), (251658240UL), (4278190080UL), (0UL), (503316480UL), (4261412864UL), (503316480UL), (4261412864UL), (0UL), (1006632960UL), (4227858432UL), (1006632960UL), (4227858432UL), (0UL), (2013265920UL), (4160749568UL), (2013265920UL), (4160749568UL), (0UL), (4026531840UL), (4026531840UL), (4026531840UL), (4026531840UL), (0UL), (3758096384UL), (3758096384UL), (3758096384UL), (3758096384UL), (0UL), (0UL), (3UL), (51UL), (771UL), (0UL), (0UL), (6UL), (102UL), (1542UL), (0UL), (0UL), (15UL), (255UL), (3855UL), (0UL), (0UL), (30UL), (510UL), (7710UL), (0UL), (0UL), (60UL), (1020UL), (15420UL), (0UL), (0UL), (120UL), (2040UL), (30840UL), (0UL), (0UL), (240UL), (4080UL), (61680UL), (0UL), (0UL), (480UL), (8160UL), (123360UL), (0UL), (0UL), (960UL), (16320UL), (246720UL), (0UL), (0UL), (1920UL), (32640UL), (493440UL), (0UL), (0UL), (3840UL), (65280UL), (986880UL), (0UL), (0UL), (7680UL), (130560UL), (1973760UL), (0UL), (0UL), (15360UL), (261120UL), (3947520UL), (0UL), (0UL), (30720UL), (522240UL), (7895040UL), (0UL), (0UL), (61440UL), (1044480UL), (15790080UL), (0UL), (0UL), (122880UL), (2088960UL), (31580160UL), (0UL), (0UL), (245760UL), (4177920UL), (63160320UL), (0UL), (0UL), (491520UL), (8355840UL), (126320640UL), (0UL), (0UL), (983040UL), (16711680UL), (252641280UL), (0UL), (0UL), (1966080UL), (33423360UL), (505282560UL), (0UL), (0UL), (3932160UL), (66846720UL), (1010565120UL), (0UL), (0UL), (7864320UL), (133693440UL), (2021130240UL), (0UL), (0UL), (15728640UL), (267386880UL), (4042260480UL), (0UL), (0UL), (31457280UL), (534773760UL), (3789553664UL), (0UL), (0UL), (62914560UL), (1069547520UL), (3284140032UL), (0UL), (0UL), (125829120UL), (2139095040UL), (2273312768UL), (0UL), (0UL), (251658240UL), (4278190080UL), (251658240UL), (0UL), (0UL), (503316480UL), (4261412864UL), (503316480UL), (0UL), (0UL), (1006632960UL), (4227858432UL), (1006632960UL), (0UL), (0UL), (2013265920UL), (4160749568UL), (2013265920UL), (0UL), (0UL), (4026531840UL), (4026531840UL), (4026531840UL), (0UL), (0UL), (3758096384UL), (3758096384UL), (3758096384UL), (0UL), (0UL), (0UL), (3UL), (51UL), (0UL), (0UL), (0UL), (6UL), (102UL), (0UL), (0UL), (0UL), (15UL), (255UL), (0UL), (0UL), (0UL), (30UL), (510UL), (0UL), (0UL), (0UL), (60UL), (1020UL), (0UL), (0UL), (0UL), (120UL), (2040UL), (0UL), (0UL), (0UL), (240UL), (4080UL), (0UL), (0UL), (0UL), (480UL), (8160UL), (0UL), (0UL), (0UL), (960UL), (16320UL), (0UL), (0UL), (0UL), (1920UL), (32640UL), (0UL), (0UL), (0UL), (3840UL), (65280UL), (0UL), (0UL), (0UL), (7680UL), (130560UL), (0UL), (0UL), (0UL), (15360UL), (261120UL), (0UL), (0UL), (0UL), (30720UL), (522240UL), (0UL), (0UL), (0UL), (61440UL), (1044480UL), (0UL), (0UL), (0UL), (122880UL), (2088960UL), (0UL), (0UL), (0UL), (245760UL), (4177920UL), (0UL), (0UL), (0UL), (491520UL), (8355840UL), (0UL), (0UL), (0UL), (983040UL), (16711680UL), (0UL), (0UL), (0UL), (1966080UL), (33423360UL), (0UL), (0UL), (0UL), (3932160UL), (66846720UL), (0UL), (0UL), (0UL), (7864320UL), (133693440UL), (0UL), (0UL), (0UL), (15728640UL), (267386880UL), (0UL), (0UL), (0UL), (31457280UL), (534773760UL), (0UL), (0UL), (0UL), (62914560UL), (1069547520UL), (0UL), (0UL), (0UL), (125829120UL), (2139095040UL), (0UL), (0UL), (0UL), (251658240UL), (4278190080UL), (0UL), (0UL), (0UL), (503316480UL), (4261412864UL), (0UL), (0UL), (0UL), (1006632960UL), (4227858432UL), (0UL), (0UL), (0UL), (2013265920UL), (4160749568UL), (0UL), (0UL), (0UL), (4026531840UL), (4026531840UL), (0UL), (0UL), (0UL), (3758096384UL), (3758096384UL), (0UL), (0UL), (0UL), (0UL), (3UL), (0UL), (0UL), (0UL), (0UL), (6UL), (0UL), (0UL), (0UL), (0UL), (15UL), (0UL), (0UL), (0UL), (0UL), (30UL), (0UL), (0UL), (0UL), (0UL), (60UL), (0UL), (0UL), (0UL), (0UL), (120UL), (0UL), (0UL), (0UL), (0UL), (240UL), (0UL), (0UL), (0UL), (0UL), (480UL), (0UL), (0UL), (0UL), (0UL), (960UL), (0UL), (0UL), (0UL), (0UL), (1920UL), (0UL), (0UL), (0UL), (0UL), (3840UL), (0UL), (0UL), (0UL), (0UL), (7680UL), (0UL), (0UL), (0UL), (0UL), (15360UL), (0UL), (0UL), (0UL), (0UL), (30720UL), (0UL), (0UL), (0UL), (0UL), (61440UL), (0UL), (0UL), (0UL), (0UL), (122880UL), (0UL), (0UL), (0UL), (0UL), (245760UL), (0UL), (0UL), (0UL), (0UL), (491520UL), (0UL), (0UL), (0UL), (0UL), (983040UL), (0UL), (0UL), (0UL), (0UL), (1966080UL), (0UL), (0UL), (0UL), (0UL), (3932160UL), (0UL), (0UL), (0UL), (0UL), (7864320UL), (0UL), (0UL), (0UL), (0UL), (15728640UL), (0UL), (0UL), (0UL), (0UL), (31457280UL), (0UL), (0UL), (0UL), (0UL), (62914560UL), (0UL), (0UL), (0UL), (0UL), (125829120UL), (0UL), (0UL), (0UL), (0UL), (251658240UL), (0UL), (0UL), (0UL), (0UL), (503316480UL), (0UL), (0UL), (0UL), (0UL), (1006632960UL), (0UL), (0UL), (0UL), (0UL), (2013265920UL), (0UL), (0UL), (0UL), (0UL), (4026531840UL), (0UL), (0UL), (0UL), (0UL), (3758096384UL), (1UL), (17UL), (257UL), (4369UL), (65537UL), (2UL), (34UL), (514UL), (8738UL), (131074UL), (4UL), (68UL), (1028UL), (17476UL), (262148UL), (8UL), (136UL), (2056UL), (34952UL), (524296UL), (16UL), (272UL), (4112UL), (69904UL), (1048592UL), (32UL), (544UL), (8224UL), (139808UL), (2097184UL), (64UL), (1088UL), (16448UL), (279616UL), (4194368UL), (128UL), (2176UL), (32896UL), (559232UL), (8388736UL), (256UL), (4352UL), (65792UL), (1118464UL), (16777472UL), (512UL), (8704UL), (131584UL), (2236928UL), (33554944UL), (1024UL), (17408UL), (263168UL), (4473856UL), (67109888UL), (2048UL), (34816UL), (526336UL), (8947712UL), (134219776UL), (4096UL), (69632UL), (1052672UL), (17895424UL), (268439552UL), (8192UL), (139264UL), (2105344UL), (35790848UL), (536879104UL), (16384UL), (278528UL), (4210688UL), (71581696UL), (1073758208UL), (32768UL), (557056UL), (8421376UL), (143163392UL), (2147516416UL), (65536UL), (1114112UL), (16842752UL), (286326784UL), (65536UL), (131072UL), (2228224UL), (33685504UL), (572653568UL), (131072UL), (262144UL), (4456448UL), (67371008UL), (1145307136UL), (262144UL), (524288UL), (8912896UL), (134742016UL), (2290614272UL), (524288UL), (1048576UL), (17825792UL), (269484032UL), (286261248UL), (1048576UL), (2097152UL), (35651584UL), (538968064UL), (572522496UL), (2097152UL), (4194304UL), (71303168UL), (1077936128UL), (1145044992UL), (4194304UL), (8388608UL), (142606336UL), (2155872256UL), (2290089984UL), (8388608UL), (16777216UL), (285212672UL), (16777216UL), (285212672UL), (16777216UL), (33554432UL), (570425344UL), (33554432UL), (570425344UL), (33554432UL), (67108864UL), (1140850688UL), (67108864UL), (1140850688UL), (67108864UL), (134217728UL), (2281701376UL), (134217728UL), (2281701376UL), (134217728UL), (268435456UL), (268435456UL), (268435456UL), (268435456UL), (268435456UL), (536870912UL), (536870912UL), (536870912UL), (536870912UL), (536870912UL), (1073741824UL), (1073741824UL), (1073741824UL), (1073741824UL), (1073741824UL), (2147483648UL), (2147483648UL), (2147483648UL), (2147483648UL), (2147483648UL)}, {(85009117UL), (335741939UL), (1412632518UL), (386859243UL), (1741437244UL), (152139416UL), (403047142UL), (2556825231UL), (505087203UL), (4287193174UL), (335609039UL), (336528191UL), (1425998811UL), (456920088UL), (2832198590UL), (724748988UL), (3625845630UL), (1509824181UL), (3330088197UL), (2710488401UL), (1431742057UL), (1077674236UL), (1140592489UL), (2096905276UL), (3007294393UL), (2863484114UL), (1081606648UL), (1207443154UL), (972585080UL), (2793363314UL), (1432000919UL), (1089470704UL), (1341132452UL), (3019109363UL), (2362285522UL), (1790260014UL), (2178941408UL), (2682264904UL), (1743251430UL), (429603751UL), (359294556UL), (62915520UL), (1069562512UL), (3486502860UL), (859207501UL), (3939814584UL), (125831040UL), (2139125024UL), (2678038424UL), (1718415002UL), (363436400UL), (251662080UL), (4278250048UL), (1061109552UL), (3436830004UL), (3948098272UL), (503324160UL), (4261532800UL), (2122219104UL), (2310257256UL), (380003776UL), (1006648320UL), (4228098304UL), (4244438208UL), (3278337232UL), (3981233024UL), (2013296640UL), (4161229312UL), (4193909120UL), (2530142624UL), (446273280UL), (4026593280UL), (4027491328UL), (871625472UL), (4254978880UL), (4113772032UL), (3758219264UL), (3760015360UL), (2011686400UL), (3946555008UL), (711351296UL), (3221471232UL), (3225063424UL), (4291808256UL), (108481792UL), (2496444416UL), (2147975168UL), (2155159552UL), (4020213760UL), (485399040UL), (3919147008UL), (983040UL), (15351808UL), (255799296UL), (3923588096UL), (322101248UL), (1966080UL), (299139072UL), (511598592UL), (3283773440UL), (3865427968UL), (3932160UL), (4087939072UL), (1023197184UL), (1467273216UL), (214663168UL), (7864320UL), (4149346304UL), (2046394368UL), (3202981888UL), (3650551808UL), (3236954112UL), (1050935296UL), (871563264UL), (2916302848UL), (1932394496UL), (2447376384UL), (1833435136UL), (2011561984UL), (2342944768UL), (643563520UL), (868220928UL), (177209344UL), (4291559424UL), (122486784UL), (2360868864UL), (2004877312UL), (85983232UL), (4019716096UL), (3734634496UL), (3647995904UL), (1056964608UL), (3661627392UL), (254803968UL), (2905866240UL), (1658847232UL), (2113929216UL), (3028287488UL), (3730833408UL), (2322071552UL), (3586129920UL), (4227858432UL), (1761607680UL), (2092957696UL), (80740352UL), (2071986176UL), (4160749568UL), (3523215360UL), (964689920UL), (429916160UL), (3875536896UL), (4026531840UL), (2751463424UL), (1929379840UL), (4081057792UL), (503316480UL), (3758096384UL), (2281701376UL), (4127195136UL), (3397386240UL), (1316635UL), (85009117UL), (335741939UL), (1412632518UL), (386859243UL), (1580547UL), (152139416UL), (403047142UL), (2556825231UL), (505087203UL), (1317672UL), (335609039UL), (336528191UL), (1425998811UL), (456920088UL), (1574501UL), (724748988UL), (3625845630UL), (1509824181UL), (3330088197UL), (15612UL), (1431742057UL), (1077674236UL), (1140592489UL), (2096905276UL), (31224UL), (2863484114UL), (1081606648UL), (1207443154UL), (972585080UL), (62451UL), (1432000919UL), (1089470704UL), (1341132452UL), (3019109363UL), (124902UL), (1790260014UL), (2178941408UL), (2682264904UL), (1743251430UL), (249804UL), (359294556UL), (62915520UL), (1069562512UL), (3486502860UL), (499608UL), (3939814584UL), (125831040UL), (2139125024UL), (2678038424UL), (999216UL), (363436400UL), (251662080UL), (4278250048UL), (1061109552UL), (3223223904UL), (3948098272UL), (503324160UL), (4261532800UL), (2122219104UL), (1077738688UL), (380003776UL), (1006648320UL), (4228098304UL), (4244438208UL), (1081735552UL), (3981233024UL), (2013296640UL), (4161229312UL), (4193909120UL), (1089729280UL), (446273280UL), (4026593280UL), (4027491328UL), (871625472UL), (2179458560UL), (4113772032UL), (3758219264UL), (3760015360UL), (2011686400UL), (63949824UL), (711351296UL), (3221471232UL), (3225063424UL), (4291808256UL), (127899648UL), (2496444416UL), (2147975168UL), (2155159552UL), (4020213760UL), (255799296UL), (3919147008UL), (983040UL), (15351808UL), (255799296UL), (3732824064UL), (322101248UL), (1966080UL), (299139072UL), (511598592UL), (2096939008UL), (3865427968UL), (3932160UL), (4087939072UL), (1023197184UL), (972652544UL), (214663168UL), (7864320UL), (4149346304UL), (2046394368UL), (3019046912UL), (3650551808UL), (3236954112UL), (1050935296UL), (871563264UL), (1743126528UL), (1932394496UL), (2447376384UL), (1833435136UL), (2011561984UL), (3486253056UL), (643563520UL), (868220928UL), (177209344UL), (4291559424UL), (2677538816UL), (2360868864UL), (2004877312UL), (85983232UL), (4019716096UL), (1060110336UL), (3647995904UL), (1056964608UL), (3661627392UL), (254803968UL), (3193962496UL), (1658847232UL), (2113929216UL), (3028287488UL), (3730833408UL), (3166699520UL), (3586129920UL), (4227858432UL), (1761607680UL), (2092957696UL), (3112173568UL), (2071986176UL), (4160749568UL), (3523215360UL), (964689920UL), (1929379840UL), (3875536896UL), (4026531840UL), (2751463424UL), (1929379840UL), (4127195136UL), (503316480UL), (3758096384UL), (2281701376UL), (4127195136UL), (332854UL), (1316635UL), (85009117UL), (335741939UL), (1412632518UL), (596079UL), (1580547UL), (152139416UL), (403047142UL), (2556825231UL), (1316075UL), (1317672UL), (335609039UL), (336528191UL), (1425998811UL), (2824661UL), (1574501UL), (724748988UL), (3625845630UL), (1509824181UL), (5571497UL), (15612UL), (1431742057UL), (1077674236UL), (1140592489UL), (11142994UL), (31224UL), (2863484114UL), (1081606648UL), (1207443154UL), (22285988UL), (62451UL), (1432000919UL), (1089470704UL), (1341132452UL), (44571976UL), (124902UL), (1790260014UL), (2178941408UL), (2682264904UL), (89143952UL), (249804UL), (359294556UL), (62915520UL), (1069562512UL), (178287904UL), (499608UL), (3939814584UL), (125831040UL), (2139125024UL), (356575808UL), (999216UL), (363436400UL), (251662080UL), (4278250048UL), (713151616UL), (3223223904UL), (3948098272UL), (503324160UL), (4261532800UL), (1426303232UL), (1077738688UL), (380003776UL), (1006648320UL), (4228098304UL), (2852606464UL), (1081735552UL), (3981233024UL), (2013296640UL), (4161229312UL), (1410245632UL), (1089729280UL), (446273280UL), (4026593280UL), (4027491328UL), (1746749440UL), (2179458560UL), (4113772032UL), (3758219264UL), (3760015360UL), (272273408UL), (63949824UL), (711351296UL), (3221471232UL), (3225063424UL), (3765772288UL), (127899648UL), (2496444416UL), (2147975168UL), (2155159552UL), (15351808UL), (255799296UL), (3919147008UL), (983040UL), (15351808UL), (3251929088UL), (3732824064UL), (322101248UL), (1966080UL), (299139072UL), (1135149056UL), (2096939008UL), (3865427968UL), (3932160UL), (4087939072UL), (1196556288UL), (972652544UL), (214663168UL), (7864320UL), (4149346304UL), (1319370752UL), (3019046912UL), (3650551808UL), (3236954112UL), (1050935296UL), (2638741504UL), (1743126528UL), (1932394496UL), (2447376384UL), (1833435136UL), (982515712UL), (3486253056UL), (643563520UL), (868220928UL), (177209344UL), (1965031424UL), (2677538816UL), (2360868864UL), (2004877312UL), (85983232UL), (3930062848UL), (1060110336UL), (3647995904UL), (1056964608UL), (3661627392UL), (3565158400UL), (3193962496UL), (1658847232UL), (2113929216UL), (3028287488UL), (2835349504UL), (3166699520UL), (3586129920UL), (4227858432UL), (1761607680UL), (1375731712UL), (3112173568UL), (2071986176UL), (4160749568UL), (3523215360UL), (2751463424UL), (1929379840UL), (3875536896UL), (4026531840UL), (2751463424UL), (2281701376UL), (4127195136UL), (503316480UL), (3758096384UL), (2281701376UL), (5123UL), (332854UL), (1316635UL), (85009117UL), (335741939UL), (6150UL), (596079UL), (1580547UL), (152139416UL), (403047142UL), (5135UL), (1316075UL), (1317672UL), (335609039UL), (336528191UL), (6174UL), (2824661UL), (1574501UL), (724748988UL), (3625845630UL), (60UL), (5571497UL), (15612UL), (1431742057UL), (1077674236UL), (120UL), (11142994UL), (31224UL), (2863484114UL), (1081606648UL), (240UL), (22285988UL), (62451UL), (1432000919UL), (1089470704UL), (480UL), (44571976UL), (124902UL), (1790260014UL), (2178941408UL), (960UL), (89143952UL), (249804UL), (359294556UL), (62915520UL), (1920UL), (178287904UL), (499608UL), (3939814584UL), (125831040UL), (3840UL), (356575808UL), (999216UL), (363436400UL), (251662080UL), (7680UL), (713151616UL), (3223223904UL), (3948098272UL), (503324160UL), (15360UL), (1426303232UL), (1077738688UL), (380003776UL), (1006648320UL), (30720UL), (2852606464UL), (1081735552UL), (3981233024UL), (2013296640UL), (61440UL), (1410245632UL), (1089729280UL), (446273280UL), (4026593280UL), (122880UL), (1746749440UL), (2179458560UL), (4113772032UL), (3758219264UL), (245760UL), (272273408UL), (63949824UL), (711351296UL), (3221471232UL), (491520UL), (3765772288UL), (127899648UL), (2496444416UL), (2147975168UL), (983040UL), (15351808UL), (255799296UL), (3919147008UL), (983040UL), (3223191552UL), (3251929088UL), (3732824064UL), (322101248UL), (1966080UL), (1077673984UL), (1135149056UL), (2096939008UL), (3865427968UL), (3932160UL), (1081606144UL), (1196556288UL), (972652544UL), (214663168UL), (7864320UL), (1089470464UL), (1319370752UL), (3019046912UL), (3650551808UL), (3236954112UL), (2178940928UL), (2638741504UL), (1743126528UL), (1932394496UL), (2447376384UL), (62914560UL), (982515712UL), (3486253056UL), (643563520UL), (868220928UL), (125829120UL), (1965031424UL), (2677538816UL), (2360868864UL), (2004877312UL), (251658240UL), (3930062848UL), (1060110336UL), (3647995904UL), (1056964608UL), (503316480UL), (3565158400UL), (3193962496UL), (1658847232UL), (2113929216UL), (1006632960UL), (2835349504UL), (3166699520UL), (3586129920UL), (4227858432UL), (2013265920UL), (1375731712UL), (3112173568UL), (2071986176UL), (4160749568UL), (4026531840UL), (2751463424UL), (1929379840UL), (3875536896UL), (4026531840UL), (3758096384UL), (2281701376UL), (4127195136UL), (503316480UL), (3758096384UL), (201392209UL), (3423671362UL), (218366296UL), (3713336838UL), (206572594UL), (402785186UL), (2552372100UL), (436928947UL), (3130605370UL), (463476848UL), (262468UL), (4461835UL), (68158800UL), (1158700908UL), (20971524UL), (524680UL), (8919318UL), (136513955UL), (2316537326UL), (25165852UL), (3222274064UL), (3239051564UL), (3494187077UL), (3558090985UL), (3221225500UL), (2149580832UL), (2183135832UL), (2693406858UL), (2821214674UL), (2147483704UL), (4194368UL), (71304368UL), (1091846420UL), (1347462055UL), (64UL), (8388736UL), (142608736UL), (2183692840UL), (2694924110UL), (3221225600UL), (16777472UL), (285217472UL), (72418384UL), (1094880924UL), (1342177536UL), (33554944UL), (570434944UL), (144836768UL), (2189761848UL), (2684355072UL), (67109888UL), (1140869888UL), (289673536UL), (84556400UL), (1073742848UL), (134219776UL), (2281739776UL), (579347072UL), (169112800UL), (2147485696UL), (268439552UL), (268512256UL), (1158694144UL), (69790144UL), (4096UL), (536879104UL), (537024512UL), (2317388288UL), (3360805760UL), (8192UL), (1073758208UL), (1074049024UL), (339809280UL), (1352902400UL), (16384UL), (2147516416UL), (2148098048UL), (3900844032UL), (1632062976UL), (32768UL), (65536UL), (1228800UL), (17059840UL), (311335936UL), (65536UL), (131072UL), (2457600UL), (34119680UL), (622671872UL), (131072UL), (262144UL), (4915200UL), (68239360UL), (1245343744UL), (262144UL), (524288UL), (9830400UL), (136478720UL), (2490687488UL), (524288UL), (1048576UL), (288096256UL), (272957440UL), (954843136UL), (3222274048UL), (2097152UL), (3797417984UL), (545914880UL), (2983428096UL), (2149580800UL), (4194304UL), (78643200UL), (1091829760UL), (2745630720UL), (4194304UL), (3229614080UL), (3378511872UL), (1109917696UL), (2270035968UL), (8388608UL), (1358954496UL), (1119879168UL), (1414529024UL), (513540096UL), (16777216UL), (2717908992UL), (2239758336UL), (2829058048UL), (1027080192UL), (33554432UL), (1140850688UL), (184549376UL), (1363148800UL), (2054160384UL), (3288334336UL), (2281701376UL), (369098752UL), (2726297600UL), (4108320768UL), (2281701376UL), (268435456UL), (738197504UL), (2231369728UL), (968884224UL), (3959422976UL), (536870912UL), (1476395008UL), (167772160UL), (3011510272UL), (3355443200UL), (1073741824UL), (2952790016UL), (335544320UL), (1728053248UL), (2147483648UL), (2147483648UL), (1610612736UL), (3892314112UL), (503316480UL), (0UL)}, {(1939838472UL), (1412147404UL), (166205219UL), (1757484276UL), (2905930693UL), (2345662040UL), (2845657161UL), (253454719UL), (2661974169UL), (303781080UL), (4075331504UL), (31014156UL), (244538930UL), (3752264221UL), (992575155UL), (219309525UL), (246620060UL), (215640989UL), (4125020723UL), (2016731730UL), (3236558869UL), (297169276UL), (3293566751UL), (1867504216UL), (210423272UL), (2531663658UL), (499723753UL), (1730625896UL), (189236880UL), (3388575408UL), (2433358422UL), (1368961148UL), (3134096848UL), (2827836415UL), (3888822753UL), (4172043647UL), (3379360748UL), (2651760955UL), (1345081091UL), (627692776UL), (189423917UL), (1927379456UL), (4004336944UL), (2995932065UL), (1882016234UL), (2551113616UL), (1576396048UL), (1299792730UL), (2151240795UL), (2154814108UL), (4292139924UL), (3555849728UL), (943986992UL), (3169912733UL), (2631635779UL), (3478094562UL), (1285558544UL), (3716074330UL), (2780749859UL), (3911106510UL), (4175656994UL), (1731832828UL), (1275401375UL), (937322456UL), (3802094750UL), (1145506936UL), (1008905193UL), (1718801768UL), (645739137UL), (1356219146UL), (827886816UL), (1722154800UL), (2242776733UL), (754630810UL), (772070504UL), (249481170UL), (2608123425UL), (2087201889UL), (3200968096UL), (3292110026UL), (841433255UL), (477543427UL), (1878882709UL), (705347364UL), (4003860146UL), (3194913138UL), (2616490007UL), (357561212UL), (2446098297UL), (2955680594UL), (2512991743UL), (637464579UL), (1209132455UL), (1341312804UL), (612108672UL), (2455017713UL), (1749147666UL), (4020226825UL), (2873924220UL), (499405095UL), (1837614076UL), (1227604028UL), (714577577UL), (165950208UL), (442290261UL), (489077752UL), (216760440UL), (42151250UL), (426862080UL), (2810242474UL), (4112075489UL), (3514761468UL), (4101921371UL), (982512636UL), (500792667UL), (4286077681UL), (198050301UL), (1858712743UL), (2913642493UL), (3547545255UL), (3981929169UL), (2944140287UL), (2286578015UL), (3422343167UL), (1239123295UL), (2026367394UL), (3269986302UL), (3028402878UL), (2709637886UL), (1096011710UL), (294584132UL), (3086749695UL), (3324400975UL), (1164394495UL), (4290155855UL), (543687304UL), (4008517630UL), (836370334UL), (1876426750UL), (2362048414UL), (3578325264UL), (3221487612UL), (2671154748UL), (3395518460UL), (2018383420UL), (2131029536UL), (2165829624UL), (697661816UL), (1336049656UL), (3309365624UL), (4259639360UL), (3423548400UL), (2416417776UL), (1633698800UL), (1630071792UL), (41950336UL), (3423478496UL), (2885608160UL), (3943744224UL), (677380832UL), (4179285363UL), (1939838472UL), (1412147404UL), (166205219UL), (1757484276UL), (3838244595UL), (2345662040UL), (2845657161UL), (253454719UL), (2661974169UL), (138737288UL), (4075331504UL), (31014156UL), (244538930UL), (3752264221UL), (1503392345UL), (219309525UL), (246620060UL), (215640989UL), (4125020723UL), (1759481152UL), (3236558869UL), (297169276UL), (3293566751UL), (1867504216UL), (3898070400UL), (2531663658UL), (499723753UL), (1730625896UL), (189236880UL), (2610231010UL), (2433358422UL), (1368961148UL), (3134096848UL), (2827836415UL), (3903474593UL), (4172043647UL), (3379360748UL), (2651760955UL), (1345081091UL), (1267864331UL), (189423917UL), (1927379456UL), (4004336944UL), (2995932065UL), (3452816347UL), (2551113616UL), (1576396048UL), (1299792730UL), (2151240795UL), (1222520631UL), (4292139924UL), (3555849728UL), (943986992UL), (3169912733UL), (3260130211UL), (3478094562UL), (1285558544UL), (3716074330UL), (2780749859UL), (3039362306UL), (4175656994UL), (1731832828UL), (1275401375UL), (937322456UL), (3236754932UL), (1145506936UL), (1008905193UL), (1718801768UL), (645739137UL), (1358079399UL), (827886816UL), (1722154800UL), (2242776733UL), (754630810UL), (1748663943UL), (249481170UL), (2608123425UL), (2087201889UL), (3200968096UL), (698076610UL), (841433255UL), (477543427UL), (1878882709UL), (705347364UL), (3692794996UL), (3194913138UL), (2616490007UL), (357561212UL), (2446098297UL), (2771068186UL), (2512991743UL), (637464579UL), (1209132455UL), (1341312804UL), (27937268UL), (2455017713UL), (1749147666UL), (4020226825UL), (2873924220UL), (1673040956UL), (1837614076UL), (1227604028UL), (714577577UL), (165950208UL), (528340088UL), (489077752UL), (216760440UL), (42151250UL), (426862080UL), (1646215396UL), (4112075489UL), (3514761468UL), (4101921371UL), (982512636UL), (2095821304UL), (4286077681UL), (198050301UL), (1858712743UL), (2913642493UL), (277300160UL), (3981929169UL), (2944140287UL), (2286578015UL), (3422343167UL), (1178044288UL), (2026367394UL), (3269986302UL), (3028402878UL), (2709637886UL), (2234191616UL), (294584132UL), (3086749695UL), (3324400975UL), (1164394495UL), (136978944UL), (543687304UL), (4008517630UL), (836370334UL), (1876426750UL), (3275253760UL), (3578325264UL), (3221487612UL), (2671154748UL), (3395518460UL), (3942394880UL), (2131029536UL), (2165829624UL), (697661816UL), (1336049656UL), (3265045504UL), (4259639360UL), (3423548400UL), (2416417776UL), (1633698800UL), (3943712768UL), (41950336UL), (3423478496UL), (2885608160UL), (3943744224UL), (2293593009UL), (4179285363UL), (1939838472UL), (1412147404UL), (166205219UL), (715714152UL), (3838244595UL), (2345662040UL), (2845657161UL), (253454719UL), (3758048260UL), (138737288UL), (4075331504UL), (31014156UL), (244538930UL), (370671650UL), (1503392345UL), (219309525UL), (246620060UL), (215640989UL), (2219162331UL), (1759481152UL), (3236558869UL), (297169276UL), (3293566751UL), (135243402UL), (3898070400UL), (2531663658UL), (499723753UL), (1730625896UL), (3142293713UL), (2610231010UL), (2433358422UL), (1368961148UL), (3134096848UL), (486949791UL), (3903474593UL), (4172043647UL), (3379360748UL), (2651760955UL), (3172880550UL), (1267864331UL), (189423917UL), (1927379456UL), (4004336944UL), (191463910UL), (3452816347UL), (2551113616UL), (1576396048UL), (1299792730UL), (4411574UL), (1222520631UL), (4292139924UL), (3555849728UL), (943986992UL), (3073348038UL), (3260130211UL), (3478094562UL), (1285558544UL), (3716074330UL), (3098363790UL), (3039362306UL), (4175656994UL), (1731832828UL), (1275401375UL), (468159532UL), (3236754932UL), (1145506936UL), (1008905193UL), (1718801768UL), (1092964081UL), (1358079399UL), (827886816UL), (1722154800UL), (2242776733UL), (53128947UL), (1748663943UL), (249481170UL), (2608123425UL), (2087201889UL), (1960144614UL), (698076610UL), (841433255UL), (477543427UL), (1878882709UL), (1505419004UL), (3692794996UL), (3194913138UL), (2616490007UL), (357561212UL), (2823143358UL), (2771068186UL), (2512991743UL), (637464579UL), (1209132455UL), (1991737212UL), (27937268UL), (2455017713UL), (1749147666UL), (4020226825UL), (2907896812UL), (1673040956UL), (1837614076UL), (1227604028UL), (714577577UL), (3633969112UL), (528340088UL), (489077752UL), (216760440UL), (42151250UL), (2886728356UL), (1646215396UL), (4112075489UL), (3514761468UL), (4101921371UL), (3507686008UL), (2095821304UL), (4286077681UL), (198050301UL), (1858712743UL), (1463806912UL), (277300160UL), (3981929169UL), (2944140287UL), (2286578015UL), (4137888640UL), (1178044288UL), (2026367394UL), (3269986302UL), (3028402878UL), (1276820224UL), (2234191616UL), (294584132UL), (3086749695UL), (3324400975UL), (4274031104UL), (136978944UL), (543687304UL), (4008517630UL), (836370334UL), (2978609152UL), (3275253760UL), (3578325264UL), (3221487612UL), (2671154748UL), (2296777728UL), (3942394880UL), (2131029536UL), (2165829624UL), (697661816UL), (1086645248UL), (3265045504UL), (4259639360UL), (3423548400UL), (2416417776UL), (2295121920UL), (3943712768UL), (41950336UL), (3423478496UL), (2885608160UL), (3290486993UL), (2293593009UL), (4179285363UL), (1939838472UL), (1412147404UL), (3718742914UL), (715714152UL), (3838244595UL), (2345662040UL), (2845657161UL), (3251034248UL), (3758048260UL), (138737288UL), (4075331504UL), (31014156UL), (2257801369UL), (370671650UL), (1503392345UL), (219309525UL), (246620060UL), (1375177854UL), (2219162331UL), (1759481152UL), (3236558869UL), (297169276UL), (2981812236UL), (135243402UL), (3898070400UL), (2531663658UL), (499723753UL), (1103465850UL), (3142293713UL), (2610231010UL), (2433358422UL), (1368961148UL), (2570001060UL), (486949791UL), (3903474593UL), (4172043647UL), (3379360748UL), (1922171925UL), (3172880550UL), (1267864331UL), (189423917UL), (1927379456UL), (1359812359UL), (191463910UL), (3452816347UL), (2551113616UL), (1576396048UL), (2518549525UL), (4411574UL), (1222520631UL), (4292139924UL), (3555849728UL), (949028615UL), (3073348038UL), (3260130211UL), (3478094562UL), (1285558544UL), (4113039486UL), (3098363790UL), (3039362306UL), (4175656994UL), (1731832828UL), (1827471372UL), (468159532UL), (3236754932UL), (1145506936UL), (1008905193UL), (1626341859UL), (1092964081UL), (1358079399UL), (827886816UL), (1722154800UL), (1069547583UL), (53128947UL), (1748663943UL), (249481170UL), (2608123425UL), (3162506114UL), (1960144614UL), (698076610UL), (841433255UL), (477543427UL), (3641706484UL), (1505419004UL), (3692794996UL), (3194913138UL), (2616490007UL), (3623882586UL), (2823143358UL), (2771068186UL), (2512991743UL), (637464579UL), (16785012UL), (1991737212UL), (27937268UL), (2455017713UL), (1749147666UL), (2348825660UL), (2907896812UL), (1673040956UL), (1837614076UL), (1227604028UL), (2579527800UL), (3633969112UL), (528340088UL), (489077752UL), (216760440UL), (3628134628UL), (2886728356UL), (1646215396UL), (4112075489UL), (3514761468UL), (1602085368UL), (3507686008UL), (2095821304UL), (4286077681UL), (198050301UL), (2501362624UL), (1463806912UL), (277300160UL), (3981929169UL), (2944140287UL), (4112467840UL), (4137888640UL), (1178044288UL), (2026367394UL), (3269986302UL), (3356184320UL), (1276820224UL), (2234191616UL), (294584132UL), (3086749695UL), (366387712UL), (4274031104UL), (136978944UL), (543687304UL), (4008517630UL), (1006135296UL), (2978609152UL), (3275253760UL), (3578325264UL), (3221487612UL), (3104844800UL), (2296777728UL), (3942394880UL), (2131029536UL), (2165829624UL), (1874371584UL), (1086645248UL), (3265045504UL), (4259639360UL), (3423548400UL), (2975352832UL), (2295121920UL), (3943712768UL), (41950336UL), (3423478496UL), (989898496UL), (3410688577UL), (2331788830UL), (3546482013UL), (813828841UL), (1865093068UL), (3265457506UL), (3795669738UL), (2119696024UL), (4285651426UL), (3333834629UL), (3451487261UL), (2090324595UL), (1816963648UL), (932961512UL), (2470761029UL), (3401764108UL), (3421619354UL), (4199624502UL), (589386372UL), (879396240UL), (3372470254UL), (2693109296UL), (2424215996UL), (38442268UL), (1882087724UL), (171397600UL), (2024561281UL), (183095586UL), (3282207272UL), (3402177296UL), (1859195498UL), (413109947UL), (2839537944UL), (1632143648UL), (3742715856UL), (388696500UL), (1748703733UL), (3563198567UL), (3826785440UL), (2896086528UL), (3989037829UL), (1478787788UL), (1390277813UL), (2123320736UL), (3416516800UL), (2056564203UL), (2584895011UL), (1605192736UL), (2475623616UL), (3856499712UL), (3439657984UL), (708088129UL), (1501395566UL), (1302184960UL), (1360092352UL), (1645630430UL), (1425230387UL), (3369488824UL), (2979863936UL), (869212432UL), (150548847UL), (1097557362UL), (655939640UL), (316553344UL), (3761918508UL), (3958338094UL), (141744600UL), (1412214640UL), (1859689984UL), (3200680981UL), (3883058679UL), (999801880UL), (3946079738UL), (1876072704UL), (194381849UL), (2177533995UL), (1584707624UL), (3053768410UL), (2593051904UL), (3458076673UL), (4047442835UL), (3545972808UL), (3441793178UL), (194975744UL), (1731731470UL), (4168755162UL), (2628944732UL), (2125675784UL), (3119906816UL), (960774145UL), (2646626078UL), (2152793157UL), (3049156634UL), (672464896UL), (3046932493UL), (3700727536UL), (2152335477UL), (575986696UL), (671940608UL), (2208366608UL), (1454456125UL), (937760016UL), (4103979069UL), (2737668096UL), (1179779104UL), (1030912634UL), (1041902112UL), (2032909434UL), (2274230272UL), (2089025605UL), (3050632421UL), (2428784965UL), (140658149UL), (4254138368UL), (1745354889UL), (711584249UL), (2746523017UL), (2551006457UL), (1100808192UL), (1494221073UL), (3422999489UL), (2696954129UL), (976716737UL), (2653421568UL), (3806331426UL), (3690047362UL), (1481392674UL), (3817015170UL), (2353004544UL), (286262340UL), (2300534532UL), (4206449732UL), (15339268UL), (2894069760UL), (488376456UL), (1489927688UL), (1196583048UL), (652746248UL), (2214592512UL), (69904UL), (1006205200UL), (2322628880UL), (1229515024UL), (2617245696UL), (3423527456UL), (1964953120UL), (4260938272UL), (386199072UL), (1744830464UL), (1342444608UL), (1069330496UL), (2138592320UL), (3185897536UL), (1073741824UL), (1342493824UL), (3780942976UL), (1771066496UL), (2189433984UL), (2147483648UL)}, {(1804684571UL), (2106089606UL), (1533056158UL), (2870216110UL), (3618155659UL), (3789871366UL), (4246691682UL), (3667072763UL), (1212241769UL), (3152390668UL), (2973497449UL), (2958641966UL), (2088805328UL), (717518631UL), (2401090860UL), (3606967204UL), (952637656UL), (59827581UL), (1291486682UL), (1499453515UL), (2053994857UL), (563998083UL), (4094000396UL), (1163546899UL), (1003843565UL), (654565639UL), (1070907026UL), (4217851863UL), (426034251UL), (1721352737UL), (278404469UL), (3899800390UL), (1063362170UL), (1162348262UL), (3153545093UL), (3249996223UL), (186674553UL), (2616406148UL), (3137968354UL), (1282784965UL), (1495068058UL), (3033760361UL), (2278144523UL), (3192245769UL), (719586342UL), (2602548287UL), (3386583150UL), (355354345UL), (3252815848UL), (2178056037UL), (2283016801UL), (3005955037UL), (3340254490UL), (802791670UL), (251122316UL), (3705188626UL), (1252262272UL), (3989036796UL), (3527490452UL), (2047131255UL), (1447170583UL), (3373930285UL), (2895037457UL), (209341805UL), (1820357643UL), (3712392731UL), (685796521UL), (1322920440UL), (814388470UL), (1357857147UL), (434430265UL), (2650681935UL), (1371566728UL), (58783716UL), (2273435933UL), (3498513198UL), (792571900UL), (1447808772UL), (3513385860UL), (99175889UL), (1105434360UL), (1484146625UL), (3327194068UL), (242672513UL), (3552105593UL), (1425844616UL), (2871928454UL), (1124633561UL), (607610433UL), (2130018608UL), (1610235673UL), (2844230432UL), (2748082340UL), (994392866UL), (450823250UL), (2912535126UL), (2574390988UL), (3974009252UL), (78696582UL), (649682891UL), (3980917176UL), (3221419689UL), (960695436UL), (729221508UL), (358358845UL), (3392407691UL), (472711005UL), (295914899UL), (3005191796UL), (3078521977UL), (3370011868UL), (509135340UL), (1965939519UL), (2086465877UL), (2457949822UL), (1324152522UL), (762289386UL), (3618693997UL), (233730715UL), (2873984650UL), (31168606UL), (3367142977UL), (2851851305UL), (3251660053UL), (4209768406UL), (3298190175UL), (901235185UL), (1564391510UL), (2352686527UL), (1008150482UL), (578573310UL), (3462447127UL), (2482873876UL), (1790221257UL), (2255375608UL), (2335345651UL), (1381450613UL), (2866805101UL), (1495073163UL), (519905259UL), (3184556473UL), (1076378339UL), (2692926127UL), (970097715UL), (4013407916UL), (4014350363UL), (2476927059UL), (1989070516UL), (2640060069UL), (1987784589UL), (1880989003UL), (3861138803UL), (451743296UL), (1987067871UL), (1975657871UL), (3397816882UL), (2309900530UL), (4108425851UL), (4063867233UL), (3319482186UL), (2621772886UL), (1804684571UL), (2106089606UL), (1533056158UL), (2870216110UL), (611557097UL), (3789871366UL), (4246691682UL), (3667072763UL), (1212241769UL), (3389551988UL), (2973497449UL), (2958641966UL), (2088805328UL), (717518631UL), (2460955430UL), (3606967204UL), (952637656UL), (59827581UL), (1291486682UL), (3531087304UL), (2053994857UL), (563998083UL), (4094000396UL), (1163546899UL), (1242934125UL), (654565639UL), (1070907026UL), (4217851863UL), (426034251UL), (3034416129UL), (278404469UL), (3899800390UL), (1063362170UL), (1162348262UL), (4258714417UL), (3249996223UL), (186674553UL), (2616406148UL), (3137968354UL), (639885806UL), (1495068058UL), (3033760361UL), (2278144523UL), (3192245769UL), (4159910300UL), (2602548287UL), (3386583150UL), (355354345UL), (3252815848UL), (1555885880UL), (2283016801UL), (3005955037UL), (3340254490UL), (802791670UL), (2948774612UL), (3705188626UL), (1252262272UL), (3989036796UL), (3527490452UL), (2107826711UL), (1447170583UL), (3373930285UL), (2895037457UL), (209341805UL), (3763367196UL), (3712392731UL), (685796521UL), (1322920440UL), (814388470UL), (1986168339UL), (434430265UL), (2650681935UL), (1371566728UL), (58783716UL), (1423189187UL), (3498513198UL), (792571900UL), (1447808772UL), (3513385860UL), (315969823UL), (1105434360UL), (1484146625UL), (3327194068UL), (242672513UL), (3336228275UL), (1425844616UL), (2871928454UL), (1124633561UL), (607610433UL), (1762052458UL), (1610235673UL), (2844230432UL), (2748082340UL), (994392866UL), (3771702243UL), (2912535126UL), (2574390988UL), (3974009252UL), (78696582UL), (1626628844UL), (3980917176UL), (3221419689UL), (960695436UL), (729221508UL), (382092233UL), (3392407691UL), (472711005UL), (295914899UL), (3005191796UL), (514297204UL), (3370011868UL), (509135340UL), (1965939519UL), (2086465877UL), (3975975091UL), (1324152522UL), (762289386UL), (3618693997UL), (233730715UL), (455322516UL), (31168606UL), (3367142977UL), (2851851305UL), (3251660053UL), (3952189603UL), (3298190175UL), (901235185UL), (1564391510UL), (2352686527UL), (826181452UL), (578573310UL), (3462447127UL), (2482873876UL), (1790221257UL), (1529242773UL), (2335345651UL), (1381450613UL), (2866805101UL), (1495073163UL), (877718651UL), (3184556473UL), (1076378339UL), (2692926127UL), (970097715UL), (299344245UL), (4014350363UL), (2476927059UL), (1989070516UL), (2640060069UL), (3844531327UL), (1880989003UL), (3861138803UL), (451743296UL), (1987067871UL), (3272848161UL), (3397816882UL), (2309900530UL), (4108425851UL), (4063867233UL), (834288064UL), (2621772886UL), (1804684571UL), (2106089606UL), (1533056158UL), (304865970UL), (611557097UL), (3789871366UL), (4246691682UL), (3667072763UL), (2728206193UL), (3389551988UL), (2973497449UL), (2958641966UL), (2088805328UL), (3895037582UL), (2460955430UL), (3606967204UL), (952637656UL), (59827581UL), (2349212526UL), (3531087304UL), (2053994857UL), (563998083UL), (4094000396UL), (4028900485UL), (1242934125UL), (654565639UL), (1070907026UL), (4217851863UL), (1663452176UL), (3034416129UL), (278404469UL), (3899800390UL), (1063362170UL), (2721441405UL), (4258714417UL), (3249996223UL), (186674553UL), (2616406148UL), (4228837490UL), (639885806UL), (1495068058UL), (3033760361UL), (2278144523UL), (2820661772UL), (4159910300UL), (2602548287UL), (3386583150UL), (355354345UL), (1815256314UL), (1555885880UL), (2283016801UL), (3005955037UL), (3340254490UL), (2166514144UL), (2948774612UL), (3705188626UL), (1252262272UL), (3989036796UL), (751187322UL), (2107826711UL), (1447170583UL), (3373930285UL), (2895037457UL), (2809311944UL), (3763367196UL), (3712392731UL), (685796521UL), (1322920440UL), (936300677UL), (1986168339UL), (434430265UL), (2650681935UL), (1371566728UL), (1308015359UL), (1423189187UL), (3498513198UL), (792571900UL), (1447808772UL), (3065349526UL), (315969823UL), (1105434360UL), (1484146625UL), (3327194068UL), (1038676789UL), (3336228275UL), (1425844616UL), (2871928454UL), (1124633561UL), (2956422231UL), (1762052458UL), (1610235673UL), (2844230432UL), (2748082340UL), (3603862093UL), (3771702243UL), (2912535126UL), (2574390988UL), (3974009252UL), (1691332448UL), (1626628844UL), (3980917176UL), (3221419689UL), (960695436UL), (3120142427UL), (382092233UL), (3392407691UL), (472711005UL), (295914899UL), (4101686983UL), (514297204UL), (3370011868UL), (509135340UL), (1965939519UL), (3015736706UL), (3975975091UL), (1324152522UL), (762289386UL), (3618693997UL), (2395097989UL), (455322516UL), (31168606UL), (3367142977UL), (2851851305UL), (30511955UL), (3952189603UL), (3298190175UL), (901235185UL), (1564391510UL), (2606298633UL), (826181452UL), (578573310UL), (3462447127UL), (2482873876UL), (4159642946UL), (1529242773UL), (2335345651UL), (1381450613UL), (2866805101UL), (1782913669UL), (877718651UL), (3184556473UL), (1076378339UL), (2692926127UL), (1730328819UL), (299344245UL), (4014350363UL), (2476927059UL), (1989070516UL), (1425685614UL), (3844531327UL), (1880989003UL), (3861138803UL), (451743296UL), (889237383UL), (3272848161UL), (3397816882UL), (2309900530UL), (4108425851UL), (1155723231UL), (834288064UL), (2621772886UL), (1804684571UL), (2106089606UL), (2387009004UL), (304865970UL), (611557097UL), (3789871366UL), (4246691682UL), (1405709661UL), (2728206193UL), (3389551988UL), (2973497449UL), (2958641966UL), (3183906006UL), (3895037582UL), (2460955430UL), (3606967204UL), (952637656UL), (1345432763UL), (2349212526UL), (3531087304UL), (2053994857UL), (563998083UL), (3749011414UL), (4028900485UL), (1242934125UL), (654565639UL), (1070907026UL), (1072342672UL), (1663452176UL), (3034416129UL), (278404469UL), (3899800390UL), (3566652188UL), (2721441405UL), (4258714417UL), (3249996223UL), (186674553UL), (4001263143UL), (4228837490UL), (639885806UL), (1495068058UL), (3033760361UL), (4278332644UL), (2820661772UL), (4159910300UL), (2602548287UL), (3386583150UL), (838831089UL), (1815256314UL), (1555885880UL), (2283016801UL), (3005955037UL), (3377397178UL), (2166514144UL), (2948774612UL), (3705188626UL), (1252262272UL), (2414422575UL), (751187322UL), (2107826711UL), (1447170583UL), (3373930285UL), (1253755033UL), (2809311944UL), (3763367196UL), (3712392731UL), (685796521UL), (3238624475UL), (936300677UL), (1986168339UL), (434430265UL), (2650681935UL), (1642290570UL), (1308015359UL), (1423189187UL), (3498513198UL), (792571900UL), (173318140UL), (3065349526UL), (315969823UL), (1105434360UL), (1484146625UL), (4103797777UL), (1038676789UL), (3336228275UL), (1425844616UL), (2871928454UL), (1797745765UL), (2956422231UL), (1762052458UL), (1610235673UL), (2844230432UL), (2180656608UL), (3603862093UL), (3771702243UL), (2912535126UL), (2574390988UL), (1183098390UL), (1691332448UL), (1626628844UL), (3980917176UL), (3221419689UL), (2645203959UL), (3120142427UL), (382092233UL), (3392407691UL), (472711005UL), (1659659070UL), (4101686983UL), (514297204UL), (3370011868UL), (509135340UL), (483888155UL), (3015736706UL), (3975975091UL), (1324152522UL), (762289386UL), (1259948064UL), (2395097989UL), (455322516UL), (31168606UL), (3367142977UL), (339990414UL), (30511955UL), (3952189603UL), (3298190175UL), (901235185UL), (3097920065UL), (2606298633UL), (826181452UL), (578573310UL), (3462447127UL), (1548039839UL), (4159642946UL), (1529242773UL), (2335345651UL), (1381450613UL), (2173079994UL), (1782913669UL), (877718651UL), (3184556473UL), (1076378339UL), (1570275057UL), (1730328819UL), (299344245UL), (4014350363UL), (2476927059UL), (1845882881UL), (1425685614UL), (3844531327UL), (1880989003UL), (3861138803UL), (1322409081UL), (889237383UL), (3272848161UL), (3397816882UL), (2309900530UL), (3505447982UL), (3430136873UL), (1319796589UL), (4202423979UL), (3184732284UL), (2910356648UL), (2534615223UL), (3854465731UL), (768821792UL), (2205052576UL), (1348983754UL), (1300250188UL), (2919181738UL), (2520178732UL), (3967243685UL), (2646012002UL), (1784678658UL), (741302051UL), (3464753547UL), (194213376UL), (1482799064UL), (3009673860UL), (680824208UL), (741966796UL), (2381283369UL), (3022877171UL), (1619439814UL), (3961433610UL), (1331297670UL), (1100110820UL), (1311672539UL), (1122110615UL), (4056004850UL), (3413790176UL), (3148768822UL), (1242592694UL), (2925975727UL), (1879285134UL), (334328879UL), (1318235222UL), (3140739559UL), (401691770UL), (3604288404UL), (3686496908UL), (770670945UL), (199139043UL), (2092710473UL), (3914528993UL), (700991333UL), (2375775811UL), (858137308UL), (3490050165UL), (2389078291UL), (1615607459UL), (3027969809UL), (820012549UL), (2085659484UL), (2654485136UL), (2630408646UL), (196481396UL), (1119673274UL), (1026209692UL), (726501622UL), (2940737143UL), (3559571163UL), (2288027726UL), (1039212708UL), (929664536UL), (1061981465UL), (186058675UL), (3537656152UL), (844176796UL), (2996217992UL), (1545798611UL), (3031020656UL), (2248030435UL), (1665857580UL), (2905758082UL), (1269201312UL), (3031275084UL), (4034872841UL), (983632400UL), (4188503190UL), (757119675UL), (2105920865UL), (4281032819UL), (2917801076UL), (3900010013UL), (3910997169UL), (1729751422UL), (562313247UL), (3070846353UL), (2564238664UL), (4050540186UL), (4258833501UL), (2270666053UL), (2207128401UL), (2990540001UL), (797768898UL), (2288390225UL), (3230323685UL), (1974727440UL), (3327301426UL), (289857826UL), (3565889868UL), (2791014422UL), (2021097820UL), (3350378271UL), (3673707591UL), (2610067927UL), (4255789547UL), (2682856590UL), (12563128UL), (1397542366UL), (237149400UL), (2233707508UL), (3875573245UL), (2097374144UL), (175320773UL), (4103445984UL), (4089284323UL), (3610168130UL), (3084915964UL), (680145366UL), (2571684685UL), (1132894909UL), (104640024UL), (193765521UL), (2338202907UL), (895271448UL), (11499099UL), (1798066417UL), (1297412626UL), (2511347162UL), (3140535007UL), (2129963538UL), (700683199UL), (2609700278UL), (2953463279UL), (2290844145UL), (1871316353UL), (3993801787UL), (2219413182UL), (2954453701UL), (231283580UL), (1375331115UL), (207723994UL), (1799562537UL), (2056553564UL), (2513609799UL), (3542459627UL), (3173012714UL), (3923404932UL), (217877755UL), (2095124912UL), (192024370UL), (1168134987UL), (1889598668UL), (3014873069UL), (2033573343UL)}, {(3465348660UL), (3623545008UL), (3505902593UL), (838034830UL), (1338018789UL), (2595329276UL), (3367746385UL), (3197935201UL), (1439351946UL), (3585085571UL), (4165798087UL), (3634792639UL), (2359485974UL), (2772582925UL), (1110186203UL), (3771562484UL), (1508694157UL), (1564641206UL), (2801985736UL), (2446107936UL), (3849126897UL), (1842973671UL), (944408104UL), (2624631280UL), (2729080685UL), (3737368614UL), (858809173UL), (2289802345UL), (2428186575UL), (3114742765UL), (716011303UL), (3443810690UL), (814132610UL), (517432787UL), (614445393UL), (2930433345UL), (291178098UL), (2117644502UL), (2749446703UL), (311745701UL), (365684723UL), (1705418876UL), (2213749318UL), (4011417220UL), (1842575651UL), (988348831UL), (94258998UL), (2771150272UL), (498058526UL), (1344827813UL), (2961955291UL), (262703473UL), (1404034822UL), (1566595865UL), (2522381203UL), (1706522206UL), (1203054806UL), (1273801539UL), (2070583465UL), (3913449936UL), (3231505231UL), (619636751UL), (3746997351UL), (4103027837UL), (1205468203UL), (3355878253UL), (3433356888UL), (107785753UL), (2779092609UL), (1869691566UL), (2555219983UL), (903319808UL), (3273374169UL), (2538926990UL), (979533870UL), (1356500860UL), (1661983738UL), (1380761625UL), (2919458459UL), (1041142798UL), (1430817627UL), (517007606UL), (1421570516UL), (2371447300UL), (2985632691UL), (3684889351UL), (3873926653UL), (788770697UL), (1854750277UL), (209332297UL), (1137299679UL), (848527832UL), (3850486924UL), (4179307312UL), (2764470693UL), (1353191605UL), (4166891919UL), (2074703841UL), (3373997532UL), (2013528640UL), (701389744UL), (841917592UL), (2065742268UL), (2721848192UL), (2566956680UL), (3122896007UL), (1090761479UL), (921859028UL), (4086736376UL), (1837462309UL), (2579826431UL), (2436217134UL), (839037727UL), (1072086642UL), (614518622UL), (3764758228UL), (1501128342UL), (3669108708UL), (1601407381UL), (2899014005UL), (3268308948UL), (3337564231UL), (1986911578UL), (3379194930UL), (1950365753UL), (2098537451UL), (51515980UL), (1176526086UL), (3213391582UL), (1059745735UL), (2273586703UL), (376085505UL), (1493749800UL), (3970342143UL), (1620925244UL), (2165301314UL), (2332030190UL), (1864098798UL), (276747442UL), (2776569227UL), (2992780663UL), (3027279789UL), (1074555384UL), (3481518659UL), (2499703783UL), (661805703UL), (3782305562UL), (9186074UL), (2357407210UL), (2355922343UL), (2024733363UL), (485434612UL), (862379913UL), (1029706268UL), (1512726310UL), (3834948354UL), (1435892840UL), (3297980694UL), (2831553800UL), (2111416471UL), (711321697UL), (3465348660UL), (3623545008UL), (3505902593UL), (838034830UL), (1553436793UL), (2595329276UL), (3367746385UL), (3197935201UL), (1439351946UL), (3198044157UL), (4165798087UL), (3634792639UL), (2359485974UL), (2772582925UL), (836042976UL), (3771562484UL), (1508694157UL), (1564641206UL), (2801985736UL), (1190371491UL), (3849126897UL), (1842973671UL), (944408104UL), (2624631280UL), (410746791UL), (3737368614UL), (858809173UL), (2289802345UL), (2428186575UL), (1542325976UL), (716011303UL), (3443810690UL), (814132610UL), (517432787UL), (1649301063UL), (2930433345UL), (291178098UL), (2117644502UL), (2749446703UL), (3955511579UL), (365684723UL), (1705418876UL), (2213749318UL), (4011417220UL), (2753632862UL), (988348831UL), (94258998UL), (2771150272UL), (498058526UL), (3314106168UL), (2961955291UL), (262703473UL), (1404034822UL), (1566595865UL), (3590367097UL), (1706522206UL), (1203054806UL), (1273801539UL), (2070583465UL), (2340683261UL), (3231505231UL), (619636751UL), (3746997351UL), (4103027837UL), (2785398766UL), (3355878253UL), (3433356888UL), (107785753UL), (2779092609UL), (1608451840UL), (2555219983UL), (903319808UL), (3273374169UL), (2538926990UL), (645164419UL), (1356500860UL), (1661983738UL), (1380761625UL), (2919458459UL), (2260224548UL), (1430817627UL), (517007606UL), (1421570516UL), (2371447300UL), (1636004496UL), (3684889351UL), (3873926653UL), (788770697UL), (1854750277UL), (1345251011UL), (1137299679UL), (848527832UL), (3850486924UL), (4179307312UL), (3576574608UL), (1353191605UL), (4166891919UL), (2074703841UL), (3373997532UL), (183447754UL), (701389744UL), (841917592UL), (2065742268UL), (2721848192UL), (2109289891UL), (3122896007UL), (1090761479UL), (921859028UL), (4086736376UL), (2212730874UL), (2579826431UL), (2436217134UL), (839037727UL), (1072086642UL), (55934784UL), (3764758228UL), (1501128342UL), (3669108708UL), (1601407381UL), (516550987UL), (3268308948UL), (3337564231UL), (1986911578UL), (3379194930UL), (3973484473UL), (2098537451UL), (51515980UL), (1176526086UL), (3213391582UL), (4251661633UL), (2273586703UL), (376085505UL), (1493749800UL), (3970342143UL), (3190791788UL), (2165301314UL), (2332030190UL), (1864098798UL), (276747442UL), (2991976613UL), (2992780663UL), (3027279789UL), (1074555384UL), (3481518659UL), (1399789494UL), (661805703UL), (3782305562UL), (9186074UL), (2357407210UL), (1942736967UL), (2024733363UL), (485434612UL), (862379913UL), (1029706268UL), (4122704494UL), (3834948354UL), (1435892840UL), (3297980694UL), (2831553800UL), (1210092654UL), (711321697UL), (3465348660UL), (3623545008UL), (3505902593UL), (3443231198UL), (1553436793UL), (2595329276UL), (3367746385UL), (3197935201UL), (1304974987UL), (3198044157UL), (4165798087UL), (3634792639UL), (2359485974UL), (3518323362UL), (836042976UL), (3771562484UL), (1508694157UL), (1564641206UL), (3577633375UL), (1190371491UL), (3849126897UL), (1842973671UL), (944408104UL), (1854555112UL), (410746791UL), (3737368614UL), (858809173UL), (2289802345UL), (3622671731UL), (1542325976UL), (716011303UL), (3443810690UL), (814132610UL), (296197011UL), (1649301063UL), (2930433345UL), (291178098UL), (2117644502UL), (1056271538UL), (3955511579UL), (365684723UL), (1705418876UL), (2213749318UL), (1258535671UL), (2753632862UL), (988348831UL), (94258998UL), (2771150272UL), (3669902097UL), (3314106168UL), (2961955291UL), (262703473UL), (1404034822UL), (1654433938UL), (3590367097UL), (1706522206UL), (1203054806UL), (1273801539UL), (2448138887UL), (2340683261UL), (3231505231UL), (619636751UL), (3746997351UL), (1454088394UL), (2785398766UL), (3355878253UL), (3433356888UL), (107785753UL), (689323470UL), (1608451840UL), (2555219983UL), (903319808UL), (3273374169UL), (1603842392UL), (645164419UL), (1356500860UL), (1661983738UL), (1380761625UL), (2814639423UL), (2260224548UL), (1430817627UL), (517007606UL), (1421570516UL), (1938805701UL), (1636004496UL), (3684889351UL), (3873926653UL), (788770697UL), (4238900666UL), (1345251011UL), (1137299679UL), (848527832UL), (3850486924UL), (108793827UL), (3576574608UL), (1353191605UL), (4166891919UL), (2074703841UL), (3780897861UL), (183447754UL), (701389744UL), (841917592UL), (2065742268UL), (3036602746UL), (2109289891UL), (3122896007UL), (1090761479UL), (921859028UL), (3499985398UL), (2212730874UL), (2579826431UL), (2436217134UL), (839037727UL), (3520354700UL), (55934784UL), (3764758228UL), (1501128342UL), (3669108708UL), (1601010847UL), (516550987UL), (3268308948UL), (3337564231UL), (1986911578UL), (2704241781UL), (3973484473UL), (2098537451UL), (51515980UL), (1176526086UL), (3602010532UL), (4251661633UL), (2273586703UL), (376085505UL), (1493749800UL), (2922957328UL), (3190791788UL), (2165301314UL), (2332030190UL), (1864098798UL), (1649666443UL), (2991976613UL), (2992780663UL), (3027279789UL), (1074555384UL), (2848531519UL), (1399789494UL), (661805703UL), (3782305562UL), (9186074UL), (320781315UL), (1942736967UL), (2024733363UL), (485434612UL), (862379913UL), (3598892066UL), (4122704494UL), (3834948354UL), (1435892840UL), (3297980694UL), (545184652UL), (1210092654UL), (711321697UL), (3465348660UL), (3623545008UL), (1173753045UL), (3443231198UL), (1553436793UL), (2595329276UL), (3367746385UL), (2444634476UL), (1304974987UL), (3198044157UL), (4165798087UL), (3634792639UL), (1837035806UL), (3518323362UL), (836042976UL), (3771562484UL), (1508694157UL), (2899021294UL), (3577633375UL), (1190371491UL), (3849126897UL), (1842973671UL), (1614215215UL), (1854555112UL), (410746791UL), (3737368614UL), (858809173UL), (525745365UL), (3622671731UL), (1542325976UL), (716011303UL), (3443810690UL), (566299749UL), (296197011UL), (1649301063UL), (2930433345UL), (291178098UL), (1987532525UL), (1056271538UL), (3955511579UL), (365684723UL), (1705418876UL), (2321222760UL), (1258535671UL), (2753632862UL), (988348831UL), (94258998UL), (2986060366UL), (3669902097UL), (3314106168UL), (2961955291UL), (262703473UL), (604452796UL), (1654433938UL), (3590367097UL), (1706522206UL), (1203054806UL), (1894894069UL), (2448138887UL), (2340683261UL), (3231505231UL), (619636751UL), (6680729UL), (1454088394UL), (2785398766UL), (3355878253UL), (3433356888UL), (2025591660UL), (689323470UL), (1608451840UL), (2555219983UL), (903319808UL), (3430384385UL), (1603842392UL), (645164419UL), (1356500860UL), (1661983738UL), (2108736152UL), (2814639423UL), (2260224548UL), (1430817627UL), (517007606UL), (2973658959UL), (1938805701UL), (1636004496UL), (3684889351UL), (3873926653UL), (2283691941UL), (4238900666UL), (1345251011UL), (1137299679UL), (848527832UL), (45551112UL), (108793827UL), (3576574608UL), (1353191605UL), (4166891919UL), (3776615962UL), (3780897861UL), (183447754UL), (701389744UL), (841917592UL), (3830639316UL), (3036602746UL), (2109289891UL), (3122896007UL), (1090761479UL), (1931255897UL), (3499985398UL), (2212730874UL), (2579826431UL), (2436217134UL), (3272166055UL), (3520354700UL), (55934784UL), (3764758228UL), (1501128342UL), (1567864246UL), (1601010847UL), (516550987UL), (3268308948UL), (3337564231UL), (3918802424UL), (2704241781UL), (3973484473UL), (2098537451UL), (51515980UL), (3551394489UL), (3602010532UL), (4251661633UL), (2273586703UL), (376085505UL), (885459498UL), (2922957328UL), (3190791788UL), (2165301314UL), (2332030190UL), (3197056515UL), (1649666443UL), (2991976613UL), (2992780663UL), (3027279789UL), (2385348906UL), (2848531519UL), (1399789494UL), (661805703UL), (3782305562UL), (2163075465UL), (320781315UL), (1942736967UL), (2024733363UL), (485434612UL), (2680597981UL), (3598892066UL), (4122704494UL), (3834948354UL), (1435892840UL), (2499644163UL), (2704575422UL), (2579557838UL), (673530532UL), (493730767UL), (1124557747UL), (1908629439UL), (2821949504UL), (1743112513UL), (2849457841UL), (2344409314UL), (3479159262UL), (4260973770UL), (2991970754UL), (3812641863UL), (2229319917UL), (2466968521UL), (1766353737UL), (3216591612UL), (2113272648UL), (364370737UL), (1893001758UL), (2608875275UL), (4224057183UL), (3546705413UL), (1999778009UL), (348872225UL), (2470564216UL), (1417878284UL), (2709790112UL), (3579129936UL), (2137971615UL), (4046639861UL), (2841156930UL), (391544737UL), (2056567354UL), (737657378UL), (3877904725UL), (578930752UL), (1759172471UL), (3383278785UL), (1047197514UL), (649468151UL), (3452867243UL), (1792089520UL), (63936215UL), (3909143729UL), (3753489875UL), (734314122UL), (2490530916UL), (3043874586UL), (1504812057UL), (59001199UL), (2493748676UL), (2552438622UL), (1889694845UL), (3715397860UL), (2817245010UL), (3841049206UL), (816106718UL), (2176130406UL), (640254735UL), (12376903UL), (3000264936UL), (3304116079UL), (1620334094UL), (2109391765UL), (1348210951UL), (2237645681UL), (1207768272UL), (1562894669UL), (2156631655UL), (1387193235UL), (3154858817UL), (633510901UL), (2312190757UL), (402878244UL), (2501565021UL), (2984409334UL), (4167491216UL), (3614267292UL), (3078552271UL), (971722322UL), (3065543880UL), (2307584190UL), (491480322UL), (2068673112UL), (1929780632UL), (178549964UL), (983979983UL), (2769314886UL), (4214442042UL), (2977609682UL), (25450683UL), (3075212658UL), (1571149568UL), (3531670561UL), (42782504UL), (425601306UL), (428715214UL), (497250251UL), (693520802UL), (166426814UL), (1786382125UL), (2712003995UL), (3610802197UL), (2076490757UL), (404822980UL), (3953184772UL), (1655231947UL), (3594351577UL), (3068232274UL), (3771730346UL), (4110519574UL), (3534704897UL), (2375277865UL), (3597780202UL), (3472676002UL), (1350276449UL), (3218248239UL), (3589255283UL), (3253132633UL), (1769885529UL), (3792812294UL), (120332643UL), (1219374788UL), (3608889019UL), (2386099811UL), (858495304UL), (1284785543UL), (331370962UL), (2259419662UL), (2519864134UL), (3194739432UL), (2669074511UL), (2565559140UL), (3378072004UL), (2647801475UL), (265068954UL), (1464416963UL), (1232787612UL), (4160089759UL), (2510685972UL), (670300081UL), (2509357766UL), (1981891975UL), (4161588397UL), (1371924626UL), (44760868UL), (634955171UL), (1187096933UL), (3324788972UL), (3576888559UL), (2801347752UL), (3730298395UL), (1702170762UL), (4206083415UL), (741409141UL), (3649731355UL), (1025429529UL)}, {(91444490UL), (628576944UL), (4069219862UL), (2253058925UL), (492354082UL), (1191182242UL), (1565180119UL), (2257613723UL), (456055162UL), (605712223UL), (953365104UL), (3104638527UL), (1133984729UL), (2662828416UL), (2134948274UL), (1921384447UL), (843719355UL), (588432962UL), (1734575434UL), (2924140067UL), (483396548UL), (3848838894UL), (3155476556UL), (1760928304UL), (4168059840UL), (3279827269UL), (2644461735UL), (4168565656UL), (3951563569UL), (1276805504UL), (1708974143UL), (1878547888UL), (3465220024UL), (3062086782UL), (2801401651UL), (1510428126UL), (716404149UL), (1646021208UL), (3534932385UL), (1186585561UL), (651997355UL), (282914223UL), (352224857UL), (3764407517UL), (1059868753UL), (1971798134UL), (978904005UL), (976413661UL), (4039544152UL), (498989693UL), (2565125471UL), (2782642813UL), (3537961025UL), (1194967362UL), (169217024UL), (3491609UL), (1319592872UL), (1630206561UL), (2497130840UL), (1685008996UL), (2828944016UL), (3301346775UL), (2893072371UL), (2606559798UL), (4026138031UL), (2664450619UL), (691091062UL), (1079640113UL), (1417637732UL), (4081852209UL), (2197910648UL), (2310382370UL), (1000957047UL), (959936499UL), (2844551811UL), (2272766890UL), (31122394UL), (2742925483UL), (1121884686UL), (57929089UL), (2468361281UL), (2982007782UL), (2371576893UL), (177782593UL), (3603584577UL), (672057044UL), (2108452841UL), (1671338057UL), (3386908223UL), (1243029765UL), (805157552UL), (1271858417UL), (1621249501UL), (1804851492UL), (1321010403UL), (751773221UL), (1517221627UL), (822709871UL), (104533154UL), (3578182264UL), (640541709UL), (421086624UL), (4233576392UL), (3729339369UL), (197460644UL), (773140636UL), (2158026018UL), (1756785611UL), (4011575991UL), (3569445500UL), (736117181UL), (2456162322UL), (1168189787UL), (3651312675UL), (1070291988UL), (268231205UL), (541474497UL), (3316168972UL), (3546990856UL), (830417208UL), (725960194UL), (2044207227UL), (3188997938UL), (2383298579UL), (3350316374UL), (3575011225UL), (1553111865UL), (1285013027UL), (749371711UL), (766611716UL), (598195098UL), (2139882719UL), (2062405428UL), (3634702446UL), (3015263295UL), (223311969UL), (2622859522UL), (3888492701UL), (2955257225UL), (582625650UL), (3563756446UL), (2886083960UL), (1907546514UL), (454650902UL), (3287277541UL), (625828138UL), (2991888140UL), (1935326370UL), (4031152256UL), (702881509UL), (1427632724UL), (1345475301UL), (2577560804UL), (2858595147UL), (2533191188UL), (185662179UL), (536505093UL), (3747894147UL), (111551030UL), (370373207UL), (2293908590UL), (91444490UL), (628576944UL), (4069219862UL), (2253058925UL), (1671484924UL), (1191182242UL), (1565180119UL), (2257613723UL), (456055162UL), (3411094744UL), (953365104UL), (3104638527UL), (1133984729UL), (2662828416UL), (2000630022UL), (1921384447UL), (843719355UL), (588432962UL), (1734575434UL), (3293926122UL), (483396548UL), (3848838894UL), (3155476556UL), (1760928304UL), (146876953UL), (3279827269UL), (2644461735UL), (4168565656UL), (3951563569UL), (3976156700UL), (1708974143UL), (1878547888UL), (3465220024UL), (3062086782UL), (1999154400UL), (1510428126UL), (716404149UL), (1646021208UL), (3534932385UL), (2479551429UL), (651997355UL), (282914223UL), (352224857UL), (3764407517UL), (1275979651UL), (1971798134UL), (978904005UL), (976413661UL), (4039544152UL), (300654823UL), (2565125471UL), (2782642813UL), (3537961025UL), (1194967362UL), (3123973648UL), (3491609UL), (1319592872UL), (1630206561UL), (2497130840UL), (1437913158UL), (2828944016UL), (3301346775UL), (2893072371UL), (2606559798UL), (2153172585UL), (2664450619UL), (691091062UL), (1079640113UL), (1417637732UL), (17137237UL), (2197910648UL), (2310382370UL), (1000957047UL), (959936499UL), (802137134UL), (2272766890UL), (31122394UL), (2742925483UL), (1121884686UL), (3909775167UL), (2468361281UL), (2982007782UL), (2371576893UL), (177782593UL), (3319492525UL), (672057044UL), (2108452841UL), (1671338057UL), (3386908223UL), (1878151473UL), (805157552UL), (1271858417UL), (1621249501UL), (1804851492UL), (3215921223UL), (751773221UL), (1517221627UL), (822709871UL), (104533154UL), (361845001UL), (640541709UL), (421086624UL), (4233576392UL), (3729339369UL), (2655936801UL), (773140636UL), (2158026018UL), (1756785611UL), (4011575991UL), (587202971UL), (736117181UL), (2456162322UL), (1168189787UL), (3651312675UL), (2517883370UL), (268231205UL), (541474497UL), (3316168972UL), (3546990856UL), (2037251305UL), (725960194UL), (2044207227UL), (3188997938UL), (2383298579UL), (2665008587UL), (3575011225UL), (1553111865UL), (1285013027UL), (749371711UL), (2163964019UL), (598195098UL), (2139882719UL), (2062405428UL), (3634702446UL), (2788202059UL), (223311969UL), (2622859522UL), (3888492701UL), (2955257225UL), (740986174UL), (3563756446UL), (2886083960UL), (1907546514UL), (454650902UL), (2426323587UL), (625828138UL), (2991888140UL), (1935326370UL), (4031152256UL), (1831149435UL), (1427632724UL), (1345475301UL), (2577560804UL), (2858595147UL), (3977153945UL), (185662179UL), (536505093UL), (3747894147UL), (111551030UL), (4131587422UL), (2293908590UL), (91444490UL), (628576944UL), (4069219862UL), (2408189350UL), (1671484924UL), (1191182242UL), (1565180119UL), (2257613723UL), (1338069254UL), (3411094744UL), (953365104UL), (3104638527UL), (1133984729UL), (631497759UL), (2000630022UL), (1921384447UL), (843719355UL), (588432962UL), (3280318959UL), (3293926122UL), (483396548UL), (3848838894UL), (3155476556UL), (1777918163UL), (146876953UL), (3279827269UL), (2644461735UL), (4168565656UL), (2786264663UL), (3976156700UL), (1708974143UL), (1878547888UL), (3465220024UL), (2793923820UL), (1999154400UL), (1510428126UL), (716404149UL), (1646021208UL), (3102243824UL), (2479551429UL), (651997355UL), (282914223UL), (352224857UL), (3767702588UL), (1275979651UL), (1971798134UL), (978904005UL), (976413661UL), (1951622548UL), (300654823UL), (2565125471UL), (2782642813UL), (3537961025UL), (2186817324UL), (3123973648UL), (3491609UL), (1319592872UL), (1630206561UL), (1075424534UL), (1437913158UL), (2828944016UL), (3301346775UL), (2893072371UL), (207992406UL), (2153172585UL), (2664450619UL), (691091062UL), (1079640113UL), (3114255216UL), (17137237UL), (2197910648UL), (2310382370UL), (1000957047UL), (2548008553UL), (802137134UL), (2272766890UL), (31122394UL), (2742925483UL), (4069482373UL), (3909775167UL), (2468361281UL), (2982007782UL), (2371576893UL), (2807823912UL), (3319492525UL), (672057044UL), (2108452841UL), (1671338057UL), (12831353UL), (1878151473UL), (805157552UL), (1271858417UL), (1621249501UL), (461887094UL), (3215921223UL), (751773221UL), (1517221627UL), (822709871UL), (1317394918UL), (361845001UL), (640541709UL), (421086624UL), (4233576392UL), (3385587450UL), (2655936801UL), (773140636UL), (2158026018UL), (1756785611UL), (1475601973UL), (587202971UL), (736117181UL), (2456162322UL), (1168189787UL), (911455077UL), (2517883370UL), (268231205UL), (541474497UL), (3316168972UL), (1500275507UL), (2037251305UL), (725960194UL), (2044207227UL), (3188997938UL), (2036633808UL), (2665008587UL), (3575011225UL), (1553111865UL), (1285013027UL), (87868216UL), (2163964019UL), (598195098UL), (2139882719UL), (2062405428UL), (517907301UL), (2788202059UL), (223311969UL), (2622859522UL), (3888492701UL), (3926046234UL), (740986174UL), (3563756446UL), (2886083960UL), (1907546514UL), (1911066215UL), (2426323587UL), (625828138UL), (2991888140UL), (1935326370UL), (2031853435UL), (1831149435UL), (1427632724UL), (1345475301UL), (2577560804UL), (3509674153UL), (3977153945UL), (185662179UL), (536505093UL), (3747894147UL), (1711714600UL), (4131587422UL), (2293908590UL), (91444490UL), (628576944UL), (3370678255UL), (2408189350UL), (1671484924UL), (1191182242UL), (1565180119UL), (3786239592UL), (1338069254UL), (3411094744UL), (953365104UL), (3104638527UL), (3659647225UL), (631497759UL), (2000630022UL), (1921384447UL), (843719355UL), (3364831282UL), (3280318959UL), (3293926122UL), (483396548UL), (3848838894UL), (3131266478UL), (1777918163UL), (146876953UL), (3279827269UL), (2644461735UL), (4156372383UL), (2786264663UL), (3976156700UL), (1708974143UL), (1878547888UL), (2168041590UL), (2793923820UL), (1999154400UL), (1510428126UL), (716404149UL), (3392113666UL), (3102243824UL), (2479551429UL), (651997355UL), (282914223UL), (2085613514UL), (3767702588UL), (1275979651UL), (1971798134UL), (978904005UL), (503506384UL), (1951622548UL), (300654823UL), (2565125471UL), (2782642813UL), (1458431750UL), (2186817324UL), (3123973648UL), (3491609UL), (1319592872UL), (452433679UL), (1075424534UL), (1437913158UL), (2828944016UL), (3301346775UL), (2333281307UL), (207992406UL), (2153172585UL), (2664450619UL), (691091062UL), (3553502652UL), (3114255216UL), (17137237UL), (2197910648UL), (2310382370UL), (3153689868UL), (2548008553UL), (802137134UL), (2272766890UL), (31122394UL), (468580641UL), (4069482373UL), (3909775167UL), (2468361281UL), (2982007782UL), (1445286890UL), (2807823912UL), (3319492525UL), (672057044UL), (2108452841UL), (1755577669UL), (12831353UL), (1878151473UL), (805157552UL), (1271858417UL), (2623540912UL), (461887094UL), (3215921223UL), (751773221UL), (1517221627UL), (3922191946UL), (1317394918UL), (361845001UL), (640541709UL), (421086624UL), (2173849516UL), (3385587450UL), (2655936801UL), (773140636UL), (2158026018UL), (1085377158UL), (1475601973UL), (587202971UL), (736117181UL), (2456162322UL), (2158960374UL), (911455077UL), (2517883370UL), (268231205UL), (541474497UL), (943191315UL), (1500275507UL), (2037251305UL), (725960194UL), (2044207227UL), (2481150802UL), (2036633808UL), (2665008587UL), (3575011225UL), (1553111865UL), (2301231777UL), (87868216UL), (2163964019UL), (598195098UL), (2139882719UL), (2007840238UL), (517907301UL), (2788202059UL), (223311969UL), (2622859522UL), (151920263UL), (3926046234UL), (740986174UL), (3563756446UL), (2886083960UL), (1338937928UL), (1911066215UL), (2426323587UL), (625828138UL), (2991888140UL), (2652286195UL), (2031853435UL), (1831149435UL), (1427632724UL), (1345475301UL), (289801789UL), (3509674153UL), (3977153945UL), (185662179UL), (536505093UL), (2727322952UL), (3980498348UL), (2529622213UL), (1903052964UL), (3564714651UL), (2281240568UL), (533384122UL), (277613480UL), (1815540358UL), (282763841UL), (3669112623UL), (2572859425UL), (195220178UL), (1210883545UL), (2359703600UL), (1187537824UL), (675732974UL), (325036095UL), (708091465UL), (2556854604UL), (701006284UL), (2378459191UL), (1863513103UL), (2690918197UL), (4237307694UL), (1356483501UL), (2160905652UL), (521809106UL), (974368613UL), (3136010957UL), (2722488678UL), (3711515637UL), (2296341459UL), (4233729945UL), (1196247571UL), (3031398071UL), (515543502UL), (1314129776UL), (3235373306UL), (1303165859UL), (1820568009UL), (559099351UL), (186876368UL), (1076102111UL), (1218809551UL), (1790301111UL), (4130210229UL), (768125358UL), (1132864749UL), (4262563773UL), (2294411020UL), (4092943985UL), (2558108246UL), (3737664949UL), (2219923393UL), (724326159UL), (4134105682UL), (4188752746UL), (3615233671UL), (1526018731UL), (2281637916UL), (2459490295UL), (3637342666UL), (777862587UL), (39962002UL), (3772005832UL), (997473319UL), (574843584UL), (3356551974UL), (1265234427UL), (1698059437UL), (534747571UL), (1465532164UL), (3263029035UL), (534512444UL), (2343092827UL), (2375685652UL), (2497926141UL), (2377933621UL), (2212335180UL), (261114084UL), (172755755UL), (2737085495UL), (2225257145UL), (148605658UL), (1353911796UL), (357753009UL), (1778732943UL), (497635558UL), (4136467976UL), (2837964962UL), (4045039047UL), (2485296762UL), (1587587183UL), (4042904168UL), (3184240963UL), (2393293696UL), (915444966UL), (2299938515UL), (3351580749UL), (506575598UL), (1541916825UL), (3465300401UL), (525927458UL), (681152801UL), (331660975UL), (3624685846UL), (2994172100UL), (3274369082UL), (3638287602UL), (815689760UL), (1710961092UL), (2775607076UL), (2175058103UL), (3252688367UL), (2936890483UL), (2746319120UL), (2736754UL), (1646031035UL), (2448701214UL), (2886833213UL), (3689830606UL), (3292798106UL), (300773646UL), (3125160783UL), (1247453205UL), (2746275624UL), (4011063775UL), (904135764UL), (876847374UL), (366267234UL), (2541269205UL), (131376648UL), (1805948133UL), (3383589530UL), (2350119829UL), (2513170439UL), (4096158499UL), (4229211520UL), (2992048272UL), (1338522080UL), (1187391335UL), (2898563453UL), (2163088451UL), (1417971677UL), (2047421551UL), (902282791UL), (1143943232UL), (3568431811UL), (4059861993UL), (193362198UL), (2509297125UL), (3968551582UL), (2175686117UL), (3568936881UL), (1853177468UL), (2134063169UL), (2919389416UL), (1124914545UL), (1209806738UL)}, {(1199972651UL), (1035834631UL), (3177798370UL), (860834162UL), (3741677748UL), (3780327829UL), (1693730265UL), (1643429511UL), (559568669UL), (2758650294UL), (647308222UL), (3901603996UL), (1778653821UL), (3618523672UL), (2154201067UL), (4261179460UL), (3285764480UL), (3334002738UL), (3215795953UL), (91368462UL), (1883994950UL), (1506873376UL), (1527780962UL), (4046354597UL), (4081676034UL), (2389066602UL), (1574939945UL), (427845396UL), (2714836263UL), (1259019491UL), (2493238133UL), (2584034689UL), (3151382431UL), (2171033919UL), (176883719UL), (2031844862UL), (1272380790UL), (1298975901UL), (4087222847UL), (1524000054UL), (311436877UL), (3627785554UL), (1889491722UL), (2938069193UL), (2771940687UL), (2756955968UL), (4289348777UL), (263514583UL), (887207028UL), (3522902525UL), (2273246349UL), (835377715UL), (2897243319UL), (204645450UL), (1775911983UL), (639470242UL), (2856296318UL), (3032942383UL), (2845501282UL), (1979082575UL), (202834023UL), (1876303820UL), (1434703409UL), (4240524132UL), (848853780UL), (4188621628UL), (928095314UL), (876412914UL), (3446576392UL), (3235688990UL), (4021419931UL), (2483628986UL), (3155781890UL), (399997246UL), (1642535200UL), (3872575068UL), (1577956550UL), (3606228634UL), (609914462UL), (653194726UL), (4048067248UL), (2500767965UL), (1125167825UL), (3707628088UL), (1819135158UL), (1875618971UL), (3865851141UL), (328215079UL), (1695889194UL), (2040280471UL), (3384684457UL), (2540504961UL), (293050253UL), (525570078UL), (2655676443UL), (1392199429UL), (3370444585UL), (1937915855UL), (2229636250UL), (247937142UL), (2534538765UL), (365841057UL), (2449431033UL), (2456532429UL), (101910696UL), (1247069485UL), (1523958293UL), (2473285670UL), (473709728UL), (3026667113UL), (2071968844UL), (324025193UL), (423064436UL), (3870800061UL), (3977393138UL), (3632553233UL), (352757977UL), (1584833348UL), (3173248650UL), (1159857686UL), (1501841977UL), (1751860798UL), (617281070UL), (1958012761UL), (4031667102UL), (3232142321UL), (3087428595UL), (2380824676UL), (1194087757UL), (1542961747UL), (4163350364UL), (1721646249UL), (1672791861UL), (2900511710UL), (24973500UL), (1705444176UL), (713642505UL), (3017719513UL), (2090715200UL), (3521434070UL), (37117223UL), (1948295454UL), (3055840561UL), (3476120789UL), (3994249388UL), (527899063UL), (4285770666UL), (1075524023UL), (2594223535UL), (392943522UL), (171012646UL), (3515750082UL), (3414659054UL), (3501852926UL), (1493283737UL), (2662104279UL), (2033464928UL), (90134967UL), (363058647UL), (3289266998UL), (2470752727UL), (1199972651UL), (1035834631UL), (3177798370UL), (860834162UL), (1791097822UL), (3780327829UL), (1693730265UL), (1643429511UL), (559568669UL), (3503319486UL), (647308222UL), (3901603996UL), (1778653821UL), (3618523672UL), (4294594427UL), (4261179460UL), (3285764480UL), (3334002738UL), (3215795953UL), (212518363UL), (1883994950UL), (1506873376UL), (1527780962UL), (4046354597UL), (2398655600UL), (2389066602UL), (1574939945UL), (427845396UL), (2714836263UL), (2744363872UL), (2493238133UL), (2584034689UL), (3151382431UL), (2171033919UL), (2787053497UL), (2031844862UL), (1272380790UL), (1298975901UL), (4087222847UL), (2342953154UL), (311436877UL), (3627785554UL), (1889491722UL), (2938069193UL), (2026656505UL), (2756955968UL), (4289348777UL), (263514583UL), (887207028UL), (2097276163UL), (2273246349UL), (835377715UL), (2897243319UL), (204645450UL), (4233399907UL), (639470242UL), (2856296318UL), (3032942383UL), (2845501282UL), (28260330UL), (202834023UL), (1876303820UL), (1434703409UL), (4240524132UL), (2455670466UL), (4188621628UL), (928095314UL), (876412914UL), (3446576392UL), (117581687UL), (4021419931UL), (2483628986UL), (3155781890UL), (399997246UL), (4254101087UL), (3872575068UL), (1577956550UL), (3606228634UL), (609914462UL), (4003279048UL), (4048067248UL), (2500767965UL), (1125167825UL), (3707628088UL), (922020515UL), (1875618971UL), (3865851141UL), (328215079UL), (1695889194UL), (625773097UL), (3384684457UL), (2540504961UL), (293050253UL), (525570078UL), (2592805114UL), (1392199429UL), (3370444585UL), (1937915855UL), (2229636250UL), (3190958614UL), (2534538765UL), (365841057UL), (2449431033UL), (2456532429UL), (3778669305UL), (1247069485UL), (1523958293UL), (2473285670UL), (473709728UL), (720895889UL), (2071968844UL), (324025193UL), (423064436UL), (3870800061UL), (3535536111UL), (3632553233UL), (352757977UL), (1584833348UL), (3173248650UL), (2649344603UL), (1501841977UL), (1751860798UL), (617281070UL), (1958012761UL), (778965559UL), (3232142321UL), (3087428595UL), (2380824676UL), (1194087757UL), (3880222002UL), (4163350364UL), (1721646249UL), (1672791861UL), (2900511710UL), (702936770UL), (1705444176UL), (713642505UL), (3017719513UL), (2090715200UL), (1477858694UL), (37117223UL), (1948295454UL), (3055840561UL), (3476120789UL), (464173532UL), (527899063UL), (4285770666UL), (1075524023UL), (2594223535UL), (2872629966UL), (171012646UL), (3515750082UL), (3414659054UL), (3501852926UL), (1631555059UL), (2662104279UL), (2033464928UL), (90134967UL), (363058647UL), (4112991722UL), (2470752727UL), (1199972651UL), (1035834631UL), (3177798370UL), (4152098951UL), (1791097822UL), (3780327829UL), (1693730265UL), (1643429511UL), (153020604UL), (3503319486UL), (647308222UL), (3901603996UL), (1778653821UL), (221887019UL), (4294594427UL), (4261179460UL), (3285764480UL), (3334002738UL), (3340918862UL), (212518363UL), (1883994950UL), (1506873376UL), (1527780962UL), (430180116UL), (2398655600UL), (2389066602UL), (1574939945UL), (427845396UL), (1683639957UL), (2744363872UL), (2493238133UL), (2584034689UL), (3151382431UL), (752704472UL), (2787053497UL), (2031844862UL), (1272380790UL), (1298975901UL), (1528220628UL), (2342953154UL), (311436877UL), (3627785554UL), (1889491722UL), (2576495467UL), (2026656505UL), (2756955968UL), (4289348777UL), (263514583UL), (3778019638UL), (2097276163UL), (2273246349UL), (835377715UL), (2897243319UL), (1060067446UL), (4233399907UL), (639470242UL), (2856296318UL), (3032942383UL), (2351047932UL), (28260330UL), (202834023UL), (1876303820UL), (1434703409UL), (3094305336UL), (2455670466UL), (4188621628UL), (928095314UL), (876412914UL), (3785385583UL), (117581687UL), (4021419931UL), (2483628986UL), (3155781890UL), (1867816730UL), (4254101087UL), (3872575068UL), (1577956550UL), (3606228634UL), (3081878598UL), (4003279048UL), (4048067248UL), (2500767965UL), (1125167825UL), (928465955UL), (922020515UL), (1875618971UL), (3865851141UL), (328215079UL), (173810260UL), (625773097UL), (3384684457UL), (2540504961UL), (293050253UL), (2645143254UL), (2592805114UL), (1392199429UL), (3370444585UL), (1937915855UL), (162781360UL), (3190958614UL), (2534538765UL), (365841057UL), (2449431033UL), (3105377832UL), (3778669305UL), (1247069485UL), (1523958293UL), (2473285670UL), (800971948UL), (720895889UL), (2071968844UL), (324025193UL), (423064436UL), (52577992UL), (3535536111UL), (3632553233UL), (352757977UL), (1584833348UL), (3305908059UL), (2649344603UL), (1501841977UL), (1751860798UL), (617281070UL), (264880505UL), (778965559UL), (3232142321UL), (3087428595UL), (2380824676UL), (1127761012UL), (3880222002UL), (4163350364UL), (1721646249UL), (1672791861UL), (2368512339UL), (702936770UL), (1705444176UL), (713642505UL), (3017719513UL), (197200752UL), (1477858694UL), (37117223UL), (1948295454UL), (3055840561UL), (1588372042UL), (464173532UL), (527899063UL), (4285770666UL), (1075524023UL), (2124039914UL), (2872629966UL), (171012646UL), (3515750082UL), (3414659054UL), (818571456UL), (1631555059UL), (2662104279UL), (2033464928UL), (90134967UL), (952712086UL), (4112991722UL), (2470752727UL), (1199972651UL), (1035834631UL), (888975816UL), (4152098951UL), (1791097822UL), (3780327829UL), (1693730265UL), (3406785510UL), (153020604UL), (3503319486UL), (647308222UL), (3901603996UL), (3753248472UL), (221887019UL), (4294594427UL), (4261179460UL), (3285764480UL), (1861431346UL), (3340918862UL), (212518363UL), (1883994950UL), (1506873376UL), (2695939612UL), (430180116UL), (2398655600UL), (2389066602UL), (1574939945UL), (2852159074UL), (1683639957UL), (2744363872UL), (2493238133UL), (2584034689UL), (1952065633UL), (752704472UL), (2787053497UL), (2031844862UL), (1272380790UL), (3530505866UL), (1528220628UL), (2342953154UL), (311436877UL), (3627785554UL), (3410473245UL), (2576495467UL), (2026656505UL), (2756955968UL), (4289348777UL), (2856163034UL), (3778019638UL), (2097276163UL), (2273246349UL), (835377715UL), (3127280755UL), (1060067446UL), (4233399907UL), (639470242UL), (2856296318UL), (2615775011UL), (2351047932UL), (28260330UL), (202834023UL), (1876303820UL), (619308202UL), (3094305336UL), (2455670466UL), (4188621628UL), (928095314UL), (3764894047UL), (3785385583UL), (117581687UL), (4021419931UL), (2483628986UL), (3759839215UL), (1867816730UL), (4254101087UL), (3872575068UL), (1577956550UL), (1687107439UL), (3081878598UL), (4003279048UL), (4048067248UL), (2500767965UL), (2804044146UL), (928465955UL), (922020515UL), (1875618971UL), (3865851141UL), (2359176389UL), (173810260UL), (625773097UL), (3384684457UL), (2540504961UL), (3665420733UL), (2645143254UL), (2592805114UL), (1392199429UL), (3370444585UL), (1604709429UL), (162781360UL), (3190958614UL), (2534538765UL), (365841057UL), (3843585067UL), (3105377832UL), (3778669305UL), (1247069485UL), (1523958293UL), (293374051UL), (800971948UL), (720895889UL), (2071968844UL), (324025193UL), (3342361801UL), (52577992UL), (3535536111UL), (3632553233UL), (352757977UL), (1386594581UL), (3305908059UL), (2649344603UL), (1501841977UL), (1751860798UL), (3160423601UL), (264880505UL), (778965559UL), (3232142321UL), (3087428595UL), (3814775120UL), (1127761012UL), (3880222002UL), (4163350364UL), (1721646249UL), (3640773034UL), (2368512339UL), (702936770UL), (1705444176UL), (713642505UL), (1717761787UL), (197200752UL), (1477858694UL), (37117223UL), (1948295454UL), (896215772UL), (1588372042UL), (464173532UL), (527899063UL), (4285770666UL), (3441409029UL), (2124039914UL), (2872629966UL), (171012646UL), (3515750082UL), (2216687886UL), (818571456UL), (1631555059UL), (2662104279UL), (2033464928UL), (369438400UL), (329003658UL), (1503365029UL), (4215790910UL), (3264377550UL), (733526983UL), (2935318632UL), (1792331479UL), (608347530UL), (392723097UL), (1330445854UL), (3473004271UL), (1267636682UL), (2150566972UL), (2664910943UL), (2591861637UL), (409769584UL), (2943326880UL), (3746302819UL), (3162268832UL), (1028663260UL), (3206607045UL), (832105292UL), (2119405275UL), (538318455UL), (2981192295UL), (861775416UL), (609718403UL), (3531204230UL), (1904759571UL), (1262633751UL), (2375133081UL), (460454984UL), (946700253UL), (3763898311UL), (1571175213UL), (3124410107UL), (2413420216UL), (2664177543UL), (3241803820UL), (3968067371UL), (1234860999UL), (1130471500UL), (772727786UL), (247203117UL), (576455235UL), (246297007UL), (2027348597UL), (764933887UL), (3812479771UL), (1825807084UL), (4072281412UL), (2156865781UL), (1286484847UL), (1966749063UL), (2479269303UL), (423506843UL), (3070938758UL), (653091413UL), (2267423132UL), (2004263526UL), (1374490719UL), (3871990628UL), (841138314UL), (1260317857UL), (3887432433UL), (4025147569UL), (764233331UL), (1794763428UL), (3005903468UL), (877926770UL), (2466593927UL), (2971729561UL), (3203070565UL), (4198500026UL), (815665759UL), (2434508139UL), (1840456368UL), (2279000427UL), (17077200UL), (3178380570UL), (990304199UL), (3578008580UL), (1965763660UL), (1640352477UL), (750159594UL), (2047409402UL), (3576308245UL), (544920564UL), (1730124869UL), (1194761386UL), (3280315505UL), (147334027UL), (2870674244UL), (2076860776UL), (1100947675UL), (2482772161UL), (401966468UL), (1610650855UL), (193868446UL), (3808157106UL), (1509130117UL), (1324484736UL), (3852893217UL), (1059179497UL), (4053543778UL), (2557844172UL), (3282312002UL), (682550058UL), (4281899173UL), (137171998UL), (3239159214UL), (2258610918UL), (426724741UL), (3502660993UL), (135977383UL), (429929363UL), (3984458137UL), (964026748UL), (2182019070UL), (3836562946UL), (515026869UL), (359030455UL), (1301694917UL), (2300414803UL), (2364654981UL), (3804876710UL), (171119249UL), (2646785698UL), (4283509387UL), (3628087763UL), (1748227044UL), (3037141234UL), (3000413256UL), (23007314UL), (3598880509UL), (4160517314UL), (112205578UL), (1677675411UL), (734881643UL), (2830770338UL), (3470317145UL), (3306806569UL), (2635040943UL), (2671367560UL), (3528996498UL), (3878886478UL), (3114253828UL), (2721384408UL), (3175226991UL), (1393767271UL), (2651623266UL), (3767978376UL), (1269699398UL), (1100964192UL), (4169085845UL), (2086718107UL), (1286251099UL), (764751784UL), (3006878591UL)}};
# 70 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM1[64][3][3];
# 393 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM1Host[64][3][3] = {{{(0.0), (1.0), (0.0)}, {(0.0), (0.0), (1.0)}, {(4294156359.0), (1403580.0), (0.0)}}, {{(0.0), (0.0), (1.0)}, {(4294156359.0), (1403580.0), (0.0)}, {(0.0), (4294156359.0), (1403580.0)}}, {{(0.0), (4294156359.0), (1403580.0)}, {(244671815.0), (2941890554.0), (4294156359.0)}, {(149925673.0), (489343630.0), (2941890554.0)}}, {{(1527363550.0), (2758233149.0), (1831234280.0)}, {(4072640363.0), (939574583.0), (2758233149.0)}, {(2064391165.0), (3228066636.0), (939574583.0)}}, {{(736416029.0), (2961816100.0), (342112271.0)}, {(387300998.0), (1062452522.0), (2961816100.0)}, {(2955879160.0), (340793741.0), (1062452522.0)}}, {{(1243502014.0), (2218748291.0), (1709215645.0)}, {(2019641772.0), (3847560959.0), (2218748291.0)}, {(3866010231.0), (2305448679.0), (3847560959.0)}}, {{(3241775219.0), (3453352062.0), (3721871040.0)}, {(4062454730.0), (3015754.0), (3453352062.0)}, {(919711945.0), (613405362.0), (3015754.0)}}, {{(1955221006.0), (1414472808.0), (1746037714.0)}, {(3653507277.0), (1644962013.0), (1414472808.0)}, {(3501544776.0), (2336229602.0), (1644962013.0)}}, {{(1170096663.0), (49135452.0), (3441537107.0)}, {(1857945175.0), (1649398389.0), (49135452.0)}, {(333002869.0), (3109147376.0), (1649398389.0)}}, {{(2299034194.0), (2297111910.0), (862649200.0)}, {(1399961132.0), (996706937.0), (2297111910.0)}, {(3439056503.0), (1481993076.0), (996706937.0)}}, {{(4146310528.0), (458782589.0), (1007330283.0)}, {(4241015765.0), (3979619964.0), (458782589.0)}, {(553886495.0), (2186897562.0), (3979619964.0)}}, {{(3630027893.0), (2130448350.0), (292773857.0)}, {(1392525159.0), (1299285967.0), (2130448350.0)}, {(2589171163.0), (1217405758.0), (1299285967.0)}}, {{(892409263.0), (1999175811.0), (2979225418.0)}, {(1996163538.0), (2148702503.0), (1999175811.0)}, {(3922720782.0), (103819730.0), (2148702503.0)}}, {{(1586003016.0), (2114210471.0), (3240775579.0)}, {(2777288607.0), (1400478398.0), (2114210471.0)}, {(3018215420.0), (535326008.0), (1400478398.0)}}, {{(2188531273.0), (1783231160.0), (3576659343.0)}, {(1908318389.0), (379210133.0), (1783231160.0)}, {(554369329.0), (250053591.0), (379210133.0)}}, {{(4022841636.0), (3951951872.0), (2143424240.0)}, {(1046219306.0), (1591992468.0), (3951951872.0)}, {(1510277444.0), (381333958.0), (1591992468.0)}}, {{(2256493727.0), (3715182130.0), (642697923.0)}, {(3615342722.0), (3975008370.0), (3715182130.0)}, {(2405650329.0), (754337639.0), (3975008370.0)}}, {{(1286664224.0), (627406673.0), (963516608.0)}, {(1541344588.0), (460768826.0), (627406673.0)}, {(1089892553.0), (2717717970.0), (460768826.0)}}, {{(2956342842.0), (3471097641.0), (2353092905.0)}, {(2996150472.0), (420480221.0), (3471097641.0)}, {(2221681883.0), (372736411.0), (420480221.0)}}, {{(420492906.0), (153526651.0), (3499730988.0)}, {(2662640502.0), (3278195133.0), (153526651.0)}, {(4086436419.0), (2510762118.0), (3278195133.0)}}, {{(3310184147.0), (2228376089.0), (823220763.0)}, {(3992771814.0), (1693168425.0), (2228376089.0)}, {(2295790366.0), (1401872772.0), (1693168425.0)}}, {{(2529428830.0), (1497104068.0), (4253248635.0)}, {(3746310018.0), (630867741.0), (1497104068.0)}, {(627043435.0), (721725795.0), (630867741.0)}}, {{(2571072593.0), (3039669025.0), (1591031831.0)}, {(526054481.0), (661344445.0), (3039669025.0)}, {(4246010312.0), (735391270.0), (661344445.0)}}, {{(1847312821.0), (4042890210.0), (4241772463.0)}, {(606605705.0), (2644799309.0), (4042890210.0)}, {(2658402822.0), (1342278931.0), (2644799309.0)}}, {{(2409846784.0), (1096138313.0), (1416249993.0)}, {(1501878241.0), (138013862.0), (1096138313.0)}, {(1617749306.0), (1975136163.0), (138013862.0)}}, {{(599453422.0), (73950522.0), (2965395603.0)}, {(55354701.0), (3855242202.0), (73950522.0)}, {(3981734504.0), (3354399019.0), (3855242202.0)}}, {{(4271076381.0), (813410089.0), (3461955319.0)}, {(1044920137.0), (3029005516.0), (813410089.0)}, {(3501837362.0), (3321539504.0), (3029005516.0)}}, {{(3058183515.0), (941408572.0), (1783998098.0)}, {(1546486080.0), (4116985007.0), (941408572.0)}, {(2247500745.0), (1460625377.0), (4116985007.0)}}, {{(4216782514.0), (3352801941.0), (2315095646.0)}, {(639029973.0), (94451952.0), (3352801941.0)}, {(1242898773.0), (3964593332.0), (94451952.0)}}, {{(2264905138.0), (1926285644.0), (1108147171.0)}, {(2390706911.0), (385258225.0), (1926285644.0)}, {(3569882325.0), (3728744670.0), (385258225.0)}}, {{(270679073.0), (1065683096.0), (2992662885.0)}, {(4196917281.0), (2886425156.0), (1065683096.0)}, {(749134119.0), (1849148167.0), (2886425156.0)}}, {{(35689930.0), (1378151623.0), (951629713.0)}, {(673810920.0), (948843427.0), (1378151623.0)}, {(3808868984.0), (927013635.0), (948843427.0)}}, {{(1891490872.0), (1130489594.0), (3734864133.0)}, {(1457450350.0), (3362920032.0), (1130489594.0)}, {(638998846.0), (1401175590.0), (3362920032.0)}}, {{(2254459023.0), (2384691454.0), (1730098031.0)}, {(2844861718.0), (1807491073.0), (2384691454.0)}, {(351423668.0), (1570264155.0), (1807491073.0)}}, {{(3047429268.0), (4245359555.0), (2449575498.0)}, {(1797081212.0), (1237196477.0), (4245359555.0)}, {(143400628.0), (3663731096.0), (1237196477.0)}}, {{(3313321106.0), (4263819658.0), (1047529624.0)}, {(3719941673.0), (3155049403.0), (4263819658.0)}, {(1981313839.0), (4281524426.0), (3155049403.0)}}, {{(2005252417.0), (3263186729.0), (1535805957.0)}, {(2951515865.0), (1729281525.0), (3263186729.0)}, {(1141249417.0), (2268963059.0), (1729281525.0)}}, {{(2367065164.0), (83908466.0), (4294308508.0)}, {(1352516724.0), (1416676049.0), (83908466.0)}, {(1040867745.0), (1304732377.0), (1416676049.0)}}, {{(3214147257.0), (1434230503.0), (2944821434.0)}, {(2753040912.0), (4041536918.0), (1434230503.0)}, {(1317260239.0), (338830578.0), (4041536918.0)}}, {{(300628476.0), (2054743463.0), (1499597869.0)}, {(1762244284.0), (1422043015.0), (2054743463.0)}, {(3581125669.0), (1207561803.0), (1422043015.0)}}, {{(4171745404.0), (4064983592.0), (1934508265.0)}, {(3049723261.0), (1744636487.0), (4064983592.0)}, {(947753516.0), (3952135907.0), (1744636487.0)}}, {{(1625369148.0), (3577024659.0), (2778677259.0)}, {(1729967818.0), (1049600974.0), (3577024659.0)}, {(2089137344.0), (1569794605.0), (1049600974.0)}}, {{(1373068765.0), (3958611830.0), (569117280.0)}, {(410042396.0), (3551255470.0), (3958611830.0)}, {(869476379.0), (1680625376.0), (3551255470.0)}}, {{(2108618602.0), (2543645250.0), (913717833.0)}, {(2111984988.0), (1012482542.0), (2543645250.0)}, {(2545745615.0), (3141042890.0), (1012482542.0)}}, {{(1157293598.0), (584852249.0), (2272893205.0)}, {(1631801979.0), (3013855247.0), (584852249.0)}, {(3977310441.0), (82049263.0), (3013855247.0)}}, {{(3580234334.0), (3137526662.0), (2403875621.0)}, {(3580869206.0), (3670086228.0), (3137526662.0)}, {(656744553.0), (1764904195.0), (3670086228.0)}}, {{(2792496861.0), (3634185196.0), (3887031679.0)}, {(3601823850.0), (3464838365.0), (3634185196.0)}, {(3136165138.0), (2842987937.0), (3464838365.0)}}, {{(1362557480.0), (3230022138.0), (4278720212.0)}, {(3427386258.0), (3848976950.0), (3230022138.0)}, {(2109817045.0), (2441486578.0), (3848976950.0)}}, {{(1198519135.0), (2007945401.0), (3868481.0)}, {(3335076429.0), (2082683147.0), (2007945401.0)}, {(2341088247.0), (888193479.0), (2082683147.0)}}, {{(3473925387.0), (3193380570.0), (565138859.0)}, {(307060547.0), (782210925.0), (3193380570.0)}, {(167617770.0), (2180014252.0), (782210925.0)}}, {{(3811588895.0), (3303532086.0), (2766583698.0)}, {(908630605.0), (2665400165.0), (3303532086.0)}, {(2499994113.0), (3316180851.0), (2665400165.0)}}, {{(4288926968.0), (3033075037.0), (1505732852.0)}, {(1531633406.0), (645804125.0), (3033075037.0)}, {(2942690261.0), (2205365640.0), (645804125.0)}}, {{(3976196483.0), (3651411522.0), (1652430357.0)}, {(1690405883.0), (1294990760.0), (3651411522.0)}, {(209339647.0), (3088484327.0), (1294990760.0)}}, {{(3171589548.0), (2291131070.0), (2093793287.0)}, {(2997812074.0), (4093879780.0), (2291131070.0)}, {(3255666800.0), (858124816.0), (4093879780.0)}}, {{(4113016361.0), (2999667479.0), (3995043314.0)}, {(1333973326.0), (4007774239.0), (2999667479.0)}, {(3322921863.0), (4278103786.0), (4007774239.0)}}, {{(925786347.0), (2109676036.0), (1879981040.0)}, {(1701566570.0), (1489702270.0), (2109676036.0)}, {(2719807628.0), (158549605.0), (1489702270.0)}}, {{(2255405265.0), (3460246357.0), (218033453.0)}, {(2135115875.0), (359516994.0), (3460246357.0)}, {(3568862459.0), (3114762683.0), (359516994.0)}}, {{(773148471.0), (4117539411.0), (3073622315.0)}, {(3807175775.0), (186466108.0), (4117539411.0)}, {(2842197411.0), (651334129.0), (186466108.0)}}, {{(615242951.0), (1475251263.0), (3586439101.0)}, {(1693917167.0), (3058812486.0), (1475251263.0)}, {(568701600.0), (1164226398.0), (3058812486.0)}}, {{(1632636204.0), (15370275.0), (2061555515.0)}, {(4187505695.0), (1741164221.0), (15370275.0)}, {(2882176274.0), (3978412194.0), (1741164221.0)}}, {{(3446066703.0), (344820524.0), (74213775.0)}, {(1008543583.0), (2579620192.0), (344820524.0)}, {(3753911358.0), (1538453821.0), (2579620192.0)}}, {{(3600859892.0), (1269921024.0), (4069458760.0)}, {(2050939727.0), (2222725697.0), (1269921024.0)}, {(3208347646.0), (690898125.0), (2222725697.0)}}, {{(599407451.0), (2806239788.0), (1742216102.0)}, {(975123999.0), (764869161.0), (2806239788.0)}, {(2729710367.0), (1845257036.0), (764869161.0)}}, {{(967330218.0), (3464884028.0), (3444447102.0)}, {(580449578.0), (1343714307.0), (3464884028.0)}, {(1775329096.0), (4027221761.0), (1343714307.0)}}};
# 716 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM2[64][3][3];
# 1039 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM2Host[64][3][3] = {{{(0.0), (1.0), (0.0)}, {(0.0), (0.0), (1.0)}, {(4293573854.0), (0.0), (527612.0)}}, {{(0.0), (0.0), (1.0)}, {(4293573854.0), (0.0), (527612.0)}, {(2706407399.0), (4293573854.0), (3497978192.0)}}, {{(2706407399.0), (4293573854.0), (3497978192.0)}, {(1431525864.0), (2706407399.0), (3281754271.0)}, {(97673890.0), (1431525864.0), (1673476130.0)}}, {{(3405842137.0), (2680076935.0), (893509979.0)}, {(4035147174.0), (3405842137.0), (3280220074.0)}, {(2623373296.0), (4035147174.0), (361718588.0)}}, {{(818368950.0), (3790774567.0), (3542344109.0)}, {(1817134745.0), (818368950.0), (3321940838.0)}, {(3493477402.0), (1817134745.0), (2854655037.0)}}, {{(498682467.0), (2928649385.0), (811441367.0)}, {(1777037472.0), (498682467.0), (479207863.0)}, {(3058260025.0), (1777037472.0), (1528225099.0)}}, {{(3893311647.0), (3140922085.0), (64039185.0)}, {(82107183.0), (3893311647.0), (2655465224.0)}, {(1674879036.0), (82107183.0), (1089381262.0)}}, {{(28639152.0), (3496041927.0), (2231910770.0)}, {(3174683233.0), (28639152.0), (2828785870.0)}, {(3681140872.0), (3174683233.0), (3910194649.0)}}, {{(1463826069.0), (300842059.0), (3313769518.0)}, {(1799677538.0), (1463826069.0), (3174861078.0)}, {(1882279394.0), (1799677538.0), (3509975160.0)}}, {{(2092194020.0), (184076987.0), (2202401252.0)}, {(3103629604.0), (2092194020.0), (3409560232.0)}, {(4257445059.0), (3103629604.0), (2390202783.0)}}, {{(812917091.0), (2574011276.0), (4168802395.0)}, {(209817750.0), (812917091.0), (2974870628.0)}, {(3238802184.0), (209817750.0), (3692836406.0)}}, {{(477309738.0), (3314523413.0), (3442242150.0)}, {(2755731404.0), (477309738.0), (2782713347.0)}, {(1606221490.0), (2755731404.0), (1033463096.0)}}, {{(2155469603.0), (3326516116.0), (3843369786.0)}, {(288604458.0), (2155469603.0), (571673571.0)}, {(1501677614.0), (288604458.0), (2928213494.0)}}, {{(2082469029.0), (749754403.0), (3963963316.0)}, {(2764859700.0), (2082469029.0), (3576428059.0)}, {(2840894706.0), (2764859700.0), (1782279859.0)}}, {{(3760163766.0), (1041986082.0), (1799196192.0)}, {(1022129134.0), (3760163766.0), (1332558840.0)}, {(276873446.0), (1022129134.0), (3979423632.0)}}, {{(1021313167.0), (1312544548.0), (1716381787.0)}, {(3037868518.0), (1021313167.0), (199085085.0)}, {(2582787611.0), (3037868518.0), (3539882179.0)}}, {{(2569413030.0), (1631336015.0), (2594942403.0)}, {(1030618503.0), (2569413030.0), (3467650326.0)}, {(1998739584.0), (1030618503.0), (3174552073.0)}}, {{(2334639309.0), (3114094203.0), (601680947.0)}, {(2110199318.0), (2334639309.0), (678342865.0)}, {(1649523168.0), (2110199318.0), (2154948056.0)}}, {{(563657176.0), (191330473.0), (1641595774.0)}, {(780563537.0), (563657176.0), (3029522338.0)}, {(2037330914.0), (780563537.0), (2084602709.0)}}, {{(3414769923.0), (1968799026.0), (2238126504.0)}, {(832866376.0), (3414769923.0), (3754780168.0)}, {(2165145850.0), (832866376.0), (1594768331.0)}}, {{(1646861218.0), (2317984620.0), (2301581548.0)}, {(2672536210.0), (1646861218.0), (359763062.0)}, {(2391283983.0), (2672536210.0), (1885870777.0)}}, {{(841254072.0), (3765813448.0), (1635365181.0)}, {(2013240130.0), (841254072.0), (605925849.0)}, {(3743932305.0), (2013240130.0), (400681955.0)}}, {{(1930213004.0), (2072952279.0), (3077694794.0)}, {(3579956569.0), (1930213004.0), (2478539210.0)}, {(1960229502.0), (3579956569.0), (1455652656.0)}}, {{(1097613522.0), (1784540933.0), (1194440107.0)}, {(321747515.0), (1097613522.0), (1225209584.0)}, {(74521379.0), (321747515.0), (4288531000.0)}}, {{(143812745.0), (3254530816.0), (3514348856.0)}, {(769295000.0), (143812745.0), (2468210728.0)}, {(1927161272.0), (769295000.0), (522705580.0)}}, {{(2692035063.0), (2596905012.0), (1643240704.0)}, {(1103432342.0), (2692035063.0), (1446182108.0)}, {(4161111774.0), (1103432342.0), (3076435551.0)}}, {{(2375319030.0), (1391532370.0), (3742334018.0)}, {(1202100604.0), (2375319030.0), (4098434768.0)}, {(2327872488.0), (1202100604.0), (1471526950.0)}}, {{(4269164791.0), (2795313144.0), (2507855960.0)}, {(4245372460.0), (4269164791.0), (4094914553.0)}, {(3873219634.0), (4245372460.0), (1473695507.0)}}, {{(513890845.0), (1208902926.0), (2870530442.0)}, {(1984873167.0), (513890845.0), (1257532340.0)}, {(1212627640.0), (1984873167.0), (2354363842.0)}}, {{(1848364568.0), (1552116673.0), (3496528455.0)}, {(4160778291.0), (1848364568.0), (141769900.0)}, {(3611019106.0), (4160778291.0), (596424080.0)}}, {{(364070020.0), (3520039729.0), (837362349.0)}, {(2544671570.0), (364070020.0), (2188646679.0)}, {(163978331.0), (2544671570.0), (672947816.0)}}, {{(1192700714.0), (3968150021.0), (298357363.0)}, {(635565666.0), (1192700714.0), (2589432341.0)}, {(2548654227.0), (635565666.0), (3531570992.0)}}, {{(2709640529.0), (676525399.0), (875361870.0)}, {(1315499519.0), (2709640529.0), (3842690720.0)}, {(3300994644.0), (1315499519.0), (2446760804.0)}}, {{(2742149264.0), (1410604392.0), (3032350755.0)}, {(3774935330.0), (2742149264.0), (597633965.0)}, {(4085935803.0), (3774935330.0), (3952463556.0)}}, {{(3878579563.0), (845297523.0), (1721916511.0)}, {(2077922420.0), (3878579563.0), (3651360351.0)}, {(2177255734.0), (2077922420.0), (3791239282.0)}}, {{(1570315355.0), (4252790045.0), (3522351060.0)}, {(2324624266.0), (1570315355.0), (3594939336.0)}, {(1725087354.0), (2324624266.0), (1338343327.0)}}, {{(2305761589.0), (381933244.0), (3663579047.0)}, {(1355307047.0), (2305761589.0), (313617972.0)}, {(992174375.0), (1355307047.0), (3881593435.0)}}, {{(1667857811.0), (1564715297.0), (2263851601.0)}, {(3791771273.0), (1667857811.0), (4196134923.0)}, {(3347975047.0), (3791771273.0), (615040705.0)}}, {{(4093947334.0), (3454015638.0), (2815567716.0)}, {(4261953004.0), (4093947334.0), (3973733876.0)}, {(2979573134.0), (4261953004.0), (3757047667.0)}}, {{(250120061.0), (570149551.0), (1513430926.0)}, {(3178644752.0), (250120061.0), (1701869032.0)}, {(4172515680.0), (3178644752.0), (4213855850.0)}}, {{(4158106802.0), (3062358456.0), (1815738463.0)}, {(1379176112.0), (4158106802.0), (3926509890.0)}, {(2842564878.0), (1379176112.0), (2852219546.0)}}, {{(931848746.0), (256263523.0), (2633569246.0)}, {(3284646837.0), (931848746.0), (2567084715.0)}, {(415258465.0), (3284646837.0), (2017565947.0)}}, {{(1648005210.0), (1032291296.0), (3987397422.0)}, {(1831496020.0), (1648005210.0), (2829448427.0)}, {(1821082272.0), (1831496020.0), (2917140265.0)}}, {{(4161327077.0), (489964129.0), (3870847744.0)}, {(1669447863.0), (4161327077.0), (4292947198.0)}, {(1522417114.0), (1669447863.0), (2652286672.0)}}, {{(1270934555.0), (3136631324.0), (505612043.0)}, {(2981474723.0), (1270934555.0), (2528619024.0)}, {(625182639.0), (2981474723.0), (1008985039.0)}}, {{(280996820.0), (143706137.0), (3013099060.0)}, {(1797675893.0), (280996820.0), (3743985508.0)}, {(1123794455.0), (1797675893.0), (2460119169.0)}}, {{(919218027.0), (4154920441.0), (1125672685.0)}, {(3933041881.0), (919218027.0), (474242849.0)}, {(564891116.0), (3933041881.0), (2263904321.0)}}, {{(2920112852.0), (1965329198.0), (1177141043.0)}, {(2135250851.0), (2920112852.0), (969184056.0)}, {(296035385.0), (2135250851.0), (4267827987.0)}}, {{(1481142942.0), (4120754772.0), (1088557292.0)}, {(265491023.0), (1481142942.0), (2860005744.0)}, {(301796252.0), (265491023.0), (1935975979.0)}}, {{(2111859033.0), (2813610100.0), (1001476468.0)}, {(73849832.0), (2111859033.0), (3980799998.0)}, {(3330206241.0), (73849832.0), (1933943506.0)}}, {{(1781286360.0), (3661231931.0), (3509383709.0)}, {(2753158871.0), (1781286360.0), (3119883109.0)}, {(3576525143.0), (2753158871.0), (551079002.0)}}, {{(1185024844.0), (587779104.0), (1004942725.0)}, {(3763632860.0), (1185024844.0), (947424568.0)}, {(3811666068.0), (3763632860.0), (2352253462.0)}}, {{(1310227170.0), (218138208.0), (3172947233.0)}, {(766129426.0), (1310227170.0), (1808643264.0)}, {(2226659371.0), (766129426.0), (3853798112.0)}}, {{(2230902378.0), (4243560874.0), (2491962392.0)}, {(3836629116.0), (2230902378.0), (3637515403.0)}, {(2846140932.0), (3836629116.0), (3083355464.0)}}, {{(999448569.0), (1464488480.0), (3344426626.0)}, {(946166795.0), (999448569.0), (340856814.0)}, {(3686999436.0), (946166795.0), (3231079441.0)}}, {{(1226155368.0), (3477563770.0), (550006884.0)}, {(2378667355.0), (1226155368.0), (1493409040.0)}, {(260364836.0), (2378667355.0), (4133888397.0)}}, {{(1277901832.0), (310796286.0), (2818511068.0)}, {(3088910653.0), (1277901832.0), (3303406025.0)}, {(2507911914.0), (3088910653.0), (3712928074.0)}}, {{(481918378.0), (339570348.0), (1728801469.0)}, {(1623163429.0), (481918378.0), (2209094694.0)}, {(3146982514.0), (1623163429.0), (508445538.0)}}, {{(3138921230.0), (2381863183.0), (1992357430.0)}, {(1024510915.0), (3138921230.0), (2122851650.0)}, {(1453455184.0), (1024510915.0), (941946604.0)}}, {{(2465372719.0), (1391015357.0), (3328905025.0)}, {(1821933605.0), (2465372719.0), (1343489680.0)}, {(3648970313.0), (1821933605.0), (1816599716.0)}}, {{(118634664.0), (3358712512.0), (2492792220.0)}, {(348833376.0), (118634664.0), (2495544591.0)}, {(3235582254.0), (348833376.0), (4043157504.0)}}, {{(2303067090.0), (3371139074.0), (1967771133.0)}, {(598630070.0), (2303067090.0), (1819012637.0)}, {(2049250561.0), (598630070.0), (4093044926.0)}}, {{(3035321857.0), (3971176093.0), (226779704.0)}, {(3361614254.0), (3035321857.0), (2807125404.0)}, {(326640887.0), (3361614254.0), (3147308542.0)}}, {{(1774298149.0), (4179629947.0), (3145006948.0)}, {(1688753503.0), (1774298149.0), (94869516.0)}, {(2327946901.0), (1688753503.0), (2786835219.0)}}};
# 1364 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM1SubSeq[56][3][3];
# 1622 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM1SubSeqHost[56][3][3] = {{{(82758667.0), (1871391091.0), (4127413238.0)}, {(3672831523.0), (69195019.0), (1871391091.0)}, {(3672091415.0), (3528743235.0), (69195019.0)}}, {{(3361372532.0), (2329303404.0), (99651939.0)}, {(2008671965.0), (2931758910.0), (2329303404.0)}, {(1113529483.0), (2374097189.0), (2931758910.0)}}, {{(1831590873.0), (1588259595.0), (1314332382.0)}, {(2385989343.0), (2508077280.0), (1588259595.0)}, {(1787615788.0), (661437137.0), (2508077280.0)}}, {{(2326052247.0), (4183591379.0), (4049009082.0)}, {(2604529491.0), (1453913233.0), (4183591379.0)}, {(2311925423.0), (1805360390.0), (1453913233.0)}}, {{(3956367490.0), (604461629.0), (1257432102.0)}, {(794711716.0), (1155867175.0), (604461629.0)}, {(1777070788.0), (429445904.0), (1155867175.0)}}, {{(1686241617.0), (1257046062.0), (1427609439.0)}, {(490376081.0), (387798431.0), (1257046062.0)}, {(235551485.0), (1312672615.0), (387798431.0)}}, {{(2362447880.0), (3445363024.0), (3160262066.0)}, {(2426867845.0), (4194339866.0), (3445363024.0)}, {(1046144413.0), (4177893681.0), (4194339866.0)}}, {{(4251175413.0), (3559576374.0), (3107663662.0)}, {(697539134.0), (1909472435.0), (3559576374.0)}, {(280754246.0), (375835695.0), (1909472435.0)}}, {{(1099512970.0), (712404985.0), (1571467521.0)}, {(546519870.0), (1135109300.0), (712404985.0)}, {(3325312332.0), (2352874613.0), (1135109300.0)}}, {{(1945425936.0), (1653045514.0), (381988982.0)}, {(3733376326.0), (414410025.0), (1653045514.0)}, {(1181583679.0), (1185848176.0), (414410025.0)}}, {{(2526336124.0), (3019211015.0), (4215964965.0)}, {(2683163472.0), (4188191530.0), (3019211015.0)}, {(2964651598.0), (293801056.0), (4188191530.0)}}, {{(1444052678.0), (2253324417.0), (39719589.0)}, {(1880267534.0), (2391992038.0), (2253324417.0)}, {(987740265.0), (3691889508.0), (2391992038.0)}}, {{(166599066.0), (2335494420.0), (1232261118.0)}, {(2227597731.0), (2570600780.0), (2335494420.0)}, {(2700034538.0), (3460843234.0), (2570600780.0)}}, {{(2511338360.0), (1188954576.0), (1251401239.0)}, {(2511664974.0), (292276982.0), (1188954576.0)}, {(697844082.0), (3093661552.0), (292276982.0)}}, {{(3624650744.0), (51993077.0), (3540268009.0)}, {(3252828938.0), (3710319575.0), (51993077.0)}, {(2858628849.0), (3910069381.0), (3710319575.0)}}, {{(655966702.0), (754002362.0), (1646581402.0)}, {(1958331075.0), (475572423.0), (754002362.0)}, {(3248619000.0), (3228514800.0), (475572423.0)}}, {{(2760311307.0), (4166372813.0), (741596417.0)}, {(2282679206.0), (3090782630.0), (4166372813.0)}, {(3242468721.0), (1628442374.0), (3090782630.0)}}, {{(4265279407.0), (3532111852.0), (1754687396.0)}, {(500404765.0), (2603727025.0), (3532111852.0)}, {(1428367254.0), (3149485478.0), (2603727025.0)}}, {{(2873769531.0), (2081104178.0), (596284397.0)}, {(4153800443.0), (1261269623.0), (2081104178.0)}, {(3967600061.0), (1830023157.0), (1261269623.0)}}, {{(278611533.0), (2229285304.0), (3443204327.0)}, {(3110641420.0), (77498444.0), (2229285304.0)}, {(3904070810.0), (1070507239.0), (77498444.0)}}, {{(544639534.0), (568528663.0), (2177189807.0)}, {(2475829068.0), (121482268.0), (568528663.0)}, {(876978915.0), (3116647617.0), (121482268.0)}}, {{(1547862823.0), (2404658587.0), (4191448009.0)}, {(2158188804.0), (2976916793.0), (2404658587.0)}, {(168571747.0), (1691884706.0), (2976916793.0)}}, {{(3208213311.0), (4212638780.0), (3235157352.0)}, {(671148556.0), (2951207765.0), (4212638780.0)}, {(2075145516.0), (2395485231.0), (2951207765.0)}}, {{(4080517315.0), (2133433101.0), (4043998180.0)}, {(2044221845.0), (867670560.0), (2133433101.0)}, {(834432416.0), (3613001199.0), (867670560.0)}}, {{(4102885735.0), (1319434267.0), (2678775073.0)}, {(740092580.0), (607380970.0), (1319434267.0)}, {(2198271844.0), (2610193258.0), (607380970.0)}}, {{(1165218048.0), (1317690360.0), (1189150958.0)}, {(399240205.0), (2507168618.0), (1317690360.0)}, {(2988334517.0), (2687593413.0), (2507168618.0)}}, {{(1028861702.0), (4082006648.0), (338232527.0)}, {(1888486946.0), (1842080991.0), (4082006648.0)}, {(3903826366.0), (3109935091.0), (1842080991.0)}}, {{(614134826.0), (2261996505.0), (2888080641.0)}, {(710199359.0), (2773979788.0), (2261996505.0)}, {(1144301620.0), (2554371815.0), (2773979788.0)}}, {{(4056173823.0), (1285620078.0), (357420018.0)}, {(2423072612.0), (2309408315.0), (1285620078.0)}, {(1533175115.0), (2760088020.0), (2309408315.0)}}, {{(4264130267.0), (815015434.0), (3142242173.0)}, {(180649975.0), (2500813569.0), (815015434.0)}, {(3378723563.0), (829683767.0), (2500813569.0)}}, {{(4174387531.0), (1030729435.0), (2812778314.0)}, {(1752988797.0), (4044178729.0), (1030729435.0)}, {(467969301.0), (554748104.0), (4044178729.0)}}, {{(1348429235.0), (2928743274.0), (3776082629.0)}, {(3607529209.0), (3069812185.0), (2928743274.0)}, {(2542432347.0), (3208181168.0), (3069812185.0)}}, {{(4064845753.0), (668285756.0), (3816217625.0)}, {(3713143233.0), (1380634204.0), (668285756.0)}, {(3533700508.0), (1192551435.0), (1380634204.0)}}, {{(1515684518.0), (1706771705.0), (728123349.0)}, {(3174850469.0), (2057456462.0), (1706771705.0)}, {(3410402985.0), (2897339640.0), (2057456462.0)}}, {{(3082272717.0), (531091457.0), (1390161328.0)}, {(3895139973.0), (2171402857.0), (531091457.0)}, {(4030688141.0), (3049703400.0), (2171402857.0)}}, {{(1241147206.0), (3193892819.0), (1244284192.0)}, {(65180262.0), (4065669017.0), (3193892819.0)}, {(1484817937.0), (3661081858.0), (4065669017.0)}}, {{(1438760812.0), (3491341751.0), (3414470157.0)}, {(2805337292.0), (272266053.0), (3491341751.0)}, {(824109230.0), (3202556526.0), (272266053.0)}}, {{(135412706.0), (3627115412.0), (2345042216.0)}, {(1565169824.0), (2166856449.0), (3627115412.0)}, {(1026946745.0), (3467845248.0), (2166856449.0)}}, {{(1889419951.0), (3256876154.0), (1240505488.0)}, {(1254783743.0), (989966800.0), (3256876154.0)}, {(1995297400.0), (3692472918.0), (989966800.0)}}, {{(3206226875.0), (285700890.0), (496017472.0)}, {(2515316194.0), (2129675196.0), (285700890.0)}, {(1863853990.0), (2673457552.0), (2129675196.0)}}, {{(4163770641.0), (255160418.0), (772100749.0)}, {(1987092456.0), (3237660221.0), (255160418.0)}, {(1394381051.0), (4216039401.0), (3237660221.0)}}, {{(2133915627.0), (2713747584.0), (627765421.0)}, {(2300605925.0), (35690583.0), (2713747584.0)}, {(2918902946.0), (2638220304.0), (35690583.0)}}, {{(2587549655.0), (998684270.0), (4292130625.0)}, {(1791772791.0), (2820705344.0), (998684270.0)}, {(124590158.0), (3831143549.0), (2820705344.0)}}, {{(978482299.0), (3200877282.0), (497605289.0)}, {(3717741518.0), (3737164414.0), (3200877282.0)}, {(4046686626.0), (861393946.0), (3737164414.0)}}, {{(2665561897.0), (300934584.0), (3179822945.0)}, {(893043137.0), (2031413512.0), (300934584.0)}, {(3806926970.0), (2413249929.0), (2031413512.0)}}, {{(1417581911.0), (3071835354.0), (2575196237.0)}, {(4101127251.0), (1375339216.0), (3071835354.0)}, {(847617977.0), (3632503316.0), (1375339216.0)}}, {{(2747488994.0), (3296604805.0), (898095468.0)}, {(1742777145.0), (219265369.0), (3296604805.0)}, {(823714885.0), (667779292.0), (219265369.0)}}, {{(2640209692.0), (3040506537.0), (3626115220.0)}, {(161827078.0), (852668118.0), (3040506537.0)}, {(3856381322.0), (3360242076.0), (852668118.0)}}, {{(3734246393.0), (4151553160.0), (4177051283.0)}, {(266522866.0), (1731798531.0), (4151553160.0)}, {(632196679.0), (3864297722.0), (1731798531.0)}}, {{(1694175127.0), (1087914338.0), (2384195794.0)}, {(2764925057.0), (505782858.0), (1087914338.0)}, {(3235634082.0), (807915248.0), (505782858.0)}}, {{(2402749950.0), (2353776151.0), (75909174.0)}, {(890570951.0), (1752665661.0), (2353776151.0)}, {(3120241607.0), (3862435696.0), (1752665661.0)}}};
# 1880 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM2SubSeq[56][3][3];
# 2138 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM2SubSeqHost[56][3][3] = {{{(1511326704.0), (3759209742.0), (1610795712.0)}, {(4292754251.0), (1511326704.0), (3889917532.0)}, {(3859662829.0), (4292754251.0), (3708466080.0)}}, {{(972103006.0), (964807713.0), (878035866.0)}, {(4248550197.0), (972103006.0), (1926628839.0)}, {(1448629089.0), (4248550197.0), (3196114006.0)}}, {{(3497384788.0), (3174249442.0), (3182508868.0)}, {(3864816447.0), (3497384788.0), (3038399593.0)}, {(2546884738.0), (3864816447.0), (2980208068.0)}}, {{(1776335558.0), (1189944887.0), (4095757548.0)}, {(3813600746.0), (1776335558.0), (789475914.0)}, {(4119698302.0), (3813600746.0), (2145357457.0)}}, {{(4022832294.0), (4130146837.0), (1942923647.0)}, {(1675130777.0), (4022832294.0), (916677004.0)}, {(4089786548.0), (1675130777.0), (116540512.0)}}, {{(165639584.0), (1205513289.0), (2037453462.0)}, {(1444587280.0), (165639584.0), (161923120.0)}, {(2617085459.0), (1444587280.0), (2006913311.0)}}, {{(3458099202.0), (3062421748.0), (4052486999.0)}, {(1064270720.0), (3458099202.0), (230768332.0)}, {(4056228301.0), (1064270720.0), (2219267779.0)}}, {{(296275263.0), (3452455838.0), (2081462173.0)}, {(1789143993.0), (296275263.0), (3463234943.0)}, {(2097389984.0), (1789143993.0), (3447191459.0)}}, {{(2828288883.0), (3866690251.0), (410553827.0)}, {(1587005542.0), (2828288883.0), (1469478670.0)}, {(2766486018.0), (1587005542.0), (2627363449.0)}}, {{(3288027530.0), (412403981.0), (2458742268.0)}, {(4267121909.0), (3288027530.0), (138566505.0)}, {(420803572.0), (4267121909.0), (4094554844.0)}}, {{(3844599430.0), (2430152838.0), (3283485436.0)}, {(2486244684.0), (3844599430.0), (4252427633.0)}, {(3560842909.0), (2486244684.0), (3960267499.0)}}, {{(67933059.0), (1294996291.0), (2657888382.0)}, {(513233413.0), (67933059.0), (1379805031.0)}, {(44564058.0), (513233413.0), (86971645.0)}}, {{(2732588524.0), (1866530072.0), (818237694.0)}, {(2540507736.0), (2732588524.0), (3257104212.0)}, {(1164400003.0), (2540507736.0), (1124501551.0)}}, {{(4199239222.0), (3155848463.0), (2121388468.0)}, {(1135554501.0), (4199239222.0), (2056492193.0)}, {(3251740389.0), (1135554501.0), (2343537248.0)}}, {{(550710036.0), (500329021.0), (1075236085.0)}, {(356444753.0), (550710036.0), (1634965500.0)}, {(58733535.0), (356444753.0), (1261552815.0)}}, {{(708689546.0), (419139045.0), (2012018174.0)}, {(706488081.0), (708689546.0), (1113760995.0)}, {(585555005.0), (706488081.0), (76092226.0)}}, {{(1293182265.0), (3168473803.0), (366230236.0)}, {(3319068849.0), (1293182265.0), (1085259665.0)}, {(1675229290.0), (3319068849.0), (3912300371.0)}}, {{(3186089068.0), (4188864734.0), (1211781402.0)}, {(756122322.0), (3186089068.0), (578262892.0)}, {(2518961174.0), (756122322.0), (1658665581.0)}}, {{(1347291439.0), (2050427676.0), (736113023.0)}, {(4102191254.0), (1347291439.0), (878627148.0)}, {(1293500383.0), (4102191254.0), (745646810.0)}}, {{(4196897331.0), (3436564969.0), (1900167098.0)}, {(3108887846.0), (4196897331.0), (2697923227.0)}, {(1405263476.0), (3108887846.0), (314631094.0)}}, {{(958383622.0), (3694638688.0), (1150087061.0)}, {(3770009830.0), (958383622.0), (793326651.0)}, {(533700213.0), (3770009830.0), (1513734026.0)}}, {{(4119603367.0), (3479396923.0), (3534176399.0)}, {(3765397477.0), (4119603367.0), (1458031003.0)}, {(3380901602.0), (3765397477.0), (2684083587.0)}}, {{(980937351.0), (2094378936.0), (448446028.0)}, {(1421333909.0), (980937351.0), (3405683645.0)}, {(323724368.0), (1421333909.0), (338680738.0)}}, {{(2942968846.0), (4293637338.0), (3549906544.0)}, {(527851489.0), (2942968846.0), (3852871282.0)}, {(4209198933.0), (527851489.0), (1091268872.0)}}, {{(1975983015.0), (2092556693.0), (611187071.0)}, {(3982652344.0), (1975983015.0), (3001736262.0)}, {(2055073597.0), (3982652344.0), (1875181995.0)}}, {{(2970221269.0), (880904779.0), (2447465272.0)}, {(2888742196.0), (2970221269.0), (3521651749.0)}, {(3019977656.0), (2888742196.0), (2712717326.0)}}, {{(419134859.0), (2976059897.0), (747864206.0)}, {(4101695717.0), (419134859.0), (4264593116.0)}, {(2657991148.0), (4101695717.0), (2542621682.0)}}, {{(4043135299.0), (1612983166.0), (1149778656.0)}, {(1267010518.0), (4043135299.0), (3496325546.0)}, {(3094232897.0), (1267010518.0), (2949176293.0)}}, {{(3949395794.0), (1774568686.0), (2123036003.0)}, {(2182983404.0), (3949395794.0), (2355671350.0)}, {(2820933455.0), (2182983404.0), (513963325.0)}}, {{(3046911698.0), (2576744453.0), (2492729814.0)}, {(4277866093.0), (3046911698.0), (3146977604.0)}, {(2249371766.0), (4277866093.0), (3622293976.0)}}, {{(1391529818.0), (423458502.0), (2587125255.0)}, {(3536237833.0), (1391529818.0), (985347517.0)}, {(157623850.0), (3536237833.0), (1015566287.0)}}, {{(48329260.0), (2599277669.0), (821961664.0)}, {(902187690.0), (48329260.0), (1716556555.0)}, {(4019658974.0), (902187690.0), (950730510.0)}}, {{(1318489562.0), (1530977112.0), (3713577419.0)}, {(4270158447.0), (1318489562.0), (1654940598.0)}, {(2679964938.0), (4270158447.0), (1337075195.0)}}, {{(770600793.0), (3249576224.0), (3578552768.0)}, {(2710443459.0), (770600793.0), (2990852339.0)}, {(3098163705.0), (2710443459.0), (522138188.0)}}, {{(2803285489.0), (1922250286.0), (3164022812.0)}, {(477609731.0), (2803285489.0), (2140252218.0)}, {(2252852611.0), (477609731.0), (3058519788.0)}}, {{(208329741.0), (3633562083.0), (3548346666.0)}, {(3892091460.0), (208329741.0), (516833304.0)}, {(3440632377.0), (3892091460.0), (1638833719.0)}}, {{(1816075033.0), (3570111203.0), (959489356.0)}, {(3482051486.0), (1816075033.0), (861657108.0)}, {(3119495098.0), (3482051486.0), (2576849579.0)}}, {{(4240216888.0), (2891584407.0), (2102314945.0)}, {(4064489450.0), (4240216888.0), (1427441010.0)}, {(2441164913.0), (4064489450.0), (3558527186.0)}}, {{(2918371295.0), (65155283.0), (3469357011.0)}, {(3579773554.0), (2918371295.0), (3494391959.0)}, {(3266584309.0), (3579773554.0), (3837485479.0)}}, {{(2959420453.0), (1365016881.0), (4082486022.0)}, {(236489012.0), (2959420453.0), (3802558529.0)}, {(2687043642.0), (236489012.0), (2547086826.0)}}, {{(4185325422.0), (2762854843.0), (3200044912.0)}, {(3664909559.0), (4185325422.0), (3543921700.0)}, {(4240262918.0), (3664909559.0), (2853212443.0)}}, {{(2618500928.0), (4237264351.0), (1470046497.0)}, {(1893990098.0), (2618500928.0), (2982567031.0)}, {(3017062825.0), (1893990098.0), (3195556801.0)}}, {{(1868464655.0), (3407681142.0), (1652841784.0)}, {(1678569574.0), (1868464655.0), (4162480901.0)}, {(1477016185.0), (1678569574.0), (4145063890.0)}}, {{(792188465.0), (4251338402.0), (2219407026.0)}, {(3840340879.0), (792188465.0), (3493367465.0)}, {(2979958414.0), (3840340879.0), (2338974139.0)}}, {{(478845700.0), (2378167062.0), (882114621.0)}, {(1674533845.0), (478845700.0), (3572905305.0)}, {(3571222880.0), (1674533845.0), (1242316901.0)}}, {{(2636090868.0), (1972761498.0), (71690719.0)}, {(1228103463.0), (2636090868.0), (1280685025.0)}, {(3741735502.0), (1228103463.0), (994061750.0)}}, {{(1156725261.0), (1100755307.0), (221922891.0)}, {(2892200461.0), (1156725261.0), (1505716533.0)}, {(2287613563.0), (2892200461.0), (3689457190.0)}}, {{(1387244644.0), (3135090808.0), (1243609165.0)}, {(1724967466.0), (1387244644.0), (3296353235.0)}, {(1064364031.0), (1724967466.0), (2107521044.0)}}, {{(2822471992.0), (2034317853.0), (2071407475.0)}, {(170903528.0), (2822471992.0), (1322162887.0)}, {(2524982332.0), (170903528.0), (2656231333.0)}}, {{(3653936868.0), (3893194049.0), (2484299328.0)}, {(1313746234.0), (3653936868.0), (1705346273.0)}, {(1397638018.0), (1313746234.0), (4015529545.0)}}, {{(4129760842.0), (1671665759.0), (1677834656.0)}, {(3200005334.0), (4129760842.0), (3486207172.0)}, {(2850728736.0), (3200005334.0), (3076201597.0)}}};
# 2398 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM1Seq[64][3][3];
# 2721 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM1SeqHost[64][3][3] = {{{(2427906178.0), (3580155704.0), (949770784.0)}, {(226153695.0), (1230515664.0), (3580155704.0)}, {(1988835001.0), (986791581.0), (1230515664.0)}}, {{(1774047142.0), (3199155377.0), (3106427820.0)}, {(1901920839.0), (4290900039.0), (3199155377.0)}, {(4178980191.0), (280623348.0), (4290900039.0)}}, {{(3567524348.0), (1934119675.0), (3188270128.0)}, {(2997767678.0), (826363896.0), (1934119675.0)}, {(262952343.0), (614326610.0), (826363896.0)}}, {{(1625613062.0), (4288164505.0), (2481284279.0)}, {(4273461426.0), (1177260757.0), (4288164505.0)}, {(305959988.0), (4017252267.0), (1177260757.0)}}, {{(337929267.0), (333342539.0), (418300166.0)}, {(2944208672.0), (379097734.0), (333342539.0)}, {(2084056909.0), (3625475947.0), (379097734.0)}}, {{(1189899255.0), (1307754719.0), (1214919992.0)}, {(3736721708.0), (3514751918.0), (1307754719.0)}, {(732435953.0), (2021244538.0), (3514751918.0)}}, {{(4089172695.0), (1533534334.0), (525643282.0)}, {(1497577018.0), (1335684482.0), (1533534334.0)}, {(2079007086.0), (3977541427.0), (1335684482.0)}}, {{(3075256652.0), (2762754934.0), (3846844247.0)}, {(3057872364.0), (3274545167.0), (2762754934.0)}, {(4028573983.0), (938934351.0), (3274545167.0)}}, {{(2597859300.0), (2880151048.0), (2523330453.0)}, {(1121709186.0), (175667448.0), (2880151048.0)}, {(4182510911.0), (1723133625.0), (175667448.0)}}, {{(484148868.0), (1404283933.0), (2982534313.0)}, {(3736767353.0), (3179865161.0), (1404283933.0)}, {(391120388.0), (3758716888.0), (3179865161.0)}}, {{(2138867468.0), (1128973399.0), (2133702321.0)}, {(1613561693.0), (3622350766.0), (1128973399.0)}, {(1500151924.0), (3759983985.0), (3622350766.0)}}, {{(3027706760.0), (3786576552.0), (2698781808.0)}, {(2810527099.0), (90498489.0), (3786576552.0)}, {(4220122612.0), (1855245979.0), (90498489.0)}}, {{(3739389517.0), (1110440720.0), (917457922.0)}, {(2163873618.0), (3707591763.0), (1110440720.0)}, {(2667061910.0), (2533383962.0), (3707591763.0)}}, {{(1545226000.0), (1812182123.0), (3693349190.0)}, {(3422065122.0), (3291428549.0), (1812182123.0)}, {(1193168720.0), (2072837757.0), (3291428549.0)}}, {{(3230096243.0), (2131723358.0), (3262178024.0)}, {(2882890127.0), (4088518247.0), (2131723358.0)}, {(3991553306.0), (1282224087.0), (4088518247.0)}}, {{(301207261.0), (1722796810.0), (3697719854.0)}, {(3350228505.0), (3410986694.0), (1722796810.0)}, {(3684514720.0), (2846958957.0), (3410986694.0)}}, {{(1532963114.0), (4236235786.0), (3871128158.0)}, {(3540401964.0), (1285250577.0), (4236235786.0)}, {(1105070646.0), (2764245175.0), (1285250577.0)}}, {{(210906218.0), (3068599594.0), (3034582784.0)}, {(340633153.0), (4004365908.0), (3068599594.0)}, {(4238928187.0), (2299166464.0), (4004365908.0)}}, {{(2274701639.0), (3955606166.0), (3081246407.0)}, {(3199954992.0), (3948054919.0), (3955606166.0)}, {(2399101442.0), (3438340286.0), (3948054919.0)}}, {{(504137100.0), (1182303684.0), (201533985.0)}, {(4188299661.0), (3042453580.0), (1182303684.0)}, {(2578519273.0), (2674782930.0), (3042453580.0)}}, {{(1382964588.0), (2578452047.0), (3140440866.0)}, {(261861891.0), (1076783073.0), (2578452047.0)}, {(1634588989.0), (164438428.0), (1076783073.0)}}, {{(2529186343.0), (526867394.0), (3102803247.0)}, {(2687252475.0), (2908898908.0), (526867394.0)}, {(1213100579.0), (86050422.0), (2908898908.0)}}, {{(2690118316.0), (538108523.0), (790337895.0)}, {(4193870709.0), (1053552056.0), (538108523.0)}, {(1635227281.0), (4002399925.0), (1053552056.0)}}, {{(2123712957.0), (4205383007.0), (1812304090.0)}, {(1095349745.0), (166243972.0), (4205383007.0)}, {(428569070.0), (2128782357.0), (166243972.0)}}, {{(1330151766.0), (3569679412.0), (4107175982.0)}, {(3808641551.0), (3621125056.0), (3569679412.0)}, {(4262164578.0), (1927692878.0), (3621125056.0)}}, {{(3606295184.0), (2442739556.0), (3894922338.0)}, {(1629626641.0), (2729678535.0), (2442739556.0)}, {(3379124758.0), (4279360935.0), (2729678535.0)}}, {{(1052092278.0), (4249024666.0), (919210106.0)}, {(3253349463.0), (3629539480.0), (4249024666.0)}, {(852514024.0), (4025926501.0), (3629539480.0)}}, {{(12394571.0), (1252747620.0), (2133571953.0)}, {(4227339509.0), (3197545170.0), (1252747620.0)}, {(1884529704.0), (1976203831.0), (3197545170.0)}}, {{(2986331025.0), (2671019282.0), (2847338542.0)}, {(3173738401.0), (3542657885.0), (2671019282.0)}, {(745203060.0), (1546667401.0), (3542657885.0)}}, {{(2613012997.0), (2311336951.0), (2911336433.0)}, {(1493974713.0), (92565032.0), (2311336951.0)}, {(2786645250.0), (257065974.0), (92565032.0)}}, {{(3424925004.0), (2776053372.0), (2204068573.0)}, {(3770626858.0), (2509257810.0), (2776053372.0)}, {(2979919489.0), (1146336783.0), (2509257810.0)}}, {{(1474384834.0), (827894421.0), (515339473.0)}, {(1373055755.0), (1949809417.0), (827894421.0)}, {(3088339524.0), (1194193824.0), (1949809417.0)}}, {{(1825805135.0), (1289872272.0), (3700877161.0)}, {(3433422861.0), (4062509844.0), (1289872272.0)}, {(3019008744.0), (2060641859.0), (4062509844.0)}}, {{(3842597153.0), (4253338264.0), (3424495942.0)}, {(698444416.0), (60268595.0), (4253338264.0)}, {(4096010585.0), (47309624.0), (60268595.0)}}, {{(2662288323.0), (2043518992.0), (1593435980.0)}, {(1330201507.0), (3618850300.0), (2043518992.0)}, {(2538793204.0), (271787962.0), (3618850300.0)}}, {{(741020448.0), (997594656.0), (2398808739.0)}, {(1160477043.0), (1522130854.0), (997594656.0)}, {(3036916315.0), (2847712653.0), (1522130854.0)}}, {{(2654964886.0), (1889728930.0), (53329096.0)}, {(2042322941.0), (1621136330.0), (1889728930.0)}, {(1553642730.0), (784545882.0), (1621136330.0)}}, {{(1715219514.0), (2831829177.0), (929124824.0)}, {(997274536.0), (404228189.0), (2831829177.0)}, {(1386575385.0), (4107238699.0), (404228189.0)}}, {{(3928131551.0), (2912523524.0), (1840499723.0)}, {(4216003022.0), (2970489088.0), (2912523524.0)}, {(1158689953.0), (1425511081.0), (2970489088.0)}}, {{(2807004452.0), (2510299562.0), (271603006.0)}, {(2505735035.0), (2370490899.0), (2510299562.0)}, {(10873814.0), (2450376936.0), (2370490899.0)}}, {{(2000734342.0), (1113679064.0), (2502160539.0)}, {(1475266926.0), (2787925323.0), (1113679064.0)}, {(1475797635.0), (3044470744.0), (2787925323.0)}}, {{(1457157056.0), (1252556678.0), (3073232607.0)}, {(1926798761.0), (3639907189.0), (1252556678.0)}, {(2067740348.0), (2256217204.0), (3639907189.0)}}, {{(3740999688.0), (1035400458.0), (3162437311.0)}, {(4126312242.0), (686702830.0), (1035400458.0)}, {(1699805291.0), (667792040.0), (686702830.0)}}, {{(2422495016.0), (3203768688.0), (1858240466.0)}, {(848719394.0), (4092709154.0), (3203768688.0)}, {(659945473.0), (1863075174.0), (4092709154.0)}}, {{(246817944.0), (871751352.0), (2834051003.0)}, {(3976202597.0), (3721214025.0), (871751352.0)}, {(783929942.0), (745295675.0), (3721214025.0)}}, {{(3811740424.0), (3603608092.0), (2365398362.0)}, {(3826150877.0), (2906557036.0), (3603608092.0)}, {(2300510686.0), (966815948.0), (2906557036.0)}}, {{(2816329160.0), (18201123.0), (3367710570.0)}, {(437309679.0), (2220769388.0), (18201123.0)}, {(1346863388.0), (705296543.0), (2220769388.0)}}, {{(3310028953.0), (1662315499.0), (132645114.0)}, {(2572908401.0), (3105849797.0), (1662315499.0)}, {(1937586849.0), (1735620028.0), (3105849797.0)}}, {{(461386353.0), (1359675853.0), (3599822966.0)}, {(106675209.0), (2044154050.0), (1359675853.0)}, {(1787730088.0), (1149892630.0), (2044154050.0)}}, {{(3303902397.0), (345146034.0), (1417149696.0)}, {(2231869247.0), (1116882637.0), (345146034.0)}, {(1846832385.0), (79626976.0), (1116882637.0)}}, {{(2765049417.0), (3117782790.0), (1805260159.0)}, {(3796182890.0), (1101141726.0), (3117782790.0)}, {(224270120.0), (1004001443.0), (1101141726.0)}}, {{(89118668.0), (2494198515.0), (1356989069.0)}, {(2490435731.0), (997151755.0), (2494198515.0)}, {(1175528637.0), (3444341166.0), (997151755.0)}}, {{(2340639019.0), (510225634.0), (286119182.0)}, {(2045217287.0), (1194574818.0), (510225634.0)}, {(2662281592.0), (1728500627.0), (1194574818.0)}}, {{(210787847.0), (1189120688.0), (2848040407.0)}, {(1087786165.0), (2343328484.0), (1189120688.0)}, {(3465141330.0), (2893041005.0), (2343328484.0)}}, {{(3438170226.0), (3236285682.0), (962036916.0)}, {(2873263091.0), (215280489.0), (3236285682.0)}, {(730413847.0), (1474823842.0), (215280489.0)}}, {{(1566461658.0), (133010024.0), (2886695328.0)}, {(2835827516.0), (653809404.0), (133010024.0)}, {(3082882924.0), (3710942807.0), (653809404.0)}}, {{(4201558916.0), (1263786956.0), (326001602.0)}, {(762846463.0), (621546357.0), (1263786956.0)}, {(2697142404.0), (1156650856.0), (621546357.0)}}, {{(2655768102.0), (2339029465.0), (2430211448.0)}, {(2669906627.0), (403962847.0), (2339029465.0)}, {(1483118807.0), (639660658.0), (403962847.0)}}, {{(3508595200.0), (4228486662.0), (754946994.0)}, {(1913148390.0), (3500531602.0), (4228486662.0)}, {(24637.0), (3773159052.0), (3500531602.0)}}, {{(4024866227.0), (1143874914.0), (3205058469.0)}, {(2970344133.0), (2873927273.0), (1143874914.0)}, {(2167114735.0), (4095476435.0), (2873927273.0)}}, {{(1479401095.0), (2958366486.0), (3027708794.0)}, {(2704486034.0), (3574053987.0), (2958366486.0)}, {(3630964515.0), (1276667706.0), (3574053987.0)}}, {{(2035927380.0), (1363628533.0), (818363998.0)}, {(3023327955.0), (3968427114.0), (1363628533.0)}, {(1284825950.0), (2871663372.0), (3968427114.0)}}, {{(3827747418.0), (3897287251.0), (4106993377.0)}, {(1527779946.0), (3221052941.0), (3897287251.0)}, {(4178727866.0), (4281160673.0), (3221052941.0)}}, {{(1174358892.0), (2835476193.0), (959978619.0)}, {(850076464.0), (3774782533.0), (2835476193.0)}, {(3880910680.0), (3237990203.0), (3774782533.0)}}};
# 3044 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM2Seq[64][3][3];
# 3367 "/usr/local/cuda-5.0//include/curand_mrg32k3a.h"
static double mrg32k3aM2SeqHost[64][3][3] = {{{(1464411153.0), (277697599.0), (1610723613.0)}, {(32183930.0), (1464411153.0), (1022607788.0)}, {(2824425944.0), (32183930.0), (2093834863.0)}}, {{(3492361727.0), (1027004383.0), (3167429889.0)}, {(3674905362.0), (3492361727.0), (3572939265.0)}, {(4270409313.0), (3674905362.0), (698814233.0)}}, {{(880482061.0), (205175925.0), (4070445105.0)}, {(2208329119.0), (880482061.0), (1933248566.0)}, {(3741227945.0), (2208329119.0), (3962062826.0)}}, {{(4184605179.0), (1189429800.0), (567967482.0)}, {(107217966.0), (4184605179.0), (784865788.0)}, {(549462420.0), (107217966.0), (3134382704.0)}}, {{(2732536445.0), (1231107067.0), (3374588386.0)}, {(409954030.0), (2732536445.0), (1044831206.0)}, {(3398162498.0), (409954030.0), (3505648581.0)}}, {{(2169560691.0), (1076348534.0), (637306236.0)}, {(3704346564.0), (2169560691.0), (293694496.0)}, {(632453145.0), (3704346564.0), (1609425246.0)}}, {{(372115891.0), (3928812480.0), (2830541169.0)}, {(3056527841.0), (372115891.0), (1924239834.0)}, {(3044937468.0), (3056527841.0), (547142630.0)}}, {{(1660852083.0), (3635660815.0), (1389092450.0)}, {(1025573319.0), (1660852083.0), (3276803366.0)}, {(4036331438.0), (1025573319.0), (4092197741.0)}}, {{(1360732901.0), (2887812973.0), (4101068693.0)}, {(52572783.0), (1360732901.0), (112458461.0)}, {(2636566855.0), (52572783.0), (1136777988.0)}}, {{(3455696508.0), (536919193.0), (3978804036.0)}, {(3094157668.0), (3455696508.0), (3821833900.0)}, {(2278849016.0), (3094157668.0), (2531965909.0)}}, {{(2125991744.0), (890897326.0), (3790557569.0)}, {(1433592392.0), (2125991744.0), (3671109604.0)}, {(808215503.0), (1433592392.0), (2446306581.0)}}, {{(3524411799.0), (932865240.0), (1838275365.0)}, {(1789634890.0), (3524411799.0), (4130736474.0)}, {(2252266098.0), (1789634890.0), (3048775967.0)}}, {{(1773339925.0), (948403862.0), (1999624391.0)}, {(983864203.0), (1773339925.0), (3734776305.0)}, {(314407045.0), (983864203.0), (2648614071.0)}}, {{(321802921.0), (1099164995.0), (2112167358.0)}, {(3760936985.0), (321802921.0), (1003573324.0)}, {(3758858458.0), (3760936985.0), (4014658840.0)}}, {{(2196438580.0), (805386227.0), (4266375092.0)}, {(4124675351.0), (2196438580.0), (2527961345.0)}, {(94452540.0), (4124675351.0), (2825656399.0)}}, {{(66735368.0), (2228005807.0), (4186703168.0)}, {(2624855312.0), (66735368.0), (2708679078.0)}, {(4098470056.0), (2624855312.0), (1773862183.0)}}, {{(3072642883.0), (2746897053.0), (2690305546.0)}, {(1105106652.0), (3072642883.0), (4047666135.0)}, {(2862886282.0), (1105106652.0), (3597347398.0)}}, {{(232906611.0), (3873338256.0), (4051554873.0)}, {(3027413363.0), (232906611.0), (3159432673.0)}, {(3872967050.0), (3027413363.0), (987156327.0)}}, {{(1160686753.0), (3676603152.0), (1635979789.0)}, {(1447386846.0), (1160686753.0), (2670438424.0)}, {(816212890.0), (1447386846.0), (4288868534.0)}}, {{(3825238244.0), (1445162354.0), (2362389441.0)}, {(3440193648.0), (3825238244.0), (3520937545.0)}, {(2652790808.0), (3440193648.0), (405299994.0)}}, {{(1984094858.0), (532165989.0), (2027397575.0)}, {(1455977136.0), (1984094858.0), (2433255524.0)}, {(1039994763.0), (1455977136.0), (2069333087.0)}}, {{(3680843319.0), (2332949611.0), (3516795313.0)}, {(2033851810.0), (3680843319.0), (3843367307.0)}, {(3686294589.0), (2033851810.0), (3912995069.0)}}, {{(967423689.0), (1724183394.0), (635932799.0)}, {(641380480.0), (967423689.0), (2145297779.0)}, {(1723000412.0), (641380480.0), (455633660.0)}}, {{(2130938335.0), (1534972306.0), (2511584766.0)}, {(273828453.0), (2130938335.0), (3112810093.0)}, {(4084843716.0), (273828453.0), (1399334152.0)}}, {{(168278549.0), (541167592.0), (190177712.0)}, {(403188859.0), (168278549.0), (2092073970.0)}, {(58789558.0), (403188859.0), (2777887189.0)}}, {{(634843389.0), (4082275720.0), (2092828966.0)}, {(351187677.0), (634843389.0), (1312056270.0)}, {(3347241070.0), (351187677.0), (2417192332.0)}}, {{(443276110.0), (1113643788.0), (271102234.0)}, {(3083745876.0), (443276110.0), (3370743767.0)}, {(4200577503.0), (3083745876.0), (3298601960.0)}}, {{(3533393557.0), (764977733.0), (3400275098.0)}, {(144639933.0), (3533393557.0), (2646475951.0)}, {(77963866.0), (144639933.0), (3794766611.0)}}, {{(4064854722.0), (1198665008.0), (2872196602.0)}, {(3274748603.0), (4064854722.0), (4164637970.0)}, {(4238693771.0), (3274748603.0), (1981721347.0)}}, {{(2279220396.0), (2355957139.0), (1417574285.0)}, {(885864931.0), (2279220396.0), (1344421653.0)}, {(1895527787.0), (885864931.0), (3726919367.0)}}, {{(2898100178.0), (2427331008.0), (348923199.0)}, {(3175444953.0), (2898100178.0), (4290541487.0)}, {(246118669.0), (3175444953.0), (3410622769.0)}}, {{(284442065.0), (4064194676.0), (2295560707.0)}, {(4182706556.0), (284442065.0), (3696899246.0)}, {(1201342255.0), (4182706556.0), (1145356382.0)}}, {{(656615546.0), (442908965.0), (3724738272.0)}, {(1624967553.0), (656615546.0), (798014134.0)}, {(1157949454.0), (1624967553.0), (496247378.0)}}, {{(265689579.0), (675056541.0), (3009083380.0)}, {(3820679930.0), (265689579.0), (2961990151.0)}, {(562287964.0), (3820679930.0), (1853486796.0)}}, {{(1675739167.0), (2319843005.0), (760605578.0)}, {(4161492847.0), (1675739167.0), (226142150.0)}, {(1017447188.0), (4161492847.0), (3431158427.0)}}, {{(1759873736.0), (2334568602.0), (2154570180.0)}, {(1812793060.0), (1759873736.0), (2111094408.0)}, {(1168460586.0), (1812793060.0), (2495653141.0)}}, {{(317621194.0), (868104288.0), (664971082.0)}, {(2340275074.0), (317621194.0), (2168960688.0)}, {(725706104.0), (2340275074.0), (3532023115.0)}}, {{(3926931954.0), (2907684453.0), (615601328.0)}, {(1132340715.0), (3926931954.0), (676995757.0)}, {(1154819290.0), (1132340715.0), (1662727700.0)}}, {{(3921782078.0), (3376494857.0), (2969567377.0)}, {(475345024.0), (3921782078.0), (4206379953.0)}, {(1795936544.0), (475345024.0), (934679595.0)}}, {{(3119292228.0), (741613041.0), (2083352304.0)}, {(1047885963.0), (3119292228.0), (1581078542.0)}, {(1065969969.0), (1047885963.0), (661718928.0)}}, {{(3643472111.0), (2870554228.0), (3995474529.0)}, {(3804264051.0), (3643472111.0), (1366457944.0)}, {(1246805564.0), (3804264051.0), (993186530.0)}}, {{(796711791.0), (3878204845.0), (3160293932.0)}, {(255632881.0), (796711791.0), (3778927111.0)}, {(3472564181.0), (255632881.0), (388382377.0)}}, {{(1776984101.0), (1742284034.0), (3449763933.0)}, {(1349354417.0), (1776984101.0), (1264780832.0)}, {(715722511.0), (1349354417.0), (1213319489.0)}}, {{(4261866865.0), (1914382786.0), (201872335.0)}, {(614207188.0), (4261866865.0), (1853554849.0)}, {(2046042882.0), (614207188.0), (3193186353.0)}}, {{(2210205512.0), (2847073169.0), (3324925707.0)}, {(1251969297.0), (2210205512.0), (3491451503.0)}, {(470400916.0), (1251969297.0), (2184392547.0)}}, {{(1523590942.0), (2391111113.0), (68341529.0)}, {(295466806.0), (1523590942.0), (4143310876.0)}, {(3527253079.0), (295466806.0), (4059123142.0)}}, {{(1406902110.0), (3735012720.0), (1774518130.0)}, {(1814959027.0), (1406902110.0), (1560544267.0)}, {(346472965.0), (1814959027.0), (964257199.0)}}, {{(855309653.0), (4208503105.0), (1518467541.0)}, {(2025248418.0), (855309653.0), (4148125749.0)}, {(1349947330.0), (2025248418.0), (1168504873.0)}}, {{(2375338156.0), (3629519168.0), (409696181.0)}, {(252401654.0), (2375338156.0), (3992097193.0)}, {(2793725401.0), (252401654.0), (1350184085.0)}}, {{(873141039.0), (3885583138.0), (361604799.0)}, {(3554143374.0), (873141039.0), (894746180.0)}, {(1919765327.0), (3554143374.0), (876210854.0)}}, {{(246368794.0), (1703793169.0), (2317362874.0)}, {(2300930144.0), (246368794.0), (2560214589.0)}, {(2016163623.0), (2300930144.0), (1504276775.0)}}, {{(1574610921.0), (2147546631.0), (4103450226.0)}, {(107416526.0), (1574610921.0), (1773803959.0)}, {(1402542742.0), (107416526.0), (550063800.0)}}, {{(363388665.0), (592194244.0), (1746615522.0)}, {(2637234667.0), (363388665.0), (4031408742.0)}, {(2895130475.0), (2637234667.0), (296510335.0)}}, {{(3997368560.0), (3047771871.0), (3178383826.0)}, {(1160174754.0), (3997368560.0), (4027094919.0)}, {(1234984211.0), (1160174754.0), (4226264344.0)}}, {{(3303179301.0), (4243968063.0), (3235964171.0)}, {(1776841674.0), (3303179301.0), (2867287469.0)}, {(1500495759.0), (1776841674.0), (1708226553.0)}}, {{(1482944153.0), (3192311574.0), (354466071.0)}, {(3932773012.0), (1482944153.0), (389193591.0)}, {(3350181058.0), (3932773012.0), (3398059015.0)}}, {{(640968550.0), (3226860971.0), (922372912.0)}, {(1254989667.0), (640968550.0), (2383815228.0)}, {(2027371896.0), (1254989667.0), (2925300409.0)}}, {{(2313146046.0), (3910187183.0), (1377591475.0)}, {(1689291784.0), (2313146046.0), (4255405993.0)}, {(1650609719.0), (1689291784.0), (1897624297.0)}}, {{(3656310954.0), (882924050.0), (2702189958.0)}, {(3185020283.0), (3656310954.0), (1923190496.0)}, {(2449669145.0), (3185020283.0), (4235849984.0)}}, {{(377232416.0), (1498446142.0), (4229103619.0)}, {(3926377906.0), (377232416.0), (600268838.0)}, {(511317726.0), (3926377906.0), (216160452.0)}}, {{(1969399344.0), (3273966859.0), (4220943579.0)}, {(3952111894.0), (1969399344.0), (575096961.0)}, {(3815277103.0), (3952111894.0), (792177412.0)}}, {{(2957238169.0), (1410010554.0), (1523740068.0)}, {(3949237584.0), (2957238169.0), (74149658.0)}, {(2564746147.0), (3949237584.0), (2557663578.0)}}, {{(3377318569.0), (1927835240.0), (2556102508.0)}, {(3022040116.0), (3377318569.0), (2549406364.0)}, {(2387074241.0), (3022040116.0), (1477293711.0)}}, {{(257306870.0), (1748489735.0), (547809226.0)}, {(3708493374.0), (257306870.0), (4183546362.0)}, {(4435502.0), (3708493374.0), (1607696753.0)}}};
# 148 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef unsigned long long CUdeviceptr; }
# 155 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef int CUdevice; }
# 156 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 157 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 158 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 159 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 160 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUmipmappedArray_st *CUmipmappedArray; }
# 161 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 162 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 163 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 164 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 165 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 166 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef unsigned long long CUtexObject; }
# 167 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef unsigned long long CUsurfObject; }
# 171 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 169 "/usr/local/cuda-5.0//include/cuda.h"
struct CUuuid_st {
# 170 "/usr/local/cuda-5.0//include/cuda.h"
char bytes[16];
# 171 "/usr/local/cuda-5.0//include/cuda.h"
} CUuuid; }
# 186 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 184 "/usr/local/cuda-5.0//include/cuda.h"
struct CUipcEventHandle_st {
# 185 "/usr/local/cuda-5.0//include/cuda.h"
char reserved[64];
# 186 "/usr/local/cuda-5.0//include/cuda.h"
} CUipcEventHandle; }
# 193 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 191 "/usr/local/cuda-5.0//include/cuda.h"
struct CUipcMemHandle_st {
# 192 "/usr/local/cuda-5.0//include/cuda.h"
char reserved[64];
# 193 "/usr/local/cuda-5.0//include/cuda.h"
} CUipcMemHandle; }
# 200 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 198 "/usr/local/cuda-5.0//include/cuda.h"
enum CUipcMem_flags_enum {
# 199 "/usr/local/cuda-5.0//include/cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 200 "/usr/local/cuda-5.0//include/cuda.h"
} CUipcMem_flags; }
# 219 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 207 "/usr/local/cuda-5.0//include/cuda.h"
enum CUctx_flags_enum {
# 208 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_SCHED_AUTO,
# 209 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_SCHED_SPIN,
# 210 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_SCHED_YIELD,
# 211 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 212 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 215 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 216 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_MAP_HOST,
# 217 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 218 "/usr/local/cuda-5.0//include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 219 "/usr/local/cuda-5.0//include/cuda.h"
} CUctx_flags; }
# 227 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 224 "/usr/local/cuda-5.0//include/cuda.h"
enum CUstream_flags_enum {
# 225 "/usr/local/cuda-5.0//include/cuda.h"
CU_STREAM_DEFAULT,
# 226 "/usr/local/cuda-5.0//include/cuda.h"
CU_STREAM_NON_BLOCKING
# 227 "/usr/local/cuda-5.0//include/cuda.h"
} CUstream_flags; }
# 237 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 232 "/usr/local/cuda-5.0//include/cuda.h"
enum CUevent_flags_enum {
# 233 "/usr/local/cuda-5.0//include/cuda.h"
CU_EVENT_DEFAULT,
# 234 "/usr/local/cuda-5.0//include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 235 "/usr/local/cuda-5.0//include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 236 "/usr/local/cuda-5.0//include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 237 "/usr/local/cuda-5.0//include/cuda.h"
} CUevent_flags; }
# 251 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 242 "/usr/local/cuda-5.0//include/cuda.h"
enum CUarray_format_enum {
# 243 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 244 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 245 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 246 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 247 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 248 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 249 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 250 "/usr/local/cuda-5.0//include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 251 "/usr/local/cuda-5.0//include/cuda.h"
} CUarray_format; }
# 261 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 256 "/usr/local/cuda-5.0//include/cuda.h"
enum CUaddress_mode_enum {
# 257 "/usr/local/cuda-5.0//include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 258 "/usr/local/cuda-5.0//include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 259 "/usr/local/cuda-5.0//include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 260 "/usr/local/cuda-5.0//include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 261 "/usr/local/cuda-5.0//include/cuda.h"
} CUaddress_mode; }
# 269 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 266 "/usr/local/cuda-5.0//include/cuda.h"
enum CUfilter_mode_enum {
# 267 "/usr/local/cuda-5.0//include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 268 "/usr/local/cuda-5.0//include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 269 "/usr/local/cuda-5.0//include/cuda.h"
} CUfilter_mode; }
# 358 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 274 "/usr/local/cuda-5.0//include/cuda.h"
enum CUdevice_attribute_enum {
# 275 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 276 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 277 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 278 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 279 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 280 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 281 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 282 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 283 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 284 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 285 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 286 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 287 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 288 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 289 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 290 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 291 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 292 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 293 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 294 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 295 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 296 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 297 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 298 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 299 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 300 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 301 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 302 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 303 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 304 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 305 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 306 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 307 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 308 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 309 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 310 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 311 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 312 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 313 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 314 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 315 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 316 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 317 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 318 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 319 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 320 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 321 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 322 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 323 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 324 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 325 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 326 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 327 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 328 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 329 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 330 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 331 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 332 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 333 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 334 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 335 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 336 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 337 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 338 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 339 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 340 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 341 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 342 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 343 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 344 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 345 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 346 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 347 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 348 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 349 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 350 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 351 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH,
# 352 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH,
# 353 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT,
# 354 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR,
# 355 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR,
# 356 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH,
# 357 "/usr/local/cuda-5.0//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX
# 358 "/usr/local/cuda-5.0//include/cuda.h"
} CUdevice_attribute; }
# 374 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 363 "/usr/local/cuda-5.0//include/cuda.h"
struct CUdevprop_st {
# 364 "/usr/local/cuda-5.0//include/cuda.h"
int maxThreadsPerBlock;
# 365 "/usr/local/cuda-5.0//include/cuda.h"
int maxThreadsDim[3];
# 366 "/usr/local/cuda-5.0//include/cuda.h"
int maxGridSize[3];
# 367 "/usr/local/cuda-5.0//include/cuda.h"
int sharedMemPerBlock;
# 368 "/usr/local/cuda-5.0//include/cuda.h"
int totalConstantMemory;
# 369 "/usr/local/cuda-5.0//include/cuda.h"
int SIMDWidth;
# 370 "/usr/local/cuda-5.0//include/cuda.h"
int memPitch;
# 371 "/usr/local/cuda-5.0//include/cuda.h"
int regsPerBlock;
# 372 "/usr/local/cuda-5.0//include/cuda.h"
int clockRate;
# 373 "/usr/local/cuda-5.0//include/cuda.h"
int textureAlign;
# 374 "/usr/local/cuda-5.0//include/cuda.h"
} CUdevprop; }
# 385 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 379 "/usr/local/cuda-5.0//include/cuda.h"
enum CUpointer_attribute_enum {
# 380 "/usr/local/cuda-5.0//include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 381 "/usr/local/cuda-5.0//include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 382 "/usr/local/cuda-5.0//include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 383 "/usr/local/cuda-5.0//include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER,
# 384 "/usr/local/cuda-5.0//include/cuda.h"
CU_POINTER_ATTRIBUTE_P2P_TOKENS
# 385 "/usr/local/cuda-5.0//include/cuda.h"
} CUpointer_attribute; }
# 440 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 390 "/usr/local/cuda-5.0//include/cuda.h"
enum CUfunction_attribute_enum {
# 396 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 403 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 409 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 414 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 419 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 428 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 437 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 439 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 440 "/usr/local/cuda-5.0//include/cuda.h"
} CUfunction_attribute; }
# 450 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 445 "/usr/local/cuda-5.0//include/cuda.h"
enum CUfunc_cache_enum {
# 446 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 447 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 448 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 449 "/usr/local/cuda-5.0//include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 450 "/usr/local/cuda-5.0//include/cuda.h"
} CUfunc_cache; }
# 459 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 455 "/usr/local/cuda-5.0//include/cuda.h"
enum CUsharedconfig_enum {
# 456 "/usr/local/cuda-5.0//include/cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 457 "/usr/local/cuda-5.0//include/cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 458 "/usr/local/cuda-5.0//include/cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 459 "/usr/local/cuda-5.0//include/cuda.h"
} CUsharedconfig; }
# 469 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 464 "/usr/local/cuda-5.0//include/cuda.h"
enum CUmemorytype_enum {
# 465 "/usr/local/cuda-5.0//include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 466 "/usr/local/cuda-5.0//include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 467 "/usr/local/cuda-5.0//include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 468 "/usr/local/cuda-5.0//include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 469 "/usr/local/cuda-5.0//include/cuda.h"
} CUmemorytype; }
# 479 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 474 "/usr/local/cuda-5.0//include/cuda.h"
enum CUcomputemode_enum {
# 475 "/usr/local/cuda-5.0//include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 476 "/usr/local/cuda-5.0//include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 477 "/usr/local/cuda-5.0//include/cuda.h"
CU_COMPUTEMODE_PROHIBITED,
# 478 "/usr/local/cuda-5.0//include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 479 "/usr/local/cuda-5.0//include/cuda.h"
} CUcomputemode; }
# 571 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 484 "/usr/local/cuda-5.0//include/cuda.h"
enum CUjit_option_enum {
# 490 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 503 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 510 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_WALL_TIME,
# 518 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 526 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 534 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 542 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 549 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 556 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 562 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_TARGET,
# 569 "/usr/local/cuda-5.0//include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 571 "/usr/local/cuda-5.0//include/cuda.h"
} CUjit_option; }
# 586 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 576 "/usr/local/cuda-5.0//include/cuda.h"
enum CUjit_target_enum {
# 578 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_10,
# 579 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_11,
# 580 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_12,
# 581 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_13,
# 582 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_20,
# 583 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_21,
# 584 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_30,
# 585 "/usr/local/cuda-5.0//include/cuda.h"
CU_TARGET_COMPUTE_35
# 586 "/usr/local/cuda-5.0//include/cuda.h"
} CUjit_target; }
# 597 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 591 "/usr/local/cuda-5.0//include/cuda.h"
enum CUjit_fallback_enum {
# 593 "/usr/local/cuda-5.0//include/cuda.h"
CU_PREFER_PTX,
# 595 "/usr/local/cuda-5.0//include/cuda.h"
CU_PREFER_BINARY
# 597 "/usr/local/cuda-5.0//include/cuda.h"
} CUjit_fallback; }
# 608 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 602 "/usr/local/cuda-5.0//include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 603 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 604 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 605 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 606 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 607 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 608 "/usr/local/cuda-5.0//include/cuda.h"
} CUgraphicsRegisterFlags; }
# 617 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 613 "/usr/local/cuda-5.0//include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 614 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 615 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 616 "/usr/local/cuda-5.0//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 617 "/usr/local/cuda-5.0//include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 629 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 622 "/usr/local/cuda-5.0//include/cuda.h"
enum CUarray_cubemap_face_enum {
# 623 "/usr/local/cuda-5.0//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 624 "/usr/local/cuda-5.0//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 625 "/usr/local/cuda-5.0//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 626 "/usr/local/cuda-5.0//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 627 "/usr/local/cuda-5.0//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 628 "/usr/local/cuda-5.0//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 629 "/usr/local/cuda-5.0//include/cuda.h"
} CUarray_cubemap_face; }
# 640 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 634 "/usr/local/cuda-5.0//include/cuda.h"
enum CUlimit_enum {
# 635 "/usr/local/cuda-5.0//include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 636 "/usr/local/cuda-5.0//include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 637 "/usr/local/cuda-5.0//include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE,
# 638 "/usr/local/cuda-5.0//include/cuda.h"
CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH,
# 639 "/usr/local/cuda-5.0//include/cuda.h"
CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT
# 640 "/usr/local/cuda-5.0//include/cuda.h"
} CUlimit; }
# 650 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 645 "/usr/local/cuda-5.0//include/cuda.h"
enum CUresourcetype_enum {
# 646 "/usr/local/cuda-5.0//include/cuda.h"
CU_RESOURCE_TYPE_ARRAY,
# 647 "/usr/local/cuda-5.0//include/cuda.h"
CU_RESOURCE_TYPE_MIPMAPPED_ARRAY,
# 648 "/usr/local/cuda-5.0//include/cuda.h"
CU_RESOURCE_TYPE_LINEAR,
# 649 "/usr/local/cuda-5.0//include/cuda.h"
CU_RESOURCE_TYPE_PITCH2D
# 650 "/usr/local/cuda-5.0//include/cuda.h"
} CUresourcetype; }
# 985 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 655 "/usr/local/cuda-5.0//include/cuda.h"
enum cudaError_enum {
# 661 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_SUCCESS,
# 667 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 673 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 679 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 684 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 691 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 699 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 706 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 713 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 719 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 725 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 732 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 742 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 751 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 756 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 761 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 767 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 772 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 780 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 785 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 790 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 796 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 802 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 808 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 814 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 821 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 827 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 832 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 837 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 842 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 847 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 852 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 859 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 866 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 875 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 886 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 897 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 908 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 914 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 921 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 928 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 934 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 941 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 949 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_ASSERT,
# 956 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 962 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 968 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 973 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_PERMITTED = 800,
# 979 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_NOT_SUPPORTED,
# 984 "/usr/local/cuda-5.0//include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 985 "/usr/local/cuda-5.0//include/cuda.h"
} CUresult; }
# 999 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef void (*CUstreamCallback)(CUstream , CUresult , void * ); }
# 1061 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1040 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 1041 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcXInBytes;
# 1042 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcY;
# 1044 "/usr/local/cuda-5.0//include/cuda.h"
CUmemorytype srcMemoryType;
# 1045 "/usr/local/cuda-5.0//include/cuda.h"
const void *srcHost;
# 1046 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr srcDevice;
# 1047 "/usr/local/cuda-5.0//include/cuda.h"
CUarray srcArray;
# 1048 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcPitch;
# 1050 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstXInBytes;
# 1051 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstY;
# 1053 "/usr/local/cuda-5.0//include/cuda.h"
CUmemorytype dstMemoryType;
# 1054 "/usr/local/cuda-5.0//include/cuda.h"
void *dstHost;
# 1055 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr dstDevice;
# 1056 "/usr/local/cuda-5.0//include/cuda.h"
CUarray dstArray;
# 1057 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstPitch;
# 1059 "/usr/local/cuda-5.0//include/cuda.h"
size_t WidthInBytes;
# 1060 "/usr/local/cuda-5.0//include/cuda.h"
size_t Height;
# 1061 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_MEMCPY2D; }
# 1094 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1066 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 1067 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcXInBytes;
# 1068 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcY;
# 1069 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcZ;
# 1070 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcLOD;
# 1071 "/usr/local/cuda-5.0//include/cuda.h"
CUmemorytype srcMemoryType;
# 1072 "/usr/local/cuda-5.0//include/cuda.h"
const void *srcHost;
# 1073 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr srcDevice;
# 1074 "/usr/local/cuda-5.0//include/cuda.h"
CUarray srcArray;
# 1075 "/usr/local/cuda-5.0//include/cuda.h"
void *reserved0;
# 1076 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcPitch;
# 1077 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcHeight;
# 1079 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstXInBytes;
# 1080 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstY;
# 1081 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstZ;
# 1082 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstLOD;
# 1083 "/usr/local/cuda-5.0//include/cuda.h"
CUmemorytype dstMemoryType;
# 1084 "/usr/local/cuda-5.0//include/cuda.h"
void *dstHost;
# 1085 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr dstDevice;
# 1086 "/usr/local/cuda-5.0//include/cuda.h"
CUarray dstArray;
# 1087 "/usr/local/cuda-5.0//include/cuda.h"
void *reserved1;
# 1088 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstPitch;
# 1089 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstHeight;
# 1091 "/usr/local/cuda-5.0//include/cuda.h"
size_t WidthInBytes;
# 1092 "/usr/local/cuda-5.0//include/cuda.h"
size_t Height;
# 1093 "/usr/local/cuda-5.0//include/cuda.h"
size_t Depth;
# 1094 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_MEMCPY3D; }
# 1127 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1099 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1100 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcXInBytes;
# 1101 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcY;
# 1102 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcZ;
# 1103 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcLOD;
# 1104 "/usr/local/cuda-5.0//include/cuda.h"
CUmemorytype srcMemoryType;
# 1105 "/usr/local/cuda-5.0//include/cuda.h"
const void *srcHost;
# 1106 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr srcDevice;
# 1107 "/usr/local/cuda-5.0//include/cuda.h"
CUarray srcArray;
# 1108 "/usr/local/cuda-5.0//include/cuda.h"
CUcontext srcContext;
# 1109 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcPitch;
# 1110 "/usr/local/cuda-5.0//include/cuda.h"
size_t srcHeight;
# 1112 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstXInBytes;
# 1113 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstY;
# 1114 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstZ;
# 1115 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstLOD;
# 1116 "/usr/local/cuda-5.0//include/cuda.h"
CUmemorytype dstMemoryType;
# 1117 "/usr/local/cuda-5.0//include/cuda.h"
void *dstHost;
# 1118 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr dstDevice;
# 1119 "/usr/local/cuda-5.0//include/cuda.h"
CUarray dstArray;
# 1120 "/usr/local/cuda-5.0//include/cuda.h"
CUcontext dstContext;
# 1121 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstPitch;
# 1122 "/usr/local/cuda-5.0//include/cuda.h"
size_t dstHeight;
# 1124 "/usr/local/cuda-5.0//include/cuda.h"
size_t WidthInBytes;
# 1125 "/usr/local/cuda-5.0//include/cuda.h"
size_t Height;
# 1126 "/usr/local/cuda-5.0//include/cuda.h"
size_t Depth;
# 1127 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_MEMCPY3D_PEER; }
# 1139 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1132 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1134 "/usr/local/cuda-5.0//include/cuda.h"
size_t Width;
# 1135 "/usr/local/cuda-5.0//include/cuda.h"
size_t Height;
# 1137 "/usr/local/cuda-5.0//include/cuda.h"
CUarray_format Format;
# 1138 "/usr/local/cuda-5.0//include/cuda.h"
unsigned NumChannels;
# 1139 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 1153 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1144 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1146 "/usr/local/cuda-5.0//include/cuda.h"
size_t Width;
# 1147 "/usr/local/cuda-5.0//include/cuda.h"
size_t Height;
# 1148 "/usr/local/cuda-5.0//include/cuda.h"
size_t Depth;
# 1150 "/usr/local/cuda-5.0//include/cuda.h"
CUarray_format Format;
# 1151 "/usr/local/cuda-5.0//include/cuda.h"
unsigned NumChannels;
# 1152 "/usr/local/cuda-5.0//include/cuda.h"
unsigned Flags;
# 1153 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 1193 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1162 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_RESOURCE_DESC_st {
# 1164 "/usr/local/cuda-5.0//include/cuda.h"
CUresourcetype resType;
# 1166 "/usr/local/cuda-5.0//include/cuda.h"
union {
# 1167 "/usr/local/cuda-5.0//include/cuda.h"
struct {
# 1168 "/usr/local/cuda-5.0//include/cuda.h"
CUarray hArray;
# 1169 "/usr/local/cuda-5.0//include/cuda.h"
} array;
# 1170 "/usr/local/cuda-5.0//include/cuda.h"
struct {
# 1171 "/usr/local/cuda-5.0//include/cuda.h"
CUmipmappedArray hMipmappedArray;
# 1172 "/usr/local/cuda-5.0//include/cuda.h"
} mipmap;
# 1173 "/usr/local/cuda-5.0//include/cuda.h"
struct {
# 1174 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr devPtr;
# 1175 "/usr/local/cuda-5.0//include/cuda.h"
CUarray_format format;
# 1176 "/usr/local/cuda-5.0//include/cuda.h"
unsigned numChannels;
# 1177 "/usr/local/cuda-5.0//include/cuda.h"
size_t sizeInBytes;
# 1178 "/usr/local/cuda-5.0//include/cuda.h"
} linear;
# 1179 "/usr/local/cuda-5.0//include/cuda.h"
struct {
# 1180 "/usr/local/cuda-5.0//include/cuda.h"
CUdeviceptr devPtr;
# 1181 "/usr/local/cuda-5.0//include/cuda.h"
CUarray_format format;
# 1182 "/usr/local/cuda-5.0//include/cuda.h"
unsigned numChannels;
# 1183 "/usr/local/cuda-5.0//include/cuda.h"
size_t width;
# 1184 "/usr/local/cuda-5.0//include/cuda.h"
size_t height;
# 1185 "/usr/local/cuda-5.0//include/cuda.h"
size_t pitchInBytes;
# 1186 "/usr/local/cuda-5.0//include/cuda.h"
} pitch2D;
# 1187 "/usr/local/cuda-5.0//include/cuda.h"
struct {
# 1188 "/usr/local/cuda-5.0//include/cuda.h"
int reserved[32];
# 1189 "/usr/local/cuda-5.0//include/cuda.h"
} reserved;
# 1190 "/usr/local/cuda-5.0//include/cuda.h"
} res;
# 1192 "/usr/local/cuda-5.0//include/cuda.h"
unsigned flags;
# 1193 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_RESOURCE_DESC; }
# 1208 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1198 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_TEXTURE_DESC_st {
# 1199 "/usr/local/cuda-5.0//include/cuda.h"
CUaddress_mode addressMode[3];
# 1200 "/usr/local/cuda-5.0//include/cuda.h"
CUfilter_mode filterMode;
# 1201 "/usr/local/cuda-5.0//include/cuda.h"
unsigned flags;
# 1202 "/usr/local/cuda-5.0//include/cuda.h"
unsigned maxAnisotropy;
# 1203 "/usr/local/cuda-5.0//include/cuda.h"
CUfilter_mode mipmapFilterMode;
# 1204 "/usr/local/cuda-5.0//include/cuda.h"
float mipmapLevelBias;
# 1205 "/usr/local/cuda-5.0//include/cuda.h"
float minMipmapLevelClamp;
# 1206 "/usr/local/cuda-5.0//include/cuda.h"
float maxMipmapLevelClamp;
# 1207 "/usr/local/cuda-5.0//include/cuda.h"
int reserved[16];
# 1208 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_TEXTURE_DESC; }
# 1250 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1213 "/usr/local/cuda-5.0//include/cuda.h"
enum CUresourceViewFormat_enum {
# 1215 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_NONE,
# 1216 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X8,
# 1217 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X8,
# 1218 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X8,
# 1219 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X8,
# 1220 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X8,
# 1221 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X8,
# 1222 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X16,
# 1223 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X16,
# 1224 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X16,
# 1225 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X16,
# 1226 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X16,
# 1227 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X16,
# 1228 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X32,
# 1229 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X32,
# 1230 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X32,
# 1231 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X32,
# 1232 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X32,
# 1233 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X32,
# 1234 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X16,
# 1235 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X16,
# 1236 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X16,
# 1237 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X32,
# 1238 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X32,
# 1239 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X32,
# 1240 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC1,
# 1241 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC2,
# 1242 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC3,
# 1243 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC4,
# 1244 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC4,
# 1245 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC5,
# 1246 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC5,
# 1247 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC6H,
# 1248 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC6H,
# 1249 "/usr/local/cuda-5.0//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC7
# 1250 "/usr/local/cuda-5.0//include/cuda.h"
} CUresourceViewFormat; }
# 1266 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1255 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_RESOURCE_VIEW_DESC_st {
# 1257 "/usr/local/cuda-5.0//include/cuda.h"
CUresourceViewFormat format;
# 1258 "/usr/local/cuda-5.0//include/cuda.h"
size_t width;
# 1259 "/usr/local/cuda-5.0//include/cuda.h"
size_t height;
# 1260 "/usr/local/cuda-5.0//include/cuda.h"
size_t depth;
# 1261 "/usr/local/cuda-5.0//include/cuda.h"
unsigned firstMipmapLevel;
# 1262 "/usr/local/cuda-5.0//include/cuda.h"
unsigned lastMipmapLevel;
# 1263 "/usr/local/cuda-5.0//include/cuda.h"
unsigned firstLayer;
# 1264 "/usr/local/cuda-5.0//include/cuda.h"
unsigned lastLayer;
# 1265 "/usr/local/cuda-5.0//include/cuda.h"
unsigned reserved[16];
# 1266 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_RESOURCE_VIEW_DESC; }
# 1274 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" { typedef
# 1271 "/usr/local/cuda-5.0//include/cuda.h"
struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st {
# 1272 "/usr/local/cuda-5.0//include/cuda.h"
unsigned long long p2pToken;
# 1273 "/usr/local/cuda-5.0//include/cuda.h"
unsigned vaSpaceToken;
# 1274 "/usr/local/cuda-5.0//include/cuda.h"
} CUDA_POINTER_ATTRIBUTE_P2P_TOKENS; }
# 1401 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuInit(unsigned );
# 1428 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int * );
# 1465 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice * , int );
# 1490 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int * );
# 1518 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGetName(char * , int , CUdevice );
# 1545 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceTotalMem_v2(size_t * , CUdevice );
# 1718 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int * , CUdevice_attribute , CUdevice );
# 1792 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop * , CUdevice );
# 1825 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int * , int * , CUdevice );
# 1924 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxCreate_v2(CUcontext * , unsigned , CUdevice );
# 1963 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxDestroy_v2(CUcontext );
# 1998 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxPushCurrent_v2(CUcontext );
# 2031 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxPopCurrent_v2(CUcontext * );
# 2057 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxSetCurrent(CUcontext );
# 2076 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxGetCurrent(CUcontext * );
# 2105 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice * );
# 2133 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 2227 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit , size_t );
# 2265 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t * , CUlimit );
# 2307 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxGetCacheConfig(CUfunc_cache * );
# 2356 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxSetCacheConfig(CUfunc_cache );
# 2397 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxGetSharedMemConfig(CUsharedconfig * );
# 2448 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxSetSharedMemConfig(CUsharedconfig );
# 2485 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxGetApiVersion(CUcontext , unsigned * );
# 2536 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext * , unsigned );
# 2571 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext );
# 2620 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule * , const char * );
# 2654 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule * , const void * );
# 2733 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule * , const void * , unsigned , CUjit_option * , void ** );
# 2773 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule * , const void * );
# 2798 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule );
# 2828 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction * , CUmodule , const char * );
# 2862 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleGetGlobal_v2(CUdeviceptr * , size_t * , CUmodule , const char * );
# 2896 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref * , CUmodule , const char * );
# 2927 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref * , CUmodule , const char * );
# 2970 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemGetInfo_v2(size_t * , size_t * );
# 3003 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemAlloc_v2(CUdeviceptr * , size_t );
# 3064 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemAllocPitch_v2(CUdeviceptr * , size_t * , size_t , size_t , unsigned );
# 3093 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemFree_v2(CUdeviceptr );
# 3126 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemGetAddressRange_v2(CUdeviceptr * , size_t * , CUdeviceptr );
# 3172 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemAllocHost_v2(void ** , size_t );
# 3202 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemFreeHost(void * );
# 3284 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void ** , size_t , unsigned );
# 3322 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * , void * , unsigned );
# 3347 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned * , void * );
# 3374 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGetByPCIBusId(CUdevice * , char * );
# 3402 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceGetPCIBusId(char * , int , CUdevice );
# 3444 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuIpcGetEventHandle(CUipcEventHandle * , CUevent );
# 3481 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuIpcOpenEventHandle(CUevent * , CUipcEventHandle );
# 3518 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuIpcGetMemHandle(CUipcMemHandle * , CUdeviceptr );
# 3566 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuIpcOpenMemHandle(CUdeviceptr * , CUipcMemHandle , unsigned );
# 3597 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuIpcCloseMemHandle(CUdeviceptr );
# 3660 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemHostRegister(void * , size_t , unsigned );
# 3684 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemHostUnregister(void * );
# 3720 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy(CUdeviceptr , CUdeviceptr , size_t );
# 3753 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyPeer(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t );
# 3789 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyHtoD_v2(CUdeviceptr , const void * , size_t );
# 3822 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyDtoH_v2(void * , CUdeviceptr , size_t );
# 3855 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyDtoD_v2(CUdeviceptr , CUdeviceptr , size_t );
# 3889 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyDtoA_v2(CUarray , size_t , CUdeviceptr , size_t );
# 3925 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyAtoD_v2(CUdeviceptr , CUarray , size_t , size_t );
# 3959 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyHtoA_v2(CUarray , size_t , const void * , size_t );
# 3993 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyAtoH_v2(void * , CUarray , size_t , size_t );
# 4031 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyAtoA_v2(CUarray , size_t , CUarray , size_t , size_t );
# 4191 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * );
# 4349 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * );
# 4516 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * );
# 4547 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * );
# 4587 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyAsync(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4618 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyPeerAsync(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t , CUstream );
# 4660 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr , const void * , size_t , CUstream );
# 4700 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync_v2(void * , CUdeviceptr , size_t , CUstream );
# 4737 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4779 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync_v2(CUarray , size_t , const void * , size_t , CUstream );
# 4821 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync_v2(void * , CUarray , size_t , size_t , CUstream );
# 4992 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * , CUstream );
# 5167 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * , CUstream );
# 5192 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * , CUstream );
# 5230 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD8_v2(CUdeviceptr , unsigned char , size_t );
# 5266 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD16_v2(CUdeviceptr , unsigned short , size_t );
# 5302 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD32_v2(CUdeviceptr , unsigned , size_t );
# 5343 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD2D8_v2(CUdeviceptr , size_t , unsigned char , size_t , size_t );
# 5385 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD2D16_v2(CUdeviceptr , size_t , unsigned short , size_t , size_t );
# 5427 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD2D32_v2(CUdeviceptr , size_t , unsigned , size_t , size_t );
# 5464 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD8Async(CUdeviceptr , unsigned char , size_t , CUstream );
# 5501 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD16Async(CUdeviceptr , unsigned short , size_t , CUstream );
# 5537 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD32Async(CUdeviceptr , unsigned , size_t , CUstream );
# 5579 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD2D8Async(CUdeviceptr , size_t , unsigned char , size_t , size_t , CUstream );
# 5622 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD2D16Async(CUdeviceptr , size_t , unsigned short , size_t , size_t , CUstream );
# 5665 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMemsetD2D32Async(CUdeviceptr , size_t , unsigned , size_t , size_t , CUstream );
# 5768 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuArrayCreate_v2(CUarray * , const CUDA_ARRAY_DESCRIPTOR * );
# 5801 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * , CUarray );
# 5832 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray );
# 6012 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuArray3DCreate_v2(CUarray * , const CUDA_ARRAY3D_DESCRIPTOR * );
# 6048 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * , CUarray );
# 6175 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMipmappedArrayCreate(CUmipmappedArray * , const CUDA_ARRAY3D_DESCRIPTOR * , unsigned );
# 6201 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMipmappedArrayGetLevel(CUarray * , CUmipmappedArray , unsigned );
# 6221 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuMipmappedArrayDestroy(CUmipmappedArray );
# 6437 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuPointerGetAttribute(void * , CUpointer_attribute , CUdeviceptr );
# 6479 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream * , unsigned );
# 6522 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuStreamWaitEvent(CUstream , CUevent , unsigned );
# 6567 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuStreamAddCallback(CUstream , CUstreamCallback , void * , unsigned );
# 6592 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream );
# 6618 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream );
# 6647 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuStreamDestroy_v2(CUstream );
# 6699 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent * , unsigned );
# 6737 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent , CUstream );
# 6768 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent );
# 6802 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent );
# 6831 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuEventDestroy_v2(CUevent );
# 6875 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float * , CUevent , CUevent );
# 6938 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int * , CUfunction_attribute , CUfunction );
# 6981 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction , CUfunc_cache );
# 7033 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuFuncSetSharedMemConfig(CUfunction , CUsharedconfig );
# 7150 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuLaunchKernel(CUfunction , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , CUstream , void ** , void ** );
# 7208 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction , int , int , int );
# 7242 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction , unsigned );
# 7274 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction , unsigned );
# 7307 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction , int , unsigned );
# 7340 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction , int , float );
# 7375 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction , int , void * , unsigned );
# 7412 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction );
# 7451 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction , int , int );
# 7495 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction , int , int , CUstream );
# 7520 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction , int , CUtexref );
# 7559 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref , CUarray , unsigned );
# 7586 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetMipmappedArray(CUtexref , CUmipmappedArray , unsigned );
# 7630 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetAddress_v2(size_t * , CUtexref , CUdeviceptr , size_t );
# 7682 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D_v3(CUtexref , const CUDA_ARRAY_DESCRIPTOR * , CUdeviceptr , size_t );
# 7711 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref , CUarray_format , int );
# 7751 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref , int , CUaddress_mode );
# 7784 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref , CUfilter_mode );
# 7817 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetMipmapFilterMode(CUtexref , CUfilter_mode );
# 7843 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetMipmapLevelBias(CUtexref , float );
# 7871 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetMipmapLevelClamp(CUtexref , float , float );
# 7897 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetMaxAnisotropy(CUtexref , unsigned );
# 7932 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref , unsigned );
# 7958 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetAddress_v2(CUdeviceptr * , CUtexref );
# 7984 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray * , CUtexref );
# 8009 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetMipmappedArray(CUmipmappedArray * , CUtexref );
# 8035 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode * , CUtexref , int );
# 8059 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode * , CUtexref );
# 8085 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format * , int * , CUtexref );
# 8109 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode * , CUtexref );
# 8133 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetMipmapLevelBias(float * , CUtexref );
# 8158 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetMipmapLevelClamp(float * , float * , CUtexref );
# 8182 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetMaxAnisotropy(int * , CUtexref );
# 8205 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned * , CUtexref );
# 8241 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref * );
# 8261 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref );
# 8297 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref , CUarray , unsigned );
# 8318 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray * , CUsurfref );
# 8535 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexObjectCreate(CUtexObject * , const CUDA_RESOURCE_DESC * , const CUDA_TEXTURE_DESC * , const CUDA_RESOURCE_VIEW_DESC * );
# 8553 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexObjectDestroy(CUtexObject );
# 8572 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC * , CUtexObject );
# 8591 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC * , CUtexObject );
# 8611 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC * , CUtexObject );
# 8647 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuSurfObjectCreate(CUsurfObject * , const CUDA_RESOURCE_DESC * );
# 8665 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuSurfObjectDestroy(CUsurfObject );
# 8684 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC * , CUsurfObject );
# 8723 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuDeviceCanAccessPeer(int * , CUdevice , CUdevice );
# 8770 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxEnablePeerAccess(CUcontext , unsigned );
# 8795 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuCtxDisablePeerAccess(CUcontext );
# 8836 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource );
# 8874 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray * , CUgraphicsResource , unsigned , unsigned );
# 8905 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray * , CUgraphicsResource );
# 8941 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * , size_t * , CUgraphicsResource );
# 8982 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource , unsigned );
# 9020 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned , CUgraphicsResource * , CUstream );
# 9055 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned , CUgraphicsResource * , CUstream );
# 9059 "/usr/local/cuda-5.0//include/cuda.h"
extern "C" CUresult cuGetExportTable(const void ** , const CUuuid * );
# 139 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
struct mtgp32_params_fast;
# 141 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
struct mtgp32_params_fast {
# 142 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int mexp;
# 143 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int pos;
# 144 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int sh1;
# 145 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int sh2;
# 146 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned tbl[16];
# 147 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned tmp_tbl[16];
# 148 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned flt_tmp_tbl[16];
# 150 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned mask;
# 151 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned char poly_sha1[21];
# 152 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
};
# 155 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
typedef mtgp32_params_fast mtgp32_params_fast_t;
# 161 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
struct mtgp32_kernel_params;
# 162 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
struct mtgp32_kernel_params {
# 163 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned pos_tbl[200];
# 164 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned param_tbl[200][16];
# 165 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned temper_tbl[200][16];
# 166 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned single_temper_tbl[200][16];
# 167 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned sh1_tbl[200];
# 168 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned sh2_tbl[200];
# 169 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned mask[1];
# 170 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
};
# 173 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
typedef mtgp32_kernel_params mtgp32_kernel_params_t;
# 192 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
struct curandStateMtgp32;
# 194 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
struct curandStateMtgp32 {
# 195 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
unsigned s[1024];
# 196 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int offset;
# 197 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int pIdx;
# 198 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
mtgp32_kernel_params_t *k;
# 199 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
int precise_double_flag;
# 200 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
};
# 206 "/usr/local/cuda-5.0//include/curand_mtgp32.h"
typedef curandStateMtgp32 curandStateMtgp32_t;
# 120 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
extern "C" { extern const dim3 blockDim; }
# 121 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
extern "C" { extern const uint3 threadIdx; }
# 134 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline unsigned para_rec(mtgp32_kernel_params_t *k, unsigned X1, unsigned X2, unsigned Y, int bid) {int volatile ___ = 1;(void)k;(void)X1;(void)X2;(void)Y;(void)bid;
# 142 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 152 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline unsigned temper(mtgp32_kernel_params_t *k, unsigned V, unsigned T, int bid) {int volatile ___ = 1;(void)k;(void)V;(void)T;(void)bid;
# 159 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 171 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline unsigned temper_single(mtgp32_kernel_params_t *k, unsigned V, unsigned T, int bid) {int volatile ___ = 1;(void)k;(void)V;(void)T;(void)bid;
# 180 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 193 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline unsigned curand(curandStateMtgp32_t *state)
# 194 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
{int volatile ___ = 1;(void)state;
# 225 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 244 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline unsigned curand_mtgp32_specific(curandStateMtgp32_t *state, unsigned char index, unsigned char n)
# 245 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
{int volatile ___ = 1;(void)state;(void)index;(void)n;
# 272 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 288 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline float curand_mtgp32_single(curandStateMtgp32_t *state)
# 289 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
{int volatile ___ = 1;(void)state;
# 324 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 350 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
__attribute__((unused)) static inline float curand_mtgp32_single_specific(curandStateMtgp32_t *state, unsigned char index, unsigned char n)
# 351 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
{int volatile ___ = 1;(void)state;(void)index;(void)n;
# 382 "/usr/local/cuda-5.0//include/curand_mtgp32_kernel.h"
::exit(___);}
# 92 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateTest {
# 93 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned v;
# 94 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 97 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateTest curandStateTest_t;
# 115 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateXORWOW;
# 119 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateXORWOW {
# 120 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned d, v[5];
# 121 "/usr/local/cuda-5.0//include/curand_kernel.h"
int boxmuller_flag;
# 122 "/usr/local/cuda-5.0//include/curand_kernel.h"
int boxmuller_flag_double;
# 123 "/usr/local/cuda-5.0//include/curand_kernel.h"
float boxmuller_extra;
# 124 "/usr/local/cuda-5.0//include/curand_kernel.h"
double boxmuller_extra_double;
# 125 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 131 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateXORWOW curandStateXORWOW_t;
# 180 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateMRG32k3a;
# 183 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateMRG32k3a {
# 184 "/usr/local/cuda-5.0//include/curand_kernel.h"
double s1[3];
# 185 "/usr/local/cuda-5.0//include/curand_kernel.h"
double s2[3];
# 186 "/usr/local/cuda-5.0//include/curand_kernel.h"
int boxmuller_flag;
# 187 "/usr/local/cuda-5.0//include/curand_kernel.h"
int boxmuller_flag_double;
# 188 "/usr/local/cuda-5.0//include/curand_kernel.h"
float boxmuller_extra;
# 189 "/usr/local/cuda-5.0//include/curand_kernel.h"
double boxmuller_extra_double;
# 190 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 196 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateMRG32k3a curandStateMRG32k3a_t;
# 203 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateSobol32;
# 206 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateSobol32 {
# 207 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned i, x;
# 208 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned direction_vectors[32];
# 209 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 215 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateSobol32 curandStateSobol32_t;
# 221 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateScrambledSobol32;
# 224 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateScrambledSobol32 {
# 225 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned i, x, c;
# 226 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned direction_vectors[32];
# 227 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 233 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateScrambledSobol32 curandStateScrambledSobol32_t;
# 239 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateSobol64;
# 242 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateSobol64 {
# 243 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned long long i, x;
# 244 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned long long direction_vectors[64];
# 245 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 251 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateSobol64 curandStateSobol64_t;
# 257 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateScrambledSobol64;
# 260 "/usr/local/cuda-5.0//include/curand_kernel.h"
struct curandStateScrambledSobol64 {
# 261 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned long long i, x, c;
# 262 "/usr/local/cuda-5.0//include/curand_kernel.h"
unsigned long long direction_vectors[64];
# 263 "/usr/local/cuda-5.0//include/curand_kernel.h"
};
# 269 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateScrambledSobol64 curandStateScrambledSobol64_t;
# 276 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateXORWOW curandState_t;
# 277 "/usr/local/cuda-5.0//include/curand_kernel.h"
typedef curandStateXORWOW curandState;
# 290 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void __curand_matvec(unsigned *vector, unsigned *matrix, unsigned *
# 291 "/usr/local/cuda-5.0//include/curand_kernel.h"
result, int n)
# 292 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)vector;(void)matrix;(void)result;(void)n;
# 305 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 309 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void __curand_matidentity(unsigned *matrix, int n)
# 310 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)matrix;(void)n;
# 322 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 326 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void __curand_matmat(unsigned *matrixA, unsigned *matrixB, int n)
# 327 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)matrixA;(void)matrixB;(void)n;
# 335 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 338 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void __curand_veccopy(unsigned *vector, unsigned *vectorA, int n)
# 339 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)vector;(void)vectorA;(void)n;
# 343 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 346 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void __curand_matcopy(unsigned *matrix, unsigned *matrixA, int n)
# 347 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)matrix;(void)matrixA;(void)n;
# 351 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 354 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void __curand_matpow(unsigned *matrix, unsigned *matrixA, unsigned long long
# 355 "/usr/local/cuda-5.0//include/curand_kernel.h"
p, int n)
# 356 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)matrix;(void)matrixA;(void)p;(void)n;
# 369 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 372 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __curand_uint32AsFloat(unsigned i)
# 373 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)i;
# 380 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 383 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double __curand_hilouint32AsDouble(unsigned hi, unsigned lo)
# 384 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)hi;(void)lo;
# 393 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 396 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __curand_uint32_as_float(unsigned x)
# 397 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 403 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 425 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_MRGmod(double i, double m)
# 426 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)i;(void)m;
# 433 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 438 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_MRGmodMul(double i, double j, double m)
# 439 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)i;(void)j;(void)m;
# 449 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 453 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_MRGmatMul3x3(double i1[][3], double i2[][3], double o[][3], double m)
# 454 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)i1;(void)i2;(void)o;(void)m;
# 470 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 474 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_MRGmatVecMul3x3(double i[][3], double v[], double m)
# 475 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)i;(void)v;(void)m;
# 488 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 494 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_MRGmatPow3x3(double in[][3][3], double o[][3], double m, unsigned long long pow)
# 495 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)in;(void)o;(void)m;(void)pow;
# 512 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 517 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curnand_MRGmatPow2Pow3x3(double in[][3], double o[][3], double m, unsigned long pow)
# 518 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)in;(void)o;(void)m;(void)pow;
# 536 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 546 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(unsigned long long seed, unsigned long long
# 547 "/usr/local/cuda-5.0//include/curand_kernel.h"
subsequence, unsigned long long
# 548 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateTest_t *
# 549 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 550 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)seed;(void)subsequence;(void)offset;(void)state;
# 553 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 555 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand(curandStateTest_t *state)
# 556 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 559 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 561 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void skipahead(unsigned long long n, curandStateTest_t *state)
# 562 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 564 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 568 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T, int n> __attribute__((unused)) static inline void
# 569 "/usr/local/cuda-5.0//include/curand_kernel.h"
__curand_generate_skipahead_matrix_xor(unsigned matrix[])
# 570 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)matrix;
# 586 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 588 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T, int n> __attribute__((unused)) static inline void
# 589 "/usr/local/cuda-5.0//include/curand_kernel.h"
_skipahead_scratch(unsigned long long x, T *state, unsigned *scratch)
# 590 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)state;(void)scratch;
# 642 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 644 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T, int n> __attribute__((unused)) static inline void
# 645 "/usr/local/cuda-5.0//include/curand_kernel.h"
_skipahead_sequence_scratch(unsigned long long x, T *state, unsigned *scratch)
# 646 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)state;(void)scratch;
# 698 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 711 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void skipahead(unsigned long long n, curandStateXORWOW_t *state)
# 712 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 715 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 730 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void skipahead_sequence(unsigned long long n, curandStateXORWOW_t *state)
# 731 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 734 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 736 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void _curand_init_scratch(unsigned long long seed, unsigned long long
# 737 "/usr/local/cuda-5.0//include/curand_kernel.h"
subsequence, unsigned long long
# 738 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateXORWOW_t *
# 739 "/usr/local/cuda-5.0//include/curand_kernel.h"
state, unsigned *
# 740 "/usr/local/cuda-5.0//include/curand_kernel.h"
scratch)
# 741 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)seed;(void)subsequence;(void)offset;(void)state;(void)scratch;
# 760 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 780 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(unsigned long long seed, unsigned long long
# 781 "/usr/local/cuda-5.0//include/curand_kernel.h"
subsequence, unsigned long long
# 782 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateXORWOW_t *
# 783 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 784 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)seed;(void)subsequence;(void)offset;(void)state;
# 787 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 798 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand(curandStateXORWOW_t *state)
# 799 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 809 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 850 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_MRG32k3a(curandStateMRG32k3a_t *state)
# 851 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 868 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 883 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void skipahead(unsigned long long n, curandStateMRG32k3a_t *state)
# 884 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 897 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 911 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void skipahead_subsequence(unsigned long long n, curandStateMRG32k3a_t *state)
# 912 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 925 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 940 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void skipahead_sequence(unsigned long long n, curandStateMRG32k3a_t *state)
# 941 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 954 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 974 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(unsigned long long seed, unsigned long long
# 975 "/usr/local/cuda-5.0//include/curand_kernel.h"
subsequence, unsigned long long
# 976 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateMRG32k3a_t *
# 977 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 978 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)seed;(void)subsequence;(void)offset;(void)state;
# 998 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1010 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline void
# 1011 "/usr/local/cuda-5.0//include/curand_kernel.h"
skipahead(unsigned n, T state)
# 1012 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 1023 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1035 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline void
# 1036 "/usr/local/cuda-5.0//include/curand_kernel.h"
skipahead(unsigned long long n, T state)
# 1037 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;(void)state;
# 1048 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1064 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(curandDirectionVectors32_t direction_vectors, unsigned
# 1065 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateSobol32_t *
# 1066 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 1067 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)direction_vectors;(void)offset;(void)state;
# 1074 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1090 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(curandDirectionVectors32_t direction_vectors, unsigned
# 1091 "/usr/local/cuda-5.0//include/curand_kernel.h"
scramble_c, unsigned
# 1092 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateScrambledSobol32_t *
# 1093 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 1094 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)direction_vectors;(void)scramble_c;(void)offset;(void)state;
# 1101 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1103 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class XT> __attribute__((unused)) static inline int
# 1104 "/usr/local/cuda-5.0//include/curand_kernel.h"
__curand_find_trailing_zero(XT x)
# 1105 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1119 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1134 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(curandDirectionVectors64_t direction_vectors, unsigned long long
# 1135 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateSobol64_t *
# 1136 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 1137 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)direction_vectors;(void)offset;(void)state;
# 1144 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1146 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class PT> __attribute__((unused)) static inline void
# 1147 "/usr/local/cuda-5.0//include/curand_kernel.h"
_skipahead_stride(int n_log2, PT state)
# 1148 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n_log2;(void)state;
# 1156 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1172 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline void curand_init(curandDirectionVectors64_t direction_vectors, unsigned long long
# 1173 "/usr/local/cuda-5.0//include/curand_kernel.h"
scramble_c, unsigned long long
# 1174 "/usr/local/cuda-5.0//include/curand_kernel.h"
offset, curandStateScrambledSobol64_t *
# 1175 "/usr/local/cuda-5.0//include/curand_kernel.h"
state)
# 1176 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)direction_vectors;(void)scramble_c;(void)offset;(void)state;
# 1183 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1196 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand(curandStateSobol32_t *state)
# 1197 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1205 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1218 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand(curandStateScrambledSobol32_t *state)
# 1219 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1227 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1240 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned long long curand(curandStateSobol64_t *state)
# 1241 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1249 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1262 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned long long curand(curandStateScrambledSobol64_t *state)
# 1263 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1271 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1276 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float _curand_uniform(unsigned x)
# 1277 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1279 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1281 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float _curand_uniform(unsigned long long x)
# 1282 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1286 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1288 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double _curand_uniform_double(unsigned x)
# 1289 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1291 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1293 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double _curand_uniform_double(unsigned long long x)
# 1294 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1296 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1298 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double _curand_uniform_double_hq(unsigned x, unsigned y)
# 1299 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)y;
# 1303 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1305 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateTest_t *state)
# 1306 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1308 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1310 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateTest_t *state)
# 1311 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1313 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1331 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateXORWOW_t *state)
# 1332 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1334 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1352 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateXORWOW_t *state)
# 1353 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1358 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1375 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateMRG32k3a_t *state)
# 1376 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1378 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1395 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateMRG32k3a_t *state)
# 1396 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1398 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1410 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand(curandStateMRG32k3a_t *state)
# 1411 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1415 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1429 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateMtgp32_t *state)
# 1430 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1432 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1445 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateMtgp32_t *state)
# 1446 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1448 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1464 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateSobol32_t *state)
# 1465 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1467 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1484 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateSobol32_t *state)
# 1485 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1487 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1502 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateScrambledSobol32_t *state)
# 1503 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1505 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1522 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateScrambledSobol32_t *state)
# 1523 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1525 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1540 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateSobol64_t *state)
# 1541 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1543 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1560 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateSobol64_t *state)
# 1561 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1563 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1578 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_uniform(curandStateScrambledSobol64_t *state)
# 1579 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1581 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1598 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_uniform_double(curandStateScrambledSobol64_t *state)
# 1599 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1601 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1603 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float2 _curand_box_muller(unsigned x, unsigned y)
# 1604 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)y;
# 1619 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1621 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float2 curand_box_muller_mrg(curandStateMRG32k3a_t *state)
# 1622 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1638 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1641 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double2 _curand_box_muller_double(unsigned x0, unsigned x1, unsigned
# 1642 "/usr/local/cuda-5.0//include/curand_kernel.h"
y0, unsigned y1)
# 1643 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x0;(void)x1;(void)y0;(void)y1;
# 1663 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1666 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double2 curand_box_muller_mrg_double(curandStateMRG32k3a_t *state)
# 1667 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1683 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1685 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class R> __attribute__((unused)) static inline float2
# 1686 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_box_muller(R *state)
# 1687 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1693 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1695 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class R> __attribute__((unused)) static inline double2
# 1696 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_box_muller_double(R *state)
# 1697 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1705 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1707 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float _curand_normal_icdf(unsigned x)
# 1708 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1722 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1724 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float _curand_normal_icdf(unsigned long long x)
# 1725 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1740 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1742 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double _curand_normal_icdf_double(unsigned x)
# 1743 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1757 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1759 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double _curand_normal_icdf_double(unsigned long long x)
# 1760 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;
# 1775 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1794 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateXORWOW_t *state)
# 1795 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1807 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1825 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateMRG32k3a_t *state)
# 1826 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1835 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1852 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float2 curand_normal2(curandStateXORWOW_t *state)
# 1853 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1855 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1872 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float2 curand_normal2(curandStateMRG32k3a_t *state)
# 1873 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1875 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1891 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateMtgp32_t *state)
# 1892 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1894 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1909 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateSobol32_t *state)
# 1910 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1912 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1928 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateScrambledSobol32_t *state)
# 1929 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1931 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1947 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateSobol64_t *state)
# 1948 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1950 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1966 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_normal(curandStateScrambledSobol64_t *state)
# 1967 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 1969 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 1987 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateXORWOW_t *state)
# 1988 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2002 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2019 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateMRG32k3a_t *state)
# 2020 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2029 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2046 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double2 curand_normal2_double(curandStateXORWOW_t *state)
# 2047 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2049 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2066 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double2 curand_normal2_double(curandStateMRG32k3a_t *state)
# 2067 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2069 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2085 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateMtgp32_t *state)
# 2086 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2088 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2104 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateSobol32_t *state)
# 2105 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2107 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2123 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateScrambledSobol32_t *state)
# 2124 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2126 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2142 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateSobol64_t *state)
# 2143 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2145 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2161 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_normal_double(curandStateScrambledSobol64_t *state)
# 2162 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;
# 2164 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2188 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateXORWOW_t *state, float mean, float stddev)
# 2189 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2201 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2221 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float2 curand_log_normal2(curandStateXORWOW_t *state, float mean, float stddev)
# 2222 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2227 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2249 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateMRG32k3a_t *state, float mean, float stddev)
# 2250 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2259 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2279 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float2 curand_log_normal2(curandStateMRG32k3a_t *state, float mean, float stddev)
# 2280 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2285 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2305 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateMtgp32_t *state, float mean, float stddev)
# 2306 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2308 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2328 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateSobol32_t *state, float mean, float stddev)
# 2329 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2331 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2350 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateScrambledSobol32_t *state, float mean, float stddev)
# 2351 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2353 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2373 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateSobol64_t *state, float mean, float stddev)
# 2374 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2376 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2396 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float curand_log_normal(curandStateScrambledSobol64_t *state, float mean, float stddev)
# 2397 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2399 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2421 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateXORWOW_t *state, double mean, double stddev)
# 2422 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2436 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2456 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double2 curand_log_normal2_double(curandStateXORWOW_t *state, double mean, double stddev)
# 2457 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2462 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2484 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateMRG32k3a_t *state, double mean, double stddev)
# 2485 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2494 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2514 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double2 curand_log_normal2_double(curandStateMRG32k3a_t *state, double mean, double stddev)
# 2515 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2520 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2540 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateMtgp32_t *state, double mean, double stddev)
# 2541 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2543 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2563 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateSobol32_t *state, double mean, double stddev)
# 2564 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2566 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2586 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateScrambledSobol32_t *state, double mean, double stddev)
# 2587 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2589 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2608 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateSobol64_t *state, double mean, double stddev)
# 2609 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2611 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2630 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double curand_log_normal_double(curandStateScrambledSobol64_t *state, double mean, double stddev)
# 2631 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)mean;(void)stddev;
# 2633 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2641 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline int __cr_isnan(double a)
# 2642 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2651 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2654 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline int __cr_isinf(double a)
# 2655 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2664 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2667 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double __cr_copysign(double a, double b)
# 2668 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2678 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2680 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double __cr_rint(double a)
# 2681 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2691 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2693 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __cr_rsqrt(float a)
# 2694 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2701 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2703 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __cr_exp(float a)
# 2704 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2712 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2714 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __cr_log(float a)
# 2715 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2723 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2725 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __cr_rcp(float a)
# 2726 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2733 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2736 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __cr_pgammainc(float a, float x)
# 2737 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;(void)x;
# 2767 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2770 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline float __cr_pgammaincinv(float a, float y)
# 2771 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;(void)y;
# 2799 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2801 "/usr/local/cuda-5.0//include/curand_kernel.h"
static double __cr_lgamma_table[9];
# 2812 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double __cr_lgamma_integer(int a)
# 2813 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2856 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 2858 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline double __cr_lgamma(double a)
# 2859 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)a;
# 2997 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3000 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3002 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_poisson_knuth(T *state, float lambda)
# 3003 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3011 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3013 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3015 "/usr/local/cuda-5.0//include/curand_kernel.h"
_curand_M2_double(T x, curandDistributionM2Shift_t distributionM2)
# 3016 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)distributionM2;
# 3022 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3025 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class STATE> __attribute__((unused)) static inline unsigned
# 3026 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_M2_double(STATE *state, curandDistributionM2Shift_t distributionM2)
# 3027 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)distributionM2;
# 3029 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3031 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3032 "/usr/local/cuda-5.0//include/curand_kernel.h"
_curand_binary_search_double(T x, curandDistributionShift_t distribution)
# 3033 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)distribution;
# 3046 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3048 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class STATE> __attribute__((unused)) static inline unsigned
# 3049 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_binary_search_double(STATE *state, curandDistributionShift_t distribution)
# 3050 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)distribution;
# 3052 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3056 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3058 "/usr/local/cuda-5.0//include/curand_kernel.h"
_curand_poisson_ITR_double(T x, double lambda)
# 3059 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)lambda;
# 3081 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3083 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3085 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_poisson_gammainc(T state, float lambda) {int volatile ___ = 1;(void)state;(void)lambda;
# 3100 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3105 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3106 "/usr/local/cuda-5.0//include/curand_kernel.h"
_curand_poisson(T x, double lambda)
# 3107 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)lambda;
# 3111 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3113 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3114 "/usr/local/cuda-5.0//include/curand_kernel.h"
_curand_poisson_from_normal(T x, double lambda)
# 3115 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)x;(void)lambda;
# 3117 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3119 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class STATE> __attribute__((unused)) static inline unsigned
# 3120 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand_poisson_from_normal(STATE state, double lambda)
# 3121 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3123 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3125 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class T> __attribute__((unused)) static inline unsigned
# 3126 "/usr/local/cuda-5.0//include/curand_kernel.h"
_curand_discrete(T x, curandDiscreteDistribution_t discrete_distribution) {int volatile ___ = 1;(void)x;(void)discrete_distribution;
# 3131 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3134 "/usr/local/cuda-5.0//include/curand_kernel.h"
template< class STATE> __attribute__((unused)) static inline unsigned
# 3135 "/usr/local/cuda-5.0//include/curand_kernel.h"
curand__discrete(STATE state, curandDiscreteDistribution_t discrete_distribution) {int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3140 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3156 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateXORWOW_t *state, double lambda)
# 3157 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3163 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3178 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateMRG32k3a_t *state, double lambda)
# 3179 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3185 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3199 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateMtgp32_t *state, double lambda)
# 3200 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3202 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3217 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateSobol32_t *state, double lambda)
# 3218 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3220 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3234 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateScrambledSobol32_t *state, double lambda)
# 3235 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3237 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3251 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateSobol64_t *state, double lambda)
# 3252 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3254 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3268 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_poisson(curandStateScrambledSobol64_t *state, double lambda)
# 3269 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)lambda;
# 3271 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3285 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateXORWOW_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3286 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3288 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3302 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateMRG32k3a_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3303 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3305 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3319 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateMtgp32_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3320 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3322 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3336 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateSobol32_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3337 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3339 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3353 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateScrambledSobol32_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3354 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3356 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3370 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateSobol64_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3371 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3373 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3387 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static inline unsigned curand_discrete(curandStateScrambledSobol64_t *state, curandDiscreteDistribution_t discrete_distribution)
# 3388 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)state;(void)discrete_distribution;
# 3390 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3392 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static unsigned *__get_precalculated_matrix(int n)
# 3393 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;
# 3401 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3403 "/usr/local/cuda-5.0//include/curand_kernel.h"
static unsigned *__get_precalculated_matrix_host(int n)
# 3404 "/usr/local/cuda-5.0//include/curand_kernel.h"
{
# 3405 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 1) {
# 3406 "/usr/local/cuda-5.0//include/curand_kernel.h"
return (precalc_xorwow_matrix_host)[n];
# 3407 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3408 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 3) {
# 3409 "/usr/local/cuda-5.0//include/curand_kernel.h"
return (precalc_xorwow_offset_matrix_host)[n];
# 3410 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3411 "/usr/local/cuda-5.0//include/curand_kernel.h"
return (precalc_xorwow_matrix_host)[n];
# 3412 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3414 "/usr/local/cuda-5.0//include/curand_kernel.h"
__attribute__((unused)) static double *__get_mrg32k3a_matrix(int n)
# 3415 "/usr/local/cuda-5.0//include/curand_kernel.h"
{int volatile ___ = 1;(void)n;
# 3435 "/usr/local/cuda-5.0//include/curand_kernel.h"
::exit(___);}
# 3437 "/usr/local/cuda-5.0//include/curand_kernel.h"
static double *__get_mrg32k3a_matrix_host(int n)
# 3438 "/usr/local/cuda-5.0//include/curand_kernel.h"
{
# 3439 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 1) {
# 3440 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM1Host)[n])[0];
# 3441 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3442 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 3) {
# 3443 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM2Host)[n])[0];
# 3444 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3445 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 5) {
# 3446 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM1SubSeqHost)[n])[0];
# 3447 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3448 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 7) {
# 3449 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM2SubSeqHost)[n])[0];
# 3450 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3451 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 9) {
# 3452 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM1SeqHost)[n])[0];
# 3453 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3454 "/usr/local/cuda-5.0//include/curand_kernel.h"
if (n == 11) {
# 3455 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM2SeqHost)[n])[0];
# 3456 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3457 "/usr/local/cuda-5.0//include/curand_kernel.h"
return ((mrg32k3aM1Host)[n])[0];
# 3458 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 3460 "/usr/local/cuda-5.0//include/curand_kernel.h"
static double *__get__cr_lgamma_table_host() {
# 3461 "/usr/local/cuda-5.0//include/curand_kernel.h"
return __cr_lgamma_table;
# 3462 "/usr/local/cuda-5.0//include/curand_kernel.h"
}
# 24 "realtype.h"
typedef float real;
# 29 "MonteCarlo_common.h"
typedef
# 23 "MonteCarlo_common.h"
struct {
# 24 "MonteCarlo_common.h"
float S;
# 25 "MonteCarlo_common.h"
float X;
# 26 "MonteCarlo_common.h"
float T;
# 27 "MonteCarlo_common.h"
float R;
# 28 "MonteCarlo_common.h"
float V;
# 29 "MonteCarlo_common.h"
} TOptionData;
# 38 "MonteCarlo_common.h"
typedef
# 35 "MonteCarlo_common.h"
struct {
# 36 "MonteCarlo_common.h"
float Expected;
# 37 "MonteCarlo_common.h"
float Confidence;
# 38 "MonteCarlo_common.h"
} TOptionValue;
# 45 "MonteCarlo_common.h"
typedef
# 42 "MonteCarlo_common.h"
struct {
# 43 "MonteCarlo_common.h"
real Expected;
# 44 "MonteCarlo_common.h"
real Confidence;
# 45 "MonteCarlo_common.h"
} __TOptionValue;
# 78 "MonteCarlo_common.h"
typedef
# 50 "MonteCarlo_common.h"
struct {
# 52 "MonteCarlo_common.h"
int device;
# 54 "MonteCarlo_common.h"
int optionCount;
# 57 "MonteCarlo_common.h"
TOptionData *optionData;
# 58 "MonteCarlo_common.h"
TOptionValue *callValue;
# 61 "MonteCarlo_common.h"
__TOptionValue *h_CallValue;
# 65 "MonteCarlo_common.h"
void *d_Buffer;
# 68 "MonteCarlo_common.h"
curandState *rngStates;
# 71 "MonteCarlo_common.h"
int pathN;
# 74 "MonteCarlo_common.h"
float time;
# 77 "MonteCarlo_common.h"
unsigned long long seed;
# 78 "MonteCarlo_common.h"
} TOptionPlan;
# 81 "MonteCarlo_common.h"
extern "C" void initMonteCarloGPU(TOptionPlan * );
# 82 "MonteCarlo_common.h"
extern "C" void MonteCarloGPU(TOptionPlan * , cudaStream_t = 0);
# 83 "MonteCarlo_common.h"
extern "C" void closeMonteCarloGPU(TOptionPlan * );
# 16 "MonteCarlo_reduction.cuh"
template< class T, unsigned blockSize> __attribute__((unused)) void
# 17 "MonteCarlo_reduction.cuh"
sumReduceSharedMem(volatile T *sum, volatile T *sum2, int tid)
# 18 "MonteCarlo_reduction.cuh"
{int volatile ___ = 1;(void)sum;(void)sum2;(void)tid;
# 91 "MonteCarlo_reduction.cuh"
::exit(___);}
# 101 "MonteCarlo_reduction.cuh"
template< class T, int SUM_N, int blockSize> __attribute__((unused)) void
# 102 "MonteCarlo_reduction.cuh"
sumReduce(T *sum, T *sum2)
# 103 "MonteCarlo_reduction.cuh"
{int volatile ___ = 1;(void)sum;(void)sum2;
# 126 "MonteCarlo_reduction.cuh"
::exit(___);}
# 41 "MonteCarlo_kernel.cu"
typedef
# 36 "MonteCarlo_kernel.cu"
struct {
# 37 "MonteCarlo_kernel.cu"
real S;
# 38 "MonteCarlo_kernel.cu"
real X;
# 39 "MonteCarlo_kernel.cu"
real MuByT;
# 40 "MonteCarlo_kernel.cu"
real VBySqrtT;
# 41 "MonteCarlo_kernel.cu"
} __TOptionData;
# 42 "MonteCarlo_kernel.cu"
static __TOptionData d_OptionData[512];
# 44 "MonteCarlo_kernel.cu"
static __TOptionValue d_CallValue[512];
# 49 "MonteCarlo_kernel.cu"
__attribute__((unused)) inline float endCallValue(float S, float X, float r, float MuByT, float VBySqrtT)
# 50 "MonteCarlo_kernel.cu"
{int volatile ___ = 1;(void)S;(void)X;(void)r;(void)MuByT;(void)VBySqrtT;
# 53 "MonteCarlo_kernel.cu"
::exit(___);}
# 62 "MonteCarlo_kernel.cu"
static void MonteCarloOneBlockPerOption(curandState *
# 63 "MonteCarlo_kernel.cu"
rngStates, int
# 64 "MonteCarlo_kernel.cu"
pathN) ;
# 115 "MonteCarlo_kernel.cu"
static void rngSetupStates(curandState *
# 116 "MonteCarlo_kernel.cu"
rngState, unsigned long long
# 117 "MonteCarlo_kernel.cu"
seed, unsigned long long
# 118 "MonteCarlo_kernel.cu"
offset) ;
# 134 "MonteCarlo_kernel.cu"
extern "C" void initMonteCarloGPU(TOptionPlan *plan)
# 135 "MonteCarlo_kernel.cu"
{
# 137 "MonteCarlo_kernel.cu"
check(cudaMallocHost(&(plan->h_CallValue), sizeof(__TOptionValue) * (512)), "cudaMallocHost(&plan->h_CallValue, sizeof(__TOptionValue)*MAX_OPTIONS)", "MonteCarlo_kernel.cu", 137);
# 139 "MonteCarlo_kernel.cu"
check(cudaMalloc((void **)(&(plan->rngStates)), ((plan->optionCount) * 256) * sizeof(curandState)), "cudaMalloc((void **) &plan->rngStates, plan->optionCount * THREAD_N * sizeof(curandState))", "MonteCarlo_kernel.cu", 140);
# 143 "MonteCarlo_kernel.cu"
unsigned long long offset = ((plan->device) * (plan->pathN));
# 144 "MonteCarlo_kernel.cu"
(cudaConfigureCall(plan->optionCount, 256)) ? ((void)0) : rngSetupStates(plan->rngStates, plan->seed, offset);
# 145 "MonteCarlo_kernel.cu"
__getLastCudaError("rngSetupStates kernel failed.\n", "MonteCarlo_kernel.cu", 145);
# 146 "MonteCarlo_kernel.cu"
}
# 149 "MonteCarlo_kernel.cu"
extern "C" void closeMonteCarloGPU(TOptionPlan *plan)
# 150 "MonteCarlo_kernel.cu"
{
# 151 "MonteCarlo_kernel.cu"
for (int i = 0; i < (plan->optionCount); i++)
# 152 "MonteCarlo_kernel.cu"
{
# 153 "MonteCarlo_kernel.cu"
const double RT = ((((plan->optionData)[i]).R) * (((plan->optionData)[i]).T));
# 154 "MonteCarlo_kernel.cu"
const double sum = (((plan->h_CallValue)[i]).Expected);
# 155 "MonteCarlo_kernel.cu"
const double sum2 = (((plan->h_CallValue)[i]).Confidence);
# 156 "MonteCarlo_kernel.cu"
const double pathN = (plan->pathN);
# 158 "MonteCarlo_kernel.cu"
(((plan->callValue)[i]).Expected) = ((float)((exp(-RT) * sum) / pathN));
# 160 "MonteCarlo_kernel.cu"
double stdDev = sqrt(((pathN * sum2) - (sum * sum)) / (pathN * (pathN - (1))));
# 162 "MonteCarlo_kernel.cu"
(((plan->callValue)[i]).Confidence) = ((float)(((exp(-RT) * (1.959999999999999964)) * stdDev) / sqrt(pathN)));
# 163 "MonteCarlo_kernel.cu"
}
# 165 "MonteCarlo_kernel.cu"
check(cudaFree(plan->rngStates), "cudaFree(plan->rngStates)", "MonteCarlo_kernel.cu", 165);
# 166 "MonteCarlo_kernel.cu"
check(cudaFreeHost(plan->h_CallValue), "cudaFreeHost(plan->h_CallValue)", "MonteCarlo_kernel.cu", 166);
# 167 "MonteCarlo_kernel.cu"
}
# 170 "MonteCarlo_kernel.cu"
extern "C" void MonteCarloGPU(TOptionPlan *plan, cudaStream_t stream)
# 171 "MonteCarlo_kernel.cu"
{
# 172 "MonteCarlo_kernel.cu"
;
# 173 "MonteCarlo_kernel.cu"
__TOptionData h_OptionData[512];
# 174 "MonteCarlo_kernel.cu"
__TOptionValue *h_CallValue = (plan->h_CallValue);
# 176 "MonteCarlo_kernel.cu"
if (((plan->optionCount) <= 0) || ((plan->optionCount) > 512))
# 177 "MonteCarlo_kernel.cu"
{
# 178 "MonteCarlo_kernel.cu"
printf("MonteCarloGPU(): bad option count.\n");
# 179 "MonteCarlo_kernel.cu"
return;
# 180 "MonteCarlo_kernel.cu"
}
# 182 "MonteCarlo_kernel.cu"
for (int i = 0; i < (plan->optionCount); i++)
# 183 "MonteCarlo_kernel.cu"
{
# 184 "MonteCarlo_kernel.cu"
const double T = (((plan->optionData)[i]).T);
# 185 "MonteCarlo_kernel.cu"
const double R = (((plan->optionData)[i]).R);
# 186 "MonteCarlo_kernel.cu"
const double V = (((plan->optionData)[i]).V);
# 187 "MonteCarlo_kernel.cu"
const double MuByT = ((R - (((0.5) * V) * V)) * T);
# 188 "MonteCarlo_kernel.cu"
const double VBySqrtT = (V * sqrt(T));
# 189 "MonteCarlo_kernel.cu"
(((h_OptionData)[i]).S) = ((real)(((plan->optionData)[i]).S));
# 190 "MonteCarlo_kernel.cu"
(((h_OptionData)[i]).X) = ((real)(((plan->optionData)[i]).X));
# 191 "MonteCarlo_kernel.cu"
(((h_OptionData)[i]).MuByT) = ((real)MuByT);
# 192 "MonteCarlo_kernel.cu"
(((h_OptionData)[i]).VBySqrtT) = ((real)VBySqrtT);
# 193 "MonteCarlo_kernel.cu"
}
# 195 "MonteCarlo_kernel.cu"
check(cudaMemcpyToSymbolAsync(d_OptionData, h_OptionData, (plan->optionCount) * sizeof(__TOptionData), 0, cudaMemcpyHostToDevice, stream), "cudaMemcpyToSymbolAsync( d_OptionData, h_OptionData, plan->optionCount * sizeof(__TOptionData), 0, cudaMemcpyHostToDevice, strea" "m )", "MonteCarlo_kernel.cu", 200);
# 202 "MonteCarlo_kernel.cu"
;
# 203 "MonteCarlo_kernel.cu"
;
# 204 "MonteCarlo_kernel.cu"
(cudaConfigureCall(plan->optionCount, 256, 0, stream)) ? ((void)0) : MonteCarloOneBlockPerOption(plan->rngStates, plan->pathN);
# 208 "MonteCarlo_kernel.cu"
;
# 209 "MonteCarlo_kernel.cu"
;
# 210 "MonteCarlo_kernel.cu"
__getLastCudaError("MonteCarloOneBlockPerOption() execution failed\n", "MonteCarlo_kernel.cu", 210);
# 213 "MonteCarlo_kernel.cu"
check(cudaMemcpyFromSymbolAsync(h_CallValue, d_CallValue, (plan->optionCount) * sizeof(__TOptionValue), (size_t)0, cudaMemcpyDeviceToHost, stream), "cudaMemcpyFromSymbolAsync( h_CallValue, d_CallValue, plan->optionCount * sizeof(__TOptionValue), (size_t)0, cudaMemcpyDeviceToHo" "st, stream )", "MonteCarlo_kernel.cu", 217);
# 218 "MonteCarlo_kernel.cu"
;
# 222 "MonteCarlo_kernel.cu"
}
# 1 "tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c"
# 1 "tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c"
# 1 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c" 1 3

# 1 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 3
template <typename T>
static inline void *__cudaAddressOf(T &val)
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}
# 121 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 3
extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *);
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";

}




extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda-5.0//include/common_functions.h" 1 3
# 162 "/usr/local/cuda-5.0//include/common_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/math_functions.h" 1 3
# 8226 "/usr/local/cuda-5.0//include/math_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/math_constants.h" 1 3
# 8227 "/usr/local/cuda-5.0//include/math_functions.h" 2 3
# 10909 "/usr/local/cuda-5.0//include/math_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/crt/func_macro.h" 1 3
# 10910 "/usr/local/cuda-5.0//include/math_functions.h" 2 3
# 12662 "/usr/local/cuda-5.0//include/math_functions.h" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 12980 "/usr/local/cuda-5.0//include/math_functions.h" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 13152 "/usr/local/cuda-5.0//include/math_functions.h" 3
# 1 "/usr/local/cuda-5.0//include/math_functions_dbl_ptx3.h" 1 3
# 13153 "/usr/local/cuda-5.0//include/math_functions.h" 2 3
# 163 "/usr/local/cuda-5.0//include/common_functions.h" 2 3
# 215 "/usr/local/cuda-5.0//include/crt/host_runtime.h" 2 3







#pragma pack()
# 3 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c" 2 3
# 1 "/tmp/tmpxft_00007afa_00000000-1_MonteCarlo_kernel.fatbin.c" 1 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000030f30,0x0000005801010002,0x000000000001cba0\n"
".quad 0x0000000000000000,0x0000001400010006,0x0000001400000040,0x0000000000000015\n"
".quad 0x0000000000000000,0x0000000000000000,0x72614365746e6f4d,0x656e72656b5f6f6c\n"
".quad 0x0000000075632e6c,0x33010102464c457f,0x0000000000000006,0x0000000100be0002\n"
".quad 0x0000000000000000,0x000000000001caf8,0x000000000001c638,0x0038004000140514\n"
".quad 0x0001001300400003,0x7472747368732e00,0x747274732e006261,0x746d79732e006261\n"
".quad 0x747865742e006261,0x6e6f4d37325a5f2e,0x4f6f6c7261436574,0x506b636f6c42656e\n"
".quad 0x6e6f6974704f7265,0x6e61727563373150,0x4f58657461745364,0x6e2e0069574f5752\n"
".quad 0x5f2e6f666e692e76,0x65746e6f4d37325a,0x656e4f6f6c726143,0x7265506b636f6c42\n"
".quad 0x31506e6f6974704f,0x53646e6172756337,0x57524f5865746174,0x2e766e2e0069574f\n"
".quad 0x5f2e646572616873,0x65746e6f4d37325a,0x656e4f6f6c726143,0x7265506b636f6c42\n"
".quad 0x31506e6f6974704f,0x53646e6172756337,0x57524f5865746174,0x2e766e2e0069574f\n"
".quad 0x746e6174736e6f63,0x4d37325a5f2e3631,0x6c72614365746e6f,0x636f6c42656e4f6f\n"
".quad 0x6974704f7265506b,0x7275633731506e6f,0x6574617453646e61,0x0069574f57524f58\n"
".quad 0x6f666e692e766e2e,0x6e6f632e766e2e00,0x5f2e30746e617473,0x65746e6f4d37325a\n"
".quad 0x656e4f6f6c726143,0x7265506b636f6c42,0x31506e6f6974704f,0x53646e6172756337\n"
".quad 0x57524f5865746174,0x7865742e0069574f,0x6e7234315a5f2e74,0x7453707574655367\n"
".quad 0x6337315073657461,0x617453646e617275,0x574f57524f586574,0x692e766e2e007979\n"
".quad 0x34315a5f2e6f666e,0x7075746553676e72,0x3150736574617453,0x53646e6172756337\n"
".quad 0x57524f5865746174,0x766e2e007979574f,0x2e6465726168732e,0x53676e7234315a5f\n"
".quad 0x7461745370757465,0x7275633731507365,0x6574617453646e61,0x7979574f57524f58\n"
".quad 0x6e6f632e766e2e00,0x2e3631746e617473,0x53676e7234315a5f,0x7461745370757465\n"
".quad 0x7275633731507365,0x6574617453646e61,0x7979574f57524f58,0x6e6f632e766e2e00\n"
".quad 0x5f2e30746e617473,0x6553676e7234315a,0x6574617453707574,0x6172756337315073\n"
".quad 0x586574617453646e,0x007979574f57524f,0x736e6f632e766e2e,0x6e2e0032746e6174\n"
".quad 0x6c61626f6c672e76,0x6e6f632e766e2e00,0x003431746e617473,0x2e766e2e6c65722e\n"
".quad 0x746e6174736e6f63,0x672e766e2e003431,0x6e692e6c61626f6c,0x7368732e00007469\n"
".quad 0x732e006261747274,0x732e006261747274,0x5a5f006261746d79,0x4365746e6f4d3732\n"
".quad 0x42656e4f6f6c7261,0x4f7265506b636f6c,0x3731506e6f697470,0x7453646e61727563\n"
".quad 0x4f57524f58657461,0x747865742e006957,0x6e6f4d37325a5f2e,0x4f6f6c7261436574\n"
".quad 0x506b636f6c42656e,0x6e6f6974704f7265,0x6e61727563373150,0x4f58657461745364\n"
".quad 0x6e2e0069574f5752,0x5f2e6f666e692e76,0x65746e6f4d37325a,0x656e4f6f6c726143\n"
".quad 0x7265506b636f6c42,0x31506e6f6974704f,0x53646e6172756337,0x57524f5865746174\n"
".quad 0x2e766e2e0069574f,0x5f2e646572616873,0x65746e6f4d37325a,0x656e4f6f6c726143\n"
".quad 0x7265506b636f6c42,0x31506e6f6974704f,0x53646e6172756337,0x57524f5865746174\n"
".quad 0x2e766e2e0069574f,0x746e6174736e6f63,0x4d37325a5f2e3631,0x6c72614365746e6f\n"
".quad 0x636f6c42656e4f6f,0x6974704f7265506b,0x7275633731506e6f,0x6574617453646e61\n"
".quad 0x0069574f57524f58,0x6e2e0074736e6f63,0x5f006f666e692e76,0x6d735f616475635f\n"
".quad 0x5f747271735f3032,0x5f003233665f6e72,0x6d735f616475635f,0x5f747271735f3032\n"
".quad 0x735f3233665f6e72,0x0068746170776f6c,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f36383335365f,0x6f635f6e6f6e5f34,0x75535f735f74736e,0x5f5f006c6c61436d\n"
".quad 0x636f6c5f61647563,0x365f7261765f6c61,0x5f34335f37383335,0x736e6f635f6e6f6e\n"
".quad 0x326d75535f735f74,0x766e2e006c6c6143,0x6e6174736e6f632e,0x4d37325a5f2e3074\n"
".quad 0x6c72614365746e6f,0x636f6c42656e4f6f,0x6974704f7265506b,0x7275633731506e6f\n"
".quad 0x6574617453646e61,0x0069574f57524f58,0x5f006d617261705f,0x6553676e7234315a\n"
".quad 0x6574617453707574,0x6172756337315073,0x586574617453646e,0x007979574f57524f\n"
".quad 0x5a5f2e747865742e,0x746553676e723431,0x7365746174537075,0x6e61727563373150\n"
".quad 0x4f58657461745364,0x2e007979574f5752,0x2e6f666e692e766e,0x53676e7234315a5f\n"
".quad 0x7461745370757465,0x7275633731507365,0x6574617453646e61,0x7979574f57524f58\n"
".quad 0x6168732e766e2e00,0x34315a5f2e646572,0x7075746553676e72,0x3150736574617453\n"
".quad 0x53646e6172756337,0x57524f5865746174,0x766e2e007979574f,0x6e6174736e6f632e\n"
".quad 0x34315a5f2e363174,0x7075746553676e72,0x3150736574617453,0x53646e6172756337\n"
".quad 0x57524f5865746174,0x766e2e007979574f,0x6e6174736e6f632e,0x7234315a5f2e3074\n"
".quad 0x537075746553676e,0x3731507365746174,0x7453646e61727563,0x4f57524f58657461\n"
".quad 0x2e766e2e00797957,0x746e6174736e6f63,0x6974704f5f640032,0x2e00617461446e6f\n"
".quad 0x61626f6c672e766e,0x6c6c61435f64006c,0x6e2e0065756c6156,0x6174736e6f632e76\n"
".quad 0x444124003431746e,0x5f64245353455244,0x756c61566c6c6143,0x6e2e6c65722e0065\n"
".quad 0x6174736e6f632e76,0x766e2e003431746e,0x2e6c61626f6c672e,0x6572700074696e69\n"
".quad 0x726f785f636c6163,0x7274616d5f776f77,0x5244444124007869,0x6365727024535345\n"
".quad 0x77726f785f636c61,0x697274616d5f776f,0x6c61636572700078,0x776f77726f785f63\n"
".quad 0x5f74657366666f5f,0x240078697274616d,0x2453534552444441,0x5f636c6163657270\n"
".quad 0x6f5f776f77726f78,0x616d5f7465736666,0x67726d0078697274,0x00314d61336b3233\n"
".quad 0x5353455244444124,0x336b323367726d24,0x3367726d00314d61,0x2400324d61336b32\n"
".quad 0x2453534552444441,0x61336b323367726d,0x323367726d00324d,0x627553314d61336b\n"
".quad 0x4444412400716553,0x67726d2453534552,0x53314d61336b3233,0x726d007165536275\n"
".quad 0x324d61336b323367,0x2400716553627553,0x2453534552444441,0x61336b323367726d\n"
".quad 0x716553627553324d,0x336b323367726d00,0x2400716553314d61,0x2453534552444441\n"
".quad 0x61336b323367726d,0x726d00716553314d,0x324d61336b323367,0x4444412400716553\n"
".quad 0x67726d2453534552,0x53324d61336b3233,0x5f72635f5f007165,0x745f616d6d61676c\n"
".quad 0x00000000656c6261,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x000e10020000001b,0x0000000000000000,0x0000000000000aa0,0x000e000300000050\n"
".quad 0x0000000000000000,0x0000000000000000,0x00120003000000c9,0x0000000000000000\n"
".quad 0x0000000000000000,0x000a000300000109,0x0000000000000000,0x0000000000000000\n"
".quad 0x000e00220000015c,0x0000000000000988,0x0000000000000060,0x000e002200000174\n"
".quad 0x00000000000009e8,0x00000000000000b8,0x000d0003000001f2,0x0000000000000000\n"
".quad 0x0000000000000000,0x000f10020000023c,0x0000000000000000,0x0000000000005eb8\n"
".quad 0x000f000300000265,0x0000000000000000,0x0000000000000000,0x000b0003000002fa\n"
".quad 0x0000000000000000,0x0000000000000000,0x0008000300000332,0x0000000000000000\n"
".quad 0x0000000000000000,0x0009000300000369,0x0000000000000000,0x0000000000000000\n"
".quad 0x0009000100000377,0x0000000000000000,0x0000000000002000,0x0011000300000384\n"
".quad 0x0000000000000000,0x0000000000000000,0x001100010000038f,0x0000000000000000\n"
".quad 0x0000000000001000,0x000c00030000039b,0x0000000000000000,0x0000000000000000\n"
".quad 0x00100003000003d2,0x0000000000000000,0x0000000000000000,0x00100001000003e2\n"
".quad 0x0000000000006780,0x0000000000006400,0x0010000100000417,0x000000000000cb80\n"
".quad 0x0000000000006400,0x001000010000045a,0x0000000000001f80,0x0000000000001200\n"
".quad 0x0010000100000479,0x0000000000004380,0x0000000000001200,0x0010000100000498\n"
".quad 0x0000000000000000,0x0000000000000fc0,0x00100001000004c3,0x0000000000000fc0\n"
".quad 0x0000000000000fc0,0x00100001000004ee,0x0000000000003180,0x0000000000001200\n"
".quad 0x0010000100000513,0x0000000000005580,0x0000000000001200,0x0009000100000538\n"
".quad 0x0000000000002000,0x0000000000000048,0x0000000800081204,0x0008110400001960\n"
".quad 0x0000196000000008,0x0000000600081204,0x0008110400000000,0x0000000000000006\n"
".quad 0x0000000500081204,0x0008110400000000,0x0000000000000005,0x0000000100081204\n"
".quad 0x0008110400000038,0x0000003800000001,0x0000000b00080a04,0x0018190300180020\n"
".quad 0x00000000000c1704,0x0021f00000100002,0x00000000000c1704,0x0021f00000080001\n"
".quad 0x00000000000c1704,0x0021f00000000000,0x00080d0400101b03,0x00000020002301a4\n"
".quad 0x0000000700080a04,0x000c1903000c0020,0x00000000000c1704,0x0011f00000080001\n"
".quad 0x00000000000c1704,0x0021f00000000000,0x00080d0400101b03,0x00000020002501bc\n"
".quad 0x0000000000000040,0x0000001900000002,0x0000000000000038,0x0000001800000002\n"
".quad 0x0000000000000030,0x0000001700000002,0x0000000000000028,0x0000001600000002\n"
".quad 0x0000000000000020,0x0000001500000002,0x0000000000000018,0x0000001400000002\n"
".quad 0x0000000000000010,0x0000001300000002,0x0000000000000008,0x0000001200000002\n"
".quad 0x0000000000000000,0x0000000f00000002,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x3fe62e42fefa39ef\n"
".quad 0x3ffcab0bfa2a2002,0x40096ca77c922cf9,0x401326643c4479c9,0x401a51273acf01ca\n"
".quad 0x40210ce1f32dcc30,0x4025358e82fcb70d,0x0080000030c90fdb,0x3b2063c33fb504f3\n"
".quad 0x3f3172183daaab50,0x4182bed5727fffff,0x000000009a7cab1b,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2800440400005de4,0x2c0000009403dc04,0x2c00000084001c04\n"
".quad 0x4800c000e0105d03,0x6000001700000007,0x2000400020f01ca3,0x6000c00010f3de03\n"
".quad 0x5001c000c000dc03,0x7000c0047c009c23,0x20ffc000c0001c43,0x2080c000c0201c03\n"
".quad 0x4801400080329c03,0x480040009002dc43,0xc8000000c0129c85,0x84000000a0a31ca5\n"
".quad 0x8400000000a21ca5,0x8400000090a39c85,0xc8000000d012dc85,0x8400000080a01c85\n"
".quad 0x8400000020a19ca5,0x8400000040a09ca5,0xc800000070131c85,0x2800000020015de4\n"
".quad 0xc800000040125c85,0xc800000060135c85,0x2800000014031de4,0x8400000060a11ca5\n"
".quad 0xc800000050139c85,0x2c00000084035c04,0x1400080000f21cc6,0x1a0ec003fcd1dc23\n"
".quad 0x280000003003dde4,0x2800000024035de4,0xc000000040125e85,0xc800000090135c85\n"
".quad 0xc800000080115c85,0x2800000028015de4,0x2800000020029de4,0x280000002c021de4\n"
".quad 0x280000001402dde4,0x1c80000038215c04,0x2800000020031de4,0xc8000000a012dc85\n"
".quad 0x1c00000014115c04,0xc8000000b0131c85,0x280000003c021de4,0x1c0000003812dc04\n"
".quad 0x1d00000038231c04,0x1d80000038239c04,0x1c00000030135c04,0x1c00000038139c04\n"
".quad 0x40000011000001e7,0x2c00000084031c04,0xc800000040131c85,0x1b0e4000a0c1dc23\n"
".quad 0x28000000fc035de4,0x28000000fc039de4,0x28000000fc015de4,0x28000000fc02dde4\n"
".quad 0x6000000e00000007,0x4000000dc00001e7,0x190ec0000441dc23,0x2800000000039de4\n"
".quad 0x28000000fc011de4,0x6000000ae0000007,0x40000000000001f4,0x5800c00008911c03\n"
".quad 0x6000c00010301c03,0x6000000840000007,0x6800000024411c83,0x5800c00008625c03\n"
".quad 0x680000000c001c83,0x6800000018919c83,0x6800000010001c83,0x6000c00004411c03\n"
".quad 0x6000c00004625c03,0x6800000010035c83,0x6800000018901c83,0x4800000034819c03\n"
".quad 0x6800000034001c83,0x6000c00010d11c03,0x4800d61f14619c03,0xc800000010135c85\n"
".quad 0x6800000010025c83,0x1800000019201c04,0x18bc000000019de2,0x08002c3e28811c02\n"
".quad 0xc800000020125c85,0x300ccbe000001c00,0x4800000010911c03,0x18c1243f6c019de2\n"
".quad 0x208edfe00001dc00,0x1800000011211c04,0x22000000fc01dc00,0x300c400004411c00\n"
".quad 0xc800000030111c85,0x40000000c00001e7,0x208ec0200001dc80,0x5800d2e000011c00\n"
".quad 0x2000000000401c04,0xc80000000c001c00,0x5000f07000000000,0x30fcc5c860001c12\n"
".quad 0x188e40001401dc03,0x5800d2e000011c00,0x18f1312f80035de2,0x200000000043dc04\n"
".quad 0x3a01fffffcf01c02,0x5800c0005cf3dc03,0x38fe000000001c42,0x220e40002403dc00\n"
".quad 0x5800cfc000000400,0x5000cfe000011c00,0x5000efe000039c00,0x208ec0200045dc80\n"
".quad 0x5800d2e000e01c00,0x5800d2e000410800,0x2004000038001c04,0xc800000010411c00\n"
".quad 0x5800000010001c00,0x5a00000000e11c00,0x1bfffffda4001de2,0x5000000010e19c00\n"
".quad 0x2000fffe04001c04,0x5800000018625c00,0x4800000000f01c03,0x301a400034935c00\n"
".quad 0x3012800044d35c00,0x5800000024d25c00,0x2012c00007f35c04,0x3008000018911c00\n"
".quad 0x4800000034001c03,0x5000000038411c00,0x1800000001201e04,0x3008400054001c10\n"
".quad 0x08002c3e28821c02,0x5800f00000011c00,0x50000014e0010007,0xc000000030101e85\n"
".quad 0xc000000010135e85,0x2800000008019de4,0x280000001c025de4,0x280000000c01dde4\n"
".quad 0x6000000000039c00,0x2800000034009de4,0xc000000020135e85,0xc800000004e01c00\n"
".quad 0xc800000000e3dc00,0x5800000010039c00,0x5800000010f01c00,0x280000003400dde4\n"
".quad 0x1800000004011df2,0xc0000000a0135c85,0xc0000000b013dc85,0x4800c00400c31c03\n"
".quad 0x301a000038f35c00,0xc000000090139c85,0x30fee2a8ecd35c02,0x208ef0bf00d1dc00\n"
".quad 0x5800cfc000d34000,0x6000000034035c20,0xc800000008d35c00,0x5800000034d34000\n"
".quad 0x188e4000a0c1dc23,0x301c000034a35d00,0x3a1a0000fcd39c00,0x5000000038535c00\n"
".quad 0x3016000038e39c00,0x2800000034015de4,0x280000003802dde4,0x4003fff2400001e7\n"
".quad 0x4000000000001df4,0xc000000040115e85,0xc00000005013dc85,0x6000c0000852de03\n"
".quad 0x4800400020531c03,0x1c8000003c215c04,0xc900000000b35c85,0xc900001000b39c85\n"
".quad 0x188ec00400c1dc23,0xc800000040131c85,0x1d0000003c235c04,0x1d8000003c239c04\n"
".quad 0x1c0000003c12dc04,0x1c00000014115c04,0x1c00000034135c04,0x1c00000038139c04\n"
".quad 0x4003ffef400001e7,0x1c0000002c831e14,0xc0000000c0129ea5,0x2818c02020531c03\n"
".quad 0xc000000080115e85,0x6000000c80000007,0x2818c02040d3dc03,0xc000000070131e85\n"
".quad 0x9400000080a01c85,0x9400000040a09ca5,0xc000000060135e85,0x9400000020a19ca5\n"
".quad 0x9400000000a21ca5,0x2c00000084009c04,0x281ec02060e01c03,0x9400000060a11ca5\n"
".quad 0x1a0ec003fc21dc23,0x94000000a0a31ca5,0x9400000090a01c85,0x4000000aa00001e7\n"
".quad 0x2c0000008400dc04,0x6000c00008301e03,0x4800c01000009c03,0xd000000000000007\n"
".quad 0x6000000160000007,0x50ee0000ffffdc04,0x1a0ec001fc31dc23,0x40000000000001f4\n"
".quad 0xc100000000015c85,0xc100000800011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000800211c85,0x5000000010511c00,0xc900000000211c95\n"
".quad 0x6000000160000007,0x50ee0000ffffdc04,0x1a0ec000fc31dc23,0x40000000000001f4\n"
".quad 0xc100000000015c85,0xc100000400011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000400211c85,0x5000000010511c00,0xc900000000211c95\n"
".quad 0x6000000660000007,0x50ee0000ffffdc04,0x1a0ec0007c31dc23,0x40000000000001f4\n"
".quad 0xc100000000015c85,0xc100000200011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000200211c85,0x500000001051dc00,0xc90000000021dc85\n"
".quad 0xc100000000015c85,0xc100000100011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000100211c85,0x500000001051dc00,0xc90000000021dc85\n"
".quad 0xc100000000015c85,0xc100000080011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000080211c85,0x500000001051dc00,0xc90000000021dc85\n"
".quad 0xc100000000015c85,0xc100000040011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000040211c85,0x500000001051dc00,0xc90000000021dc85\n"
".quad 0xc100000000015c85,0xc100000020011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000020211c85,0x500000001051dc00,0xc90000000021dc85\n"
".quad 0xc100000000015c85,0xc100000010011c85,0x5000000010519c00,0xc900000000019c85\n"
".quad 0xc100000000215c85,0xc100000010211c85,0x5000000010511c00,0xc900000000211c95\n"
".quad 0x188e0000fc31dc23,0x4800c0040030dc03,0x4800c01000001c03,0x4800c01000209c03\n"
".quad 0x4003fff5c00001e7,0x2c00000084001c14,0x1a8e0000fc01dc23,0x40000001200081e7\n"
".quad 0x2c00000094002004,0x280078000000a1e4,0x5000c0002000e0e3,0x2005c000200120a3\n"
".quad 0xc100001003f0a085,0xc100000003f02085,0x4800780010316043,0x940000001040a085\n"
".quad 0x9400000000402085,0x8000000000001de7,0x0bcc000000401c02,0x198e40006401dc03\n"
".quad 0x40000000400001e7,0x5000000100010007,0x40000000c0001de7,0xc800000014401c00\n"
".quad 0x5800000010019c40,0x5800cfc000035c40,0x1080000019225d04,0x3008000018901c00\n"
".quad 0x300c000034011c00,0x9000000000001de7,0x39fffffffc401c02,0x1a8e0000fc01dc23\n"
".quad 0x40000002600021e7,0x288e0000fc41dc00,0x40000000400021e7,0x19fffffffc011de2\n"
".quad 0x40000001e0001de7,0x1080000011201c44,0x298edfe00001dc00,0x40000000400001e7\n"
".quad 0x5000cfe000411c20,0x4000000140001de7,0x290edfe00001dc00,0x40000001000081e7\n"
".quad 0x307ed7e000402000,0xc800000014012000,0x580000000041a040,0x5800cfc000412040\n"
".quad 0x1080000019226104,0x3000000018902000,0x300c000010002000,0x5800cbe000012040\n"
".quad 0x9000000000001de7,0x2800440400005de4,0x1aab49ad24001de2,0x1bdf73bf7400dde2\n"
".quad 0x4800c06580105d03,0x68004000a0001c83,0x68004000b030dc83,0x28000000fc02dde4\n"
".quad 0x15060afb54031c02,0x6000001c80000007,0x20ff400004009c43,0x2c00000094001c04\n"
".quad 0x2084400007f35c03,0x1669f2ac6c31dc02,0x2c00000084009c04,0x20ff40001430dc43\n"
".quad 0x2004400020001ca3,0xc8000000d011dc85,0x2086400017f19c03,0x5001c000c000dc03\n"
".quad 0x7000c0047c025c23,0x190e0000fc01dc23,0x20ffc000c0009c43,0xc8000000b0125c85\n"
".quad 0xc8000000a0101c85,0x2084c000c0909c03,0x4801400080311c03,0x480000001cc0dc03\n"
".quad 0xc8000000c0101c85,0x4800400090215c43,0x0c7c48eed4721c02,0x080193c324339c02\n"
".quad 0x48000000fc625c43,0x0c1d6f3454c09c02,0x2800000020029de4,0x3856695794c19c82\n"
".quad 0x280000000803dde4,0x48000000fcd0dc43,0x0c0160fc64c31c02,0x9400000000439ca5\n"
".quad 0x9400000030429c85,0xc8000064f0119c85,0x48000000fcd35c43,0x28000000fc03dde4\n"
".quad 0x3815244ccc729c82,0x280000002001dde4,0x280000003002dde4,0x2800000030039de4\n"
".quad 0x9400000020419c85,0x9400000040429c85,0xc800006510129c85,0xc8000064e0109c85\n"
".quad 0xc800006500121c85,0x4800c000e012dc03,0x9400000050439c85,0xc800006520131c85\n"
".quad 0x4800c06400b2dc03,0x40000016600001e7,0x28000000fc009de4,0xc800000090109c85\n"
".quad 0x6800c0000c009c03,0x60000013a0000007,0x48010000fc2fdd03,0x190e0000fff1dc63\n"
".quad 0x40000013200001e7,0x28000000fc009de4,0x6800c0000c001c03,0xc800000060109c85\n"
".quad 0xc800000050101c85,0x28000000fc01dde4,0x28000000fc019de4,0xc800000060bfdca5\n"
".quad 0xc800000080bfdca5,0xc800000050bfdc85,0x28000000fc001de4,0xc80000007011dc85\n"
".quad 0x28000000fc009de4,0xc800000080119c85,0x28000000fc00dde4,0x28000000fc011de4\n"
".quad 0x28000000fc015de4,0x4800c000e011dc03,0x28000000fc021de4,0x1800000010031de2\n"
".quad 0x400000001c619c43,0x28000000fc01dde4,0x4800c06400629c03,0xc000000090119c85\n"
".quad 0xc8000000a011dc85,0x7000c0047c619c23,0xc800000040119c85,0xc00000009011dc85\n"
".quad 0xc000000040135c85,0xc000000000a25c85,0x5001c03200719c03,0x20ffc0320071dc43\n"
".quad 0x208ec03200d39c03,0xc00000007011dc85,0x1800000004035de2,0x4801780020619c03\n"
".quad 0x6000000020d35c03,0x4800780030e39c43,0x400000002071dca3,0x6800000034935c03\n"
".quad 0x5000c0001471dca3,0x190e0000fcd1dc23,0x200dc00010719ca3,0x5000c0001071dce3\n"
".quad 0x480000001ce1dc43,0x40000002000081e7,0x8400000040626085,0x840000003062e085\n"
".quad 0x840000000063e085,0x840000001063a085,0x8400000020636085,0x6800000024516083\n"
".quad 0x4800c000e0126003,0x680000002c412083,0x680000003c002083,0x4800c0640092e003\n"
".quad 0x680000003820a083,0x680000003430e083,0xc800000050b02085,0xc800000060b0a0a5\n"
".quad 0xc800000080b120a5,0xc000000000a26085,0x4800c00004835c03,0x1800000004039de2\n"
".quad 0x6000000034e35c03,0x6800000034935c03,0x190e0000fcd1dc23,0x40000002000081e7\n"
".quad 0x8400000090626085,0x840000008062e085,0x840000005063e085,0x840000006063a085\n"
".quad 0x8400000070636085,0x6800000024516083,0x4800c000e0126003,0x680000002c412083\n"
".quad 0x680000003c002083,0x4800c0640092e003,0x680000003820a083,0x680000003430e083\n"
".quad 0xc800000050b02085,0xc800000060b0a0a5,0xc800000080b120a5,0xc000000000a26085\n"
".quad 0x4800c00008835c03,0x1800000004039de2,0x6000000034e35c03,0x6800000034935c03\n"
".quad 0x190e0000fcd1dc23,0x40000002000081e7,0x84000000e0626085,0x84000000d062e085\n"
".quad 0x84000000a063e085,0x84000000b063a085,0x84000000c0636085,0x6800000024516083\n"
".quad 0x4800c000e0126003,0x680000002c412083,0x680000003c002083,0x4800c0640092e003\n"
".quad 0x680000003820a083,0x680000003430e083,0xc800000050b02085,0xc800000060b0a0a5\n"
".quad 0xc800000080b120a5,0xc000000000a26085,0x4800c0000c835c03,0x1800000004039de2\n"
".quad 0x6000000034e35c03,0x6800000034925c03,0x190e0000fc91dc23,0x40000001a00081e7\n"
".quad 0x84000000f063e085,0x840000010063a085,0x8400000110636085,0x8400000120626085\n"
".quad 0x840000013061e085,0x680000003c002083,0x680000003820a083,0x680000003430e083\n"
".quad 0x6800000024412083,0xc800000050b02085,0xc800000060b0a0a5,0x680000001c516083\n"
".quad 0xc800000080b120a5,0xc0000000a0119e85,0x4801c00080cfdd03,0x190e0000fc61dc63\n"
".quad 0x40000000a00001e7,0x4801c00010c31c03,0x4800c00010821c03,0x48000000fc619c43\n"
".quad 0xc8000000a0119c85,0x4003fff2a0001de7,0xc000000070119e85,0x4800c0000461dc03\n"
".quad 0xc000000080119e85,0x188ec0001471dc23,0xc80000007011dc85,0x4800c00004619c03\n"
".quad 0xc800000080119c85,0x4003fff0600001e7,0xc000000060119e85,0xc00000005011dc85\n"
".quad 0xc800000000b01c85,0xc800000010b09c85,0xc800000020b0dc85,0xc800000030b11c85\n"
".quad 0x4800c00004619c03,0xc800000040b15c85,0x480100001c6fdd03,0xc800000060119c85\n"
".quad 0x188e0000fff1dc43,0x4003ffed600001e7,0x4000000000001df4,0xc000000090109e85\n"
".quad 0xc0000000c0101e85,0xc0000000b010de85,0x4800c00004209c03,0x5800c00008001c03\n"
".quad 0x5800c00008311c03,0xc800000090109c85,0x4000000000301fc3,0x188ec0001c21dc23\n"
".quad 0x2c0000009400dc04,0x48010000fc0fdd03,0x2c00000084009c04,0xc8000000c0101c85\n"
".quad 0x1a800000fc41dc63,0x2004400020309ca3,0xc8000000b0111c85,0xc8000000a0109c85\n"
".quad 0x4003ffe9e00001e7,0x48010000fc0fdd13,0xc0000000b0101c85,0x2800780020009de4\n"
".quad 0x600000a0a0000007,0x190e0000fc01dc63,0x4801c15f30211c03,0x28000000fc009de4\n"
".quad 0x1800015f30001de2,0x4800780033f15c43,0xc800000080109c85,0xc800000070115c85\n"
".quad 0x4000009f800001e7,0x87ffffff00425c85,0x87fffffef041dc85,0x87fffffed0419c85\n"
".quad 0x87ffffff10409c85,0x87fffffee0421c85,0x87ffffff2043dc85,0x87ffffff30439c85\n"
".quad 0x87ffffff40435c85,0x87ffffff50431c85,0x87ffffff6042dc85,0x87ffffff70429c85\n"
".quad 0x87ffffff8040dc85,0xc800000010125c85,0xc80000000011dc85,0xc800000020109c85\n"
".quad 0x87ffffffb0425c85,0x87ffffffa041dc85,0x87ffffff90409c85,0xc800000040125c85\n"
".quad 0xc80000003011dc85,0x87ffffffc0425c85,0x4800c000e011dc03,0x480000001c01dc03\n"
".quad 0x4801c00140001c03,0xc803fea0d0719c85,0xc803fea0e0721c85,0x87ffffffe0419c85\n"
".quad 0x8400000000421c85,0xc800000050125c85,0x87ffffffd0425c85,0xc800000060119c85\n"
".quad 0x87fffffff0419c85,0xc000000000115e85,0xc803fea0f0715c85,0xc000000010115e85\n"
".quad 0xc803fea100715c85,0xc000000020115e85,0xc803fea110715c85,0xc803fea12073dc85\n"
".quad 0xc803fea130739c85,0xc803fea140735c85,0xc803fea150731c85,0xc000000040115e85\n"
".quad 0xc803fea16072dc85,0xc803fea170729c85,0xc000000030131e85,0xc803fea18070dc85\n"
".quad 0xc803fea190709c85,0xc00000008013de85,0xc00000005012de85,0x2800780020035de4\n"
".quad 0xc803fea1a0731c85,0xc803fea1b0715c85,0x1800015ef0039de2,0x48000000fcf29c43\n"
".quad 0xc803fea1c072dc85,0xc000000060115e85,0x4801c15ef0d09c03,0xc800000080129c85\n"
".quad 0x4800780033f0dc43,0x4801c191300fdd03,0x1a8e0000fca1dc63,0xc803fea1d0725c85\n"
".quad 0xc803fea1e0715c85,0x4801c00140411c03,0x28000000fc025de4,0xc000000070115e85\n"
".quad 0xc800000090125c85,0x48000000fc515c43,0xc803fea1f0719c85,0xc803fea200721c85\n"
".quad 0xc800000070115c85,0x4003fff6e00001e7,0x87ffffffb0201c85,0x87ffffff1023dc85\n"
".quad 0x87ffffff20235c85,0x87ffffff30231c85,0x87ffffff4022dc85,0x87ffffff50229c85\n"
".quad 0x87ffffff60225c85,0x87ffffff70221c85,0x87ffffff8021dc85,0x87ffffff90219c85\n"
".quad 0x87ffffffa0215c85,0x87ffffffc0211c85,0xc80000008010dc85,0xc800000040101c85\n"
".quad 0x280000003c001de4,0x87ffffffd023dc85,0xc80000005013dc85,0x280000000003dde4\n"
".quad 0x87ffffffe0201c85,0xc800000060101c85,0x87fffffff0201c85,0xc800000070101c85\n"
".quad 0x8400000000201c85,0x280000003c00dde4,0x4800c000e013dc03,0x480000003ce3dc03\n"
".quad 0x4801c00100e39c03,0xc803fed310f0dc85,0xc803fed320f35c85,0xc803fed330f31c85\n"
".quad 0xc803fed340f2dc85,0xc803fed350f29c85,0xc803fed360f25c85,0xc00000009010de85\n"
".quad 0xc803fed370f21c85,0xc803fed380f1dc85,0xc803fed390f19c85,0xc000000040131e85\n"
".quad 0xc000000050125e85,0x48000000fc329c43,0xc00000006011de85,0x4801c190f0efdd03\n"
".quad 0xc000000070119e85,0xc803fed3a0f15c85,0xc00000008010de85,0xc803fed3b0f31c85\n"
".quad 0xc803fed3c0f11c85,0x1a8e0000fca1dc63,0xc803fed3d0f25c85,0x4801c00100209c03\n"
".quad 0xc803fed3e0f1dc85,0xc803fed3f0f19c85,0xc800000090129c85,0x48000000fc30dc43\n"
".quad 0xc803fed400f01c85,0x4003fff9000001e7,0xc0000000c0101c85,0x28000000fc019de4\n"
".quad 0x60000058e0000007,0x6800c0003c021c03,0x48010000fc8fdd03,0x190e0000fff1dc63\n"
".quad 0x40000058400001e7,0x4800c000e0101c03,0x1800000004025de2,0x28000000fc029de4\n"
".quad 0x4800c0640002dc03,0x28000000fc009de4,0x28000000fc00dde4,0xc800000060bfdca5\n"
".quad 0xc800000080bfdca5,0xc800000050bfdc85,0x28000000fc011de4,0x28000000fc015de4\n"
".quad 0x28000000fc001de4,0x28000000fc01dde4,0x4800c000e0131c03,0x5000c0028073dca3\n"
".quad 0x400000003072dc43,0x4000000030f31c43,0x4800c06400b2dc03,0x4800c03200c31c03\n"
".quad 0xc000000000b35c85,0x6800c00004d39c03,0x190ec00004e1dc03,0x400000024000a1e7\n"
".quad 0xc000000000c34085,0x6800000034208083,0x4800c000e0134003,0x4800c06400d38003\n"
".quad 0xc800000050e08085,0xc000000010c34085,0x680000003430c083,0xc800000060e0c085\n"
".quad 0xc000000020c34085,0x6800000034410083,0xc800000070e10085,0xc000000030c34085\n"
".quad 0x6800000034514083,0xc800000080e14085,0xc000000040c34085,0x6800000034000083\n"
".quad 0xc800000090e00085,0xc000000000b34085,0x6800c00008d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000050c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000060c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000070c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000080c36085,0x6800000034516083,0xc800000080e16085,0xc000000090c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c00010d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000000a0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000000b0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc0000000c0c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc0000000d0c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000000e0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c00020d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc0000000f0c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000100c36085,0x680000003430e083,0xc800000060e0e085,0xc000000110c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000120c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000130c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c00040d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000140c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000150c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc000000160c36085,0x6800000034412083,0xc800000070e12085,0xc000000170c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000180c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c00080d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000190c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000001a0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000001b0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc0000001c0c36085,0x6800000034516083,0xc800000080e16085,0xc0000001d0c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c00100d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000001e0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000001f0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000200c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000210c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000220c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c00200d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc000000230c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000240c36085,0x680000003430e083,0xc800000060e0e085,0xc000000250c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000260c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000270c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c00400d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000280c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000290c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000002a0c36085,0x6800000034412083,0xc800000070e12085,0xc0000002b0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc0000002c0c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c00800d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc0000002d0c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000002e0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000002f0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000300c36085,0x6800000034516083,0xc800000080e16085,0xc000000310c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c01000d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000320c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000330c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000340c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000350c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000360c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c02000d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc000000370c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000380c36085,0x680000003430e083,0xc800000060e0e085,0xc000000390c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc0000003a0c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc0000003b0c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c04000d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc0000003c0c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc0000003d0c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000003e0c36085,0x6800000034412083,0xc800000070e12085,0xc0000003f0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000400c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c08000d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000410c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000420c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000430c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000440c36085,0x6800000034516083,0xc800000080e16085,0xc000000450c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c10000d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000460c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000470c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000480c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000490c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000004a0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c20000d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc0000004b0c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc0000004c0c36085,0x680000003430e083,0xc800000060e0e085,0xc0000004d0c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc0000004e0c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc0000004f0c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c40000d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000500c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000510c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc000000520c36085,0x6800000034412083,0xc800000070e12085,0xc000000530c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000540c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c80000d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000550c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000560c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000570c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000580c36085,0x6800000034516083,0xc800000080e16085,0xc000000590c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800d00000d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000005a0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000005b0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc0000005c0c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc0000005d0c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000005e0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x3800200000d39c02,0x190e0000fce1dc23,0x40000002400081e7,0xc0000005f0c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000600c36085,0x680000003430e083,0xc800000060e0e085,0xc000000610c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000620c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000630c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x3800400000d39c02,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000640c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000650c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc000000660c36085,0x6800000034412083,0xc800000070e12085,0xc000000670c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000680c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x3800800000d39c02,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000690c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000006a0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000006b0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc0000006c0c36085,0x6800000034516083,0xc800000080e16085,0xc0000006d0c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x3801000000d39c02\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000006e0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000006f0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000700c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000710c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000720c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x3802000000d39c02,0x190e0000fce1dc23,0x40000002400081e7,0xc000000730c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000740c36085,0x680000003430e083,0xc800000060e0e085,0xc000000750c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000760c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000770c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x3804000000d39c02,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000780c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000790c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000007a0c36085,0x6800000034412083,0xc800000070e12085,0xc0000007b0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc0000007c0c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x3808000000d39c02,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc0000007d0c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000007e0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000007f0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000800c36085,0x6800000034516083,0xc800000080e16085,0xc000000810c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x3810000000d39c02\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000820c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000830c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000840c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000850c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000860c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x3820000000d39c02,0x190e0000fce1dc23,0x40000002400081e7,0xc000000870c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000880c36085,0x680000003430e083,0xc800000060e0e085,0xc000000890c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc0000008a0c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc0000008b0c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x3840000000d39c02,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc0000008c0c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc0000008d0c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000008e0c36085,0x6800000034412083,0xc800000070e12085,0xc0000008f0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000900c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x3880000000d39c02,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000910c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000920c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000930c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000940c36085,0x6800000034516083,0xc800000080e16085,0xc000000950c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x3900000000d39c02\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000960c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000970c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000980c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000990c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000009a0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x1a0efffffcd1dc23,0x40000002200081e7,0xc0000009b0c2e085,0x680000002c20a083\n"
".quad 0x4800c000e012e003,0x4800c06400b2e003,0xc800000050b0a085,0xc0000009c0c36085\n"
".quad 0x680000003430e083,0xc800000060b0e085,0xc0000009d0c36085,0x6800000034412083\n"
".quad 0xc800000070b12085,0xc0000009e0c36085,0x6800000034516083,0xc800000080b16085\n"
".quad 0xc0000009f0c32085,0x6800000030002083,0xc800000090b02085,0x4801c000149fdd03\n"
".quad 0x4800c0000471dc03,0x190e0000fca1dc63,0x40000000600001e7,0x4801c00004925c03\n"
".quad 0x48000000fca29c43,0x4003ffaa80001de7,0x4800c00004619c03,0x4800c000e011dc03\n"
".quad 0x48010000206fdd03,0x4800c0640071dc03,0x188e0000fff1dc43,0xc800000000709ca5\n"
".quad 0xc800000020711ca5,0xc800000040701c85,0x4003ffa7c00001e7,0x4000000000001df4\n"
".quad 0xc0000000c0101e85,0xc0000000b0109e85,0x28000000fc00dde4,0x6000003500000007\n"
".quad 0xc80000002010dc85,0x5800c00010001c03,0x4000000000201f83,0x5800c00010209c03\n"
".quad 0x48010000fc0fdd03,0xc8000000c0101c85,0xc8000000b0109c85,0x190e0000fc21dc63\n"
".quad 0x40000033c00001e7,0x28000000fc00dde4,0x28000000fc001de4,0x4800c000e0109c03\n"
".quad 0xc80000003010dc85,0xc800000040101c85,0xc800000050109c85,0x5000c0001430dc03\n"
".quad 0x1800000c80021de2,0x28000000fc025de4,0xc80000001010dc85,0x28000000fc011de4\n"
".quad 0x28000000fc001de4,0x28000000fc019de4,0x28000000fc00dde4,0x28000000fc01dde4\n"
".quad 0xc800000070121c85,0xc80000006010dc85,0x28000000fc015de4,0xc800000080125c85\n"
".quad 0xc800000090109c85,0xc000000090109c85,0xc00000006010de85,0xc000000000221c85\n"
".quad 0x280000000c03dde4,0x4800c000e0109c03,0x6800c00008831c03,0x400000000830dc43\n"
".quad 0x6800c00004809c03,0x190e0000fcc3dc23,0x4800c03200325c03,0x190ec0000421dc03\n"
".quad 0xc00000005093a485,0xc0000000009280a5,0xc0000000209080a5,0xc0000000809324a5\n"
".quad 0x6800000028514083,0xc000000040928085,0x680000002c410083,0x6800c0001082dc03\n"
".quad 0x6800000008000083,0x680000000c618083,0xc00000006090a4a5,0x680000002871c083\n"
".quad 0x190e0000fcb1dc23,0x6800000038516483,0x680000003061a483,0xc0000000a092a0a5\n"
".quad 0x6800000008412483,0x680000000c002483,0xc0000000c090a0a5,0x680000003471e483\n"
".quad 0xc0000000e0932085,0x6800000028516083,0x6800c00020829c03,0x680000002c412083\n"
".quad 0x6800000008002083,0x6800c00040809c03,0x190e0000fca3dc23,0x680000000c61a083\n"
".quad 0x190e0000fc25dc23,0xc00000012090a4a5,0xc00000010092a4a5,0x680000003071e083\n"
".quad 0xc0000000f093a485,0xc0000001409328a5,0x680000000861a483,0x680000000c71e483\n"
".quad 0x680000002c002483,0xc00000016090a8a5,0x6800c0008082dc03,0x6800000028412483\n"
".quad 0xc00000018092a885,0x190e0000fcb1dc23,0x6800c0010082dc03,0x6800000008002883\n"
".quad 0x680000000c61a883,0xc0000001a090a0a5,0x6800000038516483,0xc00000019093a085\n"
".quad 0x190e0000fcb3dc23,0x6800000034412883,0x680000002871e883,0x6800000030516883\n"
".quad 0xc0000001e092a4a5,0x6800000008412083,0x680000000c002083,0xc00000020090a4a5\n"
".quad 0x6800000038516083,0xc0000001c09320a5,0x680000002c412483,0x6800000028516483\n"
".quad 0x6800c00200829c03,0x6800000008002483,0x6800c00400809c03,0x680000003061a083\n"
".quad 0x680000003471e083,0x190e0000fca1dc23,0xc000000220932485,0x680000000c61a483\n"
".quad 0x190e0000fc25dc23,0xc00000026090a0a5,0xc00000024092a0a5,0xc00000023093a085\n"
".quad 0x680000003071e483,0xc0000002809328a5,0x680000000861a083,0x680000000c71e083\n"
".quad 0x680000002c002083,0xc0000002a090a8a5,0x6800c0080082dc03,0x6800000028412083\n"
".quad 0x6800000038516083,0x190e0000fcb1dc23,0xc0000002c092a885,0x6800c0100082dc03\n"
".quad 0x6800000008002883,0x680000000c61a883,0xc0000002e090a0a5,0xc0000002d093a085\n"
".quad 0x190e0000fcb3dc23,0x6800000034412883,0x680000002871e883,0x6800000030516883\n"
".quad 0xc00000032092a4a5,0x6800000008412083,0x680000000c002083,0xc00000034090a4a5\n"
".quad 0x6800000038516083,0xc0000003009320a5,0x680000002c412483,0x6800000028516483\n"
".quad 0x6800c02000829c03,0x6800000008002483,0x6800c04000809c03,0x680000003061a083\n"
".quad 0x680000003471e083,0x190e0000fca1dc23,0xc000000360932485,0x680000000c61a483\n"
".quad 0x190e0000fc25dc23,0xc0000003a090a0a5,0xc00000038092a0a5,0xc00000037093a085\n"
".quad 0x680000003071e483,0xc0000003c09328a5,0x680000000861a083,0x680000000c71e083\n"
".quad 0x680000002c002083,0xc0000003e090a8a5,0x6800c0800082dc03,0x6800000028412083\n"
".quad 0x6800000038516083,0x190e0000fcb1dc23,0xc00000040092a885,0x6800c1000082dc03\n"
".quad 0x6800000008002883,0x680000000c61a883,0xc00000042090a0a5,0xc00000041093a085\n"
".quad 0x190e0000fcb3dc23,0x6800000034412883,0x680000002871e883,0x6800000030516883\n"
".quad 0xc00000046092a4a5,0x6800000008412083,0x680000000c002083,0xc00000048090a4a5\n"
".quad 0x6800000038516083,0xc0000004409320a5,0x680000002c412483,0x6800000028516483\n"
".quad 0x6800c20000829c03,0x6800000008002483,0x6800c40000809c03,0x680000003061a083\n"
".quad 0x680000003471e083,0x190e0000fca1dc23,0xc0000004a0932485,0x680000000c61a483\n"
".quad 0x190e0000fc25dc23,0xc0000004e090a0a5,0xc0000004c092a0a5,0xc0000004b093a085\n"
".quad 0x680000003071e483,0xc0000005009328a5,0x680000000861a083,0x680000000c71e083\n"
".quad 0x680000002c002083,0xc00000052090a8a5,0x6800c8000082dc03,0x6800000028412083\n"
".quad 0x6800000038516083,0x190e0000fcb1dc23,0xc00000054092a885,0x6800d0000082dc03\n"
".quad 0x6800000008002883,0x680000000c61a883,0xc00000056090a0a5,0xc00000055093a085\n"
".quad 0x190e0000fcb3dc23,0x6800000034412883,0x680000002871e883,0x6800000030516883\n"
".quad 0xc0000005a092a4a5,0x6800000008412083,0x680000000c002083,0xc0000005c090a4a5\n"
".quad 0x6800000038516083,0xc0000005809320a5,0x680000002c412483,0x6800000028516483\n"
".quad 0x3800200000829c02,0x6800000008002483,0x3800400000809c02,0x680000003061a083\n"
".quad 0x680000003471e083,0x190e0000fca1dc23,0xc0000005e0932485,0x680000000c61a483\n"
".quad 0x190e0000fc25dc23,0xc00000062090a0a5,0xc00000060092a0a5,0xc0000005f093a085\n"
".quad 0x680000003071e483,0xc0000006409328a5,0x680000000861a083,0x680000000c71e083\n"
".quad 0x680000002c002083,0xc00000066090a8a5,0x380080000082dc02,0x6800000028412083\n"
".quad 0x6800000038516083,0x190e0000fcb1dc23,0xc00000068092a885,0x380100000082dc02\n"
".quad 0x6800000008002883,0x680000000c61a883,0xc0000006a090a0a5,0xc00000069093a085\n"
".quad 0x190e0000fcb3dc23,0x6800000034412883,0x680000002871e883,0x6800000030516883\n"
".quad 0xc0000006e092a4a5,0x6800000008412083,0x680000000c002083,0xc00000070090a4a5\n"
".quad 0x6800000038516083,0xc0000006c09320a5,0x680000002c412483,0x6800000028516483\n"
".quad 0x3802000000829c02,0x6800000008002483,0x3804000000809c02,0x680000003061a083\n"
".quad 0x680000003471e083,0x190e0000fca1dc23,0xc000000720932485,0x680000000c61a483\n"
".quad 0x190e0000fc25dc23,0xc00000076090a0a5,0xc00000074092a0a5,0xc00000073093a085\n"
".quad 0x680000003071e483,0xc0000007809328a5,0x680000000861a083,0x680000000c71e083\n"
".quad 0x680000002c002083,0xc0000007a090a8a5,0x380800000082dc02,0x6800000028412083\n"
".quad 0x6800000038516083,0x190e0000fcb1dc23,0xc0000007c092a885,0x381000000082dc02\n"
".quad 0x6800000008002883,0x680000000c61a883,0xc0000007e090a0a5,0xc0000007d093a085\n"
".quad 0x190e0000fcb3dc23,0x6800000034412883,0x680000002871e883,0x6800000030516883\n"
".quad 0xc00000082092a4a5,0x6800000008412083,0x680000000c002083,0xc00000084090a4a5\n"
".quad 0x6800000038516083,0xc0000008009320a5,0x680000002c412483,0x6800000028516483\n"
".quad 0x3820000000829c02,0x6800000008002483,0x3840000000809c02,0x680000003061a083\n"
".quad 0x680000003471e083,0x190e0000fca1dc23,0xc000000860932485,0x680000000c61a483\n"
".quad 0x190e0000fc25dc23,0xc0000008a090a0a5,0xc00000088092a0a5,0xc00000087093a085\n"
".quad 0x680000003071e483,0xc0000008c09328a5,0x680000000861a083,0x680000000c71e083\n"
".quad 0xc0000008e090a8a5,0x680000002c002083,0x388000000082dc02,0x6800000028412083\n"
".quad 0x6800000038516083,0xc00000090092a885,0x6800000008002883,0x3900000000809c02\n"
".quad 0x190e0000fcb1dc23,0x6800000030516883,0x190e0000fc23dc23,0xc00000091090a085\n"
".quad 0x6800000034412883,0x680000002871e883,0xc0000009209320a5,0xc00000094092a0a5\n"
".quad 0x680000000c61a883,0x6800000008516083,0x1a0efffffc85dc23,0xc00000098090a4a5\n"
".quad 0x280000003c021de4,0xc00000096093a4a5,0x6800000034002083,0x680000002861a083\n"
".quad 0x6800000030412083,0xc0000009a0932485,0x680000002c71e083,0x6800000008002483\n"
".quad 0x680000000c61a483,0xc0000009c092a8a5,0xc0000009e090a8a5,0x6800000038516483\n"
".quad 0xc000000070135e85,0x2800000020039de4,0x680000003c412483,0xc0000009b0922885\n"
".quad 0x680000003071e483,0xc000000080131e85,0x6800000028412883,0x680000000861a883\n"
".quad 0x4801fffd80d29c03,0x4800c00280e09c03,0xc00000009013de85,0x6800000020516883\n"
".quad 0x4800fffffcc21c43,0xc800000060109c85,0x48010000fcafdd03,0xc800000070129c85\n"
".quad 0x680000002c002883,0x1a8e0000fc81dc63,0x4800c00010f09c03,0xc800000080121c85\n"
".quad 0x680000000c71e883,0xc800000090109c85,0x4003ffd5400001e7,0xc000000010109e85\n"
".quad 0x4800c000e012dc03,0xc000000040125e85,0x28000000fc029de4,0x400000002c221c43\n"
".quad 0xc000000030109e85,0x4800c00004925c03,0xc800000000815c85,0xc800000010811c85\n"
".quad 0x188ec0028091dc23,0xc800000020801c85,0x4800c0000420dc03,0xc000000050109e85\n"
".quad 0x18000032f0011de2,0xc800000030819c85,0xc80000003010dc85,0xc800000040125c85\n"
".quad 0xc800000090111c85,0x4800c00050209c03,0xc80000004081dc85,0xc800000050109c85\n"
".quad 0x4003ffd0c00001e7,0xc000000000b09c85,0xc000000010b0dc85,0xc000000020b39ca5\n"
".quad 0xc000000040b31ca5,0xc000000060b11ca5,0xc000000090101e85,0xc800003200b09ca5\n"
".quad 0xc800003220b39ca5,0xc800003240b31ca5,0xc000000080b21ca5,0xc0000000a0b19ca5\n"
".quad 0xc800003260b11ca5,0x4801c00100001c03,0xc0000000e0b09ca5,0xc0000000c0b11ca5\n"
".quad 0xc800003280b21ca5,0x48000000fca29c43,0xc8000032a0b19ca5,0x4801c064f00fdd03\n"
".quad 0xc800000090101c85,0xc8000032c0b11ca5,0xc8000032e0b09ca5,0x1a8e0000fca1dc63\n"
".quad 0x4800c00100b2dc03,0x4003fffce00001e7,0xc000000020101e85,0x4800c00004001c03\n"
".quad 0x188ec0001001dc23,0xc800000020101c85,0x4003ffcc400001e7,0x4000000000001df4\n"
".quad 0xc0000000c0101c85,0x48010000fc0fdd03,0xc0000000b0101c85,0x1a8e0000fc01dc63\n"
".quad 0x4003ff70a00001e7,0x4000000000001df4,0xc0000000a0109e85,0x28004000d0021de4\n"
".quad 0x28004000c0029de4,0xc8000000b0121c85,0xc8000000c0129c85,0x5001c000c0211c03\n"
".quad 0x7000c0047c201c23,0x20ffc000c0209c43,0x2084c000c000dc03,0x4800c000e0101c03\n"
".quad 0x4801400080409c03,0x4800c06400001c03,0x480040009030dc43,0x48014000c3ffde03\n"
".quad 0xc000000000019ca5,0xc000000020011ca5,0xc000000040025c85,0x190e0000fc81dc63\n"
".quad 0xc800000090109c85,0xc8000000a010dc85,0x9400000010219c85,0x940000002021dc85\n"
".quad 0x9400000030211c85,0x9400000040215c85,0x9400000050225c85,0x40000016200001e7\n"
".quad 0x28004000c0029de4,0x28004000d000dde4,0x28000000fc009de4,0xc8000000c0129c85\n"
".quad 0xc8000000b010dc85,0xc800000050109c85,0x6800c0000ca0dc03,0x48010000fc3fdd03\n"
".quad 0xc80000002010dc85,0x190e0000fff1dc63,0x40000013000001e7,0x7000c0047c209c23\n"
".quad 0x28000000fc00dde4,0xc800000030109c85,0xc80000004010dc85,0x28000000fc01dde4\n"
".quad 0x28000000fc019de4,0xc8000000600fdca5,0xc8000000800fdca5,0xc8000000500fdc85\n"
".quad 0x28000000fc021de4,0x28000000fc009de4,0xc80000006011dc85,0x28000000fc00dde4\n"
".quad 0x28000000fc011de4,0x28000000fc015de4,0xc800000070119c85,0x4800c000e0125c03\n"
".quad 0x6000c00014619c03,0x1800000010031de2,0x400000002471dc43,0xc800000010119c85\n"
".quad 0x28000000fc025de4,0x4800c0640072dc03,0x28000000fc01dde4,0xc80000008011dc85\n"
".quad 0xc000000050135c85,0x180000000401dde2,0xc00000003013dc85,0xc000000000b29c85\n"
".quad 0x6000000024739c03,0xc00000001011dc85,0x5001c03200d19c03,0x6800000038a39c03\n"
".quad 0x20ffc03200d35c43,0x480000001c91dc03,0x190e0000fce1dc23,0x209ac03200f35c03\n"
".quad 0x4801780040619c03,0x5000c0001471dca3,0x4800780050d35c43,0x200dc00010719ca3\n"
".quad 0x5000c0001071dce3,0x480000001cd1dc43,0x40000002000081e7,0x8400000040602085\n"
".quad 0x840000000063e085,0x840000001063a085,0x8400000020636085,0x840000003062a085\n"
".quad 0x6800000000516083,0x4800c000e0102003,0x680000003c822083,0x680000003820a083\n"
".quad 0x4800c06400002003,0x680000003430e083,0x6800000028412083,0xc800000050022085\n"
".quad 0xc80000006000a0a5,0xc8000000800120a5,0xc000000000b2a085,0x4800c00004935c03\n"
".quad 0x1800000004039de2,0x6000000034e35c03,0x6800000034a35c03,0x190e0000fcd1dc23\n"
".quad 0x40000002000081e7,0x8400000090602085,0x840000005063e085,0x840000006063a085\n"
".quad 0x8400000070636085,0x840000008062a085,0x6800000000516083,0x4800c000e0102003\n"
".quad 0x680000003c822083,0x680000003820a083,0x4800c06400002003,0x680000003430e083\n"
".quad 0x6800000028412083,0xc800000050022085,0xc80000006000a0a5,0xc8000000800120a5\n"
".quad 0xc000000000b2a085,0x4800c00008935c03,0x1800000004039de2,0x6000000034e35c03\n"
".quad 0x6800000034a35c03,0x190e0000fcd1dc23,0x40000002000081e7,0x84000000e0602085\n"
".quad 0x84000000a063e085,0x84000000b063a085,0x84000000c0636085,0x84000000d062a085\n"
".quad 0x6800000000516083,0x4800c000e0102003,0x680000003c822083,0x680000003820a083\n"
".quad 0x4800c06400002003,0x680000003430e083,0x6800000028412083,0xc800000050022085\n"
".quad 0xc80000006000a0a5,0xc8000000800120a5,0xc000000000b2a085,0x4800c0000c935c03\n"
".quad 0x1800000004039de2,0x6000000034e35c03,0x6800000034a29c03,0x190e0000fca1dc23\n"
".quad 0x40000001a00081e7,0x84000000f063e085,0x840000010063a085,0x8400000110636085\n"
".quad 0x840000012062a085,0x840000013061e085,0x680000003c822083,0x680000003820a083\n"
".quad 0x680000003430e083,0x6800000028412083,0xc800000050022085,0xc80000006000a0a5\n"
".quad 0x680000001c516083,0xc8000000800120a5,0xc000000080119e85,0x4801c00080cfdd03\n"
".quad 0x4800c00010925c03,0x190e0000fc61dc63,0x40000000800001e7,0x4801c00010c31c03\n"
".quad 0x48000000fc619c43,0xc800000080119c85,0x4003fff2a0001de7,0xc000000070119e85\n"
".quad 0xc00000006011de85,0x4800c00004619c03,0x4800c0000471dc03,0x188ec0001461dc23\n"
".quad 0xc800000070119c85,0xc80000006011dc85,0x4003fff0800001e7,0xc000000040119e85\n"
".quad 0xc00000002011dc85,0xc800000000021c85,0xc800000010009c85,0xc80000002000dc85\n"
".quad 0xc800000030011c85,0x4800c00004619c03,0xc800000040015c85,0x480100001c6fdd03\n"
".quad 0xc800000040119c85,0x188e0000fff1dc43,0x4003ffed800001e7,0xc0000000c0109e85\n"
".quad 0xc0000000b0111e85,0x5800c0000820dc03,0xc000000050109e85,0x5800c00008421c03\n"
".quad 0x400000000c429fc3,0xc8000000b0121c85,0x48010000fcafdd03,0x4800c00004209c03\n"
".quad 0xc8000000c0129c85,0x188ec0001c21dc23,0xc800000050109c85,0x1a800000fc81dc63\n"
".quad 0x4003ffeaa00001e7,0x48010000fcafdd03,0x2800780040001de4,0x28000000fc009de4\n"
".quad 0x190e0000fc81dc63,0x4801c15f30011c03,0x1800015f30001de2,0xc800000070109c85\n"
".quad 0x4800780053f15c43,0xc800000060115c85,0x4000009ea00001e7,0x87ffffff10419c85\n"
".quad 0x87ffffff0040dc85,0x87ffffff40435c85,0x87fffffed0409c85,0x87ffffff2041dc85\n"
".quad 0x87fffffee043dc85,0x87fffffef0439c85,0x87ffffff50431c85,0x87ffffff6042dc85\n"
".quad 0x87ffffff70429c85,0x87ffffff80425c85,0x87ffffff90421c85,0xc800000010119c85\n"
".quad 0xc80000000010dc85,0xc800000040135c85,0x4800c000e0119c03,0x87ffffff3040dc85\n"
".quad 0xc80000002011dc85,0x4800000018035c03,0x87ffffffb0419c85,0x4801c00140001c03\n"
".quad 0xc803fea0d0d09c85,0x87ffffffa041dc85,0xc803fea0e0d3dc85,0xc803fea0f0d39c85\n"
".quad 0x87ffffffd0409c85,0x87fffffff043dc85,0x8400000000439c85,0xc80000003010dc85\n"
".quad 0x87ffffffc040dc85,0xc800000050109c85,0x87ffffffe0409c85,0xc000000000115e85\n"
".quad 0xc803fea100d15c85,0xc000000010115e85,0xc803fea110d15c85,0xc000000020115e85\n"
".quad 0xc803fea120d15c85,0xc000000030115e85,0xc803fea130d15c85,0xc000000040115e85\n"
".quad 0xc803fea140d15c85,0xc803fea150d31c85,0xc803fea160d2dc85,0xc803fea170d29c85\n"
".quad 0xc803fea180d25c85,0xc803fea190d21c85,0xc000000050115e85,0xc803fea1a0d1dc85\n"
".quad 0xc803fea1b0d19c85,0xc000000070121e85,0xc803fea1c0d0dc85,0xc803fea1d0d15c85\n"
".quad 0x28000000fc019de4,0x48000000fc829c43,0x4801c191300fdd03,0xc000000060115e85\n"
".quad 0x280078004000dde4,0x1a8e0000fca3dc63,0x4801c00140411c03,0xc803fea1e0d09c85\n"
".quad 0xc803fea1f0d3dc85,0xc803fea200d39c85,0x48000000fc515c43,0x4801c15ef0309c03\n"
".quad 0xc800000070129c85,0x1800015ef0039de2,0xc800000060115c85,0x4800780053f0dc43\n"
".quad 0xc800000080119c85,0x4003fff7200005e7,0x87ffffffc0201c85,0x87ffffff1023dc85\n"
".quad 0x87ffffff20235c85,0x87ffffff30231c85,0x87ffffff4022dc85,0x87ffffff50229c85\n"
".quad 0x87ffffff60225c85,0x87ffffff70221c85,0x87ffffff8021dc85,0x87ffffff90219c85\n"
".quad 0x87ffffffa0215c85,0x87ffffffb0211c85,0xc80000007010dc85,0xc800000030101c85\n"
".quad 0x280000003c001de4,0x87ffffffd023dc85,0xc80000004013dc85,0x280000000003dde4\n"
".quad 0x87ffffffe0201c85,0xc800000050101c85,0x87fffffff0201c85,0xc800000060101c85\n"
".quad 0x8400000000201c85,0x280000003c00dde4,0x4800c000e013dc03,0x480000003ce3dc03\n"
".quad 0x4801c00100e39c03,0xc803fed310f0dc85,0xc803fed320f35c85,0xc803fed330f31c85\n"
".quad 0xc803fed340f2dc85,0xc803fed350f29c85,0xc803fed360f25c85,0xc803fed370f21c85\n"
".quad 0xc00000008010de85,0xc803fed380f1dc85,0xc803fed390f19c85,0xc803fed3a0f15c85\n"
".quad 0xc00000003012de85,0xc000000040125e85,0x48000000fc321c43,0xc00000005011de85\n"
".quad 0x4801c190f0efdd03,0xc000000060115e85,0xc00000007010de85,0xc803fed3b0f11c85\n"
".quad 0xc803fed3c0f2dc85,0x1a8e0000fc83dc63,0xc803fed3d0f25c85,0x4801c00100209c03\n"
".quad 0xc803fed3e0f1dc85,0xc803fed3f0f15c85,0xc800000080121c85,0x48000000fc30dc43\n"
".quad 0xc803fed400f01c85,0x4003fff9000005e7,0x4000008ea00001e7,0xc0000000c0101c85\n"
".quad 0x28000000fc019de4,0x6800c0003c021c03,0x48010000fc8fdd03,0x190e0000fff1dc63\n"
".quad 0x40000058400001e7,0x4800c000e0101c03,0x1800000004025de2,0x28000000fc029de4\n"
".quad 0x4800c0640002dc03,0x28000000fc009de4,0x28000000fc00dde4,0xc800000060bfdca5\n"
".quad 0xc800000080bfdca5,0xc800000050bfdc85,0x28000000fc011de4,0x28000000fc015de4\n"
".quad 0x28000000fc001de4,0x28000000fc01dde4,0x4800c000e0131c03,0x5000c0028073dca3\n"
".quad 0x400000003072dc43,0x4000000030f31c43,0x4800c06400b2dc03,0x4800c03200c31c03\n"
".quad 0xc000000000b35c85,0x6800c00004d39c03,0x190ec00004e1dc03,0x400000024000a1e7\n"
".quad 0xc000000000c34085,0x6800000034208083,0x4800c000e0134003,0x4800c06400d38003\n"
".quad 0xc800000050e08085,0xc000000010c34085,0x680000003430c083,0xc800000060e0c085\n"
".quad 0xc000000020c34085,0x6800000034410083,0xc800000070e10085,0xc000000030c34085\n"
".quad 0x6800000034514083,0xc800000080e14085,0xc000000040c34085,0x6800000034000083\n"
".quad 0xc800000090e00085,0xc000000000b34085,0x6800c00008d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000050c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000060c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000070c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000080c36085,0x6800000034516083,0xc800000080e16085,0xc000000090c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c00010d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000000a0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000000b0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc0000000c0c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc0000000d0c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000000e0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c00020d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc0000000f0c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000100c36085,0x680000003430e083,0xc800000060e0e085,0xc000000110c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000120c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000130c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c00040d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000140c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000150c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc000000160c36085,0x6800000034412083,0xc800000070e12085,0xc000000170c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000180c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c00080d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000190c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000001a0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000001b0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc0000001c0c36085,0x6800000034516083,0xc800000080e16085,0xc0000001d0c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c00100d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000001e0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000001f0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000200c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000210c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000220c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c00200d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc000000230c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000240c36085,0x680000003430e083,0xc800000060e0e085,0xc000000250c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000260c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000270c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c00400d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000280c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000290c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000002a0c36085,0x6800000034412083,0xc800000070e12085,0xc0000002b0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc0000002c0c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c00800d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc0000002d0c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000002e0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000002f0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000300c36085,0x6800000034516083,0xc800000080e16085,0xc000000310c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c01000d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000320c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000330c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000340c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000350c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000360c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c02000d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc000000370c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000380c36085,0x680000003430e083,0xc800000060e0e085,0xc000000390c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc0000003a0c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc0000003b0c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c04000d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc0000003c0c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc0000003d0c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000003e0c36085,0x6800000034412083,0xc800000070e12085,0xc0000003f0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000400c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c08000d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000410c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000420c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000430c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000440c36085,0x6800000034516083,0xc800000080e16085,0xc000000450c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800c10000d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000460c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000470c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000480c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000490c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000004a0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x6800c20000d39c03,0x190e0000fce1dc23,0x40000002400081e7,0xc0000004b0c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc0000004c0c36085,0x680000003430e083,0xc800000060e0e085,0xc0000004d0c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc0000004e0c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc0000004f0c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x6800c40000d39c03,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000500c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000510c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc000000520c36085,0x6800000034412083,0xc800000070e12085,0xc000000530c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000540c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x6800c80000d39c03,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000550c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000560c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000570c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000580c36085,0x6800000034516083,0xc800000080e16085,0xc000000590c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x6800d00000d39c03\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000005a0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000005b0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc0000005c0c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc0000005d0c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000005e0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x3800200000d39c02,0x190e0000fce1dc23,0x40000002400081e7,0xc0000005f0c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000600c36085,0x680000003430e083,0xc800000060e0e085,0xc000000610c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000620c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000630c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x3800400000d39c02,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000640c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000650c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc000000660c36085,0x6800000034412083,0xc800000070e12085,0xc000000670c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000680c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x3800800000d39c02,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000690c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000006a0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000006b0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc0000006c0c36085,0x6800000034516083,0xc800000080e16085,0xc0000006d0c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x3801000000d39c02\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc0000006e0c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc0000006f0c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000700c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000710c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000720c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x3802000000d39c02,0x190e0000fce1dc23,0x40000002400081e7,0xc000000730c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000740c36085,0x680000003430e083,0xc800000060e0e085,0xc000000750c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc000000760c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc000000770c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x3804000000d39c02,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc000000780c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc000000790c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000007a0c36085,0x6800000034412083,0xc800000070e12085,0xc0000007b0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc0000007c0c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x3808000000d39c02,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc0000007d0c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc0000007e0c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc0000007f0c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000800c36085,0x6800000034516083,0xc800000080e16085,0xc000000810c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x3810000000d39c02\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000820c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000830c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000840c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000850c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc000000860c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x3820000000d39c02,0x190e0000fce1dc23,0x40000002400081e7,0xc000000870c36085\n"
".quad 0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085\n"
".quad 0xc000000880c36085,0x680000003430e083,0xc800000060e0e085,0xc000000890c36085\n"
".quad 0x6800000034412083,0xc800000070e12085,0xc0000008a0c36085,0x6800000034516083\n"
".quad 0xc800000080e16085,0xc0000008b0c36085,0x6800000034002083,0xc800000090e02085\n"
".quad 0xc000000000b36085,0x3840000000d39c02,0x190e0000fce1dc23,0x40000002400081e7\n"
".quad 0xc0000008c0c36085,0x680000003420a083,0x4800c000e0136003,0x4800c06400d3a003\n"
".quad 0xc800000050e0a085,0xc0000008d0c36085,0x680000003430e083,0xc800000060e0e085\n"
".quad 0xc0000008e0c36085,0x6800000034412083,0xc800000070e12085,0xc0000008f0c36085\n"
".quad 0x6800000034516083,0xc800000080e16085,0xc000000900c36085,0x6800000034002083\n"
".quad 0xc800000090e02085,0xc000000000b36085,0x3880000000d39c02,0x190e0000fce1dc23\n"
".quad 0x40000002400081e7,0xc000000910c36085,0x680000003420a083,0x4800c000e0136003\n"
".quad 0x4800c06400d3a003,0xc800000050e0a085,0xc000000920c36085,0x680000003430e083\n"
".quad 0xc800000060e0e085,0xc000000930c36085,0x6800000034412083,0xc800000070e12085\n"
".quad 0xc000000940c36085,0x6800000034516083,0xc800000080e16085,0xc000000950c36085\n"
".quad 0x6800000034002083,0xc800000090e02085,0xc000000000b36085,0x3900000000d39c02\n"
".quad 0x190e0000fce1dc23,0x40000002400081e7,0xc000000960c36085,0x680000003420a083\n"
".quad 0x4800c000e0136003,0x4800c06400d3a003,0xc800000050e0a085,0xc000000970c36085\n"
".quad 0x680000003430e083,0xc800000060e0e085,0xc000000980c36085,0x6800000034412083\n"
".quad 0xc800000070e12085,0xc000000990c36085,0x6800000034516083,0xc800000080e16085\n"
".quad 0xc0000009a0c36085,0x6800000034002083,0xc800000090e02085,0xc000000000b36085\n"
".quad 0x1a0efffffcd1dc23,0x40000002200081e7,0xc0000009b0c2e085,0x680000002c20a083\n"
".quad 0x4800c000e012e003,0x4800c06400b2e003,0xc800000050b0a085,0xc0000009c0c36085\n"
".quad 0x680000003430e083,0xc800000060b0e085,0xc0000009d0c36085,0x6800000034412083\n"
".quad 0xc800000070b12085,0xc0000009e0c36085,0x6800000034516083,0xc800000080b16085\n"
".quad 0xc0000009f0c32085,0x6800000030002083,0xc800000090b02085,0x4801c000149fdd03\n"
".quad 0x4800c0000471dc03,0x190e0000fca1dc63,0x40000000600001e7,0x4801c00004925c03\n"
".quad 0x48000000fca29c43,0x4003ffaa80001de7,0x4800c00004619c03,0x4800c000e011dc03\n"
".quad 0x48010000206fdd03,0x4800c0640071dc03,0x188e0000fff1dc43,0xc800000000709ca5\n"
".quad 0xc800000020711ca5,0xc800000040701c85,0x4003ffa7c00001e7,0xc0000000c0101e85\n"
".quad 0xc0000000b0109e85,0x28000000fc00dde4,0xc80000001010dc85,0x5800c00010001c03\n"
".quad 0x4000000000201f83,0x5800c00010209c03,0x48010000fc0fdd03,0xc8000000c0101c85\n"
".quad 0xc8000000b0109c85,0x190e0000fc21dc63,0x40000034200001e7,0x28000000fc029de4\n"
".quad 0x28000000fc001de4,0x4800c000e0121c03,0xc800000020129c85,0xc800000030101c85\n"
".quad 0xc800000040121c85,0x5000c00014a09c03,0x1800000c8000dde2,0x28000000fc025de4\n"
".quad 0xc800000000109c85,0x28000000fc011de4,0x28000000fc001de4,0x28000000fc019de4\n"
".quad 0x28000000fc009de4,0x28000000fc01dde4,0xc80000006010dc85,0xc800000050109c85\n"
".quad 0x28000000fc015de4,0xc800000070125c85,0x2800000020009de4,0xc800000080109c85\n"
".quad 0xc000000080109c85,0xc00000005010de85,0xc000000000221c85,0x280000000c03dde4\n"
".quad 0x4800c000e0109c03,0x6800c00008831c03,0x400000000830dc43,0x6800c00004809c03\n"
".quad 0x190e0000fcc3dc23,0x4800c03200325c03,0x190ec0000421dc03,0xc00000005093a485\n"
".quad 0xc0000000009280a5,0xc0000000209080a5,0xc0000000809324a5,0x6800000028514083\n"
".quad 0xc000000040928085,0x680000002c410083,0x6800c0001082dc03,0x6800000008000083\n"
".quad 0x680000000c618083,0xc00000006090a4a5,0x680000002871c083,0x190e0000fcb1dc23\n"
".quad 0x6800000038516483,0x680000003061a483,0xc0000000a092a0a5,0x6800000008412483\n"
".quad 0x680000000c002483,0xc0000000c090a0a5,0x680000003471e483,0xc0000000e0932085\n"
".quad 0x6800000028516083,0x6800c00020829c03,0x680000002c412083,0x6800000008002083\n"
".quad 0x6800c00040809c03,0x190e0000fca3dc23,0x680000000c61a083,0x190e0000fc25dc23\n"
".quad 0xc00000012090a4a5,0xc00000010092a4a5,0x680000003071e083,0xc0000000f093a485\n"
".quad 0xc0000001409328a5,0x680000000861a483,0x680000000c71e483,0x680000002c002483\n"
".quad 0xc00000016090a8a5,0x6800c0008082dc03,0x6800000028412483,0xc00000018092a885\n"
".quad 0x190e0000fcb1dc23,0x6800c0010082dc03,0x6800000008002883,0x680000000c61a883\n"
".quad 0xc0000001a090a0a5,0x6800000038516483,0xc00000019093a085,0x190e0000fcb3dc23\n"
".quad 0x6800000034412883,0x680000002871e883,0x6800000030516883,0xc0000001e092a4a5\n"
".quad 0x6800000008412083,0x680000000c002083,0xc00000020090a4a5,0x6800000038516083\n"
".quad 0xc0000001c09320a5,0x680000002c412483,0x6800000028516483,0x6800c00200829c03\n"
".quad 0x6800000008002483,0x6800c00400809c03,0x680000003061a083,0x680000003471e083\n"
".quad 0x190e0000fca1dc23,0xc000000220932485,0x680000000c61a483,0x190e0000fc25dc23\n"
".quad 0xc00000026090a0a5,0xc00000024092a0a5,0xc00000023093a085,0x680000003071e483\n"
".quad 0xc0000002809328a5,0x680000000861a083,0x680000000c71e083,0x680000002c002083\n"
".quad 0xc0000002a090a8a5,0x6800c0080082dc03,0x6800000028412083,0x6800000038516083\n"
".quad 0x190e0000fcb1dc23,0xc0000002c092a885,0x6800c0100082dc03,0x6800000008002883\n"
".quad 0x680000000c61a883,0xc0000002e090a0a5,0xc0000002d093a085,0x190e0000fcb3dc23\n"
".quad 0x6800000034412883,0x680000002871e883,0x6800000030516883,0xc00000032092a4a5\n"
".quad 0x6800000008412083,0x680000000c002083,0xc00000034090a4a5,0x6800000038516083\n"
".quad 0xc0000003009320a5,0x680000002c412483,0x6800000028516483,0x6800c02000829c03\n"
".quad 0x6800000008002483,0x6800c04000809c03,0x680000003061a083,0x680000003471e083\n"
".quad 0x190e0000fca1dc23,0xc000000360932485,0x680000000c61a483,0x190e0000fc25dc23\n"
".quad 0xc0000003a090a0a5,0xc00000038092a0a5,0xc00000037093a085,0x680000003071e483\n"
".quad 0xc0000003c09328a5,0x680000000861a083,0x680000000c71e083,0x680000002c002083\n"
".quad 0xc0000003e090a8a5,0x6800c0800082dc03,0x6800000028412083,0x6800000038516083\n"
".quad 0x190e0000fcb1dc23,0xc00000040092a885,0x6800c1000082dc03,0x6800000008002883\n"
".quad 0x680000000c61a883,0xc00000042090a0a5,0xc00000041093a085,0x190e0000fcb3dc23\n"
".quad 0x6800000034412883,0x680000002871e883,0x6800000030516883,0xc00000046092a4a5\n"
".quad 0x6800000008412083,0x680000000c002083,0xc00000048090a4a5,0x6800000038516083\n"
".quad 0xc0000004409320a5,0x680000002c412483,0x6800000028516483,0x6800c20000829c03\n"
".quad 0x6800000008002483,0x6800c40000809c03,0x680000003061a083,0x680000003471e083\n"
".quad 0x190e0000fca1dc23,0xc0000004a0932485,0x680000000c61a483,0x190e0000fc25dc23\n"
".quad 0xc0000004e090a0a5,0xc0000004c092a0a5,0xc0000004b093a085,0x680000003071e483\n"
".quad 0xc0000005009328a5,0x680000000861a083,0x680000000c71e083,0x680000002c002083\n"
".quad 0xc00000052090a8a5,0x6800c8000082dc03,0x6800000028412083,0x6800000038516083\n"
".quad 0x190e0000fcb1dc23,0xc00000054092a885,0x6800d0000082dc03,0x6800000008002883\n"
".quad 0x680000000c61a883,0xc00000056090a0a5,0xc00000055093a085,0x190e0000fcb3dc23\n"
".quad 0x6800000034412883,0x680000002871e883,0x6800000030516883,0xc0000005a092a4a5\n"
".quad 0x6800000008412083,0x680000000c002083,0xc0000005c090a4a5,0x6800000038516083\n"
".quad 0xc0000005809320a5,0x680000002c412483,0x6800000028516483,0x3800200000829c02\n"
".quad 0x6800000008002483,0x3800400000809c02,0x680000003061a083,0x680000003471e083\n"
".quad 0x190e0000fca1dc23,0xc0000005e0932485,0x680000000c61a483,0x190e0000fc25dc23\n"
".quad 0xc00000062090a0a5,0xc00000060092a0a5,0xc0000005f093a085,0x680000003071e483\n"
".quad 0xc0000006409328a5,0x680000000861a083,0x680000000c71e083,0x680000002c002083\n"
".quad 0xc00000066090a8a5,0x380080000082dc02,0x6800000028412083,0x6800000038516083\n"
".quad 0x190e0000fcb1dc23,0xc00000068092a885,0x380100000082dc02,0x6800000008002883\n"
".quad 0x680000000c61a883,0xc0000006a090a0a5,0xc00000069093a085,0x190e0000fcb3dc23\n"
".quad 0x6800000034412883,0x680000002871e883,0x6800000030516883,0xc0000006e092a4a5\n"
".quad 0x6800000008412083,0x680000000c002083,0xc00000070090a4a5,0x6800000038516083\n"
".quad 0xc0000006c09320a5,0x680000002c412483,0x6800000028516483,0x3802000000829c02\n"
".quad 0x6800000008002483,0x3804000000809c02,0x680000003061a083,0x680000003471e083\n"
".quad 0x190e0000fca1dc23,0xc000000720932485,0x680000000c61a483,0x190e0000fc25dc23\n"
".quad 0xc00000076090a0a5,0xc00000074092a0a5,0xc00000073093a085,0x680000003071e483\n"
".quad 0xc0000007809328a5,0x680000000861a083,0x680000000c71e083,0x680000002c002083\n"
".quad 0xc0000007a090a8a5,0x380800000082dc02,0x6800000028412083,0x6800000038516083\n"
".quad 0x190e0000fcb1dc23,0xc0000007c092a885,0x381000000082dc02,0x6800000008002883\n"
".quad 0x680000000c61a883,0xc0000007e090a0a5,0xc0000007d093a085,0x190e0000fcb3dc23\n"
".quad 0x6800000034412883,0x680000002871e883,0x6800000030516883,0xc00000082092a4a5\n"
".quad 0x6800000008412083,0x680000000c002083,0xc00000084090a4a5,0x6800000038516083\n"
".quad 0xc0000008009320a5,0x680000002c412483,0x6800000028516483,0x3820000000829c02\n"
".quad 0x6800000008002483,0x3840000000809c02,0x680000003061a083,0x680000003471e083\n"
".quad 0x190e0000fca1dc23,0xc000000860932485,0x680000000c61a483,0x190e0000fc25dc23\n"
".quad 0xc0000008a090a0a5,0xc00000088092a0a5,0xc00000087093a085,0x680000003071e483\n"
".quad 0xc0000008c09328a5,0x680000000861a083,0x680000000c71e083,0xc0000008e090a8a5\n"
".quad 0x680000002c002083,0x388000000082dc02,0x6800000028412083,0x6800000038516083\n"
".quad 0xc00000090092a885,0x6800000008002883,0x3900000000809c02,0x190e0000fcb1dc23\n"
".quad 0x6800000030516883,0x190e0000fc23dc23,0xc00000091090a085,0x6800000034412883\n"
".quad 0x680000002871e883,0xc0000009209320a5,0xc00000094092a0a5,0x680000000c61a883\n"
".quad 0x6800000008516083,0x1a0efffffc85dc23,0xc00000098090a4a5,0x280000003c021de4\n"
".quad 0xc00000096093a4a5,0x6800000034002083,0x680000002861a083,0x6800000030412083\n"
".quad 0xc0000009a0932485,0x680000002c71e083,0x6800000008002483,0x680000000c61a483\n"
".quad 0xc0000009c092a8a5,0xc0000009e090a8a5,0x6800000038516483,0xc000000060135e85\n"
".quad 0x2800000020039de4,0x680000003c412483,0xc0000009b0922885,0x680000003071e483\n"
".quad 0xc000000070131e85,0x6800000028412883,0x680000000861a883,0x4801fffd80d29c03\n"
".quad 0x4800c00280e09c03,0xc00000008013de85,0x6800000020516883,0x4800fffffcc21c43\n"
".quad 0xc800000050109c85,0x48010000fcafdd03,0xc800000060129c85,0x680000002c002883\n"
".quad 0x1a8e0000fc81dc63,0x4800c00010f09c03,0xc800000070121c85,0x680000000c71e883\n"
".quad 0xc800000080109c85,0x4003ffd5400001e7,0xc000000000109e85,0x4800c000e0125c03\n"
".quad 0xc00000003010de85,0xc000000040121e85,0x400000002422dc43,0xc000000020109e85\n"
".quad 0x4800c00004331c03,0xc800000000b15c85,0xc800000010b11c85,0xc800000020b01c85\n"
".quad 0x4800c00050821c03,0x4800c00004229c03,0x188ec00280c1dc23,0xc800000030b19c85\n"
".quad 0xc800000020129c85,0xc800000030131c85,0x18000032f0009de2,0xc800000040121c85\n"
".quad 0xc800000040b1dc85,0x28000000fc00dde4,0x2800000024001de4,0x4003ffd0a00001e7\n"
".quad 0xc000000000039ca5,0xc000000020031ca5,0xc000000040029ca5,0xc000000060011ca5\n"
".quad 0x4801c00100209c03,0xc800003200039ca5,0xc800003220031ca5,0xc800003240029ca5\n"
".quad 0xc0000000a0021ca5,0x48000000fc30dc43,0x4801c064f02fdd03,0xc000000080029ca5\n"
".quad 0xc800003260011ca5,0xc0000000c0019ca5,0x1a8e0000fc31dc63,0xc0000000e0011ca5\n"
".quad 0xc800003280029ca5,0xc8000032a0021ca5,0xc8000032c0019ca5,0xc8000032e0011ca5\n"
".quad 0x4800c00100001c03,0x4003fffd400001e7,0xc000000010101e85,0x4800c00004001c03\n"
".quad 0x188ec0001001dc23,0xc800000010101c85,0x4003ffcc800001e7,0xc0000000c0101c85\n"
".quad 0x48010000fc0fdd03,0xc0000000b0101c85,0x1a8e0000fc01dc63,0x4003ff71600001e7\n"
".quad 0x4800c000e0101c03,0x1aab49ad2400dde2,0xc0000000d0135e85,0x4800c06400031c03\n"
".quad 0x68004000a0329c83,0xc000000090109e85,0xc0000000a010de85,0xc000000000c19ca5\n"
".quad 0x28000000fc025de4,0x28000000fc021de4,0x28004000c002dde4,0x201a400004a29c03\n"
".quad 0xc000000020c11ca5,0xc000000040c01c85,0x9400000060221ca5,0x2014d61f14b29ca3\n"
".quad 0x9400000010219c85,0x940000002021dc85,0x9400000030211c85,0x080193c324a29c02\n"
".quad 0x9400000040215c85,0x9400000050201c85,0x9400000000229c85,0x8000000000001de7\n"
".quad 0x4193bb302c000000,0x41dbe2ca5cc00000,0x41eec06a7ec00000,0x41eb5d5ec4600000\n"
".quad 0x41907f542c000000,0x41dbe2ca5cc00000,0x41eb5bf562e00000,0x41ea4a8b28600000\n"
".quad 0x41907f542c000000,0x41e90b4f2e800000,0x41e15acb2d800000,0x4197c2458c000000\n"
".quad 0x41ddee79b7400000,0x41e5d7e2e7c00000,0x41e15acb2d800000,0x41d097c722c00000\n"
".quad 0x41e1b03b24a00000,0x41e5d7e2e7c00000,0x41db4af6f6400000,0x41d7aabac2c00000\n"
".quad 0x41d395c7b7800000,0x41e1c6e9dbe00000,0x41e2afc71c000000,0x41d7aabac2c00000\n"
".quad 0x41daa3368b000000,0x41c3b65d68800000,0x41e2afc71c000000,0x41e15497b2e00000\n"
".quad 0x41ef2b913a600000,0x41ee2adf37400000,0x41e367beea600000,0x41d5aa3d24400000\n"
".quad 0x41ef2b913a600000,0x41e139a5d5e00000,0x41dae6e741800000,0x41d5aa3d24400000\n"
".quad 0x41ed7a2c10400000,0x41c203ad1e800000,0x41d2bcb909800000,0x41c7af2b52000000\n"
".quad 0x41d1394889c00000,0x41c203ad1e800000,0x41da7afcb1000000,0x41b998d310000000\n"
".quad 0x41d1394889c00000,0x41d9208054400000,0x41d2bb400b800000,0x41d545e5d7c00000\n"
".quad 0x41bd3a8b91000000,0x41b71d559f000000,0x41d2bb400b800000,0x41ac1475fa000000\n"
".quad 0x41d38f72d9c00000,0x41b71d559f000000,0x41e19a0301000000,0x41e9ab822a000000\n"
".quad 0x41e78bb8b6400000,0x41e214e210a00000,0x41ef401183400000,0x41e9ab822a000000\n"
".quad 0x41cf2d72ce800000,0x41ef20b326200000,0x41ef401183400000,0x41efac793ea00000\n"
".quad 0x41ea855a66c00000,0x41e72765e5c00000,0x41c4c9cd1f000000,0x41dc740f2cc00000\n"
".quad 0x41ea855a66c00000,0x41b0bbf846000000,0x41b666cc2f000000,0x41dc740f2cc00000\n"
".quad 0x41d0624f22800000,0x41c53b37fc800000,0x41d76aac40400000,0x41c0499d9f000000\n"
".quad 0x41d0ea192d000000,0x41c53b37fc800000,0x41e8c687a9800000,0x41e187c08ea00000\n"
".quad 0x41d0ea192d000000,0x41dcfd3604000000,0x41d8a1de42800000,0x41b6c4b076000000\n"
".quad 0x41ebd0d9a8c00000,0x41b8b36529000000,0x41d8a1de42800000,0x41d19b624fc00000\n"
".quad 0x41d1aba6dc000000,0x41b8b36529000000,0x41e2d29a8f800000,0x41e67eb020e00000\n"
".quad 0x41ef6950a4a00000,0x41e3fdba6a000000,0x41ef345765400000,0x41e67eb020e00000\n"
".quad 0x41e6169fc9c00000,0x41b1830c60000000,0x41ef345765400000,0x41d5849fb1800000\n"
".quad 0x41e0c9e010200000,0x4182f09528000000,0x41dc04a6c3800000,0x41e1d25cdcc00000\n"
".quad 0x41e0c9e010200000,0x41cd6fdc34800000,0x41eb81b86c800000,0x41e1d25cdcc00000\n"
".quad 0x41a3dc3334000000,0x41e1669a22800000,0x41d25cb3ff800000,0x41e098ce34600000\n"
".quad 0x41e3270829800000,0x41e1669a22800000,0x41e41de83d400000,0x41e9c908dc400000\n"
".quad 0x41e3270829800000,0x41e2b5ff6f000000,0x41d1b78074000000,0x41d2a5b785c00000\n"
".quad 0x41e2b69ee9c00000,0x41b16bcaf6000000,0x41d1b78074000000,0x41c4cc20b9000000\n"
".quad 0x41e70cb0ee000000,0x41b16bcaf6000000,0x41eb0178ff000000,0x4188cacfa8000000\n"
".quad 0x41ea60867d200000,0x41e83c4761400000,0x41eba4df7ae00000,0x4188cacfa8000000\n"
".quad 0x41e54c66de200000,0x41ed21dd90a00000,0x41eba4df7ae00000,0x41c38ca0f7000000\n"
".quad 0x41c67894dd000000,0x41d88935a6800000,0x41dd2e70b0c00000,0x41bc58a8c7000000\n"
".quad 0x41c67894dd000000,0x41e8343fbf000000,0x41e80de73e000000,0x41bc58a8c7000000\n"
".quad 0x41e490e041600000,0x41ef0ab9b9a00000,0x41c619ee80800000,0x41e101dd74c00000\n"
".quad 0x41e7073334c00000,0x41ef0ab9b9a00000,0x41e82884ae200000,0x41d84403c1800000\n"
".quad 0x41e7073334c00000,0x41efc75ff5e00000,0x41ea50f7fd800000,0x41da2599e9000000\n"
".quad 0x41bdd3921d000000,0x41e3663716200000,0x41ea50f7fd800000,0x41d548c9e5800000\n"
".quad 0x41e7772ab4c00000,0x41e3663716200000,0x41e56947c7600000,0x41df02c84c800000\n"
".quad 0x41c1c549f6800000,0x41eef2bedf600000,0x41d2cb5c9dc00000,0x41df02c84c800000\n"
".quad 0x41ed8f98b7a00000,0x41db44fbfd400000,0x41d2cb5c9dc00000,0x41b09b464d000000\n"
".quad 0x41e09c0637000000,0x41e9a7641ce00000,0x41e72d13e1800000,0x41927a2130000000\n"
".quad 0x41e09c0637000000,0x41ed166c93400000,0x41cfe75273800000,0x41927a2130000000\n"
".quad 0x41c03b4517000000,0x41c0f1878b800000,0x41e038a8f5e00000,0x41e27244e9800000\n"
".quad 0x419cf6b070000000,0x41c0f1878b800000,0x41ca22d171800000,0x41e7388898200000\n"
".quad 0x419cf6b070000000,0x41d710a0c9c00000,0x41e1ea85b3600000,0x41ef3a8d79200000\n"
".quad 0x41e0146b20800000,0x41e62e04a7200000,0x41e1ea85b3600000,0x41a41866c6000000\n"
".quad 0x41d9360728800000,0x41e62e04a7200000,0x41e7e72e67e00000,0x41ef62f887800000\n"
".quad 0x41e81a92ad000000,0x41c4007506000000,0x41e5fcfb6aa00000,0x41ef62f887800000\n"
".quad 0x41deec0d4b000000,0x41e1d90685e00000,0x41e5fcfb6aa00000,0x41ee66f818600000\n"
".quad 0x41dfca66c3400000,0x41ee21507c800000,0x41de761665400000,0x41c9dbcd10000000\n"
".quad 0x41dfca66c3400000,0x41c8de36d0000000,0x41eaeb40bde00000,0x41c9dbcd10000000\n"
".quad 0x41ee91a22ce00000,0x41d3a93e06c00000,0x41e3f55ba4200000,0x41c60e7552000000\n"
".quad 0x41c219f2f5000000,0x41d3a93e06c00000,0x41e060deec800000,0x41e3728c6d400000\n"
".quad 0x41c219f2f5000000,0x41d15cf440000000,0x41d3a296fe000000,0x41d1b8403b800000\n"
".quad 0x41b7cbec0d000000,0x41e2ae0b6d400000,0x41d3a296fe000000,0x41e643cbb6a00000\n"
".quad 0x41e4062d78a00000,0x41e2ae0b6d400000,0x41cea99783000000,0x41ee69cf4f000000\n"
".quad 0x41b42904cf000000,0x41dc240188800000,0x41db72fb37c00000,0x41ee69cf4f000000\n"
".quad 0x41ed15f537c00000,0x41e72bbafe600000,0x41db72fb37c00000,0x41c24d7a15000000\n"
".quad 0x41e0da6a7b200000,0x41e58493a0200000,0x41c52a641f800000,0x41e4aaf251800000\n"
".quad 0x41e0da6a7b200000,0x41d10d2a0d000000,0x41e30813dce00000,0x41e4aaf251800000\n"
".quad 0x41ee38899fe00000,0x41d328405b800000,0x41b54dcbf2000000,0x41e20da4ec800000\n"
".quad 0x41e134d8c7600000,0x41d328405b800000,0x41d6d89952c00000,0x41e490733a800000\n"
".quad 0x41e134d8c7600000,0x41efc52edb600000,0x41c84a1305000000,0x41e76959efa00000\n"
".quad 0x41a588ffee000000,0x41e2a1ec60200000,0x41c84a1305000000,0x41e92c675d600000\n"
".quad 0x41c8b9fc1b800000,0x41e2a1ec60200000,0x41ef1a0329600000,0x41ceb7d76d800000\n"
".quad 0x41e4f4f2e9400000,0x41da1f1f1f400000,0x41ee21a8a5200000,0x41ceb7d76d800000\n"
".quad 0x41bbe4a515000000,0x41c0886464000000,0x41ee21a8a5200000,0x41d417d96cc00000\n"
".quad 0x41e5d2226d400000,0x41ec224e58a00000,0x41eae0d0df200000,0x41e6df33bb200000\n"
".quad 0x41e5d2226d400000,0x41e2f14e0b600000,0x41e7e71eb6000000,0x41e6df33bb200000\n"
".quad 0x41ee4913f7200000,0x41c3ea9d9e000000,0x41ec6edb83200000,0x41ebaa4238200000\n"
".quad 0x41d492b397000000,0x41c3ea9d9e000000,0x41ea53ffb3800000,0x41d1c53902c00000\n"
".quad 0x41d492b397000000,0x41d695e0a9800000,0x41d96ed13e400000,0x41c5b323ea800000\n"
".quad 0x41e7a78bf4a00000,0x41dea892d3800000,0x41d96ed13e400000,0x41e968d3d5200000\n"
".quad 0x41e5963c9f000000,0x41dea892d3800000,0x41e6f6f7f9a00000,0x41bfa7d001000000\n"
".quad 0x41d4b70b6c000000,0x41ed0563d0a00000,0x41e02d9f4d200000,0x41bfa7d001000000\n"
".quad 0x41ee07ed71a00000,0x41e6b8d8fd000000,0x41e02d9f4d200000,0x41d27e99d1800000\n"
".quad 0x41e7cbddfa600000,0x41d28a9148000000,0x418f149330000000,0x41ee4aa5f3200000\n"
".quad 0x41e7cbddfa600000,0x41d6202184400000,0x41eb46f5a0400000,0x41ee4aa5f3200000\n"
".quad 0x41d5706fdb000000,0x41ea0334b6e00000,0x41e97095c1a00000,0x41e4e6c199800000\n"
".quad 0x41b03a7345000000,0x41ea0334b6e00000,0x41c88f7457000000,0x41e7dc644dc00000\n"
".quad 0x41b03a7345000000,0x41a02477c4000000,0x41eb062c72800000,0x41e178d025000000\n"
".quad 0x41d752a628000000,0x41e024f360200000,0x41eb062c72800000,0x41ce9afb5c800000\n"
".quad 0x41e9d663d0000000,0x41e024f360200000,0x41dc2790abc00000,0x41e843ff8f400000\n"
".quad 0x41d27c2724000000,0x41d2b29ebfc00000,0x41cd80d8e8000000,0x41e843ff8f400000\n"
".quad 0x41ddbb749e000000,0x41eb82d54ac00000,0x41cd80d8e8000000,0x41e7e36477600000\n"
".quad 0x41b107731a000000,0x41bd90a040000000,0x41e2bd95bc400000,0x41dfbc10ef000000\n"
".quad 0x41b107731a000000,0x41dbc609e9800000,0x41e3eb3732000000,0x41dfbc10ef000000\n"
".quad 0x41ef05c322200000,0x41ae6ae0c4000000,0x41c702a946800000,0x41dd9c27fa000000\n"
".quad 0x41e81f58c7a00000,0x41ae6ae0c4000000,0x41d4c7243ec00000,0x41ef6974fd200000\n"
".quad 0x41e81f58c7a00000,0x41dfcc3dfac00000,0x41e4381010000000,0x41c2b57856800000\n"
".quad 0x41e1240ebca00000,0x418104c2b8000000,0x41e4381010000000,0x41e5bf5d94400000\n"
".quad 0x41e3a80182000000,0x418104c2b8000000,0x41e3475bfae00000,0x41cdc35b37000000\n"
".quad 0x41effa96e8200000,0x41dab3121dc00000,0x41e5041188000000,0x41cdc35b37000000\n"
".quad 0x419db46138000000,0x41ec8b538fa00000,0x41e5041188000000,0x41cd293a3d800000\n"
".quad 0x41e7d9305c400000,0x41bda8daa9000000,0x41ebb30779c00000,0x41ebd8134fc00000\n"
".quad 0x41e7d9305c400000,0x41ee267134400000,0x41c9abea0d000000,0x41ebd8134fc00000\n"
".quad 0x41e3dc27e5200000,0x41b1efe5b8000000,0x41e7b107ec200000,0x41ca9d60e0800000\n"
".quad 0x41de453a42000000,0x41b1efe5b8000000,0x41ec5d230f400000,0x41e1fae8b1200000\n"
".quad 0x41de453a42000000,0x41d51fa555c00000,0x41e6e30f9b400000,0x41e32fcc09a00000\n"
".quad 0x41ee8e478a600000,0x41d47e80b4000000,0x41e6e30f9b400000,0x41c942cfdc800000\n"
".quad 0x41eb107342800000,0x41d47e80b4000000,0x41e4786b5c400000,0x41e88fc650a00000\n"
".quad 0x41cac3ecb6000000,0x41d9f82ace400000,0x41aa2372b2000000,0x41e88fc650a00000\n"
".quad 0x41c88c7222800000,0x41c3e6c06e000000,0x41aa2372b2000000,0x41e3abcce3800000\n"
".quad 0x41e6a74e55200000,0x41eb044412800000,0x41a34a920c000000,0x41c969576b000000\n"
".quad 0x41e6a74e55200000,0x41ecbb76b1400000,0x41e9092733800000,0x41c969576b000000\n"
".quad 0x41ebd2827f200000,0x41eeee7591000000,0x41ef1f17d2600000,0x41afc5a1e4000000\n"
".quad 0x41d9ce4980c00000,0x41eeee7591000000,0x41c2d74723800000,0x41ecca901f400000\n"
".quad 0x41d9ce4980c00000,0x41d93ec3e5c00000,0x41d0361058800000,0x41e1c37e1a400000\n"
".quad 0x41e499ad10200000,0x41be25a24a000000,0x41d0361058800000,0x41e81b7b74400000\n"
".quad 0x41c813e778000000,0x41be25a24a000000,0x41e1e6e1bfc00000,0x41e18978c2e00000\n"
".quad 0x41921920d8000000,0x41ca8a8463800000,0x41da1de38f400000,0x41e18978c2e00000\n"
".quad 0x41e73f6378e00000,0x41ecc702ee000000,0x41da1de38f400000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x41d68540fc000000,0x41ec021fa1c00000,0x41d800b2b0000000,0x41effbc769600000\n"
".quad 0x41d68540fc000000,0x41ecfb6dcb800000,0x41ecc1b8fda00000,0x41effbc769600000\n"
".quad 0x41eba15674000000,0x41ccf88eaf000000,0x41ccc0e610800000,0x41ca2ae1cd000000\n"
".quad 0x41efa77766a00000,0x41ccf88eaf000000,0x41dcb58179c00000,0x41d59614d8400000\n"
".quad 0x41efa77766a00000,0x41e7d01a8ac00000,0x41ea0ebb6a800000,0x41e7a6667c400000\n"
".quad 0x41e7b62768800000,0x41eccb8d67e00000,0x41ea0ebb6a800000,0x41e6a3498d200000\n"
".quad 0x41e2f9cc10400000,0x41eccb8d67e00000,0x41e6344bb8800000,0x41da782eb1800000\n"
".quad 0x41d1bb478dc00000,0x41ee84099d800000,0x41ec69ddbd400000,0x41da782eb1800000\n"
".quad 0x41c7873925000000,0x41eeb1b36fc00000,0x41ec69ddbd400000,0x41dff7e3a4400000\n"
".quad 0x41edf8f194c00000,0x41eec5a142a00000,0x41dcf3aa5fc00000,0x41d8f61de6400000\n"
".quad 0x41edf8f194c00000,0x41cb51b0c6000000,0x41ee78a616800000,0x41d8f61de6400000\n"
".quad 0x419bc91180000000,0x41a3beeb40000000,0x41d1f6ab12400000,0x41de5c44a5800000\n"
".quad 0x41d586a9c4000000,0x41a3beeb40000000,0x41a34d8060000000,0x41e37fb1c2600000\n"
".quad 0x41d586a9c4000000,0x41dde7c447c00000,0x41e9c3cd00400000,0x41e6d11b1e800000\n"
".quad 0x41ee31816ae00000,0x41cfb7bdc0000000,0x41e9c3cd00400000,0x41ab827d98000000\n"
".quad 0x41ee38a439a00000,0x41cfb7bdc0000000,0x41e088ead8600000,0x41b1a8cd3f000000\n"
".quad 0x41e9b90973c00000,0x41df0425e7400000,0x41daa90aee400000,0x41b1a8cd3f000000\n"
".quad 0x41e9cd98afe00000,0x41df40e868000000,0x41daa90aee400000,0x41e9aefef4600000\n"
".quad 0x41e512886e600000,0x41eccf2059600000,0x41b8788de3000000,0x41d7a5f219800000\n"
".quad 0x41e512886e600000,0x41d5e59dc3800000,0x41e49ca740400000,0x41d7a5f219800000\n"
".quad 0x41e3934c4f200000,0x41e87f6a31400000,0x41b894c90d000000,0x41e251adbf800000\n"
".quad 0x41efcae39ea00000,0x41e87f6a31400000,0x41a084b6d2000000,0x41b914f3f4000000\n"
".quad 0x41efcae39ea00000,0x41ee81be5b800000,0x41eca4fdd0c00000,0x41e21b2610c00000\n"
".quad 0x41e876c05f800000,0x41e28622a9800000,0x41eca4fdd0c00000,0x41efaedcae200000\n"
".quad 0x41ea87c4d3a00000,0x41e28622a9800000,0x41ed819c5d600000,0x4190324e0c000000\n"
".quad 0x41d34c04d0c00000,0x41e3cd850fc00000,0x41be975205000000,0x4190324e0c000000\n"
".quad 0x41d48f89d9c00000,0x41853ff2d0000000,0x41be975205000000,0x4194bc53f4000000\n"
".quad 0x41e45bffbd800000,0x41dbd03f46000000,0x41c862a87f000000,0x41e2eda24b000000\n"
".quad 0x41e45bffbd800000,0x41e8446eea800000,0x41d159d560c00000,0x41e2eda24b000000\n"
".quad 0x41d0c1a20bc00000,0x41ef4969c6c00000,0x41e7834da1e00000,0x41df9c746d000000\n"
".quad 0x41d0ebcbf1400000,0x41ef4969c6c00000,0x41dea4e528400000,0x41e83a33dca00000\n"
".quad 0x41d0ebcbf1400000,0x41e175f14c000000,0x41c069958a000000,0x41bdd26a3d000000\n"
".quad 0x41d005b33d400000,0x41b53eea51000000,0x41c069958a000000,0x41d85ce5ff000000\n"
".quad 0x418c019ef8000000,0x41b53eea51000000,0x41d2cc712bc00000,0x41c51edf45000000\n"
".quad 0x41b8fb8de5000000,0x41ddfb3d7f800000,0x41c50e1388800000,0x41c51edf45000000\n"
".quad 0x41d098a938c00000,0x41c1736e1e800000,0x41c50e1388800000,0x4192244d08000000\n"
".quad 0x41d345194e400000,0x41e79b6259600000,0x41b5d43adc000000,0x41e8ba9f16200000\n"
".quad 0x41d345194e400000,0x41d02befe4400000,0x41d8f67e1a800000,0x41e8ba9f16200000\n"
".quad 0x41ed261eea600000,0x41e7bcfb8d800000,0x41ef35a01bc00000,0x41d20e9446800000\n"
".quad 0x41c688c169000000,0x41e7bcfb8d800000,0x41c13bcbb6000000,0x41e2c48982c00000\n"
".quad 0x41c688c169000000,0x41d8b74e9b400000,0x41d413824bc00000,0x41de8dc2c7000000\n"
".quad 0x41c5f018bf800000,0x41ee904f12c00000,0x41d413824bc00000,0x41ca2f64a6000000\n"
".quad 0x41d3464ff7c00000,0x41ee904f12c00000,0x41c638d56d000000,0x41ef44f246600000\n"
".quad 0x41e99aba3d200000,0x41dc508fee800000,0x41e729bba4c00000,0x41ef44f246600000\n"
".quad 0x41e419e153600000,0x41d4f0a79d000000,0x41e729bba4c00000,0x41b2c0e3b6000000\n"
".quad 0x41cc8fe303000000,0x41eb86f6cc000000,0x41d1233be5400000,0x41ec16b91cc00000\n"
".quad 0x41cc8fe303000000,0x41c7a49a1d800000,0x41bfcf9e75000000,0x41ec16b91cc00000\n"
".quad 0x41d68e6fe2800000,0x41eeb18514e00000,0x41e9ec6c47600000,0x41ea54e811e00000\n"
".quad 0x41ec0decfca00000,0x41eeb18514e00000,0x41d5b9f266c00000,0x41e9308edc400000\n"
".quad 0x41ec0decfca00000,0x41e3ff7bb0600000,0x41cd3bf543800000,0x41df356bee000000\n"
".quad 0x41bababe4c000000,0x41d52df565400000,0x41cd3bf543800000,0x41e95fd377a00000\n"
".quad 0x41b34ba450000000,0x41d52df565400000,0x41b42fdba2000000,0x41e5ed4481c00000\n"
".quad 0x41effd769b400000,0x41ea72e8ce000000,0x41bf765fe1000000,0x41e5ed4481c00000\n"
".quad 0x41ecb4c4ce400000,0x41ef5c68eaa00000,0x41bf765fe1000000,0x41d042dc42000000\n"
".quad 0x41dd71c6e9c00000,0x41df2e7865400000,0x41c236fcbf800000,0x41edac4e77000000\n"
".quad 0x41dd71c6e9c00000,0x41e65d5b88c00000,0x41de9f7bcf400000,0x41edac4e77000000\n"
".quad 0x41dbf1406ac00000,0x41e6213f5aa00000,0x41ca40c525800000,0x41e23c2b67000000\n"
".quad 0x41e585d6a6800000,0x41e6213f5aa00000,0x41ea3d0484a00000,0x41e6802677000000\n"
".quad 0x41e585d6a6800000,0x41e4361901c00000,0x41b8fb7d8b000000,0x41e62c623f200000\n"
".quad 0x41c649c047000000,0x41ee8f5d1ca00000,0x41b8fb7d8b000000,0x41efc610db800000\n"
".quad 0x41e3cdb73d800000,0x41ee8f5d1ca00000,0x41e2f1aa7e400000,0x41ee1fab28600000\n"
".quad 0x41d8090adf800000,0x41d1220eb8000000,0x41d2e142f5800000,0x41ee1fab28600000\n"
".quad 0x41ea0cb635400000,0x41e70dc7e8200000,0x41d2e142f5800000,0x41e5f91b7ca00000\n"
".quad 0x41ed6cdfea400000,0x41da71713b800000,0x41dfa2bd58c00000,0x41e043b5dd800000\n"
".quad 0x41ed6cdfea400000,0x41e18d1626c00000,0x41e50480e9e00000,0x41e043b5dd800000\n"
".quad 0x41bea2753d000000,0x41e6b385da400000,0x41e332c000a00000,0x41e292813ac00000\n"
".quad 0x41efdf61cda00000,0x41e6b385da400000,0x41e7726228800000,0x41e0c2560ec00000\n"
".quad 0x41efdf61cda00000,0x41eafcfa3b000000,0x41d4bc43d6800000,0x41b93d76c6000000\n"
".quad 0x41e3468cc0e00000,0x41ea58d6a1200000,0x41d4bc43d6800000,0x41cd5d9ade800000\n"
".quad 0x41a2ca4c54000000,0x41ea58d6a1200000,0x41ce4427e7800000,0x41870b9160000000\n"
".quad 0x41e35dba8ca00000,0x41c87f11e0000000,0x41cae32555000000,0x41870b9160000000\n"
".quad 0x41d99424c2c00000,0x41edf2e41bc00000,0x41cae32555000000,0x41cc557f87000000\n"
".quad 0x41d3a5a376800000,0x41d6d036d6000000,0x41ebab1639600000,0x41efd0ae4de00000\n"
".quad 0x41d3a5a376800000,0x41d8a918ed800000,0x41e3f7a0a1400000,0x41efd0ae4de00000\n"
".quad 0x41d3ec897ec00000,0x41c6f737ac800000,0x41e8361324000000,0x41eaa98c38000000\n"
".quad 0x41e431c2b8600000,0x41c6f737ac800000,0x41e648991e600000,0x41e715473f200000\n"
".quad 0x41e431c2b8600000,0x41bf1f324c000000,0x41e4e2d7be200000,0x41dca4cd8b800000\n"
".quad 0x41e792e503800000,0x41bc77bf03000000,0x41e4e2d7be200000,0x41dfe46a0e800000\n"
".quad 0x41e0c8f9b0600000,0x41bc77bf03000000,0x41e6c9a9dd800000,0x41a8d5b81a000000\n"
".quad 0x41eb12783c600000,0x41ea6fef25400000,0x41ecff9348800000,0x41a8d5b81a000000\n"
".quad 0x41bece4018000000,0x41e9a27c47200000,0x41ecff9348800000,0x41d86ba78dc00000\n"
".quad 0x41db0fc6c6400000,0x41ea99725c600000,0x41cc9852a6000000,0x41e9f17c73c00000\n"
".quad 0x41db0fc6c6400000,0x41c9adec0a000000,0x41e73df6f7400000,0x41e9f17c73c00000\n"
".quad 0x41e332f355600000,0x41ef979267000000,0x41e58b4272e00000,0x41df53b1f0400000\n"
".quad 0x41ee4865fd400000,0x41ef979267000000,0x41d545415c800000,0x41e230270e200000\n"
".quad 0x41ee4865fd400000,0x41ea835a1a400000,0x41e5be59fbe00000,0x418f118698000000\n"
".quad 0x41e9d945fa600000,0x41eaabe04e400000,0x41e5be59fbe00000,0x41ea090612e00000\n"
".quad 0x41e85683dea00000,0x41eaabe04e400000,0x41ec976c34e00000,0x41e60ca584a00000\n"
".quad 0x41d457204c400000,0x41ee6ab960c00000,0x41ac311268000000,0x41e60ca584a00000\n"
".quad 0x41ec54ce08200000,0x41e4052107400000,0x41ac311268000000,0x41e2fa2ebd400000\n"
".quad 0x41ef2edfedc00000,0x41e495ba37600000,0x41e7d799ee000000,0x41eb4e429ee00000\n"
".quad 0x41ef2edfedc00000,0x41ea677e84800000,0x41ef97a8e0c00000,0x41eb4e429ee00000\n"
".quad 0x41e5421223600000,0x41e38264e8000000,0x41ef91f0bbe00000,0x41d5e7c848400000\n"
".quad 0x41dc38ffb4800000,0x41e38264e8000000,0x41e638cb8ee00000,0x41e67a9735200000\n"
".quad 0x41dc38ffb4800000,0x41e7cf0a78200000,0x41dbd7a083c00000,0x41e963a2cec00000\n"
".quad 0x41d8a1174e000000,0x41d9033c19800000,0x41dbd7a083c00000,0x41ef034d60a00000\n"
".quad 0x41d6025e9e400000,0x41d9033c19800000,0x41eee214fa400000,0x41c79beb18800000\n"
".quad 0x41efacc8d4400000,0x41e0892ed6400000,0x41ec9cde71e00000,0x41c79beb18800000\n"
".quad 0x41ea0711d5200000,0x41e633d1d1c00000,0x41ec9cde71e00000,0x41e16d3d37600000\n"
".quad 0x41bc8a9b04000000,0x41e1b7fe62c00000,0x41ca4a001e800000,0x41d8f3d6f5400000\n"
".quad 0x41bc8a9b04000000,0x41ea9ec6ab200000,0x41ea9b912c000000,0x41d8f3d6f5400000\n"
".quad 0x41d2831019400000,0x41e3a3f1be800000,0x41dd657ce6800000,0x419117a77c000000\n"
".quad 0x41d24cd7c9c00000,0x41e3a3f1be800000,0x41d3156cf8400000,0x41ebe0cb49c00000\n"
".quad 0x41d24cd7c9c00000,0x41cda016db000000,0x41d13c8e83400000,0x41d0670c5ac00000\n"
".quad 0x41aa748c96000000,0x41e58c6f41a00000,0x41d13c8e83400000,0x41d66fda4d400000\n"
".quad 0x41e10b46cf600000,0x41e58c6f41a00000,0x41eb7d14c4c00000,0x41d4abeb19000000\n"
".quad 0x41e75bb60f000000,0x41d287fe13400000,0x41d9b43a8a800000,0x41d4abeb19000000\n"
".quad 0x41e88f4b7a600000,0x41cfb873ff800000,0x41d9b43a8a800000,0x41df678e05000000\n"
".quad 0x41e5077027000000,0x41de504e87400000,0x41deddcadcc00000,0x41a45f8fd0000000\n"
".quad 0x41e5077027000000,0x41d3b3a6b1c00000,0x41e2d00587800000,0x41a45f8fd0000000\n"
".quad 0x41e3ca5bf4a00000,0x41eb3954dc800000,0x41ed01ada8200000,0x41e2826cc8000000\n"
".quad 0x41d3938b4e800000,0x41eb3954dc800000,0x41d9696138400000,0x41d4d390e0800000\n"
".quad 0x41d3938b4e800000,0x41edeb03c9200000,0x41eec4e4c9400000,0x41d8e8e617c00000\n"
".quad 0x41d9006e68000000,0x41e7d7869ac00000,0x41eec4e4c9400000,0x41e9f96998800000\n"
".quad 0x41e53d5564000000,0x41e7d7869ac00000,0x41e6eb638fa00000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3ff0000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3ff0000000000000,0x41effe7408e00000,0x41356abc00000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x3ff0000000000000\n"
".quad 0x41effe7408e00000,0x41356abc00000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x41effe7408e00000,0x41356abc00000000,0x0000000000000000,0x41effe7408e00000\n"
".quad 0x41356abc00000000,0x41ad2aca8e000000,0x41e5eb35ff400000,0x41effe7408e00000\n"
".quad 0x41a1df5e52000000,0x41bd2aca8e000000,0x41e5eb35ff400000,0x41d6c26df7800000\n"
".quad 0x41e48ce987a00000,0x41db499aba000000,0x41ee57f1ed600000,0x41cc00629b800000\n"
".quad 0x41e48ce987a00000,0x41dec306ff400000,0x41e80d0c69800000,0x41cc00629b800000\n"
".quad 0x41c5f2688e800000,0x41e6113744800000,0x41b464380f000000,0x41b715be86000000\n"
".quad 0x41cfa9de95000000,0x41e6113744800000,0x41e605e45f000000,0x41b450198d000000\n"
".quad 0x41cfa9de95000000,0x41d287956f800000,0x41e087ed30600000,0x41d97823e7400000\n"
".quad 0x41de18526b000000,0x41ecaaa3dfe00000,0x41e087ed30600000,0x41eccdd44ee00000\n"
".quad 0x41e12d4b5ce00000,0x41ecaaa3dfe00000,0x41e827320e600000,0x41e9babf0fc00000\n"
".quad 0x41ebbae7d8000000,0x41ee448479400000,0x4147022500000000,0x41e9babf0fc00000\n"
".quad 0x41cb68d864800000,0x41c247e959000000,0x4147022500000000,0x41dd229383800000\n"
".quad 0x41d513c91a000000,0x41da049af4800000,0x41eb388319a00000,0x41d8830837400000\n"
".quad 0x41d513c91a000000,0x41ea16aaa9000000,0x41e168011c400000,0x41d8830837400000\n"
".quad 0x41d16f9085c00000,0x41876dfae0000000,0x41e9a4360a600000,0x41dbaf7f95c00000\n"
".quad 0x41d893f49d400000,0x41876dfae0000000,0x41b3d93875000000,0x41e72a3a5e000000\n"
".quad 0x41d893f49d400000,0x41e1210f4a400000,0x41e11d64acc00000,0x41c9b57db8000000\n"
".quad 0x41d4dc6d8b000000,0x41cdb4453c800000,0x41e11d64acc00000,0x41e99f7acee00000\n"
".quad 0x41d6155add000000,0x41cdb4453c800000,0x41eee475b0000000,0x41bb58777d000000\n"
".quad 0x41ce0551f5800000,0x41ef99187aa00000,0x41eda685cf800000,0x41bb58777d000000\n"
".quad 0x41c081d18f800000,0x41e04b2d13400000,0x41eda685cf800000,0x41eb0bba8ea00000\n"
".quad 0x41dfbf03f7800000,0x41b1735fe1000000,0x41d4c00fd9c00000,0x41d35c61f3c00000\n"
".quad 0x41dfbf03f7800000,0x41e34a73bb600000,0x41d22408cf800000,0x41d35c61f3c00000\n"
".quad 0x41ca988ad7800000,0x41ddca4020c00000,0x41e6326be9400000,0x41ddbec274800000\n"
".quad 0x41e0025324e00000,0x41ddca4020c00000,0x41ed39ff01c00000,0x4198c0a748000000\n"
".quad 0x41e0025324e00000,0x41d7a21f12000000,0x41df8112a9c00000,0x41e82549f3600000\n"
".quad 0x41e4b141f3e00000,0x41d4de66af800000,0x41df8112a9c00000,0x41e67cc9ff800000\n"
".quad 0x41bfe86d38000000,0x41d4de66af800000,0x41e04e4ac9200000,0x41da927cae000000\n"
".quad 0x41eaa5efb1e00000,0x41dc6fa82d400000,0x41b69a4995000000,0x41da927cae000000\n"
".quad 0x41c0858098800000,0x41adcf07ae000000,0x41b69a4995000000,0x41edf8f624800000\n"
".quad 0x41ed71c000000000,0x41dff083bc000000,0x41cf2e0515000000,0x41d7b8f825000000\n"
".quad 0x41ed71c000000000,0x41d6814051000000,0x41b6bab1c6000000,0x41d7b8f825000000\n"
".quad 0x41e0cfeb93e00000,0x41ebae25c6400000,0x41c3276561800000,0x41eaefb810400000\n"
".quad 0x41ed9dba0e400000,0x41ebae25c6400000,0x41e1ec69f3200000,0x41c67b23b3800000\n"
".quad 0x41ed9dba0e400000,0x41d32c3c08000000,0x41c2b2bba8800000,0x41ccb70c60000000\n"
".quad 0x41d6f7c353000000,0x41bb76c63a000000,0x41c2b2bba8800000,0x41d03d9c32400000\n"
".quad 0x41e43fa2ba400000,0x41bb76c63a000000,0x41e606c6c7400000,0x41e9dc97e5200000\n"
".quad 0x41e1882b25200000,0x41e652b419000000,0x41b91004dd000000,0x41e9dc97e5200000\n"
".quad 0x41e08d859b600000,0x41b637819b000000,0x41b91004dd000000,0x41b910366a000000\n"
".quad 0x41a24d42f6000000,0x41ea133505800000,0x41e3d6956ec00000,0x41e86ca937a00000\n"
".quad 0x41a24d42f6000000,0x41ee724248600000,0x41e2b4e610c00000,0x41e86ca937a00000\n"
".quad 0x41e8a9acda600000,0x41e09a4a43200000,0x41c888ad0d800000,0x41edbf9b9cc00000\n"
".quad 0x41d93aecca400000,0x41e09a4a43200000,0x41e11adf63c00000,0x41d4e3b861000000\n"
".quad 0x41d93aecca400000,0x41e2d880abc00000,0x41d64effb1000000,0x41efb06d8f600000\n"
".quad 0x41ebe984f0400000,0x41c2cd238e800000,0x41d64effb1000000,0x41c2aff635800000\n"
".quad 0x41c58254b1800000,0x41c2cd238e800000,0x41e327ee8a200000,0x41e6a5b564200000\n"
".quad 0x41d7b54e05c00000,0x41bf5af451000000,0x41c3b5a85e800000,0x41e6a5b564200000\n"
".quad 0x41efa29f39000000,0x41c5ea9713000000,0x41c3b5a85e800000,0x41db86f06d400000\n"
".quad 0x41ee1f337c400000,0x41ef9a89f5e00000,0x41c21408c4800000,0x41e3b48de9a00000\n"
".quad 0x41ee1f337c400000,0x41e3ce8040c00000,0x41d4006344c00000,0x41e3b48de9a00000\n"
".quad 0x41e1f46b00000000,0x41d0556f92400000,0x41d51a90a2400000,0x41d66135f8400000\n"
".quad 0x41a073d94c000000,0x41d0556f92400000,0x41d81b394e800000,0x41dd6e8be8c00000\n"
".quad 0x41a073d94c000000,0x41c1dd7777000000,0x4191a194e8000000,0x41e6180b12600000\n"
".quad 0x418a652a68000000,0x41ecb94a7b400000,0x4191a194e8000000,0x41edaa8e4d000000\n"
".quad 0x41e8fe0225600000,0x41ecb94a7b400000,0x41efd26e83a00000,0x41c83dd394800000\n"
".quad 0x41e9cb27dee00000,0x41cf241ba4800000,0x41e6915e99800000,0x41c83dd394800000\n"
".quad 0x41ea173986400000,0x41e8bf5576000000,0x41e6915e99800000,0x41e6c905ab600000\n"
".quad 0x41cc0e609e000000,0x41da9569a4800000,0x41d70b6050000000,0x41eeac8695e00000\n"
".quad 0x41cc0e609e000000,0x41e0bec479200000,0x41d5c3d7f8400000,0x41eeac8695e00000\n"
".quad 0x41ef6adfd6400000,0x41e8faf652a00000,0x41e13fb1cbc00000,0x41c30b696a800000\n"
".quad 0x419684e3c0000000,0x41e8faf652a00000,0x41d2854855400000,0x41ed89dc96800000\n"
".quad 0x419684e3c0000000,0x41e0dff6b6400000,0x41dcb43253000000,0x41d0833ef8c00000\n"
".quad 0x41e1cfe95be00000,0x41b6f692f1000000,0x41dcb43253000000,0x41ea99029aa00000\n"
".quad 0x41ebc8041bc00000,0x41b6f692f1000000,0x41b0223c21000000,0x41cfc2844c000000\n"
".quad 0x41e64c0d2ca00000,0x41ef44fc04200000,0x41e5816b48800000,0x41cfc2844c000000\n"
".quad 0x41c6537093800000,0x41db8df0c1c00000,0x41e5816b48800000,0x418104ae50000000\n"
".quad 0x41d4893b31c00000,0x41cc5c5bc8800000,0x41c414c4f4000000,0x41cc4719d1800000\n"
".quad 0x41d4893b31c00000,0x41ec60d74f000000,0x41cba08d81800000,0x41cc4719d1800000\n"
".quad 0x41dc2f770e000000,0x41d0d879be800000,0x41ebd3b020a00000,0x41d5b7bb5b800000\n"
".quad 0x41e90e42cc000000,0x41d0d879be800000,0x41c30b2c9f000000,0x41d4e10f89800000\n"
".quad 0x41e90e42cc000000,0x41e0cc0a11e00000,0x41e1c4701fc00000,0x41d9c7ccdbc00000\n"
".quad 0x41e53224a2c00000,0x41daef0800400000,0x41e1c4701fc00000,0x41b4f24cb4000000\n"
".quad 0x41d7661516c00000,0x41daef0800400000,0x41e6b48292800000,0x41efa16178600000\n"
".quad 0x41e24031c9400000,0x41dac7521f000000,0x41d26f87af400000,0x41efa16178600000\n"
".quad 0x41a1183d68000000,0x41eb4c0333000000,0x41d26f87af400000,0x41e8afa892400000\n"
".quad 0x41efc49731400000,0x41cf38044c000000,0x41ebb739c5200000,0x41e781c777600000\n"
".quad 0x41efc49731400000,0x41dd861ccbc00000,0x41efe65c19400000,0x41e781c777600000\n"
".quad 0x41dde16e50400000,0x41e85008e5200000,0x41d6e2a281400000,0x41e5fd91db200000\n"
".quad 0x41d9c4af7d400000,0x41e85008e5200000,0x41d1018562400000,0x41e0e7b41e600000\n"
".quad 0x41d9c4af7d400000,0x41e1a2d189800000,0x4194015dc8000000,0x41effebe53800000\n"
".quad 0x41d427711d000000,0x41d51c30b4400000,0x4194015dc8000000,0x41cf0530d0800000\n"
".quad 0x41d37128b6400000,0x41d51c30b4400000,0x41e7f27fd7200000,0x41d55f27b9c00000\n"
".quad 0x41e5f0cd17400000,0x41e4830242000000,0x41ee1c9eb2c00000,0x41d55f27b9c00000\n"
".quad 0x41d3a0f2f3c00000,0x41b43224f2000000,0x41ee1c9eb2c00000,0x41b1eb39fc000000\n"
".quad 0x41de9e3969c00000,0x41d658830b400000,0x41da426daf000000,0x41d530a9e1c00000\n"
".quad 0x41de9e3969c00000,0x41eaae7484a00000,0x41d1fe7b92c00000,0x41d530a9e1c00000\n"
".quad 0x41ef14f90f800000,0x41ee495745000000,0x41dcd3903a400000,0x41e6b8e2afa00000\n"
".quad 0x41d9ff4291c00000,0x41ee495745000000,0x41cc3ec916000000,0x41ed7219dc600000\n"
".quad 0x41d9ff4291c00000,0x41d8384a8f000000,0x41eaa6a212600000,0x41e4b3e801600000\n"
".quad 0x41d9c74db2800000,0x41cf47d1e7000000,0x41eaa6a212600000,0x41df216d30000000\n"
".quad 0x41d7644a8b400000,0x41cf47d1e7000000,0x41d475d777400000,0x41ed7e73eec00000\n"
".quad 0x41c0f60530000000,0x41b870c01c000000,0x41ea757b75c00000,0x41ed7e73eec00000\n"
".quad 0x41c9e9940d800000,0x41d90b13b8000000,0x41ea757b75c00000,0x41df6bbdda800000\n"
".quad 0x41e2f39e48400000,0x41cb3b1d24800000,0x41df789557000000,0x41ce2ca0f7000000\n"
".quad 0x41e2f39e48400000,0x41e2f79fd9e00000,0x41e7671059400000,0x41ce2ca0f7000000\n"
".quad 0x41d13eb987800000,0x41c16e118c800000,0x41e0ef3322a00000,0x41d850d49ec00000\n"
".quad 0x41e6747901e00000,0x41c16e118c800000,0x41eda21e1d200000,0x41938fe3bc000000\n"
".quad 0x41e6747901e00000,0x41eaacc14bc00000,0x41e7605b70c00000,0x41e1e90764a00000\n"
".quad 0x41eaadf74ac00000,0x41eb58224a800000,0x41e7605b70c00000,0x41c3929034800000\n"
".quad 0x41da4c9340c00000,0x41eb58224a800000,0x41e4ce43dba00000,0x41eb13a87d800000\n"
".quad 0x41ecf5ecafe00000,0x41ead5ef0d400000,0x41e9d0a79ba00000,0x41eb13a87d800000\n"
".quad 0x41e75dc2a2400000,0x41e52e91b4200000,0x41e9d0a79ba00000,0x41d44dbe8a000000\n"
".quad 0x41e810c73f400000,0x41efe102da800000,0x41e9893872400000,0x41ecad5746c00000\n"
".quad 0x41e810c73f400000,0x41df705035400000,0x41e230c41e400000,0x41ecad5746c00000\n"
".quad 0x41d1dbfcd7c00000,0x41ddebb42e400000,0x414d83a080000000,0x41e8d92749a00000\n"
".quad 0x41df08ce42c00000,0x41ddebb42e400000,0x41e171457ee00000,0x41ca7860e3800000\n"
".quad 0x41df08ce42c00000,0x41e9e1fca1600000,0x41e7cae3db400000,0x41c0d7aad5800000\n"
".quad 0x41b24d5f43000000,0x41c74fcbb6800000,0x41e7cae3db400000,0x41a3fb49d4000000\n"
".quad 0x41e03e0c15800000,0x41c74fcbb6800000,0x41ec660763e00000,0x41e89cfcc6c00000\n"
".quad 0x41e49cd6f2400000,0x41cb144d26800000,0x41e3dbd8eca00000,0x41e89cfcc6c00000\n"
".quad 0x41e2a05c40200000,0x41e8b51cee600000,0x41e3dbd8eca00000,0x41eff47a9f000000\n"
".quad 0x41e69921aba00000,0x41d66fea3d000000,0x41d6d2b7bf800000,0x41c33f182e800000\n"
".quad 0x41e69921aba00000,0x41e5ecbc7aa00000,0x41e06e66b1000000,0x41c33f182e800000\n"
".quad 0x41ed9ffe30600000,0x41eb3483c8400000,0x41d89f8585400000,0x41d93062fec00000\n"
".quad 0x41d34bff6a000000,0x41eb3483c8400000,0x41a8f489fe000000,0x41e702d0fce00000\n"
".quad 0x41d34bff6a000000,0x41e7a153b5800000,0x41e111fc57c00000,0x41df333001c00000\n"
".quad 0x41e655df6d400000,0x41ee8074bc800000,0x41e111fc57c00000,0x41e841b10e000000\n"
".quad 0x41c992f908000000,0x41ee8074bc800000,0x41eea4f4c5200000,0x41e6596962e00000\n"
".quad 0x41edc3f0be400000,0x41d3e0b453800000,0x41eddc3903e00000,0x41e6596962e00000\n"
".quad 0x41e8c1f870e00000,0x41efdfd5dd400000,0x41eddc3903e00000,0x41cb973075800000\n"
".quad 0x41df6fc681000000,0x41dc038efc000000,0x41d95af61a800000,0x41d632c35f800000\n"
".quad 0x41df6fc681000000,0x41e4439f11800000,0x41a2e68cca000000,0x41d632c35f800000\n"
".quad 0x41e0cdd81a200000,0x41e9c7e56aa00000,0x41a9fdda5a000000,0x41dfd0d218c00000\n"
".quad 0x41b56dcb42000000,0x41e9c7e56aa00000,0x41ea97109f600000,0x41e734f037600000\n"
".quad 0x41b56dcb42000000,0x41c70aa79b800000,0x41eead954a600000,0x41e6e67825600000\n"
".quad 0x41ec5d9c8be00000,0x41a63a7e78000000,0x41eead954a600000,0x41e52d0fb4600000\n"
".quad 0x41c36948f8800000,0x41a63a7e78000000,0x41c255ee63800000,0x41d5fba30fc00000\n"
".quad 0x41eab896f7a00000,0x41d93dc7fbc00000,0x41e6ca38c8c00000,0x41d5fba30fc00000\n"
".quad 0x41c0f2d950000000,0x41d1592bd7800000,0x41e6ca38c8c00000,0x41d854034b000000\n"
".quad 0x416d510460000000,0x41deb835cec00000,0x41ef330883e00000,0x41d9f203af400000\n"
".quad 0x416d510460000000,0x41e57950a2400000,0x41eda43814400000,0x41d9f203af400000\n"
".quad 0x41e9acd9c1e00000,0x41b48d8b2c000000,0x4191b1a63c000000,0x41ce0e93af800000\n"
".quad 0x41e3383c2c000000,0x41b48d8b2c000000,0x41ebf80487c00000,0x41d6ecbc4f400000\n"
".quad 0x41e3383c2c000000,0x41ead4185e800000,0x41d2ec5d40000000,0x41ee51e069000000\n"
".quad 0x41de8fb6d3c00000,0x41e08f8348200000,0x41d2ec5d40000000,0x41e7e76fffc00000\n"
".quad 0x41c4972266800000,0x41e08f8348200000,0x41c1dd1dad800000,0x41e4e87a45800000\n"
".quad 0x41d9f606e9800000,0x41cd0f9b0f800000,0x41c6cb7d14800000,0x41e4e87a45800000\n"
".quad 0x41e4568263e00000,0x41db7f18d3000000,0x41c6cb7d14800000,0x41ccd424d5000000\n"
".quad 0x41e9d0bde7800000,0x41e9a9c2efc00000,0x41c14c7a95000000,0x41d405dd00c00000\n"
".quad 0x41e9d0bde7800000,0x41da7457d2000000,0x41ee0150e0200000,0x41d405dd00c00000\n"
".quad 0x41e216dd10400000,0x41eaac9ae7000000,0x41cc4e2d10000000,0x41aaf5a9be000000\n"
".quad 0x41d2560b74000000,0x41eaac9ae7000000,0x41dda2cdae400000,0x41cd689f4e800000\n"
".quad 0x41d2560b74000000,0x41da6f73e9800000,0x41e7d5e796200000,0x41e7250a75800000\n"
".quad 0x41dc574091c00000,0x41eff83e08e00000,0x41e7d5e796200000,0x41ef22c5abe00000\n"
".quad 0x41b0b9f8f4000000,0x41eff83e08e00000,0x41ea94833f800000,0x41dcd214bec00000\n"
".quad 0x41e7c12486000000,0x41e655c9bfc00000,0x41c8a0a7fc000000,0x41dcd214bec00000\n"
".quad 0x41af58ab2e000000,0x41c24ef0a9000000,0x41c8a0a7fc000000,0x41d83938c1800000\n"
".quad 0x41eff30653200000,0x41e27cac96e00000,0x41efd6fb16400000,0x41d18ae4b5400000\n"
".quad 0x41eff30653200000,0x41b23c9434000000,0x41edee4cf5600000,0x41d18ae4b5400000\n"
".quad 0x41b4246433000000,0x41b3de674b000000,0x41b8eec106000000,0x41e5efa1e4000000\n"
".quad 0x41b6989286000000,0x41b3de674b000000,0x41df0e0bd3400000,0x41eb030bed600000\n"
".quad 0x41b6989286000000,0x41d1bb1afdc00000,0x41d37cb037c00000,0x41d21a8d4e000000\n"
".quad 0x41ebd73b25800000,0x41ea2fdb75c00000,0x41d37cb037c00000,0x41c5d40af8800000\n"
".quad 0x41de1e6f9e800000,0x41ea2fdb75c00000,0x41ee777a5ae00000,0x41d6d9f81f800000\n"
".quad 0x41bf54ae12000000,0x41d650cd8e800000,0x41d3e73b60800000,0x41d6d9f81f800000\n"
".quad 0x41defac85b800000,0x41eda28ee6600000,0x41d3e73b60800000,0x41e6e99629800000\n"
".quad 0x41e495896ec00000,0x41eca945eae00000,0x41e6c86dbd800000,0x41e865b301e00000\n"
".quad 0x41e495896ec00000,0x41ee03e523e00000,0x41cbfb8027800000,0x41e865b301e00000\n"
".quad 0x41e35b05fc800000,0x41e57573c1000000,0x41e2ccdef2a00000,0x41d0b6fb20800000\n"
".quad 0x41a4f0f1f0000000,0x41e57573c1000000,0x41ef2981a7e00000,0x41d9ad3bae400000\n"
".quad 0x41a4f0f1f0000000,0x41bcdb8684000000,0x41d4eceb07400000,0x41e638bb95200000\n"
".quad 0x41ebd7516f200000,0x41e7b11c89200000,0x41d4eceb07400000,0x41b7500604000000\n"
".quad 0x41ec012efb000000,0x41e7b11c89200000,0x41dfdf21c3000000,0x41d0d2b115c00000\n"
".quad 0x41dfcb6dac400000,0x41d80b3fd7400000,0x41eafd15f5c00000,0x41d0d2b115c00000\n"
".quad 0x41d65aa01d000000,0x41ec0399ae200000,0x41eafd15f5c00000,0x41e68ee471000000\n"
".quad 0x41ec365255000000,0x41e41b848e000000,0x41e4f0a7af600000,0x41959396e4000000\n"
".quad 0x41ec365255000000,0x41ef713ebe800000,0x41dba533a6c00000,0x41959396e4000000\n"
".quad 0x41ebdc51c9a00000,0x41d08bfec4000000,0x41cb57a601000000,0x41e01f42ea400000\n"
".quad 0x41eb9fab8a600000,0x41d08bfec4000000,0x41e3df0452c00000,0x41e2e00be3400000\n"
".quad 0x41eb9fab8a600000,0x41d70691c4000000,0x41db00ed1ac00000,0x41eb848128c00000\n"
".quad 0x41e97f123c400000,0x41e885e6d8a00000,0x41db00ed1ac00000,0x41d1c793d4000000\n"
".quad 0x41dee33f9f400000,0x41e885e6d8a00000,0x41e810eb6e600000,0x41dfc3e117800000\n"
".quad 0x41e84e1c5d000000,0x41e57aad31e00000,0x41ee763acce00000,0x41dfc3e117800000\n"
".quad 0x41edbd48a3400000,0x41d31b4bf5c00000,0x41ee763acce00000,0x41b1f40edd000000\n"
".quad 0x41d9abf2c2800000,0x41eb8cd745c00000,0x41e8f60dc3200000,0x41e969f0d8c00000\n"
".quad 0x41d9abf2c2800000,0x41eb73a774000000,0x41e53624ada00000,0x41e969f0d8c00000\n"
".quad 0x41d6d7ca4a800000,0x41ef8ffa81400000,0x41ecd7974bc00000,0x41ea60c7e5800000\n"
".quad 0x41d326d784400000,0x41ef8ffa81400000,0x41d077828d800000,0x41e4986116e00000\n"
".quad 0x41d326d784400000,0x41a92458d4000000,0x41e6dce3a5400000,0x41e69c01e0000000\n"
".quad 0x41b44da641000000,0x41edd5b8ca800000,0x41e6dce3a5400000,0x41ef951d27600000\n"
".quad 0x41e1214fe0000000,0x41edd5b8ca800000,0x41e0f2a628e00000,0x41ed78b852c00000\n"
".quad 0x41e6f502d8e00000,0x41e7d76e06000000,0x41ed6a5130e00000,0x41ed78b852c00000\n"
".quad 0x41e1dfec40400000,0x41e99e1d17c00000,0x41ed6a5130e00000,0x41be0c858c000000\n"
".quad 0x41d19e2171000000,0x41a8065442000000,0x41ef348c31a00000,0x41e6ab0509800000\n"
".quad 0x41d19e2171000000,0x41e336229d200000,0x41e3edbe5a400000,0x41e6ab0509800000\n"
".quad 0x41d49b975b000000,0x41e33601c9e00000,0x41e765ea64400000,0x41af376406000000\n"
".quad 0x41d00b99f8400000,0x41e33601c9e00000,0x41d85b764f400000,0x41a39a4338000000\n"
".quad 0x41d00b99f8400000,0x41e2d80a44e00000,0x41bf675bc2000000,0x41e71e20a5e00000\n"
".quad 0x41e40586ff600000,0x41e5ac48cb800000,0x41bf675bc2000000,0x41d2139c88c00000\n"
".quad 0x41948419d8000000,0x41e5ac48cb800000,0x41e40afe55800000,0x41c0097135800000\n"
".quad 0x41c78dccb3800000,0x41ef3f2c6ea00000,0x41cf65f6dc000000,0x41c0097135800000\n"
".quad 0x41d85de5a4400000,0x41edd1f8d6a00000,0x41cf65f6dc000000,0x41dfa5526f400000\n"
".quad 0x41ef5521abe00000,0x41db016436800000,0x41d0526d7c400000,0x41a3d15d08000000\n"
".quad 0x41ef5521abe00000,0x41b98b71ee000000,0x41dfb8a905400000,0x41a3d15d08000000\n"
".quad 0x41d3d22055800000,0x41ea989f86800000,0x41ee99d105c00000,0x41ec606841e00000\n"
".quad 0x41eafabf78000000,0x41ea989f86800000,0x41efc16f0c400000,0x41dcb99093800000\n"
".quad 0x41eafabf78000000,0x41eade7652000000,0x41e23327ec800000,0x41ed04f98c400000\n"
".quad 0x41d8488844400000,0x41e45672d8e00000,0x41e23327ec800000,0x41e92d2b42c00000\n"
".quad 0x41efe23bb4e00000,0x41e45672d8e00000,0x41cf5ad3bb000000,0x41efa85f13400000\n"
".quad 0x41cb65043d000000,0x41e83d458ae00000,0x41eb0acc13000000,0x41efa85f13400000\n"
".quad 0x41c9682a74000000,0x41edfed86ca00000,0x41eb0acc13000000,0x4167a40960000000\n"
".quad 0x41d2aada59000000,0x41dfcaee5c400000,0x41ef7f029ea00000,0x41e7d2d55a400000\n"
".quad 0x41d2aada59000000,0x41dc14e90a000000,0x41dd729e8dc00000,0x41e7d2d55a400000\n"
".quad 0x41e63ff972200000,0x41e3e690a2400000,0x41e536de05c00000,0x41e7a56cf4200000\n"
".quad 0x41ea65156ba00000,0x41e3e690a2400000,0x41c63572ba000000,0x41d70c1162400000\n"
".quad 0x41ea65156ba00000,0x41e377ed40a00000,0x41e138867ee00000,0x41e5b0eefe200000\n"
".quad 0x41d6430fae400000,0x419611b8a0000000,0x41e138867ee00000,0x41e4c31aa0400000\n"
".quad 0x41aea507ec000000,0x419611b8a0000000,0x41e98486a9800000,0x41e4aee6cf800000\n"
".quad 0x41e06bed5ba00000,0x41ec17e665400000,0x41e2b2078a400000,0x41e4aee6cf800000\n"
".quad 0x41e633bed0200000,0x41d114ed83c00000,0x41e2b2078a400000,0x41d5f854f0800000\n"
".quad 0x41c8ac554a800000,0x41beb774d1000000,0x41d475cac2c00000,0x41dd0deec2400000\n"
".quad 0x41c8ac554a800000,0x41e7028a48800000,0x41d1cb7ce8000000,0x41dd0deec2400000\n"
".quad 0x41db34e4d3c00000,0x41d33878e4000000,0x41eb92dced200000,0x41e994bc01a00000\n"
".quad 0x41ee449f62800000,0x41d33878e4000000,0x41e67e4d5d000000,0x41deb4b990c00000\n"
".quad 0x41ee449f62800000,0x41eca12c24200000,0x41efb09953000000,0x41e983b528c00000\n"
".quad 0x41c4d0b540000000,0x418cbd0198000000,0x41efb09953000000,0x41ee84852b200000\n"
".quad 0x41868f19c0000000,0x418cbd0198000000,0x41e3d5e978600000,0x41de736804000000\n"
".quad 0x41d7be79d3000000,0x41d3d250e8c00000,0x41eaf668bf800000,0x41de736804000000\n"
".quad 0x41e2ea5d1e800000,0x41b03327ba000000,0x41eaf668bf800000,0x41c6158990000000\n"
".quad 0x41cdbb0b10000000,0x41e1df5d54600000,0x41d14ade5cc00000,0x41d6ae77e9800000\n"
".quad 0x41cdbb0b10000000,0x41e6a0754b600000,0x41e53794b1a00000,0x41d6ae77e9800000\n"
".quad 0x41e3c7f192c00000,0x41dc28be68800000,0x41896de640000000,0x41de6ed7ff400000\n"
".quad 0x41d82824f2800000,0x41dc28be68800000,0x41d726ad3a800000,0x41c7619c2d000000\n"
".quad 0x41d82824f2800000,0x41d98f0b0e800000,0x41e5194917200000,0x41cbb0a8ec000000\n"
".quad 0x41cdb899d4000000,0x41b818085d000000,0x41e5194917200000,0x41d4a95d86400000\n"
".quad 0x41ee99efa5600000,0x41b818085d000000,0x41ed4450fbe00000,0x41e5b332a0800000\n"
".quad 0x41db6cf302c00000,0x41ef696339c00000,0x41e621c220000000,0x41e5b332a0800000\n"
".quad 0x41d1440d28400000,0x41d53de4aa400000,0x41e621c220000000,0x41e4e9efa4800000\n"
".quad 0x41e2b40435400000,0x41b030553e000000,0x41e2ab4f6f600000,0x41e1a95a42600000\n"
".quad 0x41e2b40435400000,0x4164bd7ac0000000,0x41e241b91d000000,0x41e1a95a42600000\n"
".quad 0x41ddd03221800000,0x41d0985936000000,0x41e2a47e13600000,0x41d5fbb25b800000\n"
".quad 0x41e4c58ba9600000,0x41d0985936000000,0x41d5fdb8a0c00000,0x41e6aeddfb000000\n"
".quad 0x41e4c58ba9600000,0x41d5b69cf0000000,0x41d2aa1fe1800000,0x41e6e5b9dbe00000\n"
".quad 0x41dcb6276a400000,0x41eb1e926ea00000,0x41d2aa1fe1800000,0x41decfcdaf000000\n"
".quad 0x41e0cf648e800000,0x41eb1e926ea00000,0x41ebdf6401000000,0x41cedb7a85000000\n"
".quad 0x41e78fded7e00000,0x41eebe50e6400000,0x41c4772077000000,0x41cedb7a85000000\n"
".quad 0x41d9543e1ac00000,0x41c3e6d954000000,0x41c4772077000000,0x41e20c8ae5000000\n"
".quad 0x41e7deb42e000000,0x41dbb09ff4800000,0x41c94b3711000000,0x41ee7e3924400000\n"
".quad 0x41e7deb42e000000,0x41c3aafc00800000,0x41dbc31159800000,0x41ee7e3924400000\n"
".quad 0x41ad6c4930000000,0x41c9faef5c000000,0x41e51d85f7600000,0x41eda0012ca00000\n"
".quad 0x41ebb9a709200000,0x41c9faef5c000000,0x41c75ce92b000000,0x41c636279d800000\n"
".quad 0x41ebb9a709200000,0x41ec665161000000,0x41ead95643800000,0x41e19fa3ab400000\n"
".quad 0x41ec81cdbba00000,0x41e5a7d14d800000,0x41ead95643800000,0x41e123e03bc00000\n"
".quad 0x41ccd03866000000,0x41e5a7d14d800000,0x41e4fbb8b9000000,0x41715ba230000000\n"
".quad 0x41e91765ed400000,0x41ba10d0ef000000,0x41e08bc80d800000,0x41715ba230000000\n"
".quad 0x41d411e047000000,0x41c504fc4f800000,0x41e08bc80d800000,0x41e8a96113200000\n"
".quad 0x41d8c53afac00000,0x419fa003e8000000,0x41e32b6eee200000,0x41e723f038a00000\n"
".quad 0x41d8c53afac00000,0x41dcdf4ea8400000,0x41d9dcdd6f000000,0x41e723f038a00000\n"
".quad 0x41bb803271000000,0x41d442c073400000,0x41ead21e0ec00000,0x41996ef024000000\n"
".quad 0x41de75d430800000,0x41d442c073400000,0x41daa3a62a000000,0x41d1227e05800000\n"
".quad 0x41de75d430800000,0x41e89db197a00000,0x41b49282b2000000,0x41d51dff40000000\n"
".quad 0x41e0a0f3e7e00000,0x41d0a491b3400000,0x41b49282b2000000,0x41db851b40400000\n"
".quad 0x4192fc0b80000000,0x41d0a491b3400000,0x41e499e9c9200000,0x41e73ab2e0c00000\n"
".quad 0x41dae6855fc00000,0x41ec48a4ed400000,0x41d06885b7800000,0x41e73ab2e0c00000\n"
".quad 0x41aabc2e50000000,0x41cdebec51800000,0x41d06885b7800000,0x41953f5f30000000\n"
".quad 0x41e2954e5e600000,0x41d43880a3400000,0x41e28e2112600000,0x41cdb7aa05800000\n"
".quad 0x41e2954e5e600000,0x41d184492f400000,0x41e9a98f35c00000,0x41cdb7aa05800000\n"
".quad 0x41e1706a25600000,0x41be696ce2000000,0x41b10dd50e000000,0x41de79e281c00000\n"
".quad 0x41d1ccf0f8800000,0x41be696ce2000000,0x41e3d5e62f000000,0x41d9c1b4e4c00000\n"
".quad 0x41d1ccf0f8800000,0x41a920bc0e000000,0x41d1b822ac000000,0x41e53834bae00000\n"
".quad 0x41d035932d400000,0x41e1758b5c800000,0x41d1b822ac000000,0x41e9d13b8a400000\n"
".quad 0x41e58e09ada00000,0x41e1758b5c800000,0x41e99dca0e400000,0x41e81cb99e400000\n"
".quad 0x41ccabc25a000000,0x41e568507e600000,0x41a9a9d6d2000000,0x41e81cb99e400000\n"
".quad 0x41c5c49d8b800000,0x41d5fa01a8800000,0x41a9a9d6d2000000,0x41d75793b6800000\n"
".quad 0x419fb649a0000000,0x41e581ef34000000,0x41e520e967800000,0x41c37c2b7e000000\n"
".quad 0x419fb649a0000000,0x41e6f821ed800000,0x41eba60fcae00000,0x41c37c2b7e000000\n"
".quad 0x41ef4dd670800000,0x41d2d4f6f3000000,0x41b36e63c2000000,0x41c6bc0e7f800000\n"
".quad 0x41c28605ba800000,0x41d2d4f6f3000000,0x41e4186410800000,0x41d13c45da000000\n"
".quad 0x41c28605ba800000,0x41e3c979c4c00000,0x41e16d583b200000,0x41e21b42af000000\n"
".quad 0x41e3e47158600000,0x41b813fbdf000000,0x41e16d583b200000,0x41d619a635c00000\n"
".quad 0x41c3103939000000,0x41b813fbdf000000,0x41ea241d40000000,0x41ef8132c0c00000\n"
".quad 0x41c67fc9d9000000,0x41dc8214f9800000,0x41ea14bbf2400000,0x41ef8132c0c00000\n"
".quad 0x40d80f4000000000,0x41ec1cbad1800000,0x41ea14bbf2400000,0x41edfcd2b6600000\n"
".quad 0x41d10b8958800000,0x41e7e129f4a00000,0x41e6217b58a00000,0x41e56994cd200000\n"
".quad 0x41d10b8958800000,0x41e025717de00000,0x41ee83805a600000,0x41e56994cd200000\n"
".quad 0x41d60b77a1c00000,0x41e60aa2e2c00000,0x41e68ee56f400000,0x41e42665d2400000\n"
".quad 0x41eaa0f78c600000,0x41e60aa2e2c00000,0x41eb0d83e4600000,0x41d30619ce800000\n"
".quad 0x41eaa0f78c600000,0x41de567255000000,0x41d451d47d400000,0x41c8639f2f000000\n"
".quad 0x41e6868a5a600000,0x41ed912c8d400000,0x41d451d47d400000,0x41d32538d7800000\n"
".quad 0x41e5654361800000,0x41ed912c8d400000,0x41ec84d94b400000,0x41ed097c4a600000\n"
".quad 0x41ee9977dc200000,0x41d6c4049a800000,0x41e7ffabc1a00000,0x41ed097c4a600000\n"
".quad 0x41ef224a77400000,0x41efe5aa7c200000,0x41e7ffabc1a00000,0x41d17fd2db000000\n"
".quad 0x41e5203ddc200000,0x41cc9c0e3d800000,0x41c9559198000000,0x41ec1fd388a00000\n"
".quad 0x41e5203ddc200000,0x41ecea3feb000000,0x41e81ff9e7600000,0x41ec1fd388a00000\n"
".quad 0x0000000000000000,0x3ff0000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3ff0000000000000,0x41effd579bc00000,0x0000000000000000\n"
".quad 0x412019f800000000,0x0000000000000000,0x0000000000000000,0x3ff0000000000000\n"
".quad 0x41effd579bc00000,0x0000000000000000,0x412019f800000000,0x41e42a0ffce00000\n"
".quad 0x41effd579bc00000,0x41ea0fdd2a000000,0x41e42a0ffce00000,0x41effd579bc00000\n"
".quad 0x41ea0fdd2a000000,0x41d554d67a000000,0x41e42a0ffce00000,0x41e8737313e00000\n"
".quad 0x4197498a88000000,0x41d554d67a000000,0x41d8efce08800000,0x41e96020db200000\n"
".quad 0x41e3f7d750e00000,0x41caa0f0ad800000,0x41ee106eb4c00000,0x41e96020db200000\n"
".quad 0x41e87085f5400000,0x41e38baffe000000,0x41ee106eb4c00000,0x41b58f633c000000\n"
".quad 0x41c863a8db000000,0x41ec3e5424e00000,0x41ea647c35a00000,0x41db13d1a6400000\n"
".quad 0x41c863a8db000000,0x41e8c0196cc00000,0x41ea074783400000,0x41db13d1a6400000\n"
".quad 0x41e544d287a00000,0x41bdb94a63000000,0x41e5d1f495200000,0x41c82ece6b800000\n"
".quad 0x41da7adc28000000,0x41bdb94a63000000,0x41bc9021b7000000,0x41e6c92b07200000\n"
".quad 0x41da7adc28000000,0x41d6c5b752c00000,0x41ed01e713e00000,0x41e766d55ca00000\n"
".quad 0x418e894888000000,0x4193936cbc000000,0x41ed01e713e00000,0x41e3c8e5e1000000\n"
".quad 0x41d8f5280f000000,0x4193936cbc000000,0x41d03ba8e3800000,0x417b4ffb00000000\n"
".quad 0x41ea0c2bb8e00000,0x41e0a1082e400000,0x41e7a73a4c200000,0x417b4ffb00000000\n"
".quad 0x41e5137b19c00000,0x41eb6d3811000000,0x41e7a73a4c200000,0x41ed221abb200000\n"
".quad 0x41d5d00da5400000,0x41b1ee7c4b000000,0x41e8b08385c00000,0x41dad13998800000\n"
".quad 0x41d5d00da5400000,0x41e7a79122c00000,0x41dc0c5378800000,0x41dad13998800000\n"
".quad 0x41ea26bf0f000000,0x41df2d1639000000,0x41a5f19576000000,0x41e068bf3c800000\n"
".quad 0x41e71fb424800000,0x41df2d1639000000,0x41e9673855000000,0x41efb86e98600000\n"
".quad 0x41e71fb424800000,0x41e1cef333e00000,0x41c83a10b1800000,0x41e32d8971800000\n"
".quad 0x41ef0f5c0b600000,0x41a903212c000000,0x41c83a10b1800000,0x41e62a1d8c800000\n"
".quad 0x41e8218661000000,0x41a903212c000000,0x41eb8386c6c00000,0x41bc732b2a000000\n"
".quad 0x41e8b1f3a2a00000,0x41e9a58e4cc00000,0x41e48823f9800000,0x41bc732b2a000000\n"
".quad 0x41e4bb9ac0600000,0x41d7ef3fac800000,0x41e48823f9800000,0x41ceccb29c000000\n"
".quad 0x41e00f3b64600000,0x41e8c8d372800000,0x41eca2a567400000,0x41b133c12a000000\n"
".quad 0x41e00f3b64600000,0x41c10985f1800000,0x41d660720b800000,0x41b133c12a000000\n"
".quad 0x41e5d11fbec00000,0x41df07fd29400000,0x41c6582c11800000,0x41ed88a8f6800000\n"
".quad 0x41e4998d26800000,0x41df07fd29400000,0x41eaa57ec3600000,0x41e52a939e400000\n"
".quad 0x41e4998d26800000,0x41da8edbacc00000,0x41ec03f176c00000,0x41cf0db911000000\n"
".quad 0x41dacf6388000000,0x41ce7639f7000000,0x41ec03f176c00000,0x41d3db4efe000000\n"
".quad 0x41b080c0e6000000,0x41ce7639f7000000,0x41eda625f2000000,0x41ce700047800000\n"
".quad 0x41d38ef5c9000000,0x41d9937a16c00000,0x41e6a2463cc00000,0x41ce700047800000\n"
".quad 0x41a7bb983a000000,0x41e33e46c3600000,0x41e6a2463cc00000,0x41ea5fca18600000\n"
".quad 0x41e324c434c00000,0x41d84f0d93c00000,0x41e35575b8600000,0x41ceb6fec3800000\n"
".quad 0x41e324c434c00000,0x41e9d604a2c00000,0x41ddc89620000000,0x41ceb6fec3800000\n"
".quad 0x41e7a6fa41200000,0x41e164f899a00000,0x41e733a9cf600000,0x41c1ee7619800000\n"
".quad 0x41df71c585800000,0x41e164f899a00000,0x41c4375868800000,0x41d8946e78000000\n"
".quad 0x41df71c585800000,0x41e00e3cbb000000,0x41c0cc5cec000000,0x41a6cef152000000\n"
".quad 0x41d87630df800000,0x41c7433a28800000,0x41c0cc5cec000000,0x41e6925af4400000\n"
".quad 0x41de5bccf8800000,0x41c7433a28800000,0x41df1020d5400000,0x41e9712820600000\n"
".quad 0x41dd565f4c800000,0x41e0ace335000000,0x41c8d24424000000,0x41e9712820600000\n"
".quad 0x41ebf9acc1000000,0x41e021b01f400000,0x41c8d24424000000,0x41d7c38ef2c00000\n"
".quad 0x41d88a46e8800000,0x41e145346d800000,0x41e125eb1d800000,0x41e3e97552400000\n"
".quad 0x41d88a46e8800000,0x41b5718c76000000,0x41e1d10321e00000,0x41e3e97552400000\n"
".quad 0x41dc1a06ae400000,0x41c912425c000000,0x41ec0eb819000000,0x41d85e6c4f400000\n"
".quad 0x41ddffe6d0800000,0x41c912425c000000,0x41c20ed8ec800000,0x41ebe4fbf2200000\n"
".quad 0x41ddffe6d0800000,0x41b7e1ebe3000000,0x41dcc32da3000000,0x41dee3af75c00000\n"
".quad 0x41e6ee3ca9400000,0x41eaac39ab200000,0x41dcc32da3000000,0x41e2777039400000\n"
".quad 0x41dd35ae9f800000,0x41eaac39ab200000,0x41d5b0dfcc000000,0x41d05b1034800000\n"
".quad 0x41da977bc1400000,0x41d1cc6d6ac00000,0x41b32d7a3b000000,0x41d05b1034800000\n"
".quad 0x41d241cdbc000000,0x4191c46c8c000000,0x41b32d7a3b000000,0x41eff3b947000000\n"
".quad 0x41a124d112000000,0x41e83f8660000000,0x41ea2f16a7000000,0x41c6ed414c000000\n"
".quad 0x41a124d112000000,0x41e263bd05000000,0x41dcb7896e000000,0x41c6ed414c000000\n"
".quad 0x41bf27daac000000,0x41e40ea63ee00000,0x41e3593406800000,0x41d87c7740000000\n"
".quad 0x41d07142a5800000,0x41e40ea63ee00000,0x41d58cbf37000000,0x41ef00b0dbc00000\n"
".quad 0x41d07142a5800000,0x41e6ebd5cbe00000,0x41e1b28fbec00000,0x41d4bc4654800000\n"
".quad 0x41ebe1ef88400000,0x41d1e9a65f000000,0x41e1b28fbec00000,0x41ee8924da000000\n"
".quad 0x41e158107d000000,0x41d1e9a65f000000,0x41d5ed6e09800000,0x41efcec91ee00000\n"
".quad 0x41e4d3a2ff000000,0x41e2af5b0b000000,0x41efa167c5800000,0x41efcec91ee00000\n"
".quad 0x41ee826dff200000,0x41ecdb9486400000,0x41efa167c5800000,0x41d5f5b3c4c00000\n"
".quad 0x41bea15a1d000000,0x41d2039943800000,0x41e5631a31400000,0x41dd93b0b3c00000\n"
".quad 0x41bea15a1d000000,0x41d2bd1aed000000,0x41d211ceae000000,0x41dd93b0b3c00000\n"
".quad 0x41e18a97b8400000,0x41db8af386000000,0x41d720daf0400000,0x41ea0d1948e00000\n"
".quad 0x41ef000e06600000,0x41db8af386000000,0x41a0e67958000000,0x41eae778ec400000\n"
".quad 0x41ef000e06600000,0x41c1c65ac8000000,0x41b5b34484000000,0x41ea39f166200000\n"
".quad 0x41c8f49156800000,0x41e2f5936a400000,0x41b5b34484000000,0x41e04e8322e00000\n"
".quad 0x41a38c38b6000000,0x41e2f5936a400000,0x41c40e2f34000000,0x41d1c5caca800000\n"
".quad 0x41ed90a540a00000,0x41b1c89273000000,0x41c2f0fb31000000,0x41d1c5caca800000\n"
".quad 0x41e34af342a00000,0x41e2fd2c12600000,0x41c2f0fb31000000,0x41ea4fefe6000000\n"
".quad 0x41e4303aaa200000,0x41c4297aab800000,0x41ca167b27000000,0x41d39a3b7fc00000\n"
".quad 0x41e4303aaa200000,0x41eca159d4000000,0x41e89825ca800000,0x41d39a3b7fc00000\n"
".quad 0x41e23ad36c800000,0x41e46e3c12000000,0x41d505075a000000,0x41e697c004600000\n"
".quad 0x41ec201e24400000,0x41e46e3c12000000,0x41c1cf95d6800000,0x41ee714dd7600000\n"
".quad 0x41ec201e24400000,0x41ed72b9d8800000,0x41ece5cdad600000,0x41c9311bb9800000\n"
".quad 0x41d9a89717c00000,0x41def6a51d000000,0x41ece5cdad600000,0x41eb346acbe00000\n"
".quad 0x41e038c926c00000,0x41def6a51d000000,0x41ec3f370e400000,0x41d7664716c00000\n"
".quad 0x41efaf8da3a00000,0x41ea3e59fa800000,0x41e151de71400000,0x41d7664716c00000\n"
".quad 0x41eac8cd79000000,0x41d9b4af9e800000,0x41e151de71400000,0x41d3f15fe7c00000\n"
".quad 0x41e12de426a00000,0x41b6c3d6bc000000,0x41eb4bb8f4e00000,0x41d4321609c00000\n"
".quad 0x41e12de426a00000,0x41b2b16e34000000,0x41cd91b093800000,0x41d4321609c00000\n"
".quad 0x41eceb8d4b600000,0x41d8da5f64c00000,0x41d750ea48400000,0x41e0ddf44a200000\n"
".quad 0x41ec403ad1200000,0x41d8da5f64c00000,0x41ef437e01600000,0x41e8f1c170e00000\n"
".quad 0x41ec403ad1200000,0x41c2546360800000,0x41ee8095b8c00000,0x41e9bc0312c00000\n"
".quad 0x41e4fa44ec800000,0x41efc107bd800000,0x41ee8095b8c00000,0x41ed9b4bbe800000\n"
".quad 0x41e63315b1c00000,0x41efc107bd800000,0x41ebfdffee600000,0x41add10efa000000\n"
".quad 0x41c0fde557800000,0x41d68d47e3800000,0x41e7aec8a2000000,0x41add10efa000000\n"
".quad 0x41d95c1d7a000000,0x41ef16712c000000,0x41e7aec8a2000000,0x41ef654acd400000\n"
".quad 0x41eefaf596400000,0x41e6d0fc37000000,0x41db0e7e17c00000,0x41d48d23ac000000\n"
".quad 0x41eefaf596400000,0x41ed413928400000,0x41e52dc321c00000,0x41d48d23ac000000\n"
".quad 0x41e5402d53400000,0x41cbc57115000000,0x41ae8c8ac6000000,0x41e39f227bc00000\n"
".quad 0x41e878f776a00000,0x41cbc57115000000,0x41e3205355600000,0x41b8c05761000000\n"
".quad 0x41e878f776a00000,0x41de10673ec00000,0x41d88ea416800000,0x41cec3c1f0000000\n"
".quad 0x41edb55b65c00000,0x41db4a9a55000000,0x41d88ea416800000,0x41e514be9d600000\n"
".quad 0x41db22e0a8000000,0x41db4a9a55000000,0x41e5bc00e5200000,0x41ef0119fca00000\n"
".quad 0x41bd344261000000,0x41ecd70e60000000,0x41d8e0702dc00000,0x41ef0119fca00000\n"
".quad 0x41effc259fc00000,0x41d6af8f76800000,0x41d8e0702dc00000,0x41e3c2d5da000000\n"
".quad 0x41d2f03b06c00000,0x41e75ea643800000,0x41be23070b000000,0x41e636b634600000\n"
".quad 0x41d2f03b06c00000,0x41e2d6f542000000,0x41c2a1c3d7800000,0x41e636b634600000\n"
".quad 0x41ce11f1e7800000,0x41b0bfabd4000000,0x41a1219032000000,0x41e67307c6800000\n"
".quad 0x41dac996dd400000,0x41b0bfabd4000000,0x41ebe515ec800000,0x41d0beef85c00000\n"
".quad 0x41dac996dd400000,0x41e2544e10200000,0x41cb6513b5800000,0x41eef4e1bf200000\n"
".quad 0x41d0c619bb400000,0x41ed4dae9b200000,0x41cb6513b5800000,0x41bc445f21000000\n"
".quad 0x41c0d5c6f6000000,0x41ed4dae9b200000,0x41e0de0e08200000,0x41e5c1ac5a800000\n"
".quad 0x41dd4922cb800000,0x41d18a6fccc00000,0x41dfd155e8c00000,0x41e5c1ac5a800000\n"
".quad 0x41cce2499c000000,0x41b1a52439000000,0x41dfd155e8c00000,0x41efcc3c62600000\n"
".quad 0x41d6121ca7800000,0x41eeb3b74a800000,0x41d038843b000000,0x41afa6249e000000\n"
".quad 0x41d6121ca7800000,0x41e54f072e000000,0x41b1fd0b9c000000,0x41afa6249e000000\n"
".quad 0x41dcd9298ac00000,0x41df781a56400000,0x41e4f6890e800000,0x41cdd8a8ba000000\n"
".quad 0x41919b6fa0000000,0x41df781a56400000,0x41eda8c5ffc00000,0x41e8cfdd44200000\n"
".quad 0x41919b6fa0000000,0x41dcd168b4800000,0x41da8b1176000000,0x41eb473ee7600000\n"
".quad 0x41ea259e43a00000,0x41e4833bdae00000,0x41da8b1176000000,0x41e73eb46ca00000\n"
".quad 0x41eaa5ae2ae00000,0x41e4833bdae00000,0x41c06c662d000000,0x41d1a882d3000000\n"
".quad 0x41c1846610000000,0x41cdf31ac2800000,0x41ec0a8f5b800000,0x41d1a882d3000000\n"
".quad 0x41cc3c469c000000,0x41ec662d12800000,0x41ec0a8f5b800000,0x41e1869142c00000\n"
".quad 0x41d3861eb8800000,0x41aa010cc0000000,0x41e7a3eaa4200000,0x41c6d51a89000000\n"
".quad 0x41d3861eb8800000,0x41daf36d30000000,0x41e0970405600000,0x41c6d51a89000000\n"
".quad 0x41ecb6895c000000,0x41e09f1bcd400000,0x41ef9df335400000,0x41e2910a83000000\n"
".quad 0x41ec95ca0f800000,0x41e09f1bcd400000,0x41eb1a0291600000,0x41e5349540800000\n"
".quad 0x41ec95ca0f800000,0x41e6f908a9000000,0x41cdc92ffc800000,0x41d5d29488000000\n"
".quad 0x41e8eafcd0400000,0x41cc32ae05800000,0x41cdc92ffc800000,0x41b4510fee000000\n"
".quad 0x41eb7864b1800000,0x41cc32ae05800000,0x41e812cb82200000,0x41d245695a000000\n"
".quad 0x41e9e8ed2f400000,0x41c0643832000000,0x41e1b8f2ab600000,0x41d245695a000000\n"
".quad 0x41d640e744000000,0x41af09b448000000,0x41e1b8f2ab600000,0x41eeccc431a00000\n"
".quad 0x41d30acf02000000,0x41b2865ffe000000,0x41e4ffe21b800000,0x41e703a127a00000\n"
".quad 0x41d30acf02000000,0x41e89cbf39200000,0x41e2af765d400000,0x41e703a127a00000\n"
".quad 0x41eba9d929400000,0x41bcb97daa000000,0x41b43d6eac000000,0x41d9c2daaf400000\n"
".quad 0x41d82fe089400000,0x41bcb97daa000000,0x41e0758384c00000,0x41e772648e400000\n"
".quad 0x41d82fe089400000,0x41be4e4362000000,0x41e7630461c00000,0x41e1bf0b21e00000\n"
".quad 0x41ddb03d8d800000,0x41ce8865e1800000,0x41e7630461c00000,0x41dfa20950800000\n"
".quad 0x41d5a87dd4000000,0x41ce8865e1800000,0x41cc127b76000000,0x41e25e5345e00000\n"
".quad 0x41d4ba4d6f400000,0x41e8cd61e8200000,0x41db262009400000,0x41e25e5345e00000\n"
".quad 0x41d40501a4000000,0x41eb2fdbc9200000,0x41db262009400000,0x41db11c729000000\n"
".quad 0x419c48e2a0000000,0x41e9063c58000000,0x41e2929fb3800000,0x41b4cac660000000\n"
".quad 0x419c48e2a0000000,0x41e297dfa1e00000,0x41e81b6225c00000,0x41b4cac660000000\n"
".quad 0x41ee1fb600000000,0x41e128c07a400000,0x41e91df000400000,0x41dd52737f400000\n"
".quad 0x41c1d72f5b000000,0x41e128c07a400000,0x41db1afb87400000,0x41de894540400000\n"
".quad 0x41c1d72f5b000000,0x41ee7edd17c00000,0x41e69d6ac0200000,0x41ed966ad3a00000\n"
".quad 0x41ab08c470000000,0x41e90bc535c00000,0x41e69d6ac0200000,0x41e4ea2ab3800000\n"
".quad 0x41b37824f7000000,0x41e90bc535c00000,0x41e77303bfc00000,0x41da706909400000\n"
".quad 0x41ef2402ef600000,0x41e76e9fec800000,0x41d92a1557c00000,0x41da706909400000\n"
".quad 0x41969e6030000000,0x41e15834d2a00000,0x41d92a1557c00000,0x41e4c37762600000\n"
".quad 0x41d5d24904400000,0x41b08d543f000000,0x41d8006c47400000,0x417eb167a0000000\n"
".quad 0x41d5d24904400000,0x41ce79e0d6000000,0x41e50b2a3b000000,0x417eb167a0000000\n"
".quad 0x41df33589bc00000,0x41ea0526bfe00000,0x41ce9b6bef800000,0x41e79964a0200000\n"
".quad 0x41eb615362400000,0x41ea0526bfe00000,0x41ea9ed740200000,0x41efd128cc200000\n"
".quad 0x41eb615362400000,0x41c4d3878c800000,0x41ca3d8b86800000,0x41a87578ea000000\n"
".quad 0x41ee53c206200000,0x41e0740db3e00000,0x41ca3d8b86800000,0x41dccec20d800000\n"
".quad 0x41ebdfd375200000,0x41e0740db3e00000,0x41ed8508fd400000,0x41ef2d803f600000\n"
".quad 0x41d1b9508a000000,0x41c0ed3f7d000000,0x41999010b8000000,0x41ef2d803f600000\n"
".quad 0x41c7640cfe000000,0x41c06010ca000000,0x41999010b8000000,0x41e75a5c4e000000\n"
".quad 0x41e45be64fa00000,0x41d2584cfec00000,0x41e924843c400000,0x41b86f66ee000000\n"
".quad 0x41e45be64fa00000,0x41cf236df3000000,0x41e9517b08400000,0x41b86f66ee000000\n"
".quad 0x41ea1e7e78a00000,0x41e02a1bce600000,0x41d009f19d800000,0x41c2fe42be000000\n"
".quad 0x41eb997af8800000,0x41e02a1bce600000,0x41b1816c20000000,0x41c2d93c0c800000\n"
".quad 0x41eb997af8800000,0x41d7fb7857800000,0x41b62e09b3000000,0x41ed459d78000000\n"
".quad 0x41e516d42e200000,0x41e6c5dd3c200000,0x41b62e09b3000000,0x41dcac6476800000\n"
".quad 0x41e6afc1df800000,0x41e6c5dd3c200000,0x41c04e5df3000000,0x41d8bfa5dcc00000\n"
".quad 0x41eb167901e00000,0x41d4b2f798800000,0x41ce9080e3800000,0x41d8bfa5dcc00000\n"
".quad 0x41e86a01a4c00000,0x41ee12b0f5c00000,0x41ce9080e3800000,0x41ee7d3f6da00000\n"
".quad 0x41d446c8b9400000,0x41e58410eda00000,0x41ee8e2af2a00000,0x4189119378000000\n"
".quad 0x41d446c8b9400000,0x419acfeb74000000,0x41e3a4da28e00000,0x4189119378000000\n"
".quad 0x41d0f076c1000000,0x41e9bf37cf800000,0x41c0005e4c800000,0x41eda4f768800000\n"
".quad 0x41e70da32c800000,0x41e9bf37cf800000,0x41ec7991d5800000,0x41e0fa8f3f000000\n"
".quad 0x41e70da32c800000,0x41e2dd577aa00000,0x41dfae03d0000000,0x41ca8d01d7000000\n"
".quad 0x41ec3dea30200000,0x41d55cb892000000,0x41dfae03d0000000,0x41eb5a15fc800000\n"
".quad 0x41c81631e7800000,0x41d55cb892000000,0x41e239f5a2a00000,0x41ea424832e00000\n"
".quad 0x41cbcd326c000000,0x41db6476c9400000,0x41daaaea52800000,0x41ea424832e00000\n"
".quad 0x41eec6c12b400000,0x41e0c7db4e400000,0x41daaaea52800000,0x41e6b71423e00000\n"
".quad 0x41da6cc145400000,0x41cc43bf4b000000,0x41ddcbf631c00000,0x41cd5249c5800000\n"
".quad 0x41da6cc145400000,0x41ebd3853e200000,0x41b2bd7885000000,0x41cd5249c5800000\n"
".quad 0x41e3bbd496e00000,0x41b32e52a9000000,0x41d060fb50c00000,0x41df79476f800000\n"
".quad 0x41ec056b03200000,0x41b32e52a9000000,0x41cde8a826000000,0x41ec01741b400000\n"
".quad 0x41ec056b03200000,0x41ede95aa3000000,0x41e05d5fc6800000,0x41c8009bf9800000\n"
".quad 0x41efc976f6800000,0x41eebb31a2e00000,0x41e05d5fc6800000,0x41e2d5b420200000\n"
".quad 0x419684ecf0000000,0x41eebb31a2e00000,0x41e50d8309e00000,0x418fd26840000000\n"
".quad 0x41e0999575e00000,0x41ef3180a8000000,0x41e38e83a2000000,0x418fd26840000000\n"
".quad 0x41e42e6534c00000,0x41ee893615000000,0x41e38e83a2000000,0x41da6ebf49c00000\n"
".quad 0x41e6e499e8600000,0x41e4774a53a00000,0x41e40b59c1400000,0x41d077a5b7000000\n"
".quad 0x41e6e499e8600000,0x41ee284f7ae00000,0x41e55485b1400000,0x41d077a5b7000000\n"
".quad 0x41eacd6548c00000,0x41abc3bee6000000,0x41ecdbce72000000,0x41ee2fba47200000\n"
".quad 0x41e68e552e600000,0x41abc3bee6000000,0x41e78a23bc200000,0x41ecdb1931400000\n"
".quad 0x41e68e552e600000,0x41cd6b67b3800000,0x41d14bab28400000,0x41eb649062000000\n"
".quad 0x41d860c483400000,0x41d59157b7800000,0x41d14bab28400000,0x41e3e57503000000\n"
".quad 0x41c85335cd000000,0x41d59157b7800000,0x41eff45e16c00000,0x41ec80101c800000\n"
".quad 0x41d588db5c800000,0x41e199e678200000,0x41e9a1a60e000000,0x41ec80101c800000\n"
".quad 0x41ea3ba7c9200000,0x41e3c3cc03000000,0x41e9a1a60e000000,0x41b828631a000000\n"
".quad 0x41dd90b8a2800000,0x41bfb83565000000,0x41de35e871c00000,0x41d5b21cac000000\n"
".quad 0x41dd90b8a2800000,0x41e221110c800000,0x41cefe87c5800000,0x41d5b21cac000000\n"
".quad 0x41ded5e117c00000,0x41eb6ca6c6e00000,0x41e161bf8d600000,0x41ea33c136200000\n"
".quad 0x41de4e8768800000,0x41eb6ca6c6e00000,0x41eca2a431600000,0x41eb770c87a00000\n"
".quad 0x41de4e8768800000,0x41ed27721fa00000,0x41ccd4db64800000,0x41d9b13cd8800000\n"
".quad 0x41c2f3c83f800000,0x41c31d5840000000,0x41ccd4db64800000,0x41dff7a95cc00000\n"
".quad 0x41d9acb997000000,0x41c31d5840000000,0x41bb286afc000000,0x41dfc0e277c00000\n"
".quad 0x41d6df7464800000,0x41e2b677bfc00000,0x41b0524a65000000,0x41dfc0e277c00000\n"
".quad 0x41e73136cda00000,0x41ee6f3898800000,0x41b0524a65000000,0x41d4da0942000000\n"
".quad 0x41a40f742a000000,0x41c020c7f4000000,0x41a6abc360000000,0x41b8082c7b000000\n"
".quad 0x41a40f742a000000,0x41df2ca0fc800000,0x418c0875b0000000,0x41b8082c7b000000\n"
".quad 0x41e4b2663aa00000,0x41c2eb787e800000,0x41ee6a52b1000000,0x41df2f8249800000\n"
".quad 0x41b4eeb2dd000000,0x41c2eb787e800000,0x41d38d18f3800000,0x41e8f05b0dc00000\n"
".quad 0x41b4eeb2dd000000,0x41e2026db1800000,0x41ba6bdb4e000000,0x41d09836c3000000\n"
".quad 0x41b028b11a000000,0x41e6f9c74a800000,0x41ba6bdb4e000000,0x41e91d2efae00000\n"
".quad 0x41ef4bf73be00000,0x41e6f9c74a800000,0x41e893957d000000,0x41ea5369d2a00000\n"
".quad 0x41c6cc5122800000,0x41e9558293400000,0x41a13e0f7a000000,0x41ea5369d2a00000\n"
".quad 0x41e3b7c095e00000,0x4192968968000000,0x41a13e0f7a000000,0x41ec45f162600000\n"
".quad 0x41ee491858400000,0x41d1dc8b4c000000,0x41e56647bf400000,0x41e8661657600000\n"
".quad 0x41ee491858400000,0x41ef076aa2400000,0x41ef94aab1600000,0x41e8661657600000\n"
".quad 0x41dd87aac0c00000,0x41e0fb4495800000,0x41e18da1b2600000,0x41d51f9de3400000\n"
".quad 0x41ca669cf1800000,0x41e0fb4495800000,0x41d4088fc5400000,0x41dc3edd5ac00000\n"
".quad 0x41ca669cf1800000,0x41ebc488d8e00000,0x41e597affa400000,0x41e215c438000000\n"
".quad 0x41b4cc253f000000,0x41e7a8ae3b200000,0x41e597affa400000,0x41eff78ef5e00000\n"
".quad 0x41ad56f21a000000,0x41e7a8ae3b200000,0x41e9693f26200000,0x41b0f43dd1000000\n"
".quad 0x41ee47d60e800000,0x41e11a6f40600000,0x41ef29e12f800000,0x41b0f43dd1000000\n"
".quad 0x41eb8b4695c00000,0x41d1e6c1cbc00000,0x41ef29e12f800000,0x41d1113017800000\n"
".quad 0x41c391943d000000,0x41ba664125000000,0x41ebc05fdc000000,0x41d836c260400000\n"
".quad 0x41c391943d000000,0x41c7c85d5b000000,0x41d1413a03800000,0x41d836c260400000\n"
".quad 0x41bd942252000000,0x41afac33d6000000,0x41c41e45ce800000,0x41e66b5efe800000\n"
".quad 0x41ec775e5f400000,0x41afac33d6000000,0x41e6118c40e00000,0x41c0c1eaae000000\n"
".quad 0x41ec775e5f400000,0x41db9e7db3000000,0x41d8f87007c00000,0x41e148bfd7a00000\n"
".quad 0x41c6aaf5c5000000,0x41ef016aede00000,0x41d8f87007c00000,0x41aaf54f8c000000\n"
".quad 0x41ce52818a000000,0x41ef016aede00000,0x41e9906a53600000,0x41da3962b2000000\n"
".quad 0x41e164d613400000,0x41e00d8438800000,0x41db0341b9000000,0x41da3962b2000000\n"
".quad 0x41df752fa2000000,0x41d16952ca800000,0x41db0341b9000000,0x41e29814a2a00000\n"
".quad 0x41b2ee83ca000000,0x41c9df1c30000000,0x41c3d153a5000000,0x41e16fb870400000\n"
".quad 0x41b2ee83ca000000,0x41e028f6d6000000,0x41c5a0b2bc000000,0x41e16fb870400000\n"
".quad 0x41ea50cca9600000,0x41ed42073e400000,0x41e5a9f7cca00000,0x41c258aa58000000\n"
".quad 0x41d0df897ac00000,0x41ed42073e400000,0x41c42d1156800000,0x41d1354936800000\n"
".quad 0x41d0df897ac00000,0x41d8c6cd85000000,0x41ed3834a7c00000,0x41e9282721200000\n"
".quad 0x41e6200012200000,0x41bc553080000000,0x41ed3834a7c00000,0x41ef570876200000\n"
".quad 0x41dac2f448000000,0x41bc553080000000,0x41cbdb0a15800000,0x41e73d93e8800000\n"
".quad 0x41c61a0ef8800000,0x41df0b5bbc000000,0x41cf3abc45800000,0x41e73d93e8800000\n"
".quad 0x41d78f5603800000,0x41cfc4b498800000,0x41cf3abc45800000,0x41c3b883c8000000\n"
".quad 0x41eb255f1de00000,0x41e56325ce800000,0x41edc4c34c200000,0x41ec580ece600000\n"
".quad 0x41eb255f1de00000,0x41d45c9f96000000,0x41d2942f8f000000,0x41ec580ece600000\n"
".quad 0x41cd996971000000,0x41c7be6db7800000,0x41ece516b5a00000,0x41e78bc845800000\n"
".quad 0x41ae794be2000000,0x41c7be6db7800000,0x41ec27bb40e00000,0x41e9df63faa00000\n"
".quad 0x41ae794be2000000,0x41b7263ea9000000,0x41da7aa809400000,0x41d9f64940800000\n"
".quad 0x41e9b3e70ba00000,0x41d41b60ec400000,0x41da7aa809400000,0x41d2d8c188000000\n"
".quad 0x41c5548787800000,0x41d41b60ec400000,0x41d2147250400000,0x41efc0ddae200000\n"
".quad 0x41dc86ca70800000,0x41a810a79e000000,0x41c24e076a000000,0x41efc0ddae200000\n"
".quad 0x41db9ec028400000,0x41de7d08c0800000,0x41c24e076a000000,0x41e7ca8506200000\n"
".quad 0x41e077a1e9000000,0x41e5365c72200000,0x41e8c5cae1600000,0x41d2a7e244400000\n"
".quad 0x41e077a1e9000000,0x41ea036a4de00000,0x41bc09bf94000000,0x41d2a7e244400000\n"
".quad 0x41e04665ec600000,0x41d6b409c7800000,0x41e1d0aeb9200000,0x41904b3c64000000\n"
".quad 0x41b19c7736000000,0x41d6b409c7800000,0x41eedebd03800000,0x41ea47b38ae00000\n"
".quad 0x41b19c7736000000,0x41ee3e29b8c00000,0x41d4f6e7d7800000,0x41ebd3f8ae000000\n"
".quad 0x41da713fdc800000,0x41db0b84ecc00000,0x41d4f6e7d7800000,0x41d7410102c00000\n"
".quad 0x41b4a6c205000000,0x41db0b84ecc00000,0x41ccbcb2d7800000,0x41c97d7eaa800000\n"
".quad 0x41ef5b1528200000,0x41d6a07e75400000,0x41de2db5a8800000,0x41c97d7eaa800000\n"
".quad 0x41eee7ec06a00000,0x41d41da3f0800000,0x41de2db5a8800000,0x41d1697e0a400000\n"
".quad 0x41e1b29915800000,0x41eb0ac228000000,0x41b86b77b5000000,0x41ae16afec000000\n"
".quad 0x41e1b29915800000,0x41edbe5235200000,0x41e4d09bbb200000,0x41ae16afec000000\n"
".quad 0x41d41e8b25400000,0x41ca058997800000,0x41ecf32964400000,0x41b58da6bf000000\n"
".quad 0x41ea7afd91c00000,0x41ca058997800000,0x41caaa5f22000000,0x41dc9b52d3c00000\n"
".quad 0x41ea7afd91c00000,0x41ca1cf553000000,0x41ad5e9434000000,0x41d9637484400000\n"
".quad 0x41e14404d7400000,0x41e124ad0c000000,0x41ad5e9434000000,0x41e31338c7a00000\n"
".quad 0x41de0b0dc9c00000,0x41e124ad0c000000,0x41d66a5c49c00000,0x41d776a9fa400000\n"
".quad 0x41e0001ec0e00000,0x41ee92b5ce400000,0x41999c2f38000000,0x41d776a9fa400000\n"
".quad 0x41da6e866dc00000,0x41d4e646a5800000,0x41999c2f38000000,0x41c064a75c000000\n"
".quad 0x41b5a8def9000000,0x41c1a61562000000,0x41da06cf38800000,0x41e3a6203d600000\n"
".quad 0x41b5a8def9000000,0x41ee094d4cc00000,0x41e59205ed600000,0x41e3a6203d600000\n"
".quad 0x41b1ac637f000000,0x41edc8601e000000,0x41e6b529dbe00000,0x41e7ae493a400000\n"
".quad 0x41d149b728800000,0x41edc8601e000000,0x41ee0112f0e00000,0x41d2671744c00000\n"
".quad 0x41d149b728800000,0x41ef7cf5a3000000,0x41e89c5084a00000,0x41ef9eba07e00000\n"
".quad 0x41e81c1ca1600000,0x41da7a1cf2800000,0x41e89c5084a00000,0x41e55ceab5a00000\n"
".quad 0x41d65befe3c00000,0x41da7a1cf2800000,0x41d9745dfe400000,0x41d618fba6400000\n"
".quad 0x41e7c8d9e2c00000,0x41b520b917000000,0x41ed4d2b52800000,0x41d618fba6400000\n"
".quad 0x41b7329f77000000,0x41e8f5f698400000,0x41ed4d2b52800000,0x41e9514880e00000\n"
".quad 0x41c31a33b3000000,0x41e80abfb5600000,0x41cb7d2598000000,0x41d2b367d8c00000\n"
".quad 0x41c31a33b3000000,0x41e1c2c447800000,0x41de35cf5e000000,0x41d2b367d8c00000\n"
".quad 0x41e5cb9157200000,0x41e13bf9d7c00000,0x41ed221715e00000,0x41d487182cc00000\n"
".quad 0x41d92c2302000000,0x41e13bf9d7c00000,0x41efb48af5200000,0x41d898938dc00000\n"
".quad 0x41d92c2302000000,0x41dc46dcba400000,0x41eb3ddc15400000,0x41ca502d09000000\n"
".quad 0x41e42204b0c00000,0x41e7baf1af600000,0x41eb3ddc15400000,0x41dca863b8000000\n"
".quad 0x41e2405f83200000,0x41e7baf1af600000,0x41ef8f3e20000000,0x41b67c1c20000000\n"
".quad 0x41d6541e4f800000,0x41ef826000600000,0x41ed40f8b6400000,0x41b67c1c20000000\n"
".quad 0x41c1e3b013000000,0x41be7a16de000000,0x41ed40f8b6400000,0x41a9c4b188000000\n"
".quad 0x41dd58a98c000000,0x41e86498a1600000,0x41ef72cf9b600000,0x41ed720e22c00000\n"
".quad 0x41dd58a98c000000,0x41c123a440800000,0x41ec6d1045e00000,0x41ed720e22c00000\n"
".quad 0x41c79bd582000000,0x41e6087bf3200000,0x41d502c36e800000,0x41d6b49b69000000\n"
".quad 0x41ed6c92aa000000,0x41e6087bf3200000,0x4191adbc68000000,0x41e31bdd74600000\n"
".quad 0x41ed6c92aa000000,0x41e30e5b2b400000,0x41e929b955200000,0x41dcba1b9a000000\n"
".quad 0x41e30b60ed800000,0x41e6841586800000,0x41e929b955200000,0x41e2fe9b53800000\n"
".quad 0x41e1c8fb98200000,0x41e6841586800000,0x41d6036da3c00000,0x41aeac61ec000000\n"
".quad 0x41da0df581c00000,0x41c05373e5000000,0x41eba163c7c00000,0x41aeac61ec000000\n"
".quad 0x41ef2b7b3f400000,0x4150eb8b80000000,0x41eba163c7c00000,0x41d7f4e05c400000\n"
".quad 0x88af9e0532b41dca,0x487310755a77e15d,0x2677d7a8601b81d5,0xd1a4b6f631229467\n"
".quad 0xb82c1f1cf2ec984b,0xe32dba87fd4e96d0,0x0332a161419c9f77,0xbc519281a7ec0cba\n"
".quad 0x38a03ce462a2fc26,0xf33883abb881bbf2,0xc138b609f50a13ff,0xfdbc1cbaa630c02b\n"
".quad 0xf9c18c4690a77595,0xe1566e7154af55c9,0x62d24ac941bd1d6b,0x962e33c4c7f7caa8\n"
".quad 0xca76d4f21ebe247f,0x44cbdede6d3b503f,0x73454346722f1ce4,0x1424e0d52f100261\n"
".quad 0x860e54fd51020f5a,0x3369cb54cbb9db65,0x4b70d4a81f7a7bb8,0xd5bda9b0756c9bec\n"
".quad 0x129b5af9d947790e,0x76deef10511f14a8,0x976bfe3d8ab5c5d4,0x84336ccd465cc039\n"
".quad 0x232dcdd40ae430b1,0x97bae18171844f6f,0x409cfe51dc6aaab1,0x82ac3acbca87f218\n"
".quad 0x3fb90ca2a12ee190,0x5e183ecd8cedfc7b,0xcce69c92d44f6b69,0x605bcc475744cf49\n"
".quad 0xd8f5808885b33475,0x914702a9657bd281,0x78a8ba00026237ea,0xd6d8c66ee23437ac\n"
".quad 0x265b95541a692843,0xea52a90972698290,0x1079dbf81981c751,0x0fa8ef28948a2656\n"
".quad 0xae341c29b81787f5,0xfd164a696c424a6b,0x570c7ac23238b02a,0x9d682b82b5d3464e\n"
".quad 0xce939783dc69deb8,0x5164c9e4e5e41377,0xa3bc689cacad2927,0x70bea5f6d7482965\n"
".quad 0x1a12fc1b711aedbe,0x07612d5d2868502a,0x28fc8ee3eae064a4,0x1c06f6cecfee0cb1\n"
".quad 0x5bab1447411f4f88,0x246fb2f33ff99fa1,0xecf80b06e30d176a,0x95e46ed0372f478d\n"
".quad 0xa49f8bfbaa6d7df6,0x09c7e5373b3454bb,0x7bea3420deb1ca87,0x47ad16e0548d2863\n"
".quad 0x4e4bd918fc5e2980,0x6d5026dc9415607a,0x843294c3276d9d52,0xafe22d4ba69901c9\n"
".quad 0x14f0a0f853969c5a,0x7224307e71657dcd,0x4ebff793ab4d59b8,0xc3a24e1bc5a7f2f9\n"
".quad 0x2f4af3da50003879,0x11a5f49dc398174f,0x2a71c1a71d1406b6,0x65a8607552c64b5f\n"
".quad 0x17d3636cd40fb964,0x115c861550d050db,0x4e9541f7191a7721,0x453ccd627b0e0fd8\n"
".quad 0x32b41dca7bc6c2ea,0x5a77e15d88af9e05,0xe553fee448731075,0x312294672677d7a8\n"
".quad 0xf2ec984bd1a4b6f6,0xfd4e96d0a4434761,0x419c9f77e32dba87,0x547e02460332a161\n"
".quad 0x62a2fc26bc519281,0xb881bbf238a03ce4,0xf50a13ff71c781fb,0xa630c02bc138b609\n"
".quad 0xdf8866a7fdbc1cba,0x54af55c9f9c18c46,0x41bd1d6be1566e71,0xc7f7caa80019cbb6\n"
".quad 0x1ebe247f962e33c4,0x9e70561aca76d4f2,0x722f1ce444cbdede,0x2f10026173454346\n"
".quad 0x51020f5a0b5156d0,0xcbb9db65860e54fd,0x3b87415b3369cb54,0x756c9bec4b70d4a8\n"
".quad 0xd947790ed5bda9b0,0x511f14a8b135090f,0x8ab5c5d476deef10,0x8821a008976bfe3d\n"
".quad 0x0ae430b184336ccd,0x71844f6f232dcdd4,0xdc6aaab10699711e,0xca87f218409cfe51\n"
".quad 0xf65daa4b82ac3acb,0x8cedfc7b3fb90ca2,0xd44f6b695e183ecd,0x5744cf49d85b0b53\n"
".quad 0x85b33475605bcc47,0xc21df8cdd8f58088,0x026237ea914702a9,0xe23437ac78a8ba00\n"
".quad 0x1a6928433d13bb60,0x72698290265b9554,0xa4388350ea52a909,0x948a26561079dbf8\n"
".quad 0xb81787f50fa8ef28,0x6c424a6ba7f53f85,0x3238b02afd164a69,0x87aa2f7e570c7ac2\n"
".quad 0xdc69deb89d682b82,0xe5e41377ce939783,0xacad292707c80eb5,0xd7482965a3bc689c\n"
".quad 0x2ff4b33170bea5f6,0x2868502a1a12fc1b,0xeae064a407612d5d,0xcfee0cb191d4513d\n"
".quad 0x411f4f881c06f6ce,0x5988f39c5bab1447,0xe30d176a246fb2f3,0x372f478decf80b06\n"
".quad 0xaa6d7df634064500,0x3b3454bba49f8bfb,0xe88e860a09c7e537,0x548d28637bea3420\n"
".quad 0xfc5e298047ad16e0,0x9415607a2a01c6b8,0x276d9d526d5026dc,0xc3f1f3d4843294c3\n"
".quad 0x53969c5aafe22d4b,0x71657dcd14f0a0f8,0xab4d59b87931f10d,0xc5a7f2f94ebff793\n"
".quad 0x4e7c7a8cc3a24e1b,0xc398174f2f4af3da,0x1d1406b611a5f49d,0x52c64b5f12bc03db\n"
".quad 0xd40fb96465a86075,0x62f2bbed17d3636c,0x191a7721115c8615,0x7b0e0fd84e9541f7\n"
".quad 0x7bc6c2eabc21d620,0x88af9e0532b41dca,0x13fe99095a77e15d,0x2677d7a8e553fee4\n"
".quad 0xd1a4b6f631229467,0xa443476138e453d7,0xe32dba87fd4e96d0,0xcb2b0697419c9f77\n"
".quad 0xbc519281547e0246,0x38a03ce462a2fc26,0x71c781fb13550819,0xc138b609f50a13ff\n"
".quad 0x70af5aada630c02b,0xf9c18c46df8866a7,0xe1566e7154af55c9,0x0019cbb6dd878e89\n"
".quad 0x962e33c4c7f7caa8,0xe000e9641ebe247f,0x44cbdede9e70561a,0x73454346722f1ce4\n"
".quad 0x0b5156d03250b1b3,0x860e54fd51020f5a,0x3d803477cbb9db65,0x4b70d4a83b87415b\n"
".quad 0xd5bda9b0756c9bec,0xb135090fbd3282d3,0x76deef10511f14a8,0x2a8f088b8ab5c5d4\n"
".quad 0x84336ccd8821a008,0x232dcdd40ae430b1,0x0699711e803c8694,0x409cfe51dc6aaab1\n"
".quad 0x2dc3468fca87f218,0x3fb90ca2f65daa4b,0x5e183ecd8cedfc7b,0xd85b0b53028f721c\n"
".quad 0x605bcc475744cf49,0xc00eb6d085b33475,0x914702a9c21df8cd,0x78a8ba00026237ea\n"
".quad 0x3d13bb60bb4d986c,0x265b95541a692843,0x36bf5e5c72698290,0x1079dbf8a4388350\n"
".quad 0x0fa8ef28948a2656,0xa7f53f85fd223560,0xfd164a696c424a6b,0x54fb76303238b02a\n"
".quad 0x9d682b8287aa2f7e,0xce939783dc69deb8,0x07c80eb558e992fe,0xa3bc689cacad2927\n"
".quad 0x6df20986d7482965,0x1a12fc1b2ff4b331,0x07612d5d2868502a,0x91d4513dcbccb251\n"
".quad 0x1c06f6cecfee0cb1,0xc30eefb4411f4f88,0x246fb2f35988f39c,0xecf80b06e30d176a\n"
".quad 0x34064500aa17b810,0xa49f8bfbaa6d7df6,0x5581a6803b3454bb,0x7bea3420e88e860a\n"
".quad 0x47ad16e0548d2863,0x2a01c6b896ce3ad9,0x6d5026dc9415607a,0x1e0894bc276d9d52\n"
".quad 0xafe22d4bc3f1f3d4,0x14f0a0f853969c5a,0x7931f10df6479427,0x4ebff793ab4d59b8\n"
".quad 0x0e2e1221c5a7f2f9,0x2f4af3da4e7c7a8c,0x11a5f49dc398174f,0x12bc03db6728fa9f\n"
".quad 0x65a8607552c64b5f,0x5c9da691d40fb964,0x115c861562f2bbed,0x4e9541f7191a7721\n"
".quad 0xbc21d6203980a260,0x32b41dca7bc6c2ea,0x41e24fb388af9e05,0xe553fee413fe9909\n"
".quad 0x312294672677d7a8,0x38e453d7a64b50aa,0xfd4e96d0a4434761,0xeab6ab4de32dba87\n"
".quad 0x547e0246cb2b0697,0x62a2fc26bc519281,0x1355081925326872,0xf50a13ff71c781fb\n"
".quad 0x88c9b14ac138b609,0xdf8866a770af5aad,0x54af55c9f9c18c46,0xdd878e8987d8d221\n"
".quad 0xc7f7caa80019cbb6,0xd46df3b2962e33c4,0x9e70561ae000e964,0x722f1ce444cbdede\n"
".quad 0x3250b1b3d0f2ffca,0x51020f5a0b5156d0,0x8e6caf90860e54fd,0x3b87415b3d803477\n"
".quad 0x756c9bec4b70d4a8,0xbd3282d3a6cf6dcf,0x511f14a8b135090f,0x6461db1676deef10\n"
".quad 0x8821a0082a8f088b,0x0ae430b184336ccd,0x803c86946769d3c6,0xdc6aaab10699711e\n"
".quad 0x0987fc02409cfe51,0xf65daa4b2dc3468f,0x8cedfc7b3fb90ca2,0x028f721c4cf01032\n"
".quad 0x5744cf49d85b0b53,0x3ae08dad605bcc47,0xc21df8cdc00eb6d0,0x026237ea914702a9\n"
".quad 0xbb4d986cd93432cf,0x1a6928433d13bb60,0x58aad008265b9554,0xa438835036bf5e5c\n"
".quad 0x948a26561079dbf8,0xfd2235600834f63e,0x6c424a6ba7f53f85,0x5a821874fd164a69\n"
".quad 0x87aa2f7e54fb7630,0xdc69deb89d682b82,0x58e992fefbeb6013,0xacad292707c80eb5\n"
".quad 0x7936445ba3bc689c,0x2ff4b3316df20986,0x2868502a1a12fc1b,0xcbccb251a3db6928\n"
".quad 0xcfee0cb191d4513d,0x114fd2fa1c06f6ce,0x5988f39cc30eefb4,0xe30d176a246fb2f3\n"
".quad 0xaa17b81097c17fbf,0xaa6d7df634064500,0xf441ecbea49f8bfb,0xe88e860a5581a680\n"
".quad 0x548d28637bea3420,0x96ce3ad9a2776837,0x9415607a2a01c6b8,0xee6220cd6d5026dc\n"
".quad 0xc3f1f3d41e0894bc,0x53969c5aafe22d4b,0xf6479427e628efc7,0xab4d59b87931f10d\n"
".quad 0x4b89f14d4ebff793,0x4e7c7a8c0e2e1221,0xc398174f2f4af3da,0x6728fa9f4be6f7cc\n"
".quad 0x52c64b5f12bc03db,0x57e0305765a86075,0x62f2bbed5c9da691,0x191a7721115c8615\n"
".quad 0xb80fe4c1e78d952a,0xc075d879c51d75b3,0x6f220b2f666092db,0x8d6e65c6e278059c\n"
".quad 0x45e82196a06e59ac,0x33dcb36a5e009f48,0x184246b07f82fd8d,0x3582bbca0f3ba98c\n"
".quad 0x34c34c992837cd40,0xb3b88877dfb5cbdf,0xc13347526602d38b,0x94a157687eae6f20\n"
".quad 0xccb841008c15a315,0xc853c28e7ce8f953,0xf29f172bc3f1af92,0x74ba1d30cb977c88\n"
".quad 0xea3779ecc383fc5c,0xf703ddc7ca16ebe9,0xbf088500d7df874e,0x100c441ed05cd129\n"
".quad 0xacc8206b8203fcab,0xedbee7829bc8b9b3,0x3899091980e42ee2,0xd42a0bbbc4146170\n"
".quad 0x7de4d4b9c8af34ff,0x6abe6fe538f5b399,0xe7d658ad29ad4e06,0xf4b1a93b3cd769aa\n"
".quad 0xf124023388d7eb2a,0x2dae22de849b4be9,0x0550286bfe39230a,0x3c58c63a7d2708e1\n"
".quad 0x72e1c7f96fc9be5e,0x27027e1f2dbe5ebc,0xf0e00d9dfe3b34ee,0xfe21a330f484b1b3\n"
".quad 0x8a1e25af7f4e1fa4,0x18079907e0f11431,0xfd9ee9d2537ce192,0x8aa058ce2d0605fa\n"
".quad 0xf84ba61e9c00d8a7,0x8ffbd2d547e6bfc5,0x56d86547fedea7e9,0x2f64e0ba277f662c\n"
".quad 0x3007ffa2316235d1,0x83e0ce88465502b1,0x3dabfed72d0b3158,0x719bf53835a42936\n"
".quad 0x128514e56eecbe90,0x8a6d3ac036e15f9d,0x04e081b7bd7f4c76,0x6b4c5d7ff50ed670\n"
".quad 0x290dd36306b0d856,0xba3e563b3ea4d8ca,0x5147584c111c118b,0x53c9cab0cd813a07\n"
".quad 0x644d9d8ab755f00a,0x45f553dc5f141f2e,0xa3ce64062892dc45,0xccbd6a2221e44edf\n"
".quad 0xa907c5394274add2,0xc151ac0e998a85ba,0x6e9f4ff27ed04c41,0x84d6f481e9688777\n"
".quad 0x59ce3c275a49b5dc,0x2f5088eb3d93999f,0xf4b78e1542cc3cbd,0x7c285d63ee6499a4\n"
".quad 0xdba2d945485257f7,0xd543bc37c936960e,0x9a9af8937cb21754,0x15ec9db96cdd6cb4\n"
".quad 0x73b6243bbea1c401,0x3611c757383fd576,0x57274e01786dbddb,0xfb528e8fb0b47943\n"
".quad 0x8ec677cb9c7a7410,0xda182a59dc003c94,0xd165bc9f8df81a0e,0xa2cb8167b3970772\n"
".quad 0x7de7c05b6423248c,0x7c0842dac9e8c5a7,0xe8e5dd2855537362,0x81b516119d25aa56\n"
".quad 0xdebbd40485500fdf,0xe80b9d229b35e83b,0xf55ad45ad05f7c2b,0xda28bbae5282e66b\n"
".quad 0xa47628b37902e953,0x05d022ea02f0fd53,0x5d5a079b990048e6,0x2279b586ba6edb30\n"
".quad 0x99e21c5c595c6c7c,0x3042e6fd10ac1edf,0x34637d1b55bce9ef,0xcbaff0fb59201def\n"
".quad 0xb73aa9d0aa6768e9,0x8d4d8ca623fc7ade,0xea73eaf317589f1c,0x581d5734abe84d6a\n"
".quad 0xae6487416f2976af,0x0d0002adf6616835,0x7720389815f92f8e,0x664eb971421f46fc\n"
".quad 0x05728e9618c30967,0x55d5b3dd9731c2c1,0x0878b3ec1cb8d3b6,0x7bce513b3af047af\n"
".quad 0xf27b3acbaa5a4f9b,0x5150b86b06e3d290,0xde407c3bd39b3fde,0x9549881169a50a05\n"
".quad 0x5432ad4b0ed35a92,0x09348a4af341a7fb,0xea65b2f2628547f5,0xbbff584cbb535261\n"
".quad 0xa461cfbbb97da09e,0xaa37eb7c8cf471ae,0x1e442fcf2f51360f,0xf2095d930fb7f47c\n"
".quad 0x5e6d619bc4379a76,0x1addde3997c74146,0xa14a6c05afe5b834,0xf03787fc6a9b8992\n"
".quad 0x222db4c49ba0643f,0x81f4d39bfe7588e6,0x2ab733779dc46886,0x32de47d8e702ba63\n"
".quad 0xf9bf69b1913e04a2,0x203a65f5a42d2aef,0x2c39a7eef355d9dd,0x5edcdc620ff2a247\n"
".quad 0xbeedb227950c4913,0xa53efb5e08c7cde6,0x88cdc0a5543878a7,0x358c7094732d3034\n"
".quad 0xb99a8fb46d80610f,0xbb410a7b9bc4a01c,0x707f46a71074c17f,0xdfa85fc42d2b21ea\n"
".quad 0x5601b8f8a3a9dbda,0x0d55d1c7e2a7cf1b,0x4fc22bf48156c50a,0xa6901daad9172a54\n"
".quad 0x336c75b48aa9481b,0x2560d683d53619f7,0xf6eb20ab20e97ffc,0x22c7d7e089b4d43e\n"
".quad 0x48934a190b48d812,0x911e76dd046249a8,0x8e963aaba45898ca,0xd50572fdb4c6b9e8\n"
".quad 0x9ceac4adacaf6db5,0xe10b6340b7e670b9,0x508c5bf998c8ba56,0x6b82ef6cf101cfd1\n"
".quad 0x1f2b70b2b97f2163,0x9bcc83a9a05bdd47,0x693d9096e3188d27,0x731676d11fdca87b\n"
".quad 0x6423248c86f73aa0,0xc9e8c5a77de7c05b,0x0487281e7c0842da,0x9d25aa56e8e5dd28\n"
".quad 0x85500fdf81b51611,0x9b35e83b8d70e8a6,0xd05f7c2be80b9d22,0x1fe261f9f55ad45a\n"
".quad 0x7902e953da28bbae,0x02f0fd53a47628b3,0x990048e63add3392,0xba6edb305d5a079b\n"
".quad 0xde6a619a2279b586,0x10ac1edf99e21c5c,0x55bce9ef3042e6fd,0x59201def8249ae62\n"
".quad 0xaa6768e9cbaff0fb,0xfa409c88b73aa9d0,0x17589f1c8d4d8ca6,0xabe84d6aea73eaf3\n"
".quad 0x6f2976af53759bbe,0xf6616835ae648741,0xa6cc0c660d0002ad,0x421f46fc77203898\n"
".quad 0x18c30967664eb971,0x9731c2c170cdcb54,0x1cb8d3b655d5b3dd,0x139d67740878b3ec\n"
".quad 0xaa5a4f9b7bce513b,0x06e3d290f27b3acb,0xd39b3fde9d983ec1,0x69a50a05de407c3b\n"
".quad 0x7f8f9e5b95498811,0xf341a7fb5432ad4b,0x628547f509348a4a,0xbb535261e2ca56d6\n"
".quad 0xb97da09ebbff584c,0x02ff7b2ea461cfbb,0x2f51360faa37eb7c,0x0fb7f47c1e442fcf\n"
".quad 0xc4379a76c62930a3,0x97c741465e6d619b,0xcdf8a7341addde39,0x6a9b8992a14a6c05\n"
".quad 0x9ba0643ff03787fc,0xfe7588e6e49b44e5,0x9dc4688681f4d39b,0x9b65d5d22ab73377\n"
".quad 0x913e04a232de47d8,0xa42d2aeff9bf69b1,0xf355d9dd1b3a58f3,0x0ff2a2472c39a7ee\n"
".quad 0xa2418d725edcdc62,0x08c7cde6beedb227,0x543878a7a53efb5e,0x732d30347442f04a\n"
".quad 0x6d80610f358c7094,0x198c2ac8b99a8fb4,0x1074c17fbb410a7b,0x2d2b21ea707f46a7\n"
".quad 0xa3a9dbda396e6076,0xe2a7cf1b5601b8f8,0x0da6dcc40d55d1c7,0xd9172a544fc22bf4\n"
".quad 0x8aa9481ba6901daa,0xd53619f70c491183,0x20e97ffc2560d683,0x58f52916f6eb20ab\n"
".quad 0x0b48d81222c7d7e0,0x046249a848934a19,0xa45898cad3ba735f,0xb4c6b9e88e963aab\n"
".quad 0x30516504d50572fd,0xb7e670b99ceac4ad,0x98c8ba56e10b6340,0xf101cfd136fde496\n"
".quad 0xb97f21636b82ef6c,0x6a665f381f2b70b2,0xe3188d279bcc83a9,0x1fdca87b693d9096\n"
".quad 0x86f73aa0d249c59c,0x7de7c05b6423248c,0xc470205dc9e8c5a7,0xe8e5dd280487281e\n"
".quad 0x81b516119d25aa56,0x8d70e8a6d514e1cc,0xe80b9d229b35e83b,0x4c4fc495d05f7c2b\n"
".quad 0xda28bbae1fe261f9,0xa47628b37902e953,0x3add339211de3a17,0x5d5a079b990048e6\n"
".quad 0xe6f319cdba6edb30,0x99e21c5cde6a619a,0x3042e6fd10ac1edf,0x8249ae62b8d2512c\n"
".quad 0xcbaff0fb59201def,0x4e1a6079aa6768e9,0x8d4d8ca6fa409c88,0xea73eaf317589f1c\n"
".quad 0x53759bbea3dbb5ca,0xae6487416f2976af,0xc7d7e402f6616835,0x77203898a6cc0c66\n"
".quad 0x664eb971421f46fc,0x70cdcb545daf0bed,0x55d5b3dd9731c2c1,0x941e9ae11cb8d3b6\n"
".quad 0x7bce513b139d6774,0xf27b3acbaa5a4f9b,0x9d983ec1e4bab29a,0xde407c3bd39b3fde\n"
".quad 0x4620e0c469a50a05,0x5432ad4b7f8f9e5b,0x09348a4af341a7fb,0xe2ca56d6ad0282fc\n"
".quad 0xbbff584cbb535261,0x8f40d701b97da09e,0xaa37eb7c02ff7b2e,0x1e442fcf2f51360f\n"
".quad 0xc62930a38c2e073b,0x5e6d619bc4379a76,0x2c846ffe97c74146,0xa14a6c05cdf8a734\n"
".quad 0xf03787fc6a9b8992,0xe49b44e5e143a759,0x81f4d39bfe7588e6,0x9b1af5629dc46886\n"
".quad 0x32de47d89b65d5d2,0xf9bf69b1913e04a2,0x1b3a58f37b30383c,0x2c39a7eef355d9dd\n"
".quad 0xb2e0db390ff2a247,0xbeedb227a2418d72,0xa53efb5e08c7cde6,0x7442f04a055c8834\n"
".quad 0x358c7094732d3034,0x387ffa766d80610f,0xbb410a7b198c2ac8,0x707f46a71074c17f\n"
".quad 0x396e60769a04842f,0x5601b8f8a3a9dbda,0xfc135159e2a7cf1b,0x4fc22bf40da6dcc4\n"
".quad 0xa6901daad9172a54,0x0c491183935a19f1,0x2560d683d53619f7,0x9a30b2b320e97ffc\n"
".quad 0x22c7d7e058f52916,0x48934a190b48d812,0xd3ba735fd0b5693c,0x8e963aaba45898ca\n"
".quad 0x2c25d0c2b4c6b9e8,0x9ceac4ad30516504,0xe10b6340b7e670b9,0x36fde496d9283119\n"
".quad 0x6b82ef6cf101cfd1,0x83ecd936b97f2163,0x9bcc83a96a665f38,0x693d9096e3188d27\n"
".quad 0xd249c59c2d726650,0x6423248c86f73aa0,0x51cb394e7de7c05b,0x0487281ec470205d\n"
".quad 0x9d25aa56e8e5dd28,0xd514e1ccb9d0d8d3,0x9b35e83b8d70e8a6,0x3692963fe80b9d22\n"
".quad 0x1fe261f94c4fc495,0x7902e953da28bbae,0x11de3a1714a5295e,0x990048e63add3392\n"
".quad 0xd2b73c585d5a079b,0xde6a619ae6f319cd,0x10ac1edf99e21c5c,0xb8d2512c92713de7\n"
".quad 0x59201def8249ae62,0x607e032ecbaff0fb,0xfa409c884e1a6079,0x17589f1c8d4d8ca6\n"
".quad 0xa3dbb5ca77c938e5,0x6f2976af53759bbe,0x03839563ae648741,0xa6cc0c66c7d7e402\n"
".quad 0x421f46fc77203898,0x5daf0bedc324f6de,0x9731c2c170cdcb54,0x45fc637f55d5b3dd\n"
".quad 0x139d6774941e9ae1,0xaa5a4f9b7bce513b,0xe4bab29af22b439d,0xd39b3fde9d983ec1\n"
".quad 0x9d7bc199de407c3b,0x7f8f9e5b4620e0c4,0xf341a7fb5432ad4b,0xad0282fcba424558\n"
".quad 0xbb535261e2ca56d6,0x5664ec15bbff584c,0x02ff7b2e8f40d701,0x2f51360faa37eb7c\n"
".quad 0x8c2e073bd17675b6,0xc4379a76c62930a3,0xd8c35bc85e6d619b,0xcdf8a7342c846ffe\n"
".quad 0x6a9b8992a14a6c05,0xe143a759cdba01e3,0xfe7588e6e49b44e5,0xedb3e41481f4d39b\n"
".quad 0x9b65d5d29b1af562,0x913e04a232de47d8,0x7b30383c803f1253,0xf355d9dd1b3a58f3\n"
".quad 0xd5fc4af52c39a7ee,0xa2418d72b2e0db39,0x08c7cde6beedb227,0x055c8834cc9ea05e\n"
".quad 0x732d30347442f04a,0xe4313fe0358c7094,0x198c2ac8387ffa76,0x1074c17fbb410a7b\n"
".quad 0x9a04842f96108a81,0xa3a9dbda396e6076,0x848f58775601b8f8,0x0da6dcc4fc135159\n"
".quad 0xd9172a544fc22bf4,0x935a19f13ecfaa51,0xd53619f70c491183,0x425b3eb42560d683\n"
".quad 0x58f529169a30b2b3,0x0b48d81222c7d7e0,0xd0b5693c58d8d3be,0xa45898cad3ba735f\n"
".quad 0xd352a02c8e963aab,0x305165042c25d0c2,0xb7e670b99ceac4ad,0xd92831192d0d8afb\n"
".quad 0xf101cfd136fde496,0x747a37666b82ef6c,0x6a665f3883ecd936,0xe3188d279bcc83a9\n"
".quad 0xbc7b1221b55f839b,0x715d13a9a6609104,0xc8b843c03371e00d,0xda68d3de7593d786\n"
".quad 0xb46993be240e60cb,0xf426c197559de996,0xfab5b4cf5f38dc01,0xc071b4eff60af95c\n"
".quad 0xd66a4a81ed91781b,0xcdb7bc6bfd6421c6,0xc85246b92456f7ea,0x260fd72851cab80d\n"
".quad 0xece0ad08e2e1650c,0xfae19b0b6b8b2405,0xd40664e678822e5d,0x7e0afc5a186bf0d2\n"
".quad 0x978aa5a828fd8068,0x1b725acb49abbcf7,0x34ec0abe77b4f60f,0xb2cf459feafb2603\n"
".quad 0x8846c4a3f8a1980d,0x5deefac24d185cb7,0x55dcb5550489896b,0x5c09d4cc7799a6c3\n"
".quad 0x28a3da61356656e7,0xee252d1ef410316f,0x870104b03d3e8ba2,0x0cb8afea73872aa1\n"
".quad 0x2457b0350d429cc8,0x1d5f9267d579ef3a,0x66852dde072e644b,0x364e050643833dcb\n"
".quad 0x21c686f5ad6613e3,0xcfa38e4dec47960d,0x09de48ec6ae5b41e,0x8eb4ad51d911eaaf\n"
".quad 0x63b7ecd0caf24446,0x4406505d369b5e91,0xe2b3387bbd0bb61c,0x6f18e5dbb3e82c66\n"
".quad 0xc1bca28f93800a08,0x48b3293be855060c,0x50fad161030f45e0,0xdac9a40865c4f884\n"
".quad 0x147c40e3370951b9,0xe9446bebede702a6,0xee7fe0204b8ffe40,0xaf690a54e3b40150\n"
".quad 0x53a46f33d0f85966,0x21d7276176c722c1,0xa5c7a3b8834add31,0x8f8bf6ad66cf1f94\n"
".quad 0xedfd722db7392605,0x2038528593893372,0xe01328e9823f7d5f,0x438832f2c91968ae\n"
".quad 0xf3be6996416b5a85,0x9222b726c117808a,0xbe0698201846c337,0x0199abf165ce4278\n"
".quad 0xb8388410a6b26cda,0xcbe70975f27eb1ca,0xab880baabb037939,0x0046a2a80151bace\n"
".quad 0x7273309cdcc1e791,0x07bfe043460ffa02,0x4184d928c697c359,0x6e554bf129152fbb\n"
".quad 0xc244f0909e3fa161,0xd210515edf16e3f2,0xd042b1f5889a624b,0xd34dab9600f7d8c9\n"
".quad 0x2e56e9137715335c,0xd12199fdfd04493f,0x7d9a3854e170fcf9,0x52723aeb7f7fb010\n"
".quad 0xbda7ef648b5a0bf2,0xb231d4244ca620b5,0x45a73a74c64be342,0xb40de6e52fc1654c\n"
".quad 0x3c9f2bfee31f2d23,0x1a4a77585f14ef95,0xc4576f2fc64a210a,0xd814509f0a030ea5\n"
".quad 0xb1a2ddb33c4f878e,0xb54d21ab69ff89e4,0x781d0cd15f48df96,0xca1bb3278a62b632\n"
".quad 0x06c03d5591032d3f,0xe2dcb844ebddfa10,0x79519f27b0c6f541,0xabbc1e20d09f8a8b\n"
".quad 0x5fcbf29463abef29,0x4b419fd919574211,0xfb3c8520846db114,0xa625b4d5800ba15a\n"
".quad 0x7c4db5a94035b770,0xd5a623acb607a748,0x111ccc25b3980673,0xf319c4df4cea0d40\n"
".quad 0xfd6936929e7c49c3,0xabf470ce8f3c308e,0xf4b3480ad34e17b5,0xbe21d7351474d383\n"
".quad 0xce9e55fbf3900e6b,0xa9a845ab0f76ac71,0x104239751da3915e,0xb04ac02f3ac12ab7\n"
".quad 0xccb8229681fc20d8,0x84d68998d929a406,0x83a68acfb938648e,0xc2053347238ce527\n"
".quad 0x1ef304d5c1a614ba,0x0018b69e23f0bb25,0x035a7fbc52f1932d,0x6e3615795e710026\n"
".quad 0x3294fd332b64bd17,0x19860aa16c1ccf50,0xfb22a5b94a49b972,0x1b3749360a128507\n"
".quad 0xe7ac4c37fefb1b44,0xb96d978286f2bb15,0x9de70c1cbb0cc152,0xd9756757c8d4a210\n"
".quad 0x578715b2d218ec77,0x9f1ffb13d41fe1d6,0xff71d89431950d62,0x40e08802fbc75fad\n"
".quad 0xb9d8fe5c0dd358b1,0x34a31e6d0d70fae5,0x774a4722330b308d,0x8ce02c8b261b80de\n"
".quad 0xefda5ccad7e96e40,0xfe2180f1412e3356,0x1957f6226e6461e6,0x11ab1b5d9180443c\n"
".quad 0xd427222316ed2ad6,0x3c8f2d4f68beaeb9,0x017a1441d651d2f6,0x814b4d9325305b59\n"
".quad 0x2690674d6a0f70b9,0x9da573bc5701b05c,0xebd0051076e2e461,0x805cb34a36cfde84\n"
".quad 0xe4bb9e5178f9bf72,0x1ce60ad0ef67d82a,0x758722e1d9b0228e,0x25ff0653241411f1\n"
".quad 0xd5137ef510a0c0b0,0x689bb61411a29099,0x5eb1e34597890eab,0xf5d7b395598fcf36\n"
".quad 0x69620b15d36baf73,0x060bfa835b4c6a66,0x6ae26920c0b3eeec,0x0b162604be02c8bc\n"
".quad 0xa819acee2fe3975b,0x8e2328b777c4c6a0,0x25c419d9847d6ef8,0x4afbfccb78e82638\n"
".quad 0xe31f2d23207d810d,0x5f14ef953c9f2bfe,0x3596b2f61a4a7758,0x0a030ea5c4576f2f\n"
".quad 0x3c4f878ed814509f,0x69ff89e4eb842441,0x5f48df96b54d21ab,0x705d18f0781d0cd1\n"
".quad 0x91032d3fca1bb327,0xebddfa1006c03d55,0xb0c6f541eba4c153,0xd09f8a8b79519f27\n"
".quad 0x139e7c25abbc1e20,0x195742115fcbf294,0x846db1144b419fd9,0x800ba15a04a69fd9\n"
".quad 0x4035b770a625b4d5,0x2694093b7c4db5a9,0xb3980673d5a623ac,0x4cea0d40111ccc25\n"
".quad 0x9e7c49c35776875e,0x8f3c308efd693692,0xcffb4580abf470ce,0x1474d383f4b3480a\n"
".quad 0xf3900e6bbe21d735,0x0f76ac71d1e60358,0x1da3915ea9a845ab,0x517c2f7710423975\n"
".quad 0x81fc20d8b04ac02f,0xd929a406ccb82296,0xb938648e188cc136,0x238ce52783a68acf\n"
".quad 0x22d85d66c2053347,0x23f0bb251ef304d5,0x52f1932d0018b69e,0x5e710026e89bb3c1\n"
".quad 0x2b64bd176e361579,0x7336c5663294fd33,0x4a49b97219860aa1,0x0a128507fb22a5b9\n"
".quad 0xfefb1b44a5201d15,0x86f2bb15e7ac4c37,0xb00c11e9b96d9782,0xc8d4a2109de70c1c\n"
".quad 0xd218ec77d9756757,0xd41fe1d68de151b9,0x31950d629f1ffb13,0x485cf85fff71d894\n"
".quad 0x0dd358b140e08802,0x0d70fae5b9d8fe5c,0x330b308d695207de,0x261b80de774a4722\n"
".quad 0x6a439f4f8ce02c8b,0x412e3356efda5cca,0x6e6461e6fe2180f1,0x9180443c44874878\n"
".quad 0x16ed2ad611ab1b5d,0x8e887e92d4272223,0xd651d2f63c8f2d4f,0x25305b59017a1441\n"
".quad 0x6a0f70b915952ff6,0x5701b05c2690674d,0xc10a3d549da573bc,0x36cfde84ebd00510\n"
".quad 0x78f9bf72805cb34a,0xef67d82a06e6a3ff,0xd9b0228e1ce60ad0,0x2bf32ea3758722e1\n"
".quad 0x10a0c0b025ff0653,0x11a29099d5137ef5,0x97890eabedceb0bd,0x598fcf365eb1e345\n"
".quad 0xb3d17950f5d7b395,0x5b4c6a6669620b15,0xc0b3eeec060bfa83,0xbe02c8bcf7ced61d\n"
".quad 0x2fe3975b0b162604,0x760c75bea819acee,0x847d6ef88e2328b7,0x78e8263825c419d9\n"
".quad 0x207d810dbcc02a09,0x3c9f2bfee31f2d23,0x295d084c5f14ef95,0xc4576f2f3596b2f6\n"
".quad 0xd814509f0a030ea5,0xeb84244158932d4e,0xb54d21ab69ff89e4,0xaa6e6b3c5f48df96\n"
".quad 0xca1bb327705d18f0,0x06c03d5591032d3f,0xeba4c15327a1455e,0x79519f27b0c6f541\n"
".quad 0x2143a709d09f8a8b,0x5fcbf294139e7c25,0x4b419fd919574211,0x04a69fd9dd817093\n"
".quad 0xa625b4d5800ba15a,0xfab801434035b770,0xd5a623ac2694093b,0x111ccc25b3980673\n"
".quad 0x5776875e9734352a,0xfd6936929e7c49c3,0xb749e19d8f3c308e,0xf4b3480acffb4580\n"
".quad 0xbe21d7351474d383,0xd1e60358976cba34,0xa9a845ab0f76ac71,0x91947bbf1da3915e\n"
".quad 0xb04ac02f517c2f77,0xccb8229681fc20d8,0x188cc1365f02033f,0x83a68acfb938648e\n"
".quad 0x3e81afc1238ce527,0x1ef304d522d85d66,0x0018b69e23f0bb25,0xe89bb3c17b8b95a5\n"
".quad 0x6e3615795e710026,0x326d741d2b64bd17,0x19860aa17336c566,0xfb22a5b94a49b972\n"
".quad 0xa5201d153f8f909b,0xe7ac4c37fefb1b44,0x6feddd6a86f2bb15,0x9de70c1cb00c11e9\n"
".quad 0xd9756757c8d4a210,0x8de151b99743323d,0x9f1ffb13d41fe1d6,0x1f2880ec31950d62\n"
".quad 0x40e08802485cf85f,0xb9d8fe5c0dd358b1,0x695207de52547f43,0x774a4722330b308d\n"
".quad 0x27c5d19b261b80de,0xefda5cca6a439f4f,0xfe2180f1412e3356,0x448748787aa07c69\n"
".quad 0x11ab1b5d9180443c,0x144bf8ca16ed2ad6,0x3c8f2d4f8e887e92,0x017a1441d651d2f6\n"
".quad 0x15952ff6b87764d5,0x2690674d6a0f70b9,0x45b7eca05701b05c,0xebd00510c10a3d54\n"
".quad 0x805cb34a36cfde84,0x06e6a3ff17258604,0x1ce60ad0ef67d82a,0x69319945d9b0228e\n"
".quad 0x25ff06532bf32ea3,0xd5137ef510a0c0b0,0xedceb0bddad60454,0x5eb1e34597890eab\n"
".quad 0x7d57456e598fcf36,0x69620b15b3d17950,0x060bfa835b4c6a66,0xf7ced61dec5437fc\n"
".quad 0x0b162604be02c8bc,0xcc2f4d732fe3975b,0x8e2328b7760c75be,0x25c419d9847d6ef8\n"
".quad 0xbcc02a09b4ec2134,0xe31f2d23207d810d,0x27e4702d3c9f2bfe,0x3596b2f6295d084c\n"
".quad 0x0a030ea5c4576f2f,0x58932d4e77a44f9c,0x69ff89e4eb842441,0xa88c546db54d21ab\n"
".quad 0x705d18f0aa6e6b3c,0x91032d3fca1bb327,0x27a1455edc977dc5,0xb0c6f541eba4c153\n"
".quad 0x5718450a79519f27,0x139e7c252143a709,0x195742115fcbf294,0xdd817093656162e9\n"
".quad 0x800ba15a04a69fd9,0xa1561c28a625b4d5,0x2694093bfab80143,0xb3980673d5a623ac\n"
".quad 0x9734352ab057d145,0x9e7c49c35776875e,0x85932357fd693692,0xcffb4580b749e19d\n"
".quad 0x1474d383f4b3480a,0x976cba341d3751a9,0x0f76ac71d1e60358,0xf2ce6237a9a845ab\n"
".quad 0x517c2f7791947bbf,0x81fc20d8b04ac02f,0x5f02033f6d67abf5,0xb938648e188cc136\n"
".quad 0xc518bbb483a68acf,0x22d85d663e81afc1,0x23f0bb251ef304d5,0x7b8b95a5b18ddddd\n"
".quad 0x5e710026e89bb3c1,0xc3bf9ee16e361579,0x7336c566326d741d,0x4a49b97219860aa1\n"
".quad 0x3f8f909b0b92bcf2,0xfefb1b44a5201d15,0x6fb44fcee7ac4c37,0xb00c11e96feddd6a\n"
".quad 0xc8d4a2109de70c1c,0x9743323df7169bcc,0xd41fe1d68de151b9,0x2c1185dc9f1ffb13\n"
".quad 0x485cf85f1f2880ec,0x0dd358b140e08802,0x52547f43d6e925c5,0x330b308d695207de\n"
".quad 0x7a2f9b64774a4722,0x6a439f4f27c5d19b,0x412e3356efda5cca,0x7aa07c690917565e\n"
".quad 0x9180443c44874878,0xbe71d3a411ab1b5d,0x8e887e92144bf8ca,0xd651d2f63c8f2d4f\n"
".quad 0xb87764d50ac21899,0x6a0f70b915952ff6,0x9284a9372690674d,0xc10a3d5445b7eca0\n"
".quad 0x36cfde84ebd00510,0x17258604cbe865a2,0xef67d82a06e6a3ff,0x9deeda561ce60ad0\n"
".quad 0x2bf32ea369319945,0x10a0c0b025ff0653,0xdad60454854cc67e,0x97890eabedceb0bd\n"
".quad 0x4a00db565eb1e345,0xb3d179507d57456e,0x5b4c6a6669620b15,0xec5437fc693dc0c4\n"
".quad 0xbe02c8bcf7ced61d,0x82846cb30b162604,0x760c75becc2f4d73,0x847d6ef88e2328b7\n"
".quad 0x90a22da0ebc39fdf,0xb3bd77cce548c8ca,0xd75cb4218ba12355,0xff02bf92cfb6c235\n"
".quad 0x4520384275f756c6,0x17a292aadd5fba84,0xc4558b75c34d381c,0x548db0d1f168e3ed\n"
".quad 0xa11a439517fea2a9,0x8720914f887d1c4d,0xc92acf63cf8d934b,0xdb0379ba76883e0b\n"
".quad 0x3f0e0639f5d896d6,0xbf635ba219e975eb,0x7f9c21fef48001ab,0x8c7c87f8bd5967b2\n"
".quad 0x5cc2e17cec9c9728,0xebff46159ddbe314,0x593a47281c8a8a00,0x21f95ce0c5463e25\n"
".quad 0x9803b436da3021ed,0x9e1d1a2d462f86e2,0x71ff36d8206beaec,0x587d262c87c98940\n"
".quad 0xb1c3d528d4d7d2c1,0xbd616043544482a3,0x4112a332b4f8e98d,0x5623d03dcd8ac777\n"
".quad 0xbae87036bf08cc6b,0xdf0c70c331194169,0x491807fef264449e,0x200ab9028f441b91\n"
".quad 0x73a59ccfce13e2e8,0x4351b16d68fd4ef1,0xbec88cb191a74fe3,0x9ef533faf412b349\n"
".quad 0x83eec834240c49e7,0x1be57e61b2fad4c6,0xda8d1e289474c7e2,0xb5c640be5e5ff185\n"
".quad 0x995e1f50d61be895,0x57213f64b7c263a5,0xde40698a319f5a84,0xf02ea3e8152d505d\n"
".quad 0x7ead7c31319cc787,0xc172efb8db6a5d6e,0x6f651cd44f793212,0x4c2e27621aa179b4\n"
".quad 0xf7e42acb7c94add7,0x3109d099f21fbb9a,0x1113ec6e44d74b37,0x98457ea445c341d4\n"
".quad 0xa4d97619dafed3a7,0x71be75868aee2edf,0x1873f538d2d6b7aa,0x1948ef97ed0e291a\n"
".quad 0xa1db84b6adfd7f7f,0x1cab0f6903d93e0c,0x4da7690e945807f0,0xfc20a2ef83f6e301\n"
".quad 0x0684d2f9832d829c,0x71b09d8eb4d438ae,0x5418c3a22680d75c,0xc92b5d63dc958ac2\n"
".quad 0x50201c77257f1e58,0xce15ec81fd5190d3,0x3382fe8648a1b3b1,0x3682db3d56ee1e79\n"
".quad 0x40d9f49dcdb49634,0x38d9a9d343596ca1,0x0a278e828f6b48fc,0x3d3f3a6bd0f18ad6\n"
".quad 0x1a09e057aab634c0,0x2d5e7e6f50093b01,0xf7ed0c2a9e8f073f,0x9191d934f8ac19f0\n"
".quad 0x8a0b38d57dc5eec8,0x66d8975f3409f069,0x2873b69fe45cfbec,0xd05ceb965e7fc321\n"
".quad 0x9ede9cde771d1058,0xc2c41a14edc80133,0xc1543b9ae62c9b21,0x8328ec6c4a25d15d\n"
".quad 0xf9926d8be3cd4e8d,0xb571c789cdb63398,0x8b8661687d3f1951,0x66c77fd00d885ede\n"
".quad 0xba2b18a0c074d158,0xb8ab2750ff11e24e,0xd7f12a3f9d170ef5,0x70e7e49d0c4a79f8\n"
".quad 0x3c460c65804aa0ff,0xb13236e7006ef54d,0xc7fec5ed0c64f1ef,0x0a6075b79a929164\n"
".quad 0xfb137202dd5c6de0,0x45d6f938c6d14be8,0x5abb2445aae6e285,0xfc1bec4b782ca7ce\n"
".quad 0x57835ab181a2c514,0x1d663ffdeabd8aa2,0x9a1b3a91c07d16f0,0x702066fbb984490d\n"
".quad 0x7710237098580fd8,0xc7311fef16ace029,0xd1c6f3c4c5249a07,0x9856d056d75b8b0b\n"
".quad 0x8e055a0306846cf7,0x5efbac07e77820d0,0xc97365e180f71b3e,0x5a5d5060a782e89c\n"
".quad 0x12d60cae2172642a,0x043932b9713410bf,0xfc67cdcbccc0c539,0x01f5b40499cd0cb1\n"
".quad 0x766386d3f8a6a286,0x7b917deed5f3172f,0x1687ca979b317eaf,0xb9697d65937ca4c5\n"
".quad 0x6a0834e630704519,0x39fb820a648003ec,0xa19dbac3eaa2035c,0x630f83c7193d1e5a\n"
".quad 0x6f6287482fd2524c,0xc81e022468ebfb18,0x28b891f30cd13f74,0xd720f679ef8ec498\n"
".quad 0x6d2424e181324105,0xf9f28907ca057eea,0xacdda8032572bfcd,0xcc6bf4cb3b39471e\n"
".quad 0xd9b278c79d2547a4,0x639018016a1aaecc,0xeeb07139f38c7bc2,0x811576ee2eac13fe\n"
".quad 0x1682542467a70ce1,0x73f2966741b9b559,0xdbaa4206eae9b994,0x8335c43670296724\n"
".quad 0xa2b0d487000c3bd8,0xb2be749d1d603692,0xdb4a6ee7e52d8069,0xfbaab7dc82ea46ec\n"
".quad 0xde281a07154c4b8b,0x8bffd1f96c751b78,0x7466a663fff6d5b6,0x79a32457d50c2e00\n"
".quad 0xf95b1dc30dda06fb,0x06aed1e49bdbb087,0xc71f2ff5d80221ae,0x4ba0dcd0b8a0378b\n"
".quad 0xc6f9ce76d4d18944,0xdb8701f9118338c5,0x10e967b2446c7c1f,0x6d15f0d7816a64c7\n"
".quad 0x770785c3f099ab39,0x026642a507ea6cfa,0xd518993280a226c1,0xd42f59e0be878929\n"
".quad 0x771d1058cad3e643,0xedc801339ede9cde,0xd79ef897c2c41a14,0x4a25d15dc1543b9a\n"
".quad 0xe3cd4e8d8328ec6c,0xcdb63398dd7986bd,0x7d3f1951b571c789,0xbd29d5dd8b866168\n"
".quad 0xc074d15866c77fd0,0xff11e24eba2b18a0,0x9d170ef58858c927,0x0c4a79f8d7f12a3f\n"
".quad 0x05c3e1d870e7e49d,0x006ef54d3c460c65,0x0c64f1efb13236e7,0x9a9291646370c6f8\n"
".quad 0xdd5c6de00a6075b7,0x02ef2429fb137202,0xaae6e28545d6f938,0x782ca7ce5abb2445\n"
".quad 0x81a2c5140713685c,0xeabd8aa257835ab1,0xe1caf3e01d663ffd,0xb984490d9a1b3a91\n"
".quad 0x98580fd8702066fb,0x16ace029c7be5604,0xc5249a07c7311fef,0x519933a4d1c6f3c4\n"
".quad 0x06846cf79856d056,0xe77820d08e055a03,0x80f71b3e5d12be52,0xa782e89cc97365e1\n"
".quad 0x89e16db25a5d5060,0x713410bf12d60cae,0xccc0c539043932b9,0x99cd0cb19a1fbafa\n"
".quad 0xf8a6a28601f5b404,0xc5c46915766386d3,0x9b317eaf7b917dee,0x937ca4c51687ca97\n"
".quad 0x30704519362a1917,0x648003ec6a0834e6,0x76c3bf6539fb820a,0x193d1e5aa19dbac3\n"
".quad 0x2fd2524c630f83c7,0x68ebfb18361161a1,0x0cd13f74c81e0224,0xa74cc69c28b891f3\n"
".quad 0x81324105d720f679,0xca057eea6d2424e1,0x2572bfcda4408891,0x3b39471eacdda803\n"
".quad 0xd6ede85ecc6bf4cb,0x6a1aaeccd9b278c7,0xf38c7bc263901801,0x2eac13fedd91e723\n"
".quad 0x67a70ce1811576ee,0x8c61c0f216825424,0xeae9b99473f29667,0x70296724dbaa4206\n"
".quad 0x000c3bd8efdadc1a,0x1d603692a2b0d487,0xa219d3efb2be749d,0x82ea46ecdb4a6ee7\n"
".quad 0x154c4b8bfbaab7dc,0x6c751b784eaae294,0xfff6d5b68bffd1f9,0xd504e0c17466a663\n"
".quad 0x0dda06fb79a32457,0x9bdbb087f95b1dc3,0xd80221ae1a4539f0,0xb8a0378bc71f2ff5\n"
".quad 0x0d67a1a34ba0dcd0,0x118338c5c6f9ce76,0x446c7c1fdb8701f9,0x816a64c7cca5e953\n"
".quad 0xf099ab396d15f0d7,0xab6a9839770785c3,0x80a226c1026642a5,0xbe878929d5189932\n"
".quad 0xcad3e6434136600e,0x9ede9cde771d1058,0xf2871ab3edc80133,0xc1543b9ad79ef897\n"
".quad 0x8328ec6c4a25d15d,0xdd7986bd1a537a79,0xb571c789cdb63398,0x8207151d7d3f1951\n"
".quad 0x66c77fd0bd29d5dd,0xba2b18a0c074d158,0x8858c9277552ab7c,0xd7f12a3f9d170ef5\n"
".quad 0x7b16d3df0c4a79f8,0x3c460c6505c3e1d8,0xb13236e7006ef54d,0x6370c6f84135cc4d\n"
".quad 0x0a6075b79a929164,0xac1a310bdd5c6de0,0x45d6f93802ef2429,0x5abb2445aae6e285\n"
".quad 0x0713685c3aabf711,0x57835ab181a2c514,0x87dd5794eabd8aa2,0x9a1b3a91e1caf3e0\n"
".quad 0x702066fbb984490d,0xc7be5604fd2dca14,0xc7311fef16ace029,0xac1fa1d4c5249a07\n"
".quad 0x9856d056519933a4,0x8e055a0306846cf7,0x5d12be52a9158c10,0xc97365e180f71b3e\n"
".quad 0x61785cc0a782e89c,0x12d60cae89e16db2,0x043932b9713410bf,0x9a1fbafacf840543\n"
".quad 0x01f5b40499cd0cb1,0x85fdceb2f8a6a286,0x7b917deec5c46915,0x1687ca979b317eaf\n"
".quad 0x362a1917c3dedd82,0x6a0834e630704519,0xefe5d08b648003ec,0xa19dbac376c3bf65\n"
".quad 0x630f83c7193d1e5a,0x361161a1868b0a31,0xc81e022468ebfb18,0xe97ea55e0cd13f74\n"
".quad 0xd720f679a74cc69c,0x6d2424e181324105,0xa4408891fc9b67e9,0xacdda8032572bfcd\n"
".quad 0x795c4dc13b39471e,0xd9b278c7d6ede85e,0x639018016a1aaecc,0xdd91e723070f5b69\n"
".quad 0x811576ee2eac13fe,0x0c1bfc3267a70ce1,0x73f296678c61c0f2,0xdbaa4206eae9b994\n"
".quad 0xefdadc1a2090d27b,0xa2b0d487000c3bd8,0x3cfa00a41d603692,0xdb4a6ee7a219d3ef\n"
".quad 0xfbaab7dc82ea46ec,0x4eaae2942510d343,0x8bffd1f96c751b78,0x4273d970fff6d5b6\n"
".quad 0x79a32457d504e0c1,0xf95b1dc30dda06fb,0x1a4539f0ec013ee1,0xc71f2ff5d80221ae\n"
".quad 0xd75e81bdb8a0378b,0xc6f9ce760d67a1a3,0xdb8701f9118338c5,0xcca5e95362a9f687\n"
".quad 0x6d15f0d7816a64c7,0xde686721f099ab39,0x026642a5ab6a9839,0xd518993280a226c1\n"
".quad 0x4136600e6e22599c,0x771d1058cad3e643,0xe16ab5199ede9cde,0xd79ef897f2871ab3\n"
".quad 0x4a25d15dc1543b9a,0x1a537a79a2587d60,0xcdb63398dd7986bd,0xef3e3a8ab571c789\n"
".quad 0xbd29d5dd8207151d,0xc074d15866c77fd0,0x7552ab7c7cb5d98e,0x9d170ef58858c927\n"
".quad 0xbdeb9712d7f12a3f,0x05c3e1d87b16d3df,0x006ef54d3c460c65,0x4135cc4d26b8feb1\n"
".quad 0x9a9291646370c6f8,0xf7ebb7950a6075b7,0x02ef2429ac1a310b,0xaae6e28545d6f938\n"
".quad 0x3aabf7119a617401,0x81a2c5140713685c,0x3f7f88d757835ab1,0xe1caf3e087dd5794\n"
".quad 0xb984490d9a1b3a91,0xfd2dca14ea65740a,0x16ace029c7be5604,0x4c9bb930c7311fef\n"
".quad 0x519933a4ac1fa1d4,0x06846cf79856d056,0xa9158c108a310db6,0x80f71b3e5d12be52\n"
".quad 0x28367917c97365e1,0x89e16db261785cc0,0x713410bf12d60cae,0xcf84054382acf1cd\n"
".quad 0x99cd0cb19a1fbafa,0x11e691ca01f5b404,0xc5c4691585fdceb2,0x9b317eaf7b917dee\n"
".quad 0xc3dedd82b7f8ec2d,0x30704519362a1917,0x86e713236a0834e6,0x76c3bf65efe5d08b\n"
".quad 0x193d1e5aa19dbac3,0x868b0a3130d15d95,0x68ebfb18361161a1,0x4414e925c81e0224\n"
".quad 0xa74cc69ce97ea55e,0x81324105d720f679,0xfc9b67e9f4dd7be3,0x2572bfcda4408891\n"
".quad 0xb54cf4c9acdda803,0xd6ede85e795c4dc1,0x6a1aaeccd9b278c7,0x070f5b698ee5962e\n"
".quad 0x2eac13fedd91e723,0xa239b2f2811576ee,0x8c61c0f20c1bfc32,0xeae9b99473f29667\n"
".quad 0x2090d27ba5092d7c,0x000c3bd8efdadc1a,0xf11ac440a2b0d487,0xa219d3ef3cfa00a4\n"
".quad 0x82ea46ecdb4a6ee7,0x2510d3439ee9923b,0x6c751b784eaae294,0xd3e68f9f8bffd1f9\n"
".quad 0xd504e0c14273d970,0x0dda06fb79a32457,0xec013ee1c836e41d,0xd80221ae1a4539f0\n"
".quad 0x581743d0c71f2ff5,0x0d67a1a3d75e81bd,0x118338c5c6f9ce76,0x62a9f687faf25b5d\n"
".quad 0x816a64c7cca5e953,0xf75fa77e6d15f0d7,0xab6a9839de686721,0x80a226c1026642a5\n"
".quad 0x1b274f4dc7b0b51f,0xbe446565862261ff,0x596e29c1c23e69d6,0x44e67bebf6ef4e7e\n"
".quad 0xf9b5bc355868fe44,0x75c7a212134bf89c,0xa1fa93cfa72b3566,0x38e4a3cb8a02568a\n"
".quad 0xee694e1ae530ba70,0x67e8f1d54a5e5630,0xdc334ebcb2b5a3ce,0x0b671cebf2b5e2d9\n"
".quad 0x4eebd2a6a7dda956,0xcb107d38408e2f26,0x0020f6de608979eb,0xc8bfed0dc4d427ee\n"
".quad 0xe64ef6dddba82014,0x32ea23312dffa4e4,0x191ecdf7895ee177,0xe59d51434b71d835\n"
".quad 0x5bd40719123334fc,0x31adbb48718a3715,0xb38e6a920802e218,0xae5ae50bf08881c1\n"
".quad 0xe592f2bc5cef8350,0x522201542ad33452,0x5123c35d5e961031,0x4c5f75d3cbb949c8\n"
".quad 0x508031eb3c5a1d8b,0xb1c20ab2eb3a704e,0x10f5c71dd38647e4,0xb80d9c444734e401\n"
".quad 0x7c796384ec6d7174,0x137f95bbd90f335e,0x411d729723664b7d,0xf199db719294410c\n"
".quad 0x8c366abcc80b8568,0x3c9ed1681c0d88a5,0xea237201c0c58db4,0xfb7d3e3ec2aeaaaa\n"
".quad 0xfed4af0c49428d4f,0xd497f60ea22bc617,0x8d4029cd260c0886,0xb9f8b374ab08fa25\n"
".quad 0xc54a746070ad3544,0xf6165b5ae1a16bb0,0x09f6eea8de22552e,0xedbdcd161b7ecd85\n"
".quad 0xed49b1beaf1b3107,0x782932194242e97a,0x9f21b499006ece6e,0xc2ebbb914096290e\n"
".quad 0xa0afc0cbe7fecea2,0xbf963955fd1599da,0xbfaa3c98147afbe7,0xaebf044527666d7f\n"
".quad 0x7a63d835e1c5da27,0x06b2153415a98990,0x08479e58ab2c25e7,0x78d6a260ed4b2d1a\n"
".quad 0x232cfa7e6b920114,0x0067cafe263d1a0e,0xe8f6add8d3aec43c,0x7d012aec3bdfed4e\n"
".quad 0x093536477262bfb8,0x4875850b073cff14,0x4166425b4637e531,0x0fa78221a84df58e\n"
".quad 0x696d73b0af70478d,0x6ea02f1fe66f191d,0x2581320bedb7d616,0xd3c5351ac9800cea\n"
".quad 0x223384d60bc714b4,0xad7a46bb7a24c706,0x66e4296ea01de718,0x2b52b379d1a0e824\n"
".quad 0x855eacad49fb45fe,0x73314a330434c86a,0x5a068a6c846eed4d,0xf30a50f0f16c1255\n"
".quad 0x2fe02ab7e6cbd421,0x63026bb80438fc14,0x825169e475d3bfc1,0x57f1617b21a1ec84\n"
".quad 0xfd0db72986c3d49d,0xdc1e906d4014d6e0,0xf1279e10160f42b9,0x8b05878a90444d9c\n"
".quad 0x2517d0b60c5df1b9,0x31b01447b3111a44,0x611ab3a9bbd2e7d5,0x916ebbd814fe95b9\n"
".quad 0xa124b3b8bdbdd0f3,0xbca16d50bfdd6349,0x396c3a5d67cf5872,0x3da8dcf0fcd1dfad\n"
".quad 0xed18bc81795911f0,0xb3692c945bfd1087,0x8cebd3a261a96315,0x13deb193cbde14a9\n"
".quad 0x567b8ab74390d77d,0xbfb6469f24b850eb,0xeddfa00fb550e857,0x1e8fe2c849d3f98e\n"
".quad 0x60570860c21cd809,0x05924eb7a66175fb,0x715626a6aad20c88,0x81d83865aeb157ee\n"
".quad 0xbe182fb18a9dd085,0x3032261f4da1895b,0xcfe59abfaf960dd1,0x2ce19441784ae91a\n"
".quad 0x4de8ff16416426dd,0xd73e63940a7089f4,0xc5cf700932ad9dc2,0x13965e8c0be7d757\n"
".quad 0xd72c33ebbdc2f322,0xd3de1d4bf2e83d83,0x59515aa27e56036b,0x8420db344b369e68\n"
".quad 0x429954ad38a43fd1,0xaccf9ae8802f14b7,0x34fae7f95f114166,0xa8a7578b0222e28e\n"
".quad 0xd7015c1095b0db55,0x861aafe3c3689bea,0xd53301bc4ebab1d4,0x5abe63e30fe6876d\n"
".quad 0x72f0998d717503ea,0xc60217b09ca61eef,0x19d850c50d213569,0x3ac64de0552c38c7\n"
".quad 0x1be07faf7ee4543b,0x1369678a60602609,0x26b17d801a7da7d2,0x590446b364b6ebfd\n"
".quad 0x07380ff88472e436,0xd15569687f3791c1,0xfc2769b64c79ece9,0x141e5cb4dc9c6b1f\n"
".quad 0x46ee0ece548d55eb,0x695121d51dd76131,0x3810053a73e9792a,0x0b184e4c36fff4c2\n"
".quad 0x64f6ba14baa1c116,0x7fbc5f0eb4b5f458,0x58aeaf58552d3204,0x7bee9e44d6f62745\n"
".quad 0x9f1a09b791de9ce2,0x946b36c7c0a63445,0xad878761c0414028,0x5a6aa17b16c9b9b7\n"
".quad 0x52ca506a251b4157,0x72b54a7b68425dd4,0x1c2a603d9a9547c9,0x9a2886e80752e3df\n"
".quad 0xf12e2d2f347cb6e3,0xfe8e4a15660dd54f,0xca107cd24fac79db,0xde86090116c82af1\n"
".quad 0xe6cbd4211b717bb9,0x0438fc142fe02ab7,0x0eebe1b063026bb8,0x21a1ec84825169e4\n"
".quad 0x86c3d49d57f1617b,0x4014d6e0273814af,0x160f42b9dc1e906d,0xbed9e1abf1279e10\n"
".quad 0x0c5df1b98b05878a,0xb3111a442517d0b6,0xbbd2e7d5de750e1e,0x14fe95b9611ab3a9\n"
".quad 0xd4f1d6ae916ebbd8,0xbfdd6349a124b3b8,0x67cf5872bca16d50,0xfcd1dfad28e2833d\n"
".quad 0x795911f03da8dcf0,0xe5d5d12ded18bc81,0x61a96315b3692c94,0xcbde14a98cebd3a2\n"
".quad 0x4390d77d8c67a8df,0x24b850eb567b8ab7,0x6757c046bfb6469f,0x49d3f98eeddfa00f\n"
".quad 0xc21cd8091e8fe2c8,0xa66175fb9e03f41f,0xaad20c8805924eb7,0x7df8de25715626a6\n"
".quad 0x8a9dd08581d83865,0x4da1895bbe182fb1,0xaf960dd1b209db50,0x784ae91acfe59abf\n"
".quad 0x90b8d91e2ce19441,0x0a7089f44de8ff16,0x32ad9dc2d73e6394,0x0be7d7573d9beaf5\n"
".quad 0xbdc2f32213965e8c,0xefdde76fd72c33eb,0x7e56036bd3de1d4b,0x4b369e6859515aa2\n"
".quad 0x38a43fd1114e8f37,0x802f14b7429954ad,0x0a1014c3accf9ae8,0x0222e28e34fae7f9\n"
".quad 0x95b0db55a8a7578b,0xc3689beaac4f5c0c,0x4ebab1d4861aafe3,0x6afc4ed1d53301bc\n"
".quad 0x717503ea5abe63e3,0x9ca61eef72f0998d,0x0d2135694a9b645e,0x552c38c719d850c5\n"
".quad 0xa15b4e8d3ac64de0,0x606026091be07faf,0x1a7da7d21369678a,0x64b6ebfd07517f46\n"
".quad 0x8472e436590446b3,0xcc3064f407380ff8,0x4c79ece9d1556968,0xdc9c6b1ffc2769b6\n"
".quad 0x548d55eb621e56d1,0x1dd7613146ee0ece,0xe9adb4e7695121d5,0x36fff4c23810053a\n"
".quad 0xbaa1c1160b184e4c,0xb4b5f4580341ba09,0x552d32047fbc5f0e,0xf784fd0d58aeaf58\n"
".quad 0x91de9ce27bee9e44,0xc0a634459f1a09b7,0xc04140285f6ddb90,0x16c9b9b7ad878761\n"
".quad 0xd11e924f5a6aa17b,0x68425dd452ca506a,0x9a9547c972b54a7b,0x0752e3dfa900d2c0\n"
".quad 0x347cb6e39a2886e8,0xb050637ff12e2d2f,0x4fac79dbfe8e4a15,0x16c82af1ca107cd2\n"
".quad 0x1b717bb91ada5b7a,0x2fe02ab7e6cbd421,0x7b29e7c20438fc14,0x825169e40eebe1b0\n"
".quad 0x57f1617b21a1ec84,0x273814af645c8eb9,0xdc1e906d4014d6e0,0x9bdeff58160f42b9\n"
".quad 0x8b05878abed9e1ab,0x2517d0b60c5df1b9,0xde750e1e9e468f73,0x611ab3a9bbd2e7d5\n"
".quad 0xc0ec801814fe95b9,0xa124b3b8d4f1d6ae,0xbca16d50bfdd6349,0x28e2833d009527d9\n"
".quad 0x3da8dcf0fcd1dfad,0x60ac894b795911f0,0xb3692c94e5d5d12d,0x8cebd3a261a96315\n"
".quad 0x8c67a8df59f8c630,0x567b8ab74390d77d,0xda8597cc24b850eb,0xeddfa00f6757c046\n"
".quad 0x1e8fe2c849d3f98e,0x9e03f41fe87c81e2,0x05924eb7a66175fb,0x0d470912aad20c88\n"
".quad 0x81d838657df8de25,0xbe182fb18a9dd085,0xb209db509556e374,0xcfe59abfaf960dd1\n"
".quad 0xa4e90268784ae91a,0x4de8ff1690b8d91e,0xd73e63940a7089f4,0x3d9beaf571cc41d3\n"
".quad 0x13965e8c0be7d757,0x6427d1d2bdc2f322,0xd3de1d4befdde76f,0x59515aa27e56036b\n"
".quad 0x114e8f37d195cf2e,0x429954ad38a43fd1,0xbdb2e9b7802f14b7,0x34fae7f90a1014c3\n"
".quad 0xa8a7578b0222e28e,0xac4f5c0c267e1c1f,0x861aafe3c3689bea,0x55a26ed84ebab1d4\n"
".quad 0x5abe63e36afc4ed1,0x72f0998d717503ea,0x4a9b645edc1f75a4,0x19d850c50d213569\n"
".quad 0xddfe1375552c38c7,0x1be07fafa15b4e8d,0x1369678a60602609,0x07517f46564f861d\n"
".quad 0x590446b364b6ebfd,0x81c939068472e436,0xd1556968cc3064f4,0xfc2769b64c79ece9\n"
".quad 0x621e56d1b5d9a770,0x46ee0ece548d55eb,0x0010e1381dd76131,0x3810053ae9adb4e7\n"
".quad 0x0b184e4c36fff4c2,0x0341ba09f70cba6f,0x7fbc5f0eb4b5f458,0x7b3ad798552d3204\n"
".quad 0x7bee9e44f784fd0d,0x9f1a09b791de9ce2,0x5f6ddb90198acdef,0xad878761c0414028\n"
".quad 0x98e9e19816c9b9b7,0x52ca506ad11e924f,0x72b54a7b68425dd4,0xa900d2c06793bc45\n"
".quad 0x9a2886e80752e3df,0x23a20bfe347cb6e3,0xfe8e4a15b050637f,0xca107cd24fac79db\n"
".quad 0x1ada5b7a96f4ef6b,0xe6cbd4211b717bb9,0x2fc830bb2fe02ab7,0x0eebe1b07b29e7c2\n"
".quad 0x21a1ec84825169e4,0x645c8eb9cbb9c330,0x4014d6e0273814af,0x853c12c4dc1e906d\n"
".quad 0xbed9e1ab9bdeff58,0x0c5df1b98b05878a,0x9e468f7329aea355,0xbbd2e7d5de750e1e\n"
".quad 0x44b4de06611ab3a9,0xd4f1d6aec0ec8018,0xbfdd6349a124b3b8,0x009527d9a2899800\n"
".quad 0xfcd1dfad28e2833d,0x8ef066e43da8dcf0,0xe5d5d12d60ac894b,0x61a96315b3692c94\n"
".quad 0x59f8c6300f1240d0,0x4390d77d8c67a8df,0x9e4dfed7567b8ab7,0x6757c046da8597cc\n"
".quad 0x49d3f98eeddfa00f,0xe87c81e242834a51,0xa66175fb9e03f41f,0x6f0ae8e505924eb7\n"
".quad 0x7df8de250d470912,0x8a9dd08581d83865,0x9556e374f917a03c,0xaf960dd1b209db50\n"
".quad 0x21a82580cfe59abf,0x90b8d91ea4e90268,0x0a7089f44de8ff16,0x71cc41d368d965b7\n"
".quad 0x0be7d7573d9beaf5,0x9828e24613965e8c,0xefdde76f6427d1d2,0x7e56036bd3de1d4b\n"
".quad 0xd195cf2e872bf852,0x38a43fd1114e8f37,0xacb46f7c429954ad,0x0a1014c3bdb2e9b7\n"
".quad 0x0222e28e34fae7f9,0x267e1c1f7952e664,0xc3689beaac4f5c0c,0xc36929ce861aafe3\n"
".quad 0x6afc4ed155a26ed8,0x717503ea5abe63e3,0xdc1f75a45973d658,0x0d2135694a9b645e\n"
".quad 0xe9527f3e19d850c5,0xa15b4e8dddfe1375,0x606026091be07faf,0x564f861d36be35e9\n"
".quad 0x64b6ebfd07517f46,0x24556104590446b3,0xcc3064f481c93906,0x4c79ece9d1556968\n"
".quad 0xb5d9a770da39326e,0x548d55eb621e56d1,0x3e6c8e1d46ee0ece,0xe9adb4e70010e138\n"
".quad 0x36fff4c23810053a,0xf70cba6f95a53a2d,0xb4b5f4580341ba09,0xc1496dbc7fbc5f0e\n"
".quad 0xf784fd0d7b3ad798,0x91de9ce27bee9e44,0x198acdef2be83502,0xc04140285f6ddb90\n"
".quad 0x6e3e3484ad878761,0xd11e924f98e9e198,0x68425dd452ca506a,0x6793bc450509a2cb\n"
".quad 0x0752e3dfa900d2c0,0xee8b93469a2886e8,0xb050637f23a20bfe,0x4fac79dbfe8e4a15\n"
".quad 0x46b78ebfb7792768,0x5947ffed29c2c975,0x98990ddf473f8dfa,0x4ac0a2cd428f72ab\n"
".quad 0x0e5cad502c94402c,0x157e13d0b938e15b,0xd199f705cc037650,0x4ac65b81c4c53c4e\n"
".quad 0x5e2683f80749ad7d,0xe994ad50340e0558,0x75af1cb0673a46bc,0xf8b3a6366bf44d21\n"
".quad 0xf5de4fcff3f146c1,0x68bf0351736637a4,0x07aaea7ca0998498,0xbd21eb3967ff31bb\n"
".quad 0x55481dab3aa295fa,0xc8b3e43829d63f9a,0xd4f1670bc2b1d1dd,0x7d8f731a569f2f82\n"
".quad 0x801ddee23b3bf959,0xb09007224d32e509,0xc20ca66ddd13a68c,0x1cd75167db35b4ed\n"
".quad 0x9c89a0cd0617dd5c,0x8716591a78574282,0x804ffd9c47080b6c,0x84f2530122ca232f\n"
".quad 0x67bb99a476ec3f9d,0xb6ff75ef9879700c,0x94d7fddbb434676b,0x2e1376d371c54af4\n"
".quad 0x8774ec57d95eeb66,0x7d974c7d1d677246,0x96d965447741dd9e,0x2862d394bdc251c9\n"
".quad 0x04e4ab48594402ef,0x9d14847983f7ca21,0x823a378d1c10af2b,0x0b39c636af5e3d86\n"
".quad 0x7044545bd9f43a8c,0x58db9064eddfe777,0xbbbbbb91f140af0c,0x9a6e48fdc4193c53\n"
".quad 0x8c1ca472ac7047cc,0x00ea90a8fd79e7ea,0x8cf4b63e603b4352,0x192cc9149b3db251\n"
".quad 0xc2b9ed64fa0d4974,0x03388fa277b9e6fb,0x4c0e7c022e9b9685,0x913f00b9a44af824\n"
".quad 0xd316e8be6608f81c,0x3c0e1bf2e3c59d19,0x7c175a3114960447,0x46afcfe584c19126\n"
".quad 0xd4a19f854080a960,0x2048a9ae73a928c3,0xdffc454e6d16cac8,0x6355f4392e3f0aba\n"
".quad 0x345bf1823be63cdf,0xfa16cdcc7fee9cc3,0xd9810a9916104469,0x89c351380235959e\n"
".quad 0x896072aa736121d9,0x5060e098f4d06b2a,0xc3be5cbb937049a3,0x690b02628d84d532\n"
".quad 0x3df32b003323b680,0x01c92b369c3f97eb,0xfe6cca31d584ff33,0xb88bdc4ee7e607de\n"
".quad 0xe5d8111a78ca9c66,0x130fc4068be6259e,0x90db0623c2115649,0x341c13543115b19f\n"
".quad 0xfa8f7dd1538faf11,0x9b61d95efddd9e0e,0x564841e675ea4a18,0x1896688ce6182299\n"
".quad 0x28bf84e8f18bd09b,0xcea0cc03b56ddcb5,0xb4e89020fbacfc69,0x0115ae485761cfa1\n"
".quad 0xb5416c89cb455dd3,0xbc31aba71d1c7507,0xc124d9b62ddb231c,0x7bbacb1f3031fdb5\n"
".quad 0xba30489631c58033,0x7128183dc3c18a59,0x1e9141a2d6f00e22,0xf948e09fa1da26c3\n"
".quad 0xbc5ca3b2620aea30,0x3a772fc917436409,0x93fc857ba5798d29,0xd0b7345624c75168\n"
".quad 0x1d9fe74d29183320,0xe7df2e650e379d39,0x5c0fb41735723fd8,0xb9c329a2cb664529\n"
".quad 0xede1af9afd57ff5b,0x56fbac0230d1d065,0xcd52cd280970a676,0x522d6417007d9632\n"
".quad 0xbfc5fdb528c7ee64,0x613e60bca96d6a21,0x393303399a7366d6,0x68367efb3cd68e5b\n"
".quad 0xe806e5dbcdc932a7,0x7c5897c0492e8af2,0x7cb0abfe8ebae5e1,0x897fc29933dc9869\n"
".quad 0x1d23b08422112b89,0x9cc42630340bee9e,0x80e22fc17b3b31ab,0x06e81dd078c42230\n"
".quad 0x0ed400e1ad3404a2,0x8547272cb96c92e2,0x2a33403f7090618c,0xd17663dc3b6c68eb\n"
".quad 0x6cdf3aac53ebe13a,0x9bd010fdda2157ec,0x3ee4188984ec1c84,0x6ebf81fd973e389f\n"
".quad 0xa3f410519b7bffcb,0xec6b15adc13c11dc,0x901bfd618d8fab06,0x4070c88f53cc019d\n"
".quad 0x16cbfbe2593980b7,0x48165a4ba3a4a9d3,0x5296a67e3059bb83,0xcd455f889c6557fb\n"
".quad 0xf6f125a5177e1f73,0x58cd4239fa10f25a,0x45d2e9ae8650abd0,0x0042f3040503bd77\n"
".quad 0xd2216acd9d70a4d4,0x19408b1fc31607cd,0xdc78688f8d0ea32c,0xfe21d11d80d011f1\n"
".quad 0xa07c66f0b48c6e09,0x62d3419dc2b8795c,0x3bbe0ed374d5cfe0,0x77757d64ddfe8ca2\n"
".quad 0x8322c46a3b935da2,0x14f90becf6d33794,0x5b8acdd3189bf905,0xb95dfe9be74e22e0\n"
".quad 0xce5b4505bf2fbfcc,0x9d12967c22dc7dfd,0x64eeef15e4886cb3,0x37b789aed212be54\n"
".quad 0x84b9efb074dc362f,0x00ba24683e4379c6,0x0d7f0d5842cab970,0x993e3ec427ab88f6\n"
".quad 0xc635e26864773a05,0xaa3120c8e9f68946,0x3035d8f547db5c38,0xf88e4fe8c4739420\n"
".quad 0xf18bd09b9155156d,0xb56ddcb528bf84e8,0x5295d02dcea0cc03,0x5761cfa1b4e89020\n"
".quad 0xcb455dd30115ae48,0x1d1c7507816cbbd4,0x2ddb231cbc31aba7,0xae26bddac124d9b6\n"
".quad 0x31c580337bbacb1f,0xc3c18a59ba304896,0xd6f00e220450016e,0xa1da26c31e9141a2\n"
".quad 0xe6a3a1cdf948e09f,0x17436409bc5ca3b2,0xa5798d293a772fc9,0x24c751685297fb4f\n"
".quad 0x29183320d0b73456,0x9aff22a11d9fe74d,0x35723fd8e7df2e65,0xcb6645295c0fb417\n"
".quad 0xfd57ff5b15409e5a,0x30d1d065ede1af9a,0x0bdc8f5956fbac02,0x007d9632cd52cd28\n"
".quad 0x28c7ee64522d6417,0xa96d6a21685a11d8,0x9a7366d6613e60bc,0x7df78d5839330339\n"
".quad 0xcdc932a768367efb,0x492e8af2e806e5db,0x8ebae5e1106b6600,0x33dc98697cb0abfe\n"
".quad 0x3578036d897fc299,0x340bee9e1d23b084,0x7b3b31ab9cc42630,0x78c4223038460994\n"
".quad 0xad3404a206e81dd0,0x3af6039b0ed400e1,0x7090618c8547272c,0x3b6c68eb2a33403f\n"
".quad 0x53ebe13a7e76ab86,0xda2157ec6cdf3aac,0xaebff2789bd010fd,0x973e389f3ee41889\n"
".quad 0x9b7bffcb6ebf81fd,0xc13c11dc54e01e2f,0x8d8fab06ec6b15ad,0x95dfd1e0901bfd61\n"
".quad 0x593980b74070c88f,0xa3a4a9d316cbfbe2,0x3059bb8304e2dfde,0x9c6557fb5296a67e\n"
".quad 0x7d351177cd455f88,0xfa10f25af6f125a5,0x8650abd058cd4239,0x0503bd7714190095\n"
".quad 0x9d70a4d40042f304,0x27736eefd2216acd,0x8d0ea32c19408b1f,0x80d011f1dc78688f\n"
".quad 0xb48c6e091272c21c,0xc2b8795ca07c66f0,0x00a9abb562d3419d,0xddfe8ca23bbe0ed3\n"
".quad 0x3b935da277757d64,0xf6d33794cfd327fe,0x189bf90514f90bec,0xa7f9430c5b8acdd3\n"
".quad 0xbf2fbfccb95dfe9b,0x22dc7dfdce5b4505,0xe4886cb3133eb0e6,0xd212be5464eeef15\n"
".quad 0xe73b2be037b789ae,0x3e4379c684b9efb0,0x42cab97000ba2468,0x27ab88f6fac5af48\n"
".quad 0x64773a05993e3ec4,0x21035f60c635e268,0x47db5c38aa3120c8,0xc47394203035d8f5\n"
".quad 0x9155156d1c0c9228,0x28bf84e8f18bd09b,0x5ead5bf4b56ddcb5,0xb4e890205295d02d\n"
".quad 0x0115ae485761cfa1,0x816cbbd415af6178,0xbc31aba71d1c7507,0x92e9612e2ddb231c\n"
".quad 0x7bbacb1fae26bdda,0xba30489631c58033,0x0450016efc152d7a,0x1e9141a2d6f00e22\n"
".quad 0x13103b15a1da26c3,0xbc5ca3b2e6a3a1cd,0x3a772fc917436409,0x5297fb4fb0cfb1b6\n"
".quad 0xd0b7345624c75168,0xf13e156229183320,0xe7df2e659aff22a1,0x5c0fb41735723fd8\n"
".quad 0x15409e5a2d8e8b24,0xede1af9afd57ff5b,0x3989cbfe30d1d065,0xcd52cd280bdc8f59\n"
".quad 0x522d6417007d9632,0x685a11d80317f9fb,0x613e60bca96d6a21,0x1964d86c9a7366d6\n"
".quad 0x68367efb7df78d58,0xe806e5dbcdc932a7,0x106b6600a8e1c57f,0x7cb0abfe8ebae5e1\n"
".quad 0xd210e9f433dc9869,0x1d23b0843578036d,0x9cc42630340bee9e,0x38460994ead56281\n"
".quad 0x06e81dd078c42230,0xbe4be14fad3404a2,0x8547272c3af6039b,0x2a33403f7090618c\n"
".quad 0x7e76ab86811ab90c,0x6cdf3aac53ebe13a,0x08102a28da2157ec,0x3ee41889aebff278\n"
".quad 0x6ebf81fd973e389f,0x54e01e2f9a484e64,0xec6b15adc13c11dc,0x93a62ff38d8fab06\n"
".quad 0x4070c88f95dfd1e0,0x16cbfbe2593980b7,0x04e2dfde68e97101,0x5296a67e3059bb83\n"
".quad 0xf29f61b99c6557fb,0xf6f125a57d351177,0x58cd4239fa10f25a,0x14190095a038abc6\n"
".quad 0x0042f3040503bd77,0x6d848c629d70a4d4,0x19408b1f27736eef,0xdc78688f8d0ea32c\n"
".quad 0x1272c21cadd07a66,0xa07c66f0b48c6e09,0x1215db57c2b8795c,0x3bbe0ed300a9abb5\n"
".quad 0x77757d64ddfe8ca2,0xcfd327fe9e1d29fd,0x14f90becf6d33794,0x06be861f189bf905\n"
".quad 0xb95dfe9ba7f9430c,0xce5b4505bf2fbfcc,0x133eb0e6560494b8,0x64eeef15e4886cb3\n"
".quad 0x35c1c75fd212be54,0x84b9efb0e73b2be0,0x00ba24683e4379c6,0xfac5af4883ea4676\n"
".quad 0x993e3ec427ab88f6,0x426dcdfc64773a05,0xaa3120c821035f60,0x3035d8f547db5c38\n"
".quad 0x1c0c9228c2b4c2f6,0xf18bd09b9155156d,0xd579f44628bf84e8,0x5295d02d5ead5bf4\n"
".quad 0x5761cfa1b4e89020,0x15af6178f2eabe34,0x1d1c7507816cbbd4,0xa47a3469bc31aba7\n"
".quad 0xae26bdda92e9612e,0x31c580337bbacb1f,0xfc152d7a3d6e8966,0xd6f00e220450016e\n"
".quad 0x3954cbc01e9141a2,0xe6a3a1cd13103b15,0x17436409bc5ca3b2,0xb0cfb1b68d09ab3d\n"
".quad 0x24c751685297fb4f,0x11a28e51d0b73456,0x9aff22a1f13e1562,0x35723fd8e7df2e65\n"
".quad 0x2d8e8b24014b57c4,0xfd57ff5b15409e5a,0x3c60a6a9ede1af9a,0x0bdc8f593989cbfe\n"
".quad 0x007d9632cd52cd28,0x0317f9fb4ad26387,0xa96d6a21685a11d8,0x8a5c8950613e60bc\n"
".quad 0x7df78d581964d86c,0xcdc932a768367efb,0xa8e1c57fa9b1fa8e,0x8ebae5e1106b6600\n"
".quad 0x4a8c19627cb0abfe,0x3578036dd210e9f4,0x340bee9e1d23b084,0xead5628156909a8d\n"
".quad 0x78c4223038460994,0xf21a75be06e81dd0,0x3af6039bbe4be14f,0x7090618c8547272c\n"
".quad 0x811ab90ced9c5755,0x53ebe13a7e76ab86,0xad7e73586cdf3aac,0xaebff27808102a28\n"
".quad 0x973e389f3ee41889,0x9a484e64b1691a8b,0xc13c11dc54e01e2f,0x902d7329ec6b15ad\n"
".quad 0x95dfd1e093a62ff3,0x593980b74070c88f,0x68e971014ec6c283,0x3059bb8304e2dfde\n"
".quad 0x010d3c545296a67e,0x7d351177f29f61b9,0xfa10f25af6f125a5,0xa038abc6a0c5b13f\n"
".quad 0x0503bd7714190095,0x66c513d40042f304,0x27736eef6d848c62,0x8d0ea32c19408b1f\n"
".quad 0xadd07a662954ead0,0xb48c6e091272c21c,0xe97eb882a07c66f0,0x00a9abb51215db57\n"
".quad 0xddfe8ca23bbe0ed3,0x9e1d29fd3227c986,0xf6d33794cfd327fe,0x675157f914f90bec\n"
".quad 0xa7f9430c06be861f,0xbf2fbfccb95dfe9b,0x560494b88aa7800c,0xe4886cb3133eb0e6\n"
".quad 0x5e37aa3764eeef15,0xe73b2be035c1c75f,0x3e4379c684b9efb0,0x83ea4676e2d2e066\n"
".quad 0x27ab88f6fac5af48,0xcb0bce9c993e3ec4,0x21035f60426dcdfc,0x47db5c38aa3120c8\n"
".quad 0x4f40e962ff931db3,0x93b046828be7f9a2,0xd72c995bb0923513,0x454735a1fa2d35d7\n"
".quad 0xa7ca622d681cbaeb,0xfb389b9f804d56fa,0xdd5dd6628e026872,0x14c379b5ecea1a4c\n"
".quad 0x81867dc7638e6436,0xe671d35d16c0d7be,0xd8ab82e872673627,0xd2a9a30a8902aa4d\n"
".quad 0xf87858ca6104bab9,0x7fce5f67e1c75b82,0x0cef2c667b3e48e6,0x60959295899f7351\n"
".quad 0x2cabb929d23305c4,0xd33729ea92720aab,0x396017a370e178df,0x64cc5d8b8b0bcffc\n"
".quad 0xadbc05df97a23da9,0x655d17915ffb0829,0x20ebc888bdd9e6c0,0xe253b64c8d193ff0\n"
".quad 0x931b7161cb8dc732,0x026926e764034af9,0x9a1ee2eaac0f47a2,0xb274df640b9e6e69\n"
".quad 0x2894fafeb8bf7a1e,0x51b8c3d80818bc12,0xdfc986d23b556fb2,0x25d30e0a2fe681e2\n"
".quad 0x919251d1e6a014df,0x2202fe2756c34242,0x48b9cfdc95c47b7b,0xad7198be2cb80f99\n"
".quad 0x38ede6a25e4bb490,0x80972c2a5fdc2ee5,0x5d7bcbb4894f588c,0x757f36e031960131\n"
".quad 0x58cec24f4d2d13ee,0x4dc9ff341a5ee9e8,0x8ddd0af14831baec,0x82be8631a6d15591\n"
".quad 0x618c5db1c05e0423,0x19ef4eafd7590daa,0x1ff5ea775ee05ba6,0xfbc201189390e701\n"
".quad 0x561bc91e6a7f7277,0xc6b426ecc1ae10fd,0xc38a92abf87f86f4,0x5613a4e229e1bd5a\n"
".quad 0x86722c380d6e6d53,0xec5f706a2c7ff988,0x7c053b589f36411b,0xdd475b6d7fdf598e\n"
".quad 0x4d591caa15f5affe,0x01900046f2f4b6fd,0x026a0803afc2949a,0x7d2c6d95476afe9e\n"
".quad 0x82825ef07533d6dc,0x6b2472327b10c666,0xab00e9e4ced0da95,0x0e5c200632bfe85b\n"
".quad 0xd270ae8015c25fe6,0x688a5f55025db3dc,0xbaae17204cb5b3c1,0xc89787088f700ce3\n"
".quad 0x62739872c02c10fb,0x5dd47a8523061814,0x5442e2f0dee562fc,0x1178c6ae02467648\n"
".quad 0x70c1b93df5f0aa1d,0x1b37d4552ef6130a,0x78b51005fc0cffb5,0xba22c56958f0250f\n"
".quad 0xc30d2c5739c8831f,0x6feac00ae4a6a4a1,0xe68cc36aa4e10e96,0x6dbebcc2c78f9c0a\n"
".quad 0x3cab065863ed794a,0x1c6d77deb26021d5,0xb98e3702931bcd13,0x1b789e1944ca7ad2\n"
".quad 0x68ffca8f73c496ce,0xb77986b2b40f698b,0x620b1f0c12890df1,0xd397bfafdfe0b10c\n"
".quad 0xd3da8605dd2eaa52,0xfd6213ca819e9776,0x38ae5fe58b80f81e,0xdf2e3ab0ffa3fbbf\n"
".quad 0x40b9f1912a1e8a4f,0xc405f5e65f20e7d4,0xafd6e07a517e8c4a,0x9caf5fcee9f9276e\n"
".quad 0xd584699596b21aa5,0xc910eb79e8e55c97,0x46a80ccefda66beb,0xaa21d554ef87d371\n"
".quad 0xd91b34755252d456,0x37c6debeff5ebe79,0x4b4cdceef6e83170,0xa0015c1344cc44fd\n"
".quad 0xfd8100f1b6d716d6,0x6fb686bc4a91475a,0xe67cb1c8c0187d9f,0xbb8dd862110cbf37\n"
".quad 0xa8326b0f559eff30,0x9de2ce79ea1dec1c,0x519854497fb97e04,0x3fe8c4f99dcb0464\n"
".quad 0xd332149c9c3e706a,0x47c64d023658d9b4,0xa82f97f4f6004af3,0x2b8f4dfeb8e4bcd6\n"
".quad 0xab34a0eb76901d80,0x52dd21aa10965f64,0x20f1fcc39e6b1bfb,0xa47628cc677d62c7\n"
".quad 0xd9f9b376711221eb,0x7537c18e52b181fd,0x1cfe95b93e89918f,0x2a9a06c1db1b4c31\n"
".quad 0x0518c3a128f04f1a,0x7e2fcc88d71e56ed,0xe60b6e30ea95c000,0x6bd2f941f4b1b581\n"
".quad 0x5747da1804fcdd59,0xc5c59e8b62ce6553,0x0df993d752eb5367,0x85d3b789d3ad45fd\n"
".quad 0xa7c01e51d8b7cb6d,0x36a51e0bd0798a91,0x95e0a87c0e9f9204,0x8578cb2fdd3d6205\n"
".quad 0xec415a9a3ed3a9a4,0x84f36431bd510614,0xe1b4f944818e776a,0x3dea48f15335d565\n"
".quad 0xbfb8837979265806,0x3c227a8dc496185e,0x6f16d0270869dc88,0x0b66fdedea4ffd22\n"
".quad 0x8f9e7bfd7859a07f,0x52158cf72c12a133,0xe92b7659ab76fff1,0xa7ba6179476365ce\n"
".quad 0x5b8bbee023cfaeb1,0xb7dc08345896d6a5,0x88b0c06e8a900b8b,0xce90dc9979601231\n"
".quad 0x138ad99360d3149c,0x6ce016d8c814474f,0xda435e81740e6c98,0xc075ca7d54b87593\n"
".quad 0x3f9be08e50fb4af8,0x2658ee3282940f0a,0x7b0bac8b068cef4a,0x811393cfc1b21a88\n"
".quad 0x63ed794af92a3149,0xb26021d53cab0658,0xd714d9e61c6d77de,0x44ca7ad2b98e3702\n"
".quad 0x73c496ce1b789e19,0xb40f698b6f0b0855,0x12890df1b77986b2,0x295a276f620b1f0c\n"
".quad 0xdd2eaa52d397bfaf,0x819e9776d3da8605,0x8b80f81e023ea111,0xffa3fbbf38ae5fe5\n"
".quad 0x8699e06adf2e3ab0,0x5f20e7d440b9f191,0x517e8c4ac405f5e6,0xe9f9276ee5821cf2\n"
".quad 0x96b21aa59caf5fce,0xba38d943d5846995,0xfda66bebc910eb79,0xef87d37146a80cce\n"
".quad 0x5252d4567698cfe2,0xff5ebe79d91b3475,0xd7e4216437c6debe,0x44cc44fd4b4cdcee\n"
".quad 0xb6d716d6a0015c13,0x4a91475aa6126b11,0xc0187d9f6fb686bc,0x5b2a2b83e67cb1c8\n"
".quad 0x559eff30bb8dd862,0xea1dec1ca8326b0f,0x7fb97e043a5e2154,0x9dcb046451985449\n"
".quad 0x118714db3fe8c4f9,0x3658d9b4d332149c,0xf6004af347c64d02,0xb8e4bcd6062c8c11\n"
".quad 0x76901d802b8f4dfe,0x705c2821ab34a0eb,0x9e6b1bfb52dd21aa,0x677d62c720f1fcc3\n"
".quad 0x711221ebc6329fb3,0x52b181fdd9f9b376,0x7e2fdc0b7537c18e,0xdb1b4c311cfe95b9\n"
".quad 0x28f04f1a2a9a06c1,0xd71e56edeb367526,0xea95c0007e2fcc88,0xadd0b7b5e60b6e30\n"
".quad 0x04fcdd596bd2f941,0x62ce65535747da18,0x52eb5367ccf73025,0xd3ad45fd0df993d7\n"
".quad 0xeb57f4df85d3b789,0xd0798a91a7c01e51,0x0e9f920436a51e0b,0xdd3d62056956e948\n"
".quad 0x3ed3a9a48578cb2f,0xf6cd0765ec415a9a,0x818e776a84f36431,0x5335d565e1b4f944\n"
".quad 0x79265806428551c3,0xc496185ebfb88379,0x27c5c5723c227a8d,0xea4ffd226f16d027\n"
".quad 0x7859a07f0b66fded,0x2c12a133104424ce,0xab76fff152158cf7,0xe4d74366e92b7659\n"
".quad 0x23cfaeb1a7ba6179,0x5896d6a55b8bbee0,0x8a900b8bfdae66c3,0x7960123188b0c06e\n"
".quad 0x48788b93ce90dc99,0xc814474f138ad993,0x740e6c986ce016d8,0x54b87593fcbf7db0\n"
".quad 0x50fb4af8c075ca7d,0xf4667f643f9be08e,0x068cef4a2658ee32,0xc1b21a887b0bac8b\n"
".quad 0xf92a3149acc8f8f4,0x3cab065863ed794a,0x5d8f7964b26021d5,0xb98e3702d714d9e6\n"
".quad 0x1b789e1944ca7ad2,0x6f0b085539949c49,0xb77986b2b40f698b,0x2ee3158112890df1\n"
".quad 0xd397bfaf295a276f,0xd3da8605dd2eaa52,0x023ea1115e14ed11,0x38ae5fe58b80f81e\n"
".quad 0x96b01bafffa3fbbf,0x40b9f1918699e06a,0xc405f5e65f20e7d4,0xe5821cf2d33dc680\n"
".quad 0x9caf5fcee9f9276e,0x98b73e9196b21aa5,0xc910eb79ba38d943,0x46a80ccefda66beb\n"
".quad 0x7698cfe2dc27570e,0xd91b34755252d456,0xc2fecbbcff5ebe79,0x4b4cdceed7e42164\n"
".quad 0xa0015c1344cc44fd,0xa6126b11d77ea5e4,0x6fb686bc4a91475a,0x9953e881c0187d9f\n"
".quad 0xbb8dd8625b2a2b83,0xa8326b0f559eff30,0x3a5e2154ee0dfd09,0x519854497fb97e04\n"
".quad 0x50b2f10c9dcb0464,0xd332149c118714db,0x47c64d023658d9b4,0x062c8c11bcb0e5b4\n"
".quad 0x2b8f4dfeb8e4bcd6,0x353e94da76901d80,0x52dd21aa705c2821,0x20f1fcc39e6b1bfb\n"
".quad 0xc6329fb3c9f7c47e,0xd9f9b376711221eb,0xb452b09e52b181fd,0x1cfe95b97e2fdc0b\n"
".quad 0x2a9a06c1db1b4c31,0xeb3675267c54b7ea,0x7e2fcc88d71e56ed,0x33bcc49eea95c000\n"
".quad 0x6bd2f941add0b7b5,0x5747da1804fcdd59,0xccf730252f8785e5,0x0df993d752eb5367\n"
".quad 0xf2871cbbd3ad45fd,0xa7c01e51eb57f4df,0x36a51e0bd0798a91,0x6956e948dde02c22\n"
".quad 0x8578cb2fdd3d6205,0x7904b9b33ed3a9a4,0x84f36431f6cd0765,0xe1b4f944818e776a\n"
".quad 0x428551c3bf691beb,0xbfb8837979265806,0x9a59fe98c496185e,0x6f16d02727c5c572\n"
".quad 0x0b66fdedea4ffd22,0x104424ce43eb178a,0x52158cf72c12a133,0x747d31a9ab76fff1\n"
".quad 0xa7ba6179e4d74366,0x5b8bbee023cfaeb1,0xfdae66c3d5d91c75,0x88b0c06e8a900b8b\n"
".quad 0x5b7bf10079601231,0x138ad99348788b93,0x6ce016d8c814474f,0xfcbf7db02af003bd\n"
".quad 0xc075ca7d54b87593,0xcb3244be50fb4af8,0x2658ee32f4667f64,0x7b0bac8b068cef4a\n"
".quad 0xacc8f8f4fcedab36,0x63ed794af92a3149,0xc15a53b43cab0658,0xd714d9e65d8f7964\n"
".quad 0x44ca7ad2b98e3702,0x39949c49582c802b,0xb40f698b6f0b0855,0x5cc4ac24b77986b2\n"
".quad 0x295a276f2ee31581,0xdd2eaa52d397bfaf,0x5e14ed1136e03807,0x8b80f81e023ea111\n"
".quad 0x2c1e842738ae5fe5,0x8699e06a96b01baf,0x5f20e7d440b9f191,0xd33dc68099d346cb\n"
".quad 0xe9f9276ee5821cf2,0xe686393c9caf5fce,0xba38d94398b73e91,0xfda66bebc910eb79\n"
".quad 0xdc27570ebddb63c5,0x5252d4567698cfe2,0xb553c277d91b3475,0xd7e42164c2fecbbc\n"
".quad 0x44cc44fd4b4cdcee,0xd77ea5e43c9b59d4,0x4a91475aa6126b11,0xb0324ebb6fb686bc\n"
".quad 0x5b2a2b839953e881,0x559eff30bb8dd862,0xee0dfd095a3d5adc,0x7fb97e043a5e2154\n"
".quad 0xc33eaee851985449,0x118714db50b2f10c,0x3658d9b4d332149c,0xbcb0e5b483b46208\n"
".quad 0xb8e4bcd6062c8c11,0x39870aca2b8f4dfe,0x705c2821353e94da,0x9e6b1bfb52dd21aa\n"
".quad 0xc9f7c47ec36bfc4b,0x711221ebc6329fb3,0xffe935d5d9f9b376,0x7e2fdc0bb452b09e\n"
".quad 0xdb1b4c311cfe95b9,0x7c54b7ea24fd0335,0xd71e56edeb367526,0x09bd0d0c7e2fcc88\n"
".quad 0xadd0b7b533bcc49e,0x04fcdd596bd2f941,0x2f8785e5009c4bc7,0x52eb5367ccf73025\n"
".quad 0x4c3010ad0df993d7,0xeb57f4dff2871cbb,0xd0798a91a7c01e51,0xdde02c2249823fde\n"
".quad 0xdd3d62056956e948,0xec908ac88578cb2f,0xf6cd07657904b9b3,0x818e776a84f36431\n"
".quad 0xbf691bebaad78524,0x79265806428551c3,0xfc5b6b7bbfb88379,0x27c5c5729a59fe98\n"
".quad 0xea4ffd226f16d027,0x43eb178a93212317,0x2c12a133104424ce,0xfcbb743352158cf7\n"
".quad 0xe4d74366747d31a9,0x23cfaeb1a7ba6179,0xd5d91c75ed09c344,0x8a900b8bfdae66c3\n"
".quad 0x1a154f1b88b0c06e,0x48788b935b7bf100,0xc814474f138ad993,0x2af003bda4581bc3\n"
".quad 0x54b87593fcbf7db0,0xc3ca1719c075ca7d,0xf4667f64cb3244be,0x068cef4a2658ee32\n"
".quad 0x96ba87d64d949da9,0x1abfb9336d9b7300,0x713f9bf1416fdb8c,0x71f604de24daa603\n"
".quad 0x6ef2ae8789a47420,0x3fa2381a35f5e123,0xe15bbeaf02329210,0xbe2761c931c703be\n"
".quad 0x7c54fac29f4b143e,0x94a40342ada0c2b0,0x57e90c2227c3b149,0x383d1bf58e0efb7a\n"
".quad 0x94bf6e46c94471dd,0x2f46a91808a3dbb9,0x1c7015b55ed8eda5,0x04043643527b5912\n"
".quad 0x6493d49a8c6224ea,0x7da8d9d3e29016ef,0xf8ae1f1dcdfcfb7d,0x259d54bfea937e5d\n"
".quad 0x87f31a4946ca856c,0x7af99236b40d419e,0xb00231d8debca518,0xf707a4d7b155690e\n"
".quad 0x4a9062fd02110981,0x5b5bd429cfac299a,0x6ffae51b0d73ec82,0x56d21b927e80a0c4\n"
".quad 0xa805b803ade5daf1,0x033410f2061ec19b,0xefd90cd97ce2fce0,0xf617e378b86c1c4a\n"
".quad 0xb4049aa1cb5909ac,0x22f28c3284ac0665,0x49cdaddf03cdb792,0x81569d4fa86ca467\n"
".quad 0x5beb0285c49b6288,0x4b058fd88375eef8,0xf531521b9cb38a73,0xa374578abea7090b\n"
".quad 0xb9b8ed9ac906aae5,0x42f794d07425de66,0xf396322c40660ae1,0x30b82f7bf6ec7b5b\n"
".quad 0x018cc05f99320ed1,0xf97d1a73aa8e5b20,0x607a50ab995cec1c,0xee310f619a4935fc\n"
".quad 0x3bca73315cbc4cb2,0x436357294f0e7f2b,0x046af782b3d5bb34,0x7383bfdaf0e0d505\n"
".quad 0xfa937ca2d2501d82,0xd7a5fda17206e4be,0x92438a2884405b37,0x1c754185770e4266\n"
".quad 0x2d2d33ba1210c991,0xbb304edf5acac570,0xd914bbaf54cafb1d,0x4c0e7a0267bfd143\n"
".quad 0xdb0da762b7230771,0xf338f13f4f945afa,0xc4a588b1899935fc,0xb8b25249572405a4\n"
".quad 0xb819cc8fb1c3cf4e,0xd385a43622f93c3d,0xaada94cf566b1363,0x036a3f0a9682eb2e\n"
".quad 0x48666d89f4daf901,0xff6d30f2af42cf70,0x2bf0e673c6f92537,0x03879cc5fe29fa06\n"
".quad 0x6fdae66e8917974e,0x2eb4587575cfa975,0x75460a7566ccd3e6,0xc605a0df625dbb1c\n"
".quad 0x104aded2ecf5a362,0x0b0bb23844f2ab41,0x03f3e19fc8c1a521,0xd1cd70c9f7959efb\n"
".quad 0x04180aeddae566df,0xb7a959ef67a47ee0,0x888fe0909a01c0a3,0xda098f4d1dfbab26\n"
".quad 0x28dc7aa722104e2b,0x192dbf0ad08b43cc,0x45ecf9b0e738c351,0x11d1f6c5ee775d79\n"
".quad 0x977f2325666bd4a0,0x8a5e8f0694720df2,0x6c060828fbb91d04,0xfc9dacecdd96ecad\n"
".quad 0x9c46f6a3b2e4501d,0xd5fc806a9953c907,0x88b5d5512d585b16,0x674d931152fd9f08\n"
".quad 0xf278293f9f62141a,0x1ae2e84959bf5197,0x00c0cddb9a7a0890,0x296a25611e38e634\n"
".quad 0x43f5d3526aa7d1b2,0x76dee16f668fbc9f,0xa68614abc719b1b1,0x8bc733873ed95f6f\n"
".quad 0x62770a67bd8a05d5,0x3ee77b3e6ae26c06,0x1cca1c5c367ead81,0xa435ef437ed28cc8\n"
".quad 0x23ab8012bd7c839e,0x0cb2f0ad743e1b65,0xa8d0d7b1d49a64af,0x1a71c1edfdf0042f\n"
".quad 0xe5a3ffb865b7c72a,0x80f606edd927bf5b,0x0a3955a56c0ebc2e,0x8d3a47bd0cd3800b\n"
".quad 0x995455c172fa3702,0x30522ea67f3193d5,0xf03a45704fbfe00f,0xe0ad442480b273db\n"
".quad 0x23620d403d341c3e,0x3461eb2d6c5310e3,0x0c22e33486576c7e,0xcb14e4007d587a28\n"
".quad 0x5f17aef571fc550b,0x1235110aa889747b,0x02a17465c442b7ba,0xdc60fa71ee88a8f1\n"
".quad 0x23033b822d53dd83,0xaa09e07a549a007e,0xa454bcbde7f5831d,0xee3e83fb4102dfb8\n"
".quad 0xaa34114e3e6abb14,0x5edb12ed0228d027,0x49c9a68cceebff03,0x0cb7499d9bd5a2c2\n"
".quad 0x9c2ea27734d287e2,0x90de70092a8885bf,0x9da514e2476a89c4,0x0229a4b4d9ce20dd\n"
".quad 0x69851ccd571fb598,0xcee2061061d754b4,0xb6053726bd9a8977,0xbad2314bd29d68ec\n"
".quad 0x17259d0727d5939f,0x5ec04602c000c254,0x56463c7b118bea9b,0x6b45a745292345fe\n"
".quad 0xf8ba267fa9375ce1,0x098009408cb7d5af,0x6ab178b78603b1a3,0x3e947c50e9fe0323\n"
".quad 0x608e90eff4d12e07,0x63b1702ff9a404fe,0x6f116fa29f4e2099,0xf0a84d8a2c915cf5\n"
".quad 0x1a8a06ac5fb8b3f5,0x24699121c86aaf0c,0x2bd5ff2157cfebbb,0x91fe24285bd3b02c\n"
".quad 0xdae566df3d895745,0x67a47ee004180aed,0x1ef9c2bab7a959ef,0x1dfbab26888fe090\n"
".quad 0x22104e2bda098f4d,0xd08b43cc8f0feef9,0xe738c351192dbf0a,0xf59cf6f045ecf9b0\n"
".quad 0x666bd4a011d1f6c5,0x94720df2977f2325,0xfbb91d04647ebe73,0xdd96ecad6c060828\n"
".quad 0x264abbe4fc9dacec,0x9953c9079c46f6a3,0x2d585b16d5fc806a,0x52fd9f08afcf78f5\n"
".quad 0x9f62141a674d9311,0x5af61996f278293f,0x9a7a08901ae2e849,0x1e38e63400c0cddb\n"
".quad 0x6aa7d1b2901f02b7,0x668fbc9f43f5d352,0xce90f2e776dee16f,0x3ed95f6fa68614ab\n"
".quad 0xbd8a05d58bc73387,0x6ae26c06b78a5a5a,0x367ead813ee77b3e,0x12496f5f1cca1c5c\n"
".quad 0xbd7c839ea435ef43,0x743e1b6523ab8012,0xd49a64af936d5ff1,0xfdf0042fa8d0d7b1\n"
".quad 0x7d09871e1a71c1ed,0xd927bf5be5a3ffb8,0x6c0ebc2e80f606ed,0x0cd3800bebe60b30\n"
".quad 0x72fa37028d3a47bd,0xe14661ae995455c1,0x4fbfe00f30522ea6,0x80b273dbf03a4570\n"
".quad 0x3d341c3e432cda01,0x6c5310e323620d40,0x1584b4373461eb2d,0x7d587a280c22e334\n"
".quad 0x71fc550bcb14e400,0xa889747b57ee0b65,0xc442b7ba1235110a,0x71411bb002a17465\n"
".quad 0x2d53dd83dc60fa71,0x549a007e23033b82,0xe7f5831d1476643b,0x4102dfb8a454bcbd\n"
".quad 0x2c6f4a11ee3e83fb,0x0228d027aa34114e,0xceebff035edb12ed,0x9bd5a2c2e9afff8a\n"
".quad 0x34d287e20cb7499d,0x3156ca139c2ea277,0x476a89c490de7009,0xd9ce20dd9da514e2\n"
".quad 0x571fb598a3c62e4e,0x61d754b469851ccd,0x36d3e8e0cee20610,0xd29d68ecb6053726\n"
".quad 0x27d5939fbad2314b,0xc000c2540bfd22bc,0x118bea9b5ec04602,0xfb079b3b56463c7b\n"
".quad 0xa9375ce16b45a745,0x8cb7d5aff8ba267f,0x8603b1a318cd3da4,0xe9fe03236ab178b7\n"
".quad 0xcf8964b43e947c50,0xf9a404fe608e90ef,0x9f4e209963b1702f,0x2c915cf521aafe80\n"
".quad 0x5fb8b3f5f0a84d8a,0x240e0e301a8a06ac,0x57cfebbb24699121,0x5bd3b02c2bd5ff21\n"
".quad 0x3d895745b4f853fb,0x04180aeddae566df,0x39ff25e867a47ee0,0x888fe0901ef9c2ba\n"
".quad 0xda098f4d1dfbab26,0x8f0feef9596cc88c,0x192dbf0ad08b43cc,0xe9dd9064e738c351\n"
".quad 0x11d1f6c5f59cf6f0,0x977f2325666bd4a0,0x647ebe738a839e0c,0x6c060828fbb91d04\n"
".quad 0x7db63a3add96ecad,0x9c46f6a3264abbe4,0xd5fc806a9953c907,0xafcf78f56d8bdca9\n"
".quad 0x674d931152fd9f08,0xc1dae83b9f62141a,0x1ae2e8495af61996,0x00c0cddb9a7a0890\n"
".quad 0x901f02b7ecb4a555,0x43f5d3526aa7d1b2,0xad44c818668fbc9f,0xa68614abce90f2e7\n"
".quad 0x8bc733873ed95f6f,0xb78a5a5a3691b5c9,0x3ee77b3e6ae26c06,0x2f2f5e5b367ead81\n"
".quad 0xa435ef4312496f5f,0x23ab8012bd7c839e,0x936d5ff11355fd8d,0xa8d0d7b1d49a64af\n"
".quad 0x8139c33efdf0042f,0xe5a3ffb87d09871e,0x80f606edd927bf5b,0xebe60b309aaf3e2b\n"
".quad 0x8d3a47bd0cd3800b,0x272fd5e172fa3702,0x30522ea6e14661ae,0xf03a45704fbfe00f\n"
".quad 0x432cda016f3225dd,0x23620d403d341c3e,0xcb82ea616c5310e3,0x0c22e3341584b437\n"
".quad 0xcb14e4007d587a28,0x57ee0b6567acb9bb,0x1235110aa889747b,0x312d323ac442b7ba\n"
".quad 0xdc60fa7171411bb0,0x23033b822d53dd83,0x1476643b773f4efe,0xa454bcbde7f5831d\n"
".quad 0xef55cd884102dfb8,0xaa34114e2c6f4a11,0x5edb12ed0228d027,0xe9afff8a83a56de9\n"
".quad 0x0cb7499d9bd5a2c2,0xa2b8219134d287e2,0x90de70093156ca13,0x9da514e2476a89c4\n"
".quad 0xa3c62e4e729993b0,0x69851ccd571fb598,0x154f8e4f61d754b4,0xb605372636d3e8e0\n"
".quad 0xbad2314bd29d68ec,0x0bfd22bc3bd8ee95,0x5ec04602c000c254,0x447b967f118bea9b\n"
".quad 0x6b45a745fb079b3b,0xf8ba267fa9375ce1,0x18cd3da43534fa54,0x6ab178b78603b1a3\n"
".quad 0x9bb56b02e9fe0323,0x608e90efcf8964b4,0x63b1702ff9a404fe,0x21aafe80778a07f9\n"
".quad 0xf0a84d8a2c915cf5,0x9c3923f65fb8b3f5,0x24699121240e0e30,0x2bd5ff2157cfebbb\n"
".quad 0xb4f853fbd4dc92f6,0xdae566df3d895745,0xc6535b3404180aed,0x1ef9c2ba39ff25e8\n"
".quad 0x1dfbab26888fe090,0x596cc88ce362c9de,0xd08b43cc8f0feef9,0x68b5ef56192dbf0a\n"
".quad 0xf59cf6f0e9dd9064,0x666bd4a011d1f6c5,0x8a839e0c26ea82a9,0xfbb91d04647ebe73\n"
".quad 0x5f5893f66c060828,0x264abbe47db63a3a,0x9953c9079c46f6a3,0x6d8bdca96371e80b\n"
".quad 0x52fd9f08afcf78f5,0xdc0b0561674d9311,0x5af61996c1dae83b,0x9a7a08901ae2e849\n"
".quad 0xecb4a555c7e43849,0x6aa7d1b2901f02b7,0xf5346d5f43f5d352,0xce90f2e7ad44c818\n"
".quad 0x3ed95f6fa68614ab,0x3691b5c982e283c4,0x6ae26c06b78a5a5a,0x359147d03ee77b3e\n"
".quad 0x12496f5f2f2f5e5b,0xbd7c839ea435ef43,0x1355fd8d932f4ac8,0xd49a64af936d5ff1\n"
".quad 0x521e5002a8d0d7b1,0x7d09871e8139c33e,0xd927bf5be5a3ffb8,0x9aaf3e2bd0299e84\n"
".quad 0x0cd3800bebe60b30,0xfcede5fb8d3a47bd,0xe14661ae272fd5e1,0x4fbfe00f30522ea6\n"
".quad 0x6f3225ddec0c5381,0x3d341c3e432cda01,0x2bad89e023620d40,0x1584b437cb82ea61\n"
".quad 0x7d587a280c22e334,0x67acb9bb8f287195,0xa889747b57ee0b65,0x924944d91235110a\n"
".quad 0x71411bb0312d323a,0x2d53dd83dc60fa71,0x773f4efe7ff6d369,0xe7f5831d1476643b\n"
".quad 0xee4499eda454bcbd,0x2c6f4a11ef55cd88,0x0228d027aa34114e,0x83a56de98d95a47b\n"
".quad 0x9bd5a2c2e9afff8a,0x7a8266820cb7499d,0x3156ca13a2b82191,0x476a89c490de7009\n"
".quad 0x729993b06aab9ad3,0x571fb598a3c62e4e,0xff5f68e469851ccd,0x36d3e8e0154f8e4f\n"
".quad 0xd29d68ecb6053726,0x3bd8ee957e9dc9ec,0xc000c2540bfd22bc,0x548adac85ec04602\n"
".quad 0xfb079b3b447b967f,0xa9375ce16b45a745,0x3534fa54d30aeae5,0x8603b1a318cd3da4\n"
".quad 0x003c12736ab178b7,0xcf8964b49bb56b02,0xf9a404fe608e90ef,0x778a07f9b0a54e3b\n"
".quad 0x2c915cf521aafe80,0xcc8348d2f0a84d8a,0x240e0e309c3923f6,0x57cfebbb24699121\n"
".quad 0xab9af95ce7441f3b,0xec17a307c4bfb38f,0xe35c15d6beccb4a0,0x7316ea60cc3e87bc\n"
".quad 0xb0353f8b761663a4,0x163708f1fea7bef0,0x5eca19035106a44b,0xe3920b17eadac680\n"
".quad 0xa343041496abb540,0xc0db72032abc84d9,0xdbdd192898027491,0x883e7178152147cd\n"
".quad 0xe931c95e8b6c69f2,0x1bf94b7e86d74834,0x723562734eacbcbf,0x1e5d64360bf27fdf\n"
".quad 0x649b9c4f80c353b1,0x1d8c5101f79324de,0x7c63763ddc352130,0x06476ee6fbb6001f\n"
".quad 0x447fc0e96535ef10,0xf8eb058ef96188c6,0x30be129c18c7add7,0x731f4c25e0983970\n"
".quad 0xcf83232ca0df286f,0xf315eb2e76def3e2,0xc1f527994b97b70b,0x1db27550056cfe89\n"
".quad 0xdd236fb4618cbf36,0xd13d2933e71386b0,0x51aaed7ae6ae17b0,0x8a8b79eb91958fff\n"
".quad 0x251246b34b06b35e,0x1d5096ad3ec3bd4d,0x8359d7e2c9da1fe8,0x8e13e9ec07299b08\n"
".quad 0xae7bb5163de8cac8,0x49af8db6d5934280,0x2879865b93808ed9,0x81cd28a2921b40c0\n"
".quad 0xd36a9f08242bb002,0x1517ae1a8873a9e5,0x49cfabfc79b554b5,0xa9830e5ba2aae8de\n"
".quad 0x9841b85aaf2037b2,0x29541d0f5913ec60,0x773b779d787574ee,0x26c2e694df2a69e3\n"
".quad 0x5b24a7359cd6dd63,0xbf21d942238446c4,0x342b13301b4d7c8b,0x5196e691de48ddfe\n"
".quad 0xc0c8cac2cf54a216,0x13278ddec0ab0ce4,0x15873c8d3b436cdc,0x368dd05aff6f80fa\n"
".quad 0x00986a0558a00816,0x285d7f2e316ab6b2,0x09e1fa41f6df486c,0xaed8a8f040c565f7\n"
".quad 0x9d5c80305090bcd2,0x7937c79a9ba85f54,0xee275fcb77bcf926,0x040bab133cd94cb2\n"
".quad 0x4b54106184f0411f,0xed88b5a54477f4db,0xaa277e75b1979d99,0xa40051c05bc083f1\n"
".quad 0x787255a55d8693bc,0xcc3e67eb7ec3bd0e,0x746d4cd4a767a631,0x59948b244159b680\n"
".quad 0x2da17b9ddf973a87,0xb62802ec2d9d69ee,0x192ff6b779a16658,0x67c7c6a9d7628892\n"
".quad 0x31e73fd0104dc150,0xad0c18b41d766325,0xfdb67390618f5066,0xfdd1ec81d9b87da0\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000003,0x0000000000000000\n"
".quad 0x0000000600000000,0x0000000000000000,0x0000000000000000,0x000000000000000f\n"
".quad 0x0000000000000000,0x0000001e00000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x000000000000003c,0x0000000000000000,0x0000007800000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000000f0,0x0000000000000000,0x000001e000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000003c0,0x0000000000000000\n"
".quad 0x0000078000000000,0x0000000000000000,0x0000000000000000,0x0000000000000f00\n"
".quad 0x0000000000000000,0x00001e0000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000003c00,0x0000000000000000,0x0000780000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x000000000000f000,0x0000000000000000,0x0001e00000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x000000000003c000,0x0000000000000000\n"
".quad 0x0007800000000000,0x0000000000000000,0x0000000000000000,0x00000000000f0000\n"
".quad 0x0000000000000000,0x001e000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000003c0000,0x0000000000000000,0x0078000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000f00000,0x0000000000000000,0x01e0000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000003c00000,0x0000000000000000\n"
".quad 0x0780000000000000,0x0000000000000000,0x0000000000000000,0x000000000f000000\n"
".quad 0x0000000000000000,0x1e00000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x000000003c000000,0x0000000000000000,0x7800000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000f0000000,0x0000000000000000,0xe000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000200000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000004,0x0000000000000000,0x0000000800000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000010,0x0000000000000000\n"
".quad 0x0000002000000000,0x0000000000000000,0x0000000000000000,0x0000000000000040\n"
".quad 0x0000000000000000,0x0000008000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000100,0x0000000000000000,0x0000020000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000400,0x0000000000000000,0x0000080000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000001000,0x0000000000000000\n"
".quad 0x0000200000000000,0x0000000000000000,0x0000000000000000,0x0000000000004000\n"
".quad 0x0000000000000000,0x0000800000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000010000,0x0000000000000000,0x0002000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000040000,0x0000000000000000,0x0008000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000100000,0x0000000000000000\n"
".quad 0x0020000000000000,0x0000000000000000,0x0000000000000000,0x0000000000400000\n"
".quad 0x0000000000000000,0x0080000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000001000000,0x0000000000000000,0x0200000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000004000000,0x0000000000000000,0x0800000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000010000000,0x0000000000000000\n"
".quad 0x2000000000000000,0x0000000000000000,0x0000000000000000,0x0000000040000000\n"
".quad 0x0000000000000000,0x8000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000100000000,0x0000000000000000,0x0000000000000000,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000400000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000008,0x0000000000000000,0x0000001000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000020,0x0000000000000000,0x0000004000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000010000000000,0x0000000000000000,0x0000000000000000,0x0000000000000200\n"
".quad 0x0000000000000000,0x0000040000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000800,0x0000000000000000,0x0000100000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000002000,0x0000000000000000,0x0000400000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000008000,0x0000000000000000\n"
".quad 0x0001000000000000,0x0000000000000000,0x0000000000000000,0x0000000000020000\n"
".quad 0x0000000000000000,0x0004000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000080000,0x0000000000000000,0x0010000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000200000,0x0000000000000000,0x0040000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000800000,0x0000000000000000\n"
".quad 0x0100000000000000,0x0000000000000000,0x0000000000000000,0x0000000002000000\n"
".quad 0x0000000000000000,0x0400000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000008000000,0x0000000000000000,0x1000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000020000000,0x0000000000000000,0x4000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000080000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000001,0x0000000000000000,0x0000000200000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000800000000,0x0000000000000000,0x0000000000000000,0x0000000000000010\n"
".quad 0x0000000000000000,0x0000002000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000040,0x0000000000000000,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000100,0x0000000000000000,0x0000020000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000400,0x0000000000000000\n"
".quad 0x0000080000000000,0x0000000000000000,0x0000000000000000,0x0000000000001000\n"
".quad 0x0000000000000000,0x0000200000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000004000,0x0000000000000000,0x0000800000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000010000,0x0000000000000000,0x0002000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000040000,0x0000000000000000\n"
".quad 0x0008000000000000,0x0000000000000000,0x0000000000000000,0x0000000000100000\n"
".quad 0x0000000000000000,0x0020000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000400000,0x0000000000000000,0x0080000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000001000000,0x0000000000000000,0x0200000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000004000000,0x0000000000000000\n"
".quad 0x0800000000000000,0x0000000000000000,0x0000000000000000,0x0000000010000000\n"
".quad 0x0000000000000000,0x2000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000040000000,0x0000000000000000,0x8000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000100000000,0x0000000000000011,0x0000000000000000\n"
".quad 0x0000002200000002,0x0000000000000000,0x0000000400000000,0x0000000000000044\n"
".quad 0x0000000000000000,0x0000008800000008,0x0000000000000000,0x0000001000000000\n"
".quad 0x0000000000000110,0x0000000000000000,0x0000022000000020,0x0000000000000000\n"
".quad 0x0000004000000000,0x0000000000000440,0x0000000000000000,0x0000088000000080\n"
".quad 0x0000000000000000,0x0000010000000000,0x0000000000001100,0x0000000000000000\n"
".quad 0x0000220000000200,0x0000000000000000,0x0000040000000000,0x0000000000004400\n"
".quad 0x0000000000000000,0x0000880000000800,0x0000000000000000,0x0000100000000000\n"
".quad 0x0000000000011000,0x0000000000000000,0x0002200000002000,0x0000000000000000\n"
".quad 0x0000400000000000,0x0000000000044000,0x0000000000000000,0x0008800000008000\n"
".quad 0x0000000000000000,0x0001000000000000,0x0000000000110000,0x0000000000000000\n"
".quad 0x0022000000020000,0x0000000000000000,0x0004000000000000,0x0000000000440000\n"
".quad 0x0000000000000000,0x0088000000080000,0x0000000000000000,0x0010000000000000\n"
".quad 0x0000000001100000,0x0000000000000000,0x0220000000200000,0x0000000000000000\n"
".quad 0x0040000000000000,0x0000000004400000,0x0000000000000000,0x0880000000800000\n"
".quad 0x0000000000000000,0x0100000000000000,0x0000000011000000,0x0000000000000000\n"
".quad 0x2200000002000000,0x0000000000000000,0x0400000000000000,0x0000000044000000\n"
".quad 0x0000000000000000,0x8800000008000000,0x0000000000000000,0x1000000000000000\n"
".quad 0x0000000010000000,0x0000000000000000,0x2000000020000000,0x0000000000000000\n"
".quad 0x4000000000000000,0x0000000040000000,0x0000000000000000,0x8000000080000000\n"
".quad 0x0000000300000000,0x0000030300000033,0x0000000000003333,0x0000006600000006\n"
".quad 0x0000666600000606,0x0000000f00000000,0x00000f0f000000ff,0x000000000000ffff\n"
".quad 0x000001fe0000001e,0x0001fffe00001e1e,0x0000003c00000000,0x00003c3c000003fc\n"
".quad 0x000000000003fffc,0x000007f800000078,0x0007fff800007878,0x000000f000000000\n"
".quad 0x0000f0f000000ff0,0x00000000000ffff0,0x00001fe0000001e0,0x001fffe00001e1e0\n"
".quad 0x000003c000000000,0x0003c3c000003fc0,0x00000000003fffc0,0x00007f8000000780\n"
".quad 0x007fff8000078780,0x00000f0000000000,0x000f0f000000ff00,0x0000000000ffff00\n"
".quad 0x0001fe0000001e00,0x01fffe00001e1e00,0x00003c0000000000,0x003c3c000003fc00\n"
".quad 0x0000000003fffc00,0x0007f80000007800,0x07fff80000787800,0x0000f00000000000\n"
".quad 0x00f0f000000ff000,0x000000000ffff000,0x001fe0000001e000,0x1fffe00001e1e000\n"
".quad 0x0003c00000000000,0x03c3c000003fc000,0x000000003fffc000,0x007f800000078000\n"
".quad 0x7fff800007878000,0x000f000000000000,0x0f0f000000ff0000,0x00000000ffff0000\n"
".quad 0x01fe0000001e0000,0xfffe00001e1e0000,0x003c000000000000,0x3c3c000003fc0000\n"
".quad 0x00000000fffc0000,0x07f8000000780000,0xfff8000078780000,0x00f0000000000000\n"
".quad 0xf0f000000ff00000,0x00000000fff00000,0x1fe0000001e00000,0xffe00000e1e00000\n"
".quad 0x03c0000000000000,0xc3c000003fc00000,0x00000000ffc00000,0x7f80000007800000\n"
".quad 0xff80000087800000,0x0f00000000000000,0x0f000000ff000000,0x00000000ff000000\n"
".quad 0xfe0000001e000000,0xfe0000001e000000,0x3c00000000000000,0x3c000000fc000000\n"
".quad 0x00000000fc000000,0xf800000078000000,0xf800000078000000,0xf000000000000000\n"
".quad 0xf0000000f0000000,0x00000000f0000000,0xe0000000e0000000,0xe0000000e0000000\n"
".quad 0x0000000000000000,0x0000003300000003,0x0000000000000303,0x0000000600000000\n"
".quad 0x0000060600000066,0x0000000000000000,0x000000ff0000000f,0x0000000000000f0f\n"
".quad 0x0000001e00000000,0x00001e1e000001fe,0x0000000000000000,0x000003fc0000003c\n"
".quad 0x0000000000003c3c,0x0000007800000000,0x00007878000007f8,0x0000000000000000\n"
".quad 0x00000ff0000000f0,0x000000000000f0f0,0x000001e000000000,0x0001e1e000001fe0\n"
".quad 0x0000000000000000,0x00003fc0000003c0,0x000000000003c3c0,0x0000078000000000\n"
".quad 0x0007878000007f80,0x0000000000000000,0x0000ff0000000f00,0x00000000000f0f00\n"
".quad 0x00001e0000000000,0x001e1e000001fe00,0x0000000000000000,0x0003fc0000003c00\n"
".quad 0x00000000003c3c00,0x0000780000000000,0x007878000007f800,0x0000000000000000\n"
".quad 0x000ff0000000f000,0x0000000000f0f000,0x0001e00000000000,0x01e1e000001fe000\n"
".quad 0x0000000000000000,0x003fc0000003c000,0x0000000003c3c000,0x0007800000000000\n"
".quad 0x07878000007f8000,0x0000000000000000,0x00ff0000000f0000,0x000000000f0f0000\n"
".quad 0x001e000000000000,0x1e1e000001fe0000,0x0000000000000000,0x03fc0000003c0000\n"
".quad 0x000000003c3c0000,0x0078000000000000,0x7878000007f80000,0x0000000000000000\n"
".quad 0x0ff0000000f00000,0x00000000f0f00000,0x01e0000000000000,0xe1e000001fe00000\n"
".quad 0x0000000000000000,0x3fc0000003c00000,0x00000000c3c00000,0x0780000000000000\n"
".quad 0x878000007f800000,0x0000000000000000,0xff0000000f000000,0x000000000f000000\n"
".quad 0x1e00000000000000,0x1e000000fe000000,0x0000000000000000,0xfc0000003c000000\n"
".quad 0x000000003c000000,0x7800000000000000,0x78000000f8000000,0x0000000000000000\n"
".quad 0xf0000000f0000000,0x00000000f0000000,0xe000000000000000,0xe0000000e0000000\n"
".quad 0x0000000000000000,0x0000000300000000,0x0000000000000033,0x0000000000000000\n"
".quad 0x0000006600000006,0x0000000000000000,0x0000000f00000000,0x00000000000000ff\n"
".quad 0x0000000000000000,0x000001fe0000001e,0x0000000000000000,0x0000003c00000000\n"
".quad 0x00000000000003fc,0x0000000000000000,0x000007f800000078,0x0000000000000000\n"
".quad 0x000000f000000000,0x0000000000000ff0,0x0000000000000000,0x00001fe0000001e0\n"
".quad 0x0000000000000000,0x000003c000000000,0x0000000000003fc0,0x0000000000000000\n"
".quad 0x00007f8000000780,0x0000000000000000,0x00000f0000000000,0x000000000000ff00\n"
".quad 0x0000000000000000,0x0001fe0000001e00,0x0000000000000000,0x00003c0000000000\n"
".quad 0x000000000003fc00,0x0000000000000000,0x0007f80000007800,0x0000000000000000\n"
".quad 0x0000f00000000000,0x00000000000ff000,0x0000000000000000,0x001fe0000001e000\n"
".quad 0x0000000000000000,0x0003c00000000000,0x00000000003fc000,0x0000000000000000\n"
".quad 0x007f800000078000,0x0000000000000000,0x000f000000000000,0x0000000000ff0000\n"
".quad 0x0000000000000000,0x01fe0000001e0000,0x0000000000000000,0x003c000000000000\n"
".quad 0x0000000003fc0000,0x0000000000000000,0x07f8000000780000,0x0000000000000000\n"
".quad 0x00f0000000000000,0x000000000ff00000,0x0000000000000000,0x1fe0000001e00000\n"
".quad 0x0000000000000000,0x03c0000000000000,0x000000003fc00000,0x0000000000000000\n"
".quad 0x7f80000007800000,0x0000000000000000,0x0f00000000000000,0x00000000ff000000\n"
".quad 0x0000000000000000,0xfe0000001e000000,0x0000000000000000,0x3c00000000000000\n"
".quad 0x00000000fc000000,0x0000000000000000,0xf800000078000000,0x0000000000000000\n"
".quad 0xf000000000000000,0x00000000f0000000,0x0000000000000000,0xe0000000e0000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000003,0x0000000000000000\n"
".quad 0x0000000600000000,0x0000000000000000,0x0000000000000000,0x000000000000000f\n"
".quad 0x0000000000000000,0x0000001e00000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x000000000000003c,0x0000000000000000,0x0000007800000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000000f0,0x0000000000000000,0x000001e000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000003c0,0x0000000000000000\n"
".quad 0x0000078000000000,0x0000000000000000,0x0000000000000000,0x0000000000000f00\n"
".quad 0x0000000000000000,0x00001e0000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000003c00,0x0000000000000000,0x0000780000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x000000000000f000,0x0000000000000000,0x0001e00000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x000000000003c000,0x0000000000000000\n"
".quad 0x0007800000000000,0x0000000000000000,0x0000000000000000,0x00000000000f0000\n"
".quad 0x0000000000000000,0x001e000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000003c0000,0x0000000000000000,0x0078000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000f00000,0x0000000000000000,0x01e0000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000003c00000,0x0000000000000000\n"
".quad 0x0780000000000000,0x0000000000000000,0x0000000000000000,0x000000000f000000\n"
".quad 0x0000000000000000,0x1e00000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x000000003c000000,0x0000000000000000,0x7800000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000f0000000,0x0000000000000000,0xe000000000000000\n"
".quad 0x0000001100000001,0x0000111100000101,0x0000000200010001,0x0000020200000022\n"
".quad 0x0002000200002222,0x0000004400000004,0x0000444400000404,0x0000000800040004\n"
".quad 0x0000080800000088,0x0008000800008888,0x0000011000000010,0x0001111000001010\n"
".quad 0x0000002000100010,0x0000202000000220,0x0020002000022220,0x0000044000000040\n"
".quad 0x0004444000004040,0x0000008000400040,0x0000808000000880,0x0080008000088880\n"
".quad 0x0000110000000100,0x0011110000010100,0x0000020001000100,0x0002020000002200\n"
".quad 0x0200020000222200,0x0000440000000400,0x0044440000040400,0x0000080004000400\n"
".quad 0x0008080000008800,0x0800080000888800,0x0001100000001000,0x0111100000101000\n"
".quad 0x0000200010001000,0x0020200000022000,0x2000200002222000,0x0004400000004000\n"
".quad 0x0444400000404000,0x0000800040004000,0x0080800000088000,0x8000800008888000\n"
".quad 0x0011000000010000,0x1111000001010000,0x0002000000010000,0x0202000000220000\n"
".quad 0x0002000022220000,0x0044000000040000,0x4444000004040000,0x0008000000040000\n"
".quad 0x0808000000880000,0x0008000088880000,0x0110000000100000,0x1110000010100000\n"
".quad 0x0020000000100000,0x2020000002200000,0x0020000022200000,0x0440000000400000\n"
".quad 0x4440000040400000,0x0080000000400000,0x8080000008800000,0x0080000088800000\n"
".quad 0x1100000001000000,0x1100000001000000,0x0200000001000000,0x0200000022000000\n"
".quad 0x0200000022000000,0x4400000004000000,0x4400000004000000,0x0800000004000000\n"
".quad 0x0800000088000000,0x0800000088000000,0x1000000010000000,0x1000000010000000\n"
".quad 0x2000000010000000,0x2000000020000000,0x2000000020000000,0x4000000040000000\n"
".quad 0x4000000040000000,0x8000000040000000,0x8000000080000000,0x8000000080000000\n"
".quad 0x140303f3051122dd,0x170f00eb54330fc6,0x0911769867cc393c,0x98660e8f180602e6\n"
".quad 0xff8960561e1b04e3,0x140f033f1400fccf,0x1b3c0c1854ff03db,0x2b32cabca8cfebbe\n"
".quad 0x59fe16b5d81e037e,0xa18ec551c67d1d05,0x403c00fc5556a669,0x7cfc3c3c43fc0f69\n"
".quad 0xaaad4cd2b33fabb9,0x47f81ed2407801f8,0xa67f577239f87878,0x40f000f0555a9997\n"
".quad 0xb3f3f3f34ff00ea4,0x6ab5332e8ccd9dd2,0x9fe01d4881e001e0,0x199b3ba767e7e7e6\n"
".quad 0x03c003c0156a665c,0xcfcfcfcc3fc03a90,0xead4ccb83336774d,0x7f80752007800780\n"
".quad 0x666cee9a9f9f9f98,0x0f000f0015a99970,0x3f3f3f30ff00ea40,0xeb5332e0ccd9dd34\n"
".quad 0xfe01d4801e001e00,0x89b3ba687e7e7e60,0x3c003c0016a665c0,0xfcfcfcc0fc03a900\n"
".quad 0xed4ccb80c36774d0,0xf807520078007800,0x96cee9a0f9f9f980,0xf000f0001a999700\n"
".quad 0x33f3f300f00ea400,0xf5332e00fd9dd340,0xe01d4800e001e000,0xeb3ba68077e7e600\n"
".quad 0xc003c0002a665c00,0xffcfcc00c03a9000,0x94ccb80006774d00,0x8075200080078000\n"
".quad 0x1cee9a00ef9f9800,0x000f0000e9997000,0x0f3f300000ea4000,0x1332e000e9dd3400\n"
".quad 0x11d48000001e0000,0xc3ba68001e7e6000,0x003c0000e665c000,0x3cfcc000f3a90000\n"
".quad 0x0ccb80005774d000,0xf752000000780000,0xbee9a00079f98000,0xc0f00000d9970000\n"
".quad 0x33f300003ea40000,0x732e0000add34000,0x6d48000091e00000,0x8ba6800077e60000\n"
".quad 0x33c00000265c0000,0xffcc00000a900000,0x8cb80000074d0000,0x0520000077800000\n"
".quad 0xde9a0000ef980000,0x3f000000d9700000,0x0f300000da400000,0x62e00000ad340000\n"
".quad 0xb48000007e000000,0x8a680000de600000,0xfc000000d5c00000,0x7cc0000069000000\n"
".quad 0x7b80000004d00000,0xd2000000f8000000,0x19a0000039800000,0xf0000000e7000000\n"
".quad 0x73000000a4000000,0x1e000000f3400000,0x88000000e0000000,0xca800000f6000000\n"
".quad 0x051122dd0014171b,0x54330fc6140303f3,0x00181e03170f00eb,0x180602e609117698\n"
".quad 0x1e1b04e398660e8f,0x1400fccf00141b28,0x54ff03db140f033f,0x001806651b3c0c18\n"
".quad 0xd81e037e2b32cabc,0xc67d1d0559fe16b5,0x5556a66900003cfc,0x43fc0f69403c00fc\n"
".quad 0x000079f87cfc3c3c,0x407801f8aaad4cd2,0x39f8787847f81ed2,0x555a99970000f3f3\n"
".quad 0x4ff00ea440f000f0,0x0001e7e6b3f3f3f3,0x81e001e06ab5332e,0x67e7e7e69fe01d48\n"
".quad 0x156a665c0003cfcc,0x3fc03a9003c003c0,0x00079f98cfcfcfcc,0x07800780ead4ccb8\n"
".quad 0x9f9f9f987f807520,0x15a99970000f3f30,0xff00ea400f000f00,0xc01e7e603f3f3f30\n"
".quad 0x1e001e00eb5332e0,0x7e7e7e60fe01d480,0x16a665c0403cfcc0,0xfc03a9003c003c00\n"
".quad 0x4079f980fcfcfcc0,0x78007800ed4ccb80,0xf9f9f980f8075200,0x1a99970040f3f300\n"
".quad 0xf00ea400f000f000,0x81e7e60033f3f300,0xe001e000f5332e00,0x77e7e600e01d4800\n"
".quad 0x2a665c0003cfcc00,0xc03a9000c003c000,0x079f9800ffcfcc00,0x8007800094ccb800\n"
".quad 0xef9f980080752000,0xe99970000f3f3000,0x00ea4000000f0000,0xde7e60000f3f3000\n"
".quad 0x001e00001332e000,0x1e7e600011d48000,0xe665c0007cfcc000,0xf3a90000003c0000\n"
".quad 0x39f980003cfcc000,0x007800000ccb8000,0x79f98000f7520000,0xd9970000b3f30000\n"
".quad 0x3ea40000c0f00000,0x67e6000033f30000,0x91e00000732e0000,0x77e600006d480000\n"
".quad 0x265c0000cfcc0000,0x0a90000033c00000,0x9f980000ffcc0000,0x778000008cb80000\n"
".quad 0xef98000005200000,0xd97000003f300000,0xda4000003f000000,0xbe6000000f300000\n"
".quad 0x7e00000062e00000,0xde600000b4800000,0xd5c00000bcc00000,0x69000000fc000000\n"
".quad 0xb98000007cc00000,0xf80000007b800000,0x39800000d2000000,0xe700000073000000\n"
".quad 0xa4000000f0000000,0xf600000073000000,0xe00000001e000000,0xf600000088000000\n"
".quad 0x0014171b00051436,0x140303f3051122dd,0x0009186f54330fc6,0x0911769800181e03\n"
".quad 0x98660e8f180602e6,0x00141b28001414eb,0x140f033f1400fccf,0x002b19d554ff03db\n"
".quad 0x2b32cabc00180665,0x59fe16b5d81e037e,0x00003cfc005503a9,0x403c00fc5556a669\n"
".quad 0x00aa075243fc0f69,0xaaad4cd2000079f8,0x47f81ed2407801f8,0x0000f3f301540ea4\n"
".quad 0x40f000f0555a9997,0x02a81d484ff00ea4,0x6ab5332e0001e7e6,0x9fe01d4881e001e0\n"
".quad 0x0003cfcc05503a90,0x03c003c0156a665c,0x0aa075203fc03a90,0xead4ccb800079f98\n"
".quad 0x7f80752007800780,0x000f3f301540ea40,0x0f000f0015a99970,0x2a81d480ff00ea40\n"
".quad 0xeb5332e0c01e7e60,0xfe01d4801e001e00,0x403cfcc05503a900,0x3c003c0016a665c0\n"
".quad 0xaa075200fc03a900,0xed4ccb804079f980,0xf807520078007800,0x40f3f300540ea400\n"
".quad 0xf000f0001a999700,0x681d4800f00ea400,0xf5332e0081e7e600,0xe01d4800e001e000\n"
".quad 0x03cfcc00103a9000,0xc003c0002a665c00,0xe0752000c03a9000,0x94ccb800079f9800\n"
".quad 0x8075200080078000,0x0f3f300000ea4000,0x000f0000e9997000,0xc1d4800000ea4000\n"
".quad 0x1332e000de7e6000,0x11d48000001e0000,0x7cfcc00043a90000,0x003c0000e665c000\n"
".quad 0x47520000f3a90000,0x0ccb800039f98000,0xf752000000780000,0xb3f300004ea40000\n"
".quad 0xc0f00000d9970000,0x9d4800003ea40000,0x732e000067e60000,0x6d48000091e00000\n"
".quad 0xcfcc00003a900000,0x33c00000265c0000,0x752000000a900000,0x8cb800009f980000\n"
".quad 0x0520000077800000,0x3f300000ea400000,0x3f000000d9700000,0xd4800000da400000\n"
".quad 0x62e00000be600000,0xb48000007e000000,0xbcc00000a9000000,0xfc000000d5c00000\n"
".quad 0x5200000069000000,0x7b800000b9800000,0xd2000000f8000000,0x73000000a4000000\n"
".quad 0xf0000000e7000000,0x88000000a4000000,0x1e000000f6000000,0x88000000e0000000\n"
".quad 0x0005143600001403,0x051122dd0014171b,0x00001806140303f3,0x00181e030009186f\n"
".quad 0x180602e609117698,0x001414eb0000140f,0x1400fccf00141b28,0x0000181e140f033f\n"
".quad 0x00180665002b19d5,0xd81e037e2b32cabc,0x005503a90000003c,0x5556a66900003cfc\n"
".quad 0x00000078403c00fc,0x000079f800aa0752,0x407801f8aaad4cd2,0x01540ea4000000f0\n"
".quad 0x555a99970000f3f3,0x000001e040f000f0,0x0001e7e602a81d48,0x81e001e06ab5332e\n"
".quad 0x05503a90000003c0,0x156a665c0003cfcc,0x0000078003c003c0,0x00079f980aa07520\n"
".quad 0x07800780ead4ccb8,0x1540ea4000000f00,0x15a99970000f3f30,0x00001e000f000f00\n"
".quad 0xc01e7e602a81d480,0x1e001e00eb5332e0,0x5503a90000003c00,0x16a665c0403cfcc0\n"
".quad 0x000078003c003c00,0x4079f980aa075200,0x78007800ed4ccb80,0x540ea4000000f000\n"
".quad 0x1a99970040f3f300,0x0001e000f000f000,0x81e7e600681d4800,0xe001e000f5332e00\n"
".quad 0x103a90000003c000,0x2a665c0003cfcc00,0x00078000c003c000,0x079f9800e0752000\n"
".quad 0x8007800094ccb800,0x00ea4000000f0000,0xe99970000f3f3000,0xc01e0000000f0000\n"
".quad 0xde7e6000c1d48000,0x001e00001332e000,0x43a90000403c0000,0xe665c0007cfcc000\n"
".quad 0x40780000003c0000,0x39f9800047520000,0x007800000ccb8000,0x4ea4000040f00000\n"
".quad 0xd9970000b3f30000,0x81e00000c0f00000,0x67e600009d480000,0x91e00000732e0000\n"
".quad 0x3a90000003c00000,0x265c0000cfcc0000,0x0780000033c00000,0x9f98000075200000\n"
".quad 0x778000008cb80000,0xea4000000f000000,0xd97000003f300000,0x1e0000003f000000\n"
".quad 0xbe600000d4800000,0x7e00000062e00000,0xa90000003c000000,0xd5c00000bcc00000\n"
".quad 0x78000000fc000000,0xb980000052000000,0xf80000007b800000,0xa4000000f0000000\n"
".quad 0xe700000073000000,0xe0000000f0000000,0xf600000088000000,0xe00000001e000000\n"
".quad 0xcc1114420c010051,0xdd5506060d040158,0x180203a20c500c32,0x1a0b01b398221b84\n"
".quad 0x1ba01870ba993f3a,0x0044150b00040144,0x45105f6c04100550,0x0008018801400004\n"
".quad 0x082309a300881916,0x0180001c8a138dee,0xc110012cc0100010,0xd41428e9d0451045\n"
".quad 0x80200020c000001c,0xa08a208a82200258,0x80000038a82851d2,0x044004b000400040\n"
".quad 0x5050a3a741144114,0x0080008000000040,0x8228822808800960,0xc0000080a0a1474e\n"
".quad 0x110012c001000100,0x41428e9c04510450,0x0200020050000100,0x08a208a022002580\n"
".quad 0xa000020082851d38,0x44004b0004000400,0x050a3a7011441140,0x0800080040000400\n"
".quad 0x2288228088009600,0x800008000a1474e0,0x10012c0010001000,0x0428e9c045104500\n"
".quad 0x2000200000001000,0x8a208a0020025800,0x00002000c851d380,0x4004b00040004000\n"
".quad 0x50a3a70014411400,0x8000800000004000,0xe882280080096000,0x0000800061474e00\n"
".quad 0x0012c00000010000,0x128e9c0001045000,0x0002000000010000,0x0208a00000258000\n"
".quad 0x00020000251d3800,0x004b000000040000,0x4a3a700004114000,0x0008000000040000\n"
".quad 0x0822800000960000,0x000800009474e000,0x112c000000100000,0x38e9c00010450000\n"
".quad 0x00200000c0100000,0x208a0000e2580000,0x80200000b1d38000,0x04b0000000400000\n"
".quad 0xa3a7000041140000,0xc080000000400000,0x42280000c9600000,0x00800000874e0000\n"
".quad 0x42c0000051000000,0x1e9c000054500000,0xa200000001000000,0xa8a0000085800000\n"
".quad 0x020000003d380000,0x0b00000044000000,0x7a70000051400000,0x88000000c4000000\n"
".quad 0xa280000016000000,0x88000000f4e00000,0x2c00000010000000,0x39c0000085000000\n"
".quad 0x20000000ec000000,0x0a00000058000000,0xc8000000b3800000,0xb000000040000000\n"
".quad 0x6700000014000000,0x8000000080000000,0xe800000060000000,0x000000001e000000\n"
".quad 0x542ba8cc739f9608,0x68c114f409e81723,0x8bcff658ad34fbc5,0x0f1b697fa99d4849\n"
".quad 0x121b54d89eaa8099,0x01d93d0cf2e89fb0,0xdfa7021d0e935e32,0x0d1265d53b297eb3\n"
".quad 0x0cda6b9d0eb31f9c,0x7834e252f5ded233,0x11b6717cc0e9f815,0x6f4fda58c44fd71f\n"
".quad 0x96e61f2a0c8acde8,0x672741681dc92de9,0xc9f98eb00b478690,0x5198b07c910a1a56\n"
".quad 0xa88d5bffbace85d0,0xf8ac557fe7cab9e1,0x9e0ea93bc96cf3ec,0x2569d4e8502c4f03\n"
".quad 0x72e17a000b4a612d,0xb2924ba1eead5530,0x980ee790702d49ea,0x4d79435a5df5e510\n"
".quad 0x806fda9c8039545b,0xd3f1f600ffd4db94,0xbcf1079d38441930,0xcf4f82e29cdb9343\n"
".quad 0xdd7ecb5a4ca01110,0xe91ebfcea5bee023,0x6739abfcf8e37822,0x37de67d84c05149f\n"
".quad 0x44470c78e29f5c9e,0x6672d5683c22abe9,0x50d6430a267d3281,0x66a5ff3031588ce0\n"
".quad 0x2cfac09a85ae0e9d,0x0edec7d22e04dc68,0x7c682c619b74ce21,0xc4399ccabecae5a0\n"
".quad 0x1c76bc03322740a7,0x2a0abf246ffd7995,0xbe6e8172eea60eb2,0x154ff37c9bf47817\n"
".quad 0xb02c1b5291cc7f79,0x25fef00395c935ff,0x4ff2cf244811e5a7,0x925498f1247c0980\n"
".quad 0xef9fcb096841e012,0x1dc45127ab4c9a7c,0x492bc03c6d87c3fc,0x09e433002a9796a9\n"
".quad 0x1d26bbf81a5cd055,0x02832d520ceb8078,0xa780e5aa19716600,0xd17f00fcf5194ae1\n"
".quad 0x3a8ff3fcf47e5a5b,0xff785af11dd97d5b,0x6ec9b4a70bce01fd,0xd3733ea7adaaa7fd\n"
".quad 0xaf7c03ffed576ad1,0xcbfccfff884a695f,0x78c7e9a249db855f,0xb481c2bec2e807fe\n"
".quad 0x4153cfbea181cafe,0xb7fc0fff118eff44,0x45673fffc626554f,0x20680288ffb6954f\n"
".quad 0x31d9ff9eeeed1ffe,0x8cc9ff9e6fd7fffe,0xc003fffcd548e910,0xca637ffc9f36963c\n"
".quad 0x7f04ee20784e163c,0x299579788117eff8,0xc540e9784fa27ff8,0xcc0f33f0fde4f040\n"
".quad 0x616043f090079bf0,0x02801c806128ebf0,0xabfee2e0cc0e22e0,0x286002e0eb10c2e0\n"
".quad 0x739f9608f91ad573,0x09e81723542ba8cc,0xe4c6f6f368c114f4,0xa99d48498bcff658\n"
".quad 0x9eaa80990f1b697f,0xf2e89fb00844f688,0x0e935e3201d93d0c,0x599bf259dfa7021d\n"
".quad 0x0eb31f9c0d1265d5,0xf5ded2330cda6b9d,0xc0e9f81568df8d40,0xc44fd71f11b6717c\n"
".quad 0xe857d5806f4fda58,0x1dc92de996e61f2a,0x0b47869067274168,0x910a1a569b94f6e2\n"
".quad 0xbace85d05198b07c,0xe8aa4ba1a88d5bff,0xc96cf3ecf8ac557f,0x502c4f039e0ea93b\n"
".quad 0x0b4a612d4b92130b,0xeead553072e17a00,0xcdcdcbdbb2924ba1,0x5df5e510980ee790\n"
".quad 0x8039545b4d79435a,0xffd4db9448de2f37,0x38441930d3f1f600,0xc251a3a3bcf1079d\n"
".quad 0x4ca01110cf4f82e2,0xa5bee023dd7ecb5a,0xf8e37822b528fd02,0x4c05149f6739abfc\n"
".quad 0xc0ecf5f437de67d8,0x3c22abe944470c78,0x267d32816672d568,0x31588ce050f2a5a7\n"
".quad 0x85ae0e9d66a5ff30,0x683a7e872cfac09a,0x9b74ce210edec7d2,0xbecae5a07c682c61\n"
".quad 0x322740a7299bcdc2,0x6ffd79951c76bc03,0xdc1b94742a0abf24,0x9bf47817be6e8172\n"
".quad 0x91cc7f79154ff37c,0x95c935ffa52b251a,0x4811e5a725fef003,0x01aa49f44ff2cf24\n"
".quad 0x6841e012925498f1,0xab4c9a7cef9fcb09,0x6d87c3fc63b8943c,0x2a9796a9492bc03c\n"
".quad 0x1f7dd47809e43300,0x0ceb80781d26bbf8,0x1971660002832d52,0xf5194ae1621f40e4\n"
".quad 0xf47e5a5bd17f00fc,0x7cebb1f83a8ff3fc,0x0bce01fdff785af1,0xadaaa7fd6ec9b4a7\n"
".quad 0xed576ad1108743c0,0x884a695faf7c03ff,0x46378780cbfccfff,0xc2e807fe78c7e9a2\n"
".quad 0xa181cafeb481c2be,0x118eff44852b0f00,0xc626554fb7fc0fff,0x082a220045673fff\n"
".quad 0xeeed1ffe20680288,0x6fd7fffe31d9ff9e,0xd548e910c3386800,0x9f36963cc003fffc\n"
".quad 0xeafc2c00ca637ffc,0x8117eff87f04ee20,0x4fa27ff829957978,0xfde4f040c29ca400\n"
".quad 0x90079bf0cc0f33f0,0xeb104800616043f0,0xcc0e22e002801c80,0xeb10c2e0abfee2e0\n"
".quad 0xf91ad57388b573b1,0x542ba8cc739f9608,0x2aa8ee6809e81723,0x8bcff658e4c6f6f3\n"
".quad 0x0f1b697fa99d4849,0x0844f688dfff4404,0x01d93d0cf2e89fb0,0x161800220e935e32\n"
".quad 0x0d1265d5599bf259,0x0cda6b9d0eb31f9c,0x68df8d408445badb,0x11b6717cc0e9f815\n"
".quad 0x080fa68ac44fd71f,0x96e61f2ae857d580,0x672741681dc92de9,0x9b94f6e2bb4b98d1\n"
".quad 0x5198b07c910a1a56,0x1d06439fbace85d0,0xf8ac557fe8aa4ba1,0x9e0ea93bc96cf3ec\n"
".quad 0x4b92130bbd1e50a6,0x72e17a000b4a612d,0x0b6981e6eead5530,0x980ee790cdcdcbdb\n"
".quad 0x4d79435a5df5e510,0x48de2f37004350b6,0xd3f1f600ffd4db94,0xb72f91c638441930\n"
".quad 0xcf4f82e2c251a3a3,0xdd7ecb5a4ca01110,0xb528fd02b8ad478e,0x6739abfcf8e37822\n"
".quad 0x1be78c2c4c05149f,0x44470c78c0ecf5f4,0x6672d5683c22abe9,0x50f2a5a741254ef1\n"
".quad 0x66a5ff3031588ce0,0x032aaef385ae0e9d,0x0edec7d2683a7e87,0x7c682c619b74ce21\n"
".quad 0x299bcdc274d56ee6,0x1c76bc03322740a7,0x59badefc6ffd7995,0xbe6e8172dc1b9474\n"
".quad 0x154ff37c9bf47817,0xa52b251aa845bfbe,0x25fef00395c935ff,0x76b77f7c4811e5a7\n"
".quad 0x925498f101aa49f4,0xef9fcb096841e012,0x63b8943cad52fbec,0x492bc03c6d87c3fc\n"
".quad 0xd899f7d82a9796a9,0x1d26bbf81f7dd478,0x02832d520ceb8078,0x621f40e4ac0ffaa4\n"
".quad 0xd17f00fcf5194ae1,0xd1130a78f47e5a5b,0xff785af17cebb1f8,0x6ec9b4a70bce01fd\n"
".quad 0x108743c0573febc0,0xaf7c03ffed576ad1,0xf6a32b80884a695f,0x78c7e9a246378780\n"
".quad 0xb481c2bec2e807fe,0x852b0f004c1abb00,0xb7fc0fff118eff44,0xfec08a00c626554f\n"
".quad 0x20680288082a2200,0x31d9ff9eeeed1ffe,0xc3386800b189f800,0xc003fffcd548e910\n"
".quad 0x88e60c009f36963c,0x7f04ee20eafc2c00,0x299579788117eff8,0xc29ca40040c4e400\n"
".quad 0xcc0f33f0fde4f040,0x88ccc80090079bf0,0x02801c80eb104800,0xabfee2e0cc0e22e0\n"
".quad 0x88b573b1c420d8d1,0x739f9608f91ad573,0xdda78382542ba8cc,0xe4c6f6f32aa8ee68\n"
".quad 0xa99d48498bcff658,0xdfff4404c1c6d888,0xf2e89fb00844f688,0x8693509901d93d0c\n"
".quad 0x599bf25916180022,0x0eb31f9c0d1265d5,0x8445badb51f78c7e,0xc0e9f81568df8d40\n"
".quad 0xb1bad80c11b6717c,0xe857d580080fa68a,0x1dc92de996e61f2a,0xbb4b98d141c58d7a\n"
".quad 0x910a1a569b94f6e2,0x992f1aa45198b07c,0xe8aa4ba11d06439f,0xc96cf3ecf8ac557f\n"
".quad 0xbd1e50a672920415,0x0b4a612d4b92130b,0x510d170772e17a00,0xcdcdcbdb0b6981e6\n"
".quad 0x5df5e510980ee790,0x004350b6961e0415,0xffd4db9448de2f37,0x38910707d3f1f600\n"
".quad 0xc251a3a3b72f91c6,0x4ca01110cf4f82e2,0xb8ad478ef528007e,0xf8e37822b528fd02\n"
".quad 0x6ced000c6739abfc,0xc0ecf5f41be78c2c,0x3c22abe944470c78,0x41254ef160f001e3\n"
".quad 0x31588ce050f2a5a7,0x3fc0003f66a5ff30,0x683a7e87032aaef3,0x9b74ce210edec7d2\n"
".quad 0x74d56ee6bc800382,0x322740a7299bcdc2,0xd91007f41c76bc03,0xdc1b947459badefc\n"
".quad 0x9bf47817be6e8172,0xa845bfbed8000f5a,0x95c935ffa52b251a,0x01001e7425fef003\n"
".quad 0x01aa49f476b77f7c,0x6841e012925498f1,0xad52fbec8c003c3c,0x6d87c3fc63b8943c\n"
".quad 0x99c07878492bc03c,0x1f7dd478d899f7d8,0x0ceb80781d26bbf8,0xac0ffaa4d840f0e4\n"
".quad 0xf5194ae1621f40e4,0x5f7de1f8d17f00fc,0x7cebb1f8d1130a78,0x0bce01fdff785af1\n"
".quad 0x573febc09517c3c0,0xed576ad1108743c0,0xf51f4780af7c03ff,0x46378780f6a32b80\n"
".quad 0xc2e807fe78c7e9a2,0x4c1abb00c80b4f00,0x118eff44852b0f00,0x15d6a200b7fc0fff\n"
".quad 0x082a2200fec08a00,0xeeed1ffe20680288,0xb189f8003bf86800,0xd548e910c3386800\n"
".quad 0xb9102c00c003fffc,0xeafc2c0088e60c00,0x8117eff87f04ee20,0x40c4e4006fb8a400\n"
".quad 0xfde4f040c29ca400,0xb1584800cc0f33f0,0xeb10480088ccc800,0xcc0e22e002801c80\n"
".quad 0xcb4afa413b00a700,0xd363055d8afc461e,0x6f2b0fcc30820ae9,0xe23d52eac2a2ed62\n"
".quad 0xff71d9e27e57fe98,0xcdb9841dc6b64785,0x6c4caa407c97d273,0x9344d245379bdce8\n"
".quad 0xcbf1c49acac2cd0c,0x23215284fa512f36,0xc903cfee346a8590,0x907e99bca0859630\n"
".quad 0x702e612c024a951c,0x78ac5a810a3751e0,0xc3a282280ae9d122,0x6ed1126acac91b10\n"
".quad 0xa93fe918189f8ebb,0xdf154fd061488920,0x683b19f5172b09b4,0xe4181ca0d4621867\n"
".quad 0xedc3e305ac9ec600,0x52ddf4b5582482cc,0xcba3e8c07e8f4da0,0x9a125e237a94adeb\n"
".quad 0x938f04c05fad4c20,0xcd050400e5dd8400,0x597d7a6e2a349141,0x51115cc04d9dc400\n"
".quad 0x54f34a33621653de,0xb19d1d80c8d651b8,0x08f9316f33cf2110,0x2718d838416b6572\n"
".quad 0xe03a522c12de3880,0x0872d9d8ebef722e,0x6ed89e00542caf70,0xe772c5f7bec68415\n"
".quad 0xeb3465fa3b97c418,0x0b9608196fd29900,0x5e74b82881ca882b,0x9a8ed500b604ceda\n"
".quad 0xf13f1393ce1e1001,0xcd25989ad35b4048,0x6738200e0b9f1800,0x9cb2835cf87a27da\n"
".quad 0xb9f600007eb33d08,0x9dc04f1e39444001,0xb5be701a80510445,0xb59c800d28150000\n"
".quad 0x804a0875dc949ef0,0x280d00002254dc08,0x56b13d3d83a10010,0xf49dc03d37e51510\n"
".quad 0x46520020a32d8000,0x3e1a2a203d727a7a,0x878e0000792bbc7a,0xb5d4f4e57c840045\n"
".quad 0x086245e590c45145,0x68080089fd910000,0xa3b49d892a69e9f9,0x419d0000980d44f9\n"
".quad 0xcc06d3c159100111,0x3a3783c1a0c04111,0xe2e002229e280000,0x584c4222dbf1a782\n"
".quad 0x8c400000e3830782,0x891f5f0411100444,0x00ea0f04fab95444,0x1d1c0888ac800000\n"
".quad 0x4752688858ce7e08,0x8400000026e81e08,0x3bf9791000011110,0x4948e9108a708110\n"
".quad 0xcc0ee2209c000000,0xfdf8c220751ece20,0x680000001704ee20,0x3fbcb04050041440\n"
".quad 0xbde4f0407f785440,0x5004d48040000000,0x69905480e15c9c80,0x8000000082801c80\n"
".quad 0x7d8860866b914d1b,0xab1405ae5b60949e,0xe1e4d906d7a8ac8b,0xda9316fbfd1f5f62\n"
".quad 0xbbe5aa0c48415769,0xb0594b2eb13bf869,0x2ac477277c80a3d0,0xd6fdf3a48f1dbd2c\n"
".quad 0x0390e57d38c818d8,0x595fd84b4cfa85da,0x219ded837a6d7969,0x455a5113f4057d0c\n"
".quad 0x2703e1073bd56fed,0xfb674fd73fd4be92,0x6699c2211964c44b,0xe8723b4610981d75\n"
".quad 0x454806e63f619e7a,0xc1b701bfbbf74785,0x9bf330840b206d79,0x4c75bec5bb0998e2\n"
".quad 0xb4d38269591ced9a,0xbe45ce0987c9ba0b,0x9b1fbc3f2ae40426,0x152e46e9c9db286e\n"
".quad 0x81d27f65c1e207e8,0xb32b3bdd88141261,0x2fd9a0f6c7183d1a,0xdcd8b1120ef7d28c\n"
".quad 0xedc3defc4aa40180,0x7a04be77d2413b94,0xc91a172d56421217,0x0c7a4d6dac8ec411\n"
".quad 0xdd469e1b6c80740b,0x4eda29f828e06ca9,0x50ef417b308a94f6,0x9dfe324f19e4e139\n"
".quad 0x0380f7e451c07288,0xd087132e8781e11d,0x564bcf042f3daffc,0x05e94dd1d16a0384\n"
".quad 0x587647c141e396f8,0x0e76e381c650f3d4,0x54fca988d3b8d479,0x43088bd9ab2e2686\n"
".quad 0x7ef5813024376641,0xa98783205ffa3f19,0x3b453b22a3cc68a4,0xad99c2561adf0452\n"
".quad 0xecde91a4997216cc,0x26b95fcb04b0d086,0xc002f6a9ed47f9b8,0x2b77098439430c8c\n"
".quad 0xca34088b155c1f3d,0x11a34d931c2cff5d,0xb77e8479b31f9674,0x1e58c9ecc8de4cdc\n"
".quad 0x7c5cf155752ddb3f,0x4eecf6ca9281567e,0xd7b0e36d2d6f9cea,0xab4d868a0dee729b\n"
".quad 0xc8b2864101db985e,0xc1d06515a9fbcc29,0xc496635ffaebf7d6,0x5d3eb85635b7c1f1\n"
".quad 0x3c1727d28c3b25bf,0xce60c017227c53fe,0x6ab49bc993fda614,0x8b328bf3866e4cf8\n"
".quad 0xaadff96d52574375,0x1efd1feb591d018b,0x40283ae3bdd079b9,0x39d28433a082caaf\n"
".quad 0xef46201bef37beac,0x768eceb493a2e853,0x767b2f8d9d5c1ea5,0xe6244d73701d9d4b\n"
".quad 0x76703fdf1aed0e40,0xca86923275c2258f,0xf4e19a7b89ae48f2,0xc5db474af239b161\n"
".quad 0x6b914d1b9c451456,0x5b60949e7d886086,0x24739ee9ab1405ae,0xfd1f5f62e1e4d906\n"
".quad 0x48415769da9316fb,0xb13bf869ca087574,0x7c80a3d0b0594b2e,0x92af33262ac47727\n"
".quad 0x38c818d8d6fdf3a4,0x4cfa85da0390e57d,0x7a6d7969d2781dc8,0xf4057d0c219ded83\n"
".quad 0x4a15ab6d455a5113,0x3fd4be922703e107,0x1964c44bfb674fd7,0x10981d75b4dd8401\n"
".quad 0x3f619e7ae8723b46,0xfdd6d331454806e6,0x0b206d79c1b701bf,0xbb0998e29bf33084\n"
".quad 0x591ced9a2623e1ee,0x87c9ba0bb4d38269,0xf7f3319cbe45ce09,0xc9db286e9b1fbc3f\n"
".quad 0xc1e207e8152e46e9,0x881412615cbcef38,0xc7183d1ab32b3bdd,0xafc2bad42fd9a0f6\n"
".quad 0x4aa40180dcd8b112,0xd2413b94edc3defc,0x564212177da2e217,0xac8ec411c91a172d\n"
".quad 0xe0506d1c0c7a4d6d,0x28e06ca9dd469e1b,0x308a94f64eda29f8,0x19e4e13976628613\n"
".quad 0x51c072889dfe324f,0x54d424c30380f7e4,0x2f3daffcd087132e,0xd16a0384564bcf04\n"
".quad 0x41e396f812d5511f,0xc650f3d4587647c1,0xc6dacdb30e76e381,0xab2e268654fca988\n"
".quad 0x2437664143088bd9,0x5ffa3f196906c96a,0xa3cc68a4a9878320,0xe0cf9be33b453b22\n"
".quad 0x997216ccad99c256,0x04b0d086ecde91a4,0xed47f9b860f462ec,0x39430c8cc002f6a9\n"
".quad 0x16c643c92b770984,0x1c2cff5dca34088b,0xb31f967411a34d93,0xc8de4cdc1ea78d74\n"
".quad 0x752ddb3f1e58c9ec,0xecfc90b37c5cf155,0x2d6f9cea4eecf6ca,0x0dee729bd7b0e36d\n"
".quad 0x01db985e1b23ab94,0xa9fbcc29c8b28641,0xeb91a0a3c1d06515,0x35b7c1f1c496635f\n"
".quad 0x8c3b25bf5d3eb856,0x227c53fe313e874c,0x93fda614ce60c017,0x5b2664956ab49bc9\n"
".quad 0x525743758b328bf3,0x591d018baadff96d,0xbdd079b93450ec7b,0xa082caaf40283ae3\n"
".quad 0x11d7a17539d28433,0x93a2e853ef46201b,0x9d5c1ea5768eceb4,0x701d9d4be526e47f\n"
".quad 0x1aed0e40e6244d73,0xc313b32176703fdf,0x89ae48f2ca869232,0xf239b161f4e19a7b\n"
".quad 0x9c45145631ba39c0,0x7d8860866b914d1b,0x122be2b25b60949e,0xe1e4d90624739ee9\n"
".quad 0xda9316fbfd1f5f62,0xca087574a29d1f71,0xb0594b2eb13bf869,0xe8298e8e7c80a3d0\n"
".quad 0xd6fdf3a492af3326,0x0390e57d38c818d8,0xd2781dc88c06236e,0x219ded837a6d7969\n"
".quad 0xf0242485f4057d0c,0x2703e1074a15ab6d,0xfb674fd73fd4be92,0xb4dd840163264410\n"
".quad 0xe8723b4610981d75,0xa235e67d3f619e7a,0xc1b701bffdd6d331,0x9bf330840b206d79\n"
".quad 0x2623e1eefc0ef072,0xb4d38269591ced9a,0xa81fe20c87c9ba0b,0x9b1fbc3ff7f3319c\n"
".quad 0x152e46e9c9db286e,0x5cbcef386c329cfa,0xb32b3bdd88141261,0x812261e0c7183d1a\n"
".quad 0xdcd8b112afc2bad4,0xedc3defc4aa40180,0x7da2e2172cc6357a,0xc91a172d56421217\n"
".quad 0xa772b2c8ac8ec411,0xdd469e1be0506d1c,0x4eda29f828e06ca9,0x7662861337ced085\n"
".quad 0x9dfe324f19e4e139,0x4df6baff51c07288,0xd087132e54d424c3,0x564bcf042f3daffc\n"
".quad 0x12d5511fb6b58596,0x587647c141e396f8,0x3de8f335c650f3d4,0x54fca988c6dacdb3\n"
".quad 0x43088bd9ab2e2686,0x6906c96ab0376c57,0xa98783205ffa3f19,0xd6ce924da3cc68a4\n"
".quad 0xad99c256e0cf9be3,0xecde91a4997216cc,0x60f462ec64cfaf60,0xc002f6a9ed47f9b8\n"
".quad 0xb9f9985b39430c8c,0xca34088b16c643c9,0x11a34d931c2cff5d,0x1ea78d74f47ac6c7\n"
".quad 0x1e58c9ecc8de4cdc,0xb3c07d82752ddb3f,0x4eecf6caecfc90b3,0xd7b0e36d2d6f9cea\n"
".quad 0x1b23ab948ec24b85,0xc8b2864101db985e,0x01d19353a9fbcc29,0xc496635feb91a0a3\n"
".quad 0x5d3eb85635b7c1f1,0x313e874c9b58f609,0xce60c017227c53fe,0xf7ef1d4293fda614\n"
".quad 0x8b328bf35b266495,0xaadff96d52574375,0x3450ec7b6a451a85,0x40283ae3bdd079b9\n"
".quad 0x6722b8f3a082caaf,0xef46201b11d7a175,0x768eceb493a2e853,0xe526e47f54fa3c6e\n"
".quad 0xe6244d73701d9d4b,0x3500af871aed0e40,0xca869232c313b321,0xf4e19a7b89ae48f2\n"
".quad 0x31ba39c044e2efdf,0x6b914d1b9c451456,0x8e46ddec7d886086,0x24739ee9122be2b2\n"
".quad 0xfd1f5f62e1e4d906,0xa29d1f7153c96d5d,0xb13bf869ca087574,0xbdc68cd6b0594b2e\n"
".quad 0x92af3326e8298e8e,0x38c818d8d6fdf3a4,0x8c06236e5031acbb,0x7a6d7969d2781dc8\n"
".quad 0xdf755fd6219ded83,0x4a15ab6df0242485,0x3fd4be922703e107,0x632644103feaa690\n"
".quad 0x10981d75b4dd8401,0xd496cb1ce8723b46,0xfdd6d331a235e67d,0x0b206d79c1b701bf\n"
".quad 0xfc0ef072ee7e6e27,0x591ced9a2623e1ee,0xff022ce4b4d38269,0xf7f3319ca81fe20c\n"
".quad 0xc9db286e9b1fbc3f,0x6c329cfa31ff8bf1,0x881412615cbcef38,0xc94efdbab32b3bdd\n"
".quad 0xafc2bad4812261e0,0x4aa40180dcd8b112,0x2cc6357a8fe92a2f,0x564212177da2e217\n"
".quad 0x4abac899c91a172d,0xe0506d1ca772b2c8,0x28e06ca9dd469e1b,0x37ced085c1097cdb\n"
".quad 0x19e4e13976628613,0x61e35d8a9dfe324f,0x54d424c34df6baff,0x2f3daffcd087132e\n"
".quad 0xb6b585960a549ffc,0x41e396f812d5511f,0xf49afc11587647c1,0xc6dacdb33de8f335\n"
".quad 0xab2e268654fca988,0xb0376c576b276c65,0x5ffa3f196906c96a,0x81fa2de0a9878320\n"
".quad 0xe0cf9be3d6ce924d,0x997216ccad99c256,0x64cfaf604684a616,0xed47f9b860f462ec\n"
".quad 0x9daa9bf7c002f6a9,0x16c643c9b9f9985b,0x1c2cff5dca34088b,0xf47ac6c762ec633e\n"
".quad 0xc8de4cdc1ea78d74,0x1cd78c1b1e58c9ec,0xecfc90b3b3c07d82,0x2d6f9cea4eecf6ca\n"
".quad 0x8ec24b854b194820,0x01db985e1b23ab94,0x1443d78ec8b28641,0xeb91a0a301d19353\n"
".quad 0x35b7c1f1c496635f,0x9b58f609b8a68241,0x227c53fe313e874c,0x5c45369fce60c017\n"
".quad 0x5b266495f7ef1d42,0x525743758b328bf3,0x6a451a85818691ba,0xbdd079b93450ec7b\n"
".quad 0x5d987ef140283ae3,0x11d7a1756722b8f3,0x93a2e853ef46201b,0x54fa3c6e6e05f001\n"
".quad 0x701d9d4be526e47f,0x4ed25c79e6244d73,0xc313b3213500af87,0x89ae48f2ca869232\n"
".quad 0xcc73bc29d0f0e42e,0xfa7be6ab4eaa7f6d,0xad7884a8bdd3287c,0xe5be7ac3971328b7\n"
".quad 0x836e6ea02dd34a20,0x4d803e4c5067dbca,0x9636e02cadff2daa,0x9db6f062ec7755a5\n"
".quad 0x2c2f5f236a600902,0x0b937600ce83f18b,0xb363fa845861b7d8,0x2c3983cc28948d90\n"
".quad 0xb42d71f38def8029,0xec1eae0a6086b0c6,0x41925be44f59fd86,0x42e20c974e2e88db\n"
".quad 0xcb7a4de0f1c1b8f2,0x4a1075b6bbae6636,0x70039d8eae66d8af,0x4e92ac5613ed742f\n"
".quad 0x17f1547abb33e1e7,0xdbbb7a8cd6d51394,0x0bde9ee32def8161,0xe952f8e17cbc3a49\n"
".quad 0x8d9b764329c84765,0xd005f075332622dc,0x604c36a38e667113,0x30e06605b47b2711\n"
".quad 0x9e383a907c50a35c,0x0bb611749cc8d9c6,0x3d2ab79c42bcdbba,0xaf4816772b4d88f6\n"
".quad 0x8860884ed42abedb,0x37698e183df120a4,0x0b1707b33f4c8d19,0x32511d9cd2dc5958\n"
".quad 0x5c2303d3b296a888,0x85fe38e3b4a9b470,0xad325982634af82c,0xb4ad964c4ba679a0\n"
".quad 0x3aa10a10f07f4609,0x2d20babbf9a77c96,0xff2b60737d85cd61,0xe8756e1dadea1c74\n"
".quad 0x6719e97ee91d14b1,0xb70965912184381f,0xf16e569a98d72d48,0x87579d45fdd8a45d\n"
".quad 0xb24004e1838e1b51,0x886610512f8cfcc2,0x75b3f310c08ad3e5,0x1146e122c6529732\n"
".quad 0xa65b8016d48b294c,0xc7b2b71f7877815c,0x9b9279d7daf85447,0x9fe9248efdaa31eb\n"
".quad 0x534ccdde00bfb2b8,0x8523abf40e229cd8,0x7d0363c0e7008dfd,0xf4959de00a732ec5\n"
".quad 0xd72ecb42f3bd86e3,0x288a31d6b7e014fc,0x43869abd9948cb4d,0x0b8ca091063cae18\n"
".quad 0x355cc2188b5e251b,0x6b2c50f100af765b,0x95b01dda4d54f212,0x7ef4aa12bb30c2df\n"
".quad 0x9b8cddb629c393bf,0x888b81f1b00a45ef,0xee0c943b6f8a0581,0xb01962c584498ebe\n"
".quad 0x51f9e32b0dc91b7c,0x6b4325290c619dda,0x95d2a4477a94845c,0xbd2054ead325a4eb\n"
".quad 0x0cfc8cfbe9da6884,0x0b720f327ce111b0,0x70a0fccc45a0534b,0x7935dddfb3b34fed\n"
".quad 0xd7fae8b0ce8d0634,0x31f3658ed0f7d401,0x9ab194fc4fc08be5,0xbe9c9e61c8bbbb51\n"
".quad 0xd5b0108355cac48a,0xd8a688bff84d08c7,0xa542420d8ca2e616,0xe0cd79f4422c18db\n"
".quad 0x5d4287b659ecd88d,0x91cca520a702e8c8,0x6dd98be7e56d03f1,0x9c70b1f0384a8628\n"
".quad 0xdec3b826a2aa776d,0x887b9c6933306355,0xb9a733ed90bb2fcf,0xcd4461822aad7727\n"
".quad 0x1ed765d33086ad82,0xaeaadd41249fb151,0x7e38b0d6115b0672,0x1294dca5a3e13a2f\n"
".quad 0x65a6a07c15cbe7f3,0xef195e8483f32246,0x3ae9019f6dd37923,0xa52c65c0059e4736\n"
".quad 0x502871a51dafc51e,0x0fa88971b08bd9db,0x5d605b1953afdf06,0x65b7765e96587b93\n"
".quad 0x4becab4347b528d6,0xe94281d07b6a98a9,0x24eee80fc09cdb4f,0xf48f3c7ddf56a467\n"
".quad 0xc806a36d47d9fc2b,0x066cae19cca4de58,0x6f713aaea5a59681,0x35d79100984d900f\n"
".quad 0x9754f38ec31bb9d9,0x50da8f7c3a62802e,0x524cc019630fdbfa,0x3e0e940eae03669b\n"
".quad 0x1ed0e8f655488b5b,0x8d596a0454bb71d4,0xdba2f307b1f523b3,0x2f03af89e6e76dfd\n"
".quad 0x0c7a28496e8d3e45,0x329381d843c9d0df,0xf91b2b30e581c48c,0x50a810b5a4c679a5\n"
".quad 0x7ba977e1f85db98f,0x78040240c91b1ddc,0x322ea49829ce5bb0,0xa23c1b807b20b9bc\n"
".quad 0xba239c879900a688,0x36f273d44103b307,0x6d857325f396a5f8,0x9135b92e99c506ff\n"
".quad 0x3fe6be723202b31f,0xe065a6d424a0cf5e,0xdab227e459796696,0xaccb71755f738995\n"
".quad 0xc6ef3047c2ce6fd4,0xc96a6c32766ddd5a,0x7d1523eb74403839,0x46205d060312124c\n"
".quad 0x3f2a6fc7bf8876de,0x166a9c0187842e0f,0xeca69cff5908d028,0x810fe042609d5b3c\n"
".quad 0x6f1be3ee8afff4ee,0xa57f158b107ed4b2,0xb4709fadb2623577,0xcf83c243400c69f8\n"
".quad 0x27725a8794fe73e7,0x008c2b1ae171671a,0x8c6c85a78c832dea,0x1cef24f478aefab3\n"
".quad 0x3d60121c3366df89,0xe494ab025a2a5f26,0xc49331165595fc68,0x7dd9a897a8c61508\n"
".quad 0xce8d06342a65e861,0xd0f7d401d7fae8b0,0x5c97907931f3658e,0xc8bbbb519ab194fc\n"
".quad 0x55cac48abe9c9e61,0xf84d08c7be9e47fd,0x8ca2e616d8a688bf,0x31d500e0a542420d\n"
".quad 0x59ecd88de0cd79f4,0xa702e8c85d4287b6,0xe56d03f146f3a0a3,0x384a86286dd98be7\n"
".quad 0x187b7fa79c70b1f0,0x33306355dec3b826,0x90bb2fcf887b9c69,0x2aad77275bee06d8\n"
".quad 0x3086ad82cd446182,0x624e56471ed765d3,0x115b0672aeaadd41,0xa3e13a2f7e38b0d6\n"
".quad 0x15cbe7f3ebc4511b,0x83f3224665a6a07c,0xa4211a5eef195e84,0x059e47363ae9019f\n"
".quad 0x1dafc51ea52c65c0,0xb08bd9dbc5893f38,0x53afdf060fa88971,0xd600a7795d605b19\n"
".quad 0x47b528d665b7765e,0x7b6a98a94becab43,0xc09cdb4f8b83fdfd,0xdf56a46724eee80f\n"
".quad 0xa605cfeef48f3c7d,0xcca4de58c806a36d,0xa5a59681066cae19,0x984d900f5fdf0700\n"
".quad 0xc31bb9d935d79100,0x26746d839754f38e,0x630fdbfa50da8f7c,0xae03669b524cc019\n"
".quad 0x55488b5b86b84a24,0x54bb71d41ed0e8f6,0x618372908d596a04,0xe6e76dfddba2f307\n"
".quad 0x6e8d3e452f03af89,0x43c9d0df502ee6c3,0xe581c48c329381d8,0xd52e3290f91b2b30\n"
".quad 0xf85db98f50a810b5,0xc91b1ddc7ba977e1,0x29ce5bb00aef30ca,0x7b20b9bc322ea498\n"
".quad 0x7db935a3a23c1b80,0x4103b307ba239c87,0xf396a5f836f273d4,0x99c506ff83e397fa\n"
".quad 0x3202b31f9135b92e,0x03557f403fe6be72,0x59796696e065a6d4,0x5f738995dab227e4\n"
".quad 0xc2ce6fd41ec9f14b,0x766ddd5ac6ef3047,0xecd68fb9c96a6c32,0x0312124c7d1523eb\n"
".quad 0xbf8876de46205d06,0x87842e0ffd6b3541,0x5908d028166a9c01,0xbe2f9e6ceca69cff\n"
".quad 0x8afff4ee810fe042,0x107ed4b26f1be3ee,0xb2623577b255f0a5,0x400c69f8b4709fad\n"
".quad 0x536f17b6cf83c243,0xe171671a27725a87,0x8c832dea008c2b1a,0x78aefab373cbd047\n"
".quad 0x3366df891cef24f4,0xf5bb7a6e3d60121c,0x5595fc68e494ab02,0xa8c61508c4933116\n"
".quad 0x2a65e86148208c6e,0xd7fae8b0ce8d0634,0xcd3b89ded0f7d401,0x9ab194fc5c979079\n"
".quad 0xbe9c9e61c8bbbb51,0xbe9e47fd4dc8568b,0xd8a688bff84d08c7,0xd1b55aa28ca2e616\n"
".quad 0xe0cd79f431d500e0,0x5d4287b659ecd88d,0x46f3a0a3d53e5a5f,0x6dd98be7e56d03f1\n"
".quad 0x6e8a43e8384a8628,0xdec3b826187b7fa7,0x887b9c6933306355,0x5bee06d8d7ed9573\n"
".quad 0xcd4461822aad7727,0x11a79b933086ad82,0xaeaadd41624e5647,0x7e38b0d6115b0672\n"
".quad 0xebc4511b3ef56cb2,0x65a6a07c15cbe7f3,0x4b03baf783f32246,0x3ae9019fa4211a5e\n"
".quad 0xa52c65c0059e4736,0xc5893f38dabe4311,0x0fa88971b08bd9db,0x629ca89253afdf06\n"
".quad 0x65b7765ed600a779,0x4becab4347b528d6,0x8b83fdfd91eba287,0x24eee80fc09cdb4f\n"
".quad 0x56aba0cadf56a467,0xc806a36da605cfee,0x066cae19cca4de58,0x5fdf070029163dce\n"
".quad 0x35d79100984d900f,0x5f98b158c31bb9d9,0x50da8f7c26746d83,0x524cc019630fdbfa\n"
".quad 0x86b84a24a7c3fd3f,0x1ed0e8f655488b5b,0x738fd3c554bb71d4,0xdba2f30761837290\n"
".quad 0x2f03af89e6e76dfd,0x502ee6c3fca87dba,0x329381d843c9d0df,0x067c0fe3e581c48c\n"
".quad 0x50a810b5d52e3290,0x7ba977e1f85db98f,0x0aef30cae15bec45,0x322ea49829ce5bb0\n"
".quad 0xb4fee17a7b20b9bc,0xba239c877db935a3,0x36f273d44103b307,0x83e397fad09d89f6\n"
".quad 0x9135b92e99c506ff,0xd1d4598c3202b31f,0xe065a6d403557f40,0xdab227e459796696\n"
".quad 0x1ec9f14b5f6d7c9f,0xc6ef3047c2ce6fd4,0xa12f7475766ddd5a,0x7d1523ebecd68fb9\n"
".quad 0x46205d060312124c,0xfd6b3541d6b251a4,0x166a9c0187842e0f,0xae38ca105908d028\n"
".quad 0x810fe042be2f9e6c,0x6f1be3ee8afff4ee,0xb255f0a56253e98b,0xb4709fadb2623577\n"
".quad 0xa9c9243f400c69f8,0x27725a87536f17b6,0x008c2b1ae171671a,0x73cbd047131ebc03\n"
".quad 0x1cef24f478aefab3,0xd682bc223366df89,0xe494ab02f5bb7a6e,0xc49331165595fc68\n"
".quad 0x48208c6e207edb8c,0xce8d06342a65e861,0x45f60cd5d7fae8b0,0x5c979079cd3b89de\n"
".quad 0xc8bbbb519ab194fc,0x4dc8568b91b6296c,0xf84d08c7be9e47fd,0x6d7ef11ed8a688bf\n"
".quad 0x31d500e0d1b55aa2,0x59ecd88de0cd79f4,0xd53e5a5faccb8dee,0xe56d03f146f3a0a3\n"
".quad 0x6036f82f6dd98be7,0x187b7fa76e8a43e8,0x33306355dec3b826,0xd7ed95731f563cd5\n"
".quad 0x2aad77275bee06d8,0x21c10c65cd446182,0x624e564711a79b93,0x115b0672aeaadd41\n"
".quad 0x3ef56cb2767756ed,0x15cbe7f3ebc4511b,0x8a5b0c6865a6a07c,0xa4211a5e4b03baf7\n"
".quad 0x059e47363ae9019f,0xdabe4311b1fbaa4e,0xb08bd9dbc5893f38,0x240737bc0fa88971\n"
".quad 0xd600a779629ca892,0x47b528d665b7765e,0x91eba28770f1c9f5,0xc09cdb4f8b83fdfd\n"
".quad 0x0065f09924eee80f,0xa605cfee56aba0ca,0xcca4de58c806a36d,0x29163dce78bc136c\n"
".quad 0x984d900f5fdf0700,0xcc77830135d79100,0x26746d835f98b158,0x630fdbfa50da8f7c\n"
".quad 0xa7c3fd3f7db0c298,0x55488b5b86b84a24,0xb13e6f4f1ed0e8f6,0x61837290738fd3c5\n"
".quad 0xe6e76dfddba2f307,0xfca87dba881e5fa5,0x43c9d0df502ee6c3,0x02b70e08329381d8\n"
".quad 0xd52e3290067c0fe3,0xf85db98f50a810b5,0xe15bec45e11a961a,0x29ce5bb00aef30ca\n"
".quad 0xe452ead4322ea498,0x7db935a3b4fee17a,0x4103b307ba239c87,0xd09d89f6731ca059\n"
".quad 0x99c506ff83e397fa,0xc3094aa79135b92e,0x03557f40d1d4598c,0x59796696e065a6d4\n"
".quad 0x5f6d7c9f5d73b5b6,0xc2ce6fd41ec9f14b,0xe9942df8c6ef3047,0xecd68fb9a12f7475\n"
".quad 0x0312124c7d1523eb,0xd6b251a4d3adfab9,0x87842e0ffd6b3541,0x34c70a2a166a9c01\n"
".quad 0xbe2f9e6cae38ca10,0x8afff4ee810fe042,0x6253e98bbe8f3603,0xb2623577b255f0a5\n"
".quad 0x8e2d892ab4709fad,0x536f17b6a9c9243f,0xe171671a27725a87,0x131ebc0380ede989\n"
".quad 0x78aefab373cbd047,0x9fc6addd1cef24f4,0xf5bb7a6ed682bc22,0x5595fc68e494ab02\n"
".quad 0xa1348bbe94fd8b03,0x282542a499c0edce,0x430763b31d6dbbcf,0xa833884071c35fbf\n"
".quad 0xa9d746b167e5c941,0xcf5fc1de8bbcd8e2,0xb255d9c2fdf94cca,0x84e0b8ede3404c47\n"
".quad 0x69486b49930af3c9,0x7df5fb48bfb94afc,0x70d4ea1e15b7db31,0xfbc5ff5f9b80470b\n"
".quad 0x773230d9d3666e05,0x9341d17814cb5e21,0xa1841da054831b0c,0x7f6edb9fd5553050\n"
".quad 0xa9589d42f132d2f5,0x7a94ba3a17567fa1,0xe72421552bf7c222,0x68dad7772281c840\n"
".quad 0x3e6af74ac9a8bcc1,0xcdce92ab26b618f7,0x03cf96d76ad11db0,0xdfb9b5d3e900ccb1\n"
".quad 0x94727c642bc4be8a,0x59b19c19b56dd71a,0x94a395c40384496f,0x70a2747d98231f5e\n"
".quad 0xa7ebbf52dd7478e4,0x30a4ccdee4f1c276,0x2629830f81b51d66,0xb2d468e800bcdb47\n"
".quad 0x6094560ec4f0cf6f,0x505c11077dbac395,0x47fd14d0855fc371,0x808b96675d27e14d\n"
".quad 0xbc0b534152aee393,0x89d13b2525c29bf5,0x951ada5d18036f24,0xf866de90b1e278f6\n"
".quad 0xb77efacfd76d579c,0xb6b87cc839eb4e52,0x1d4b6502898af0be,0x73061d987b4d7258\n"
".quad 0x3aa657cf0aa474cc,0xfb33483aa5106446,0x018458bbb17ab7d2,0x5da5d700b74c0572\n"
".quad 0x028ccf28d2810421,0x198dacce195e291a,0x295649a21da36fcb,0x6a7a072d09eb78be\n"
".quad 0xd7387815a1a5e59b,0x18211bc47bc4bc05,0x62a8d5cbeba0d004,0xb6e18252d63d73d9\n"
".quad 0xf5018d16e0d009aa,0x8d93dd29d2af5101,0xcefcd4a2d671c4ea,0xbfd2922f507b9561\n"
".quad 0xc1e6dd59d5efb073,0xe211b906697e4f59,0x48ae2ec4072c2163,0x8e38fe63d71b46bb\n"
".quad 0x4c944587332b9948,0x86ac020e13c051d2,0xbe6bdae896321346,0x98eb53649f16d84f\n"
".quad 0x9dd23e83c95949c4,0x57493ac30fcca19a,0xf7f5ee9f497ad89c,0x27f3f7b195a60714\n"
".quad 0x762145879591c2c6,0x51c5e892f80cccad,0x25d8a5a302aaff24,0xc62c40ec46c1a965\n"
".quad 0xa6f92ca8d532fcef,0x6575108ade57d61b,0x2c310175fab3bd57,0x3d1ed019d98a7b1b\n"
".quad 0x257752b00573550a,0x864af36df28b5e16,0x46ffffa21d58ba22,0x8690739b5d4ac0d7\n"
".quad 0x241a6f5f1b2ed97a,0xb90d063f38d33270,0x9eb7898043973bd9,0x7285ffff7f40b9b2\n"
".quad 0x2312c642324a22bb,0xae4ad6236763854a,0xe5689eee1cd00bc4,0x68f5a230bc14c04c\n"
".quad 0xc37e3145f86f8bc0,0xf87743989d9f48a7,0x4c1a8180eb881331,0x6ff85db065dce03f\n"
".quad 0xb683bc7ece8b0fb8,0x5a074ddea6f9ff33,0x621c4a582ab375b5,0x46b9dbd9d2b2c9a1\n"
".quad 0x10dcedaf26dcb0ab,0xe0604cdd14fe8659,0x758740763f2c5051,0x3a32e3dd3a58e3c5\n"
".quad 0x1dbdfa7df0c68d58,0xa5dbc27d98e4b55f,0x4739c142d2e10041,0x003547190a160c00\n"
".quad 0x612afa614ea763a8,0x646f326494d73158,0xc4c68dd7a89e4290,0x9b5cf236ac70c7f3\n"
".quad 0x9ed04a3beff9fdaf,0x405a003129313676,0xf34c1f31547f6f64,0x89b5a32283017478\n"
".quad 0x393777f33ba96477,0x8777abaaa98c6a83,0xa37db8ab01dae3da,0x0373ed8142de9a0e\n"
".quad 0xb1bdd3e693203441,0x0a98bf418d5b643d,0x280ec6d4d6ca5641,0x639e98497dac6fe9\n"
".quad 0x4a172105c9e01e3f,0x4bcf04f12ffdbab0,0x6b93d92460a24ddd,0x2ccf26254ebd04e3\n"
".quad 0x31098e6f5a6ef6fb,0xd546ba78063b0ca2,0x191945a0262de40d,0xde4933e9fc573fc8\n"
".quad 0x2e15309c0bc502a4,0x68b66bcb80a0dd22,0xd4c16a7cef1bcab7,0x926610122be041bd\n"
".quad 0xd9a29c2345a1295b,0x0ffce2253fcb5c14,0xc5a8b90c20463ec1,0x317f2938d36ac908\n"
".quad 0x79d8207b2b454602,0x8e0e4013be143f32,0xd5165799c7b1c556,0x4c97be235c929b39\n"
".quad 0x2db191042caa813f,0x7f8c04df23a7bb9a,0xd8a5286e7aedcf34,0x0d4f7861b3b9443f\n"
".quad 0xe7c5b09d9c55a902,0x22ba2972b025a589,0xac062578d46a9b9e,0x1b196c1671b2d992\n"
".quad 0x254d612ac3efdfe5,0x735abca2b254970c,0x29e51ee5f0468080,0x503252e55517f254\n"
".quad 0xaa62b34b99a274e4,0x0b10fae396fd6e14,0xdf6453831ffa6b05,0x1613725706a62236\n"
".quad 0x0573550a88ba446e,0xf28b5e16257752b0,0x63a0d5fc864af36d,0x5d4ac0d746ffffa2\n"
".quad 0x1b2ed97a8690739b,0x38d33270cb512cd8,0x43973bd9b90d063f,0x773f31069eb78980\n"
".quad 0x324a22bb7285ffff,0x6763854a2312c642,0x1cd00bc4c45552ea,0xbc14c04ce5689eee\n"
".quad 0x08c12a1968f5a230,0x9d9f48a7c37e3145,0xeb881331f8774398,0x65dce03fecff561c\n"
".quad 0xce8b0fb86ff85db0,0x7728ace0b683bc7e,0x2ab375b55a074dde,0xd2b2c9a1621c4a58\n"
".quad 0x26dcb0ab93caf3c5,0x14fe865910dcedaf,0x4c0de783e0604cdd,0x3a58e3c575874076\n"
".quad 0xf0c68d583a32e3dd,0x98e4b55f11eba0e7,0xd2e10041a5dbc27d,0xba340e104739c142\n"
".quad 0x4ea763a800354719,0x94d73158612afa61,0xa89e429055b4d046,0xac70c7f3c4c68dd7\n"
".quad 0x8056ce699b5cf236,0x293136769ed04a3b,0x547f6f64405a0031,0x8301747801057e55\n"
".quad 0x3ba9647789b5a322,0x2fcfa42e393777f3,0x01dae3da8777abaa,0x42de9a0ea37db8ab\n"
".quad 0x93203441e90a6f3f,0x8d5b643db1bdd3e6,0xc5db6fad0a98bf41,0x7dac6fe9280ec6d4\n"
".quad 0xc9e01e3f639e9849,0x2ffdbab06ff25131,0x60a24ddd4bcf04f1,0xbfaf10476b93d924\n"
".quad 0x5a6ef6fb2ccf2625,0x063b0ca231098e6f,0x262de40d15915109,0xfc573fc8191945a0\n"
".quad 0x9e4e6121de4933e9,0x80a0dd222e15309c,0xef1bcab768b66bcb,0x2be041bd2300019b\n"
".quad 0x45a1295b92661012,0x9613d9ead9a29c23,0x20463ec10ffce225,0xd36ac908c5a8b90c\n"
".quad 0x2b454602796dfce9,0xbe143f3279d8207b,0x9ed8cdcb8e0e4013,0x5c929b39d5165799\n"
".quad 0x2caa813f4c97be23,0x23a7bb9a80fb7873,0x7aedcf347f8c04df,0xa630964bd8a5286e\n"
".quad 0x9c55a9020d4f7861,0xb025a589e7c5b09d,0xd46a9b9e2c2a8d3e,0x71b2d992ac062578\n"
".quad 0x909ec2831b196c16,0xb254970c254d612a,0xf0468080735abca2,0x5517f2546d251f7b\n"
".quad 0x99a274e4503252e5,0xed0e8d99aa62b34b,0x1ffa6b050b10fae3,0x06a62236df645383\n"
".quad 0x88ba446ef643055e,0x257752b00573550a,0x8f8a0da6f28b5e16,0x46ffffa263a0d5fc\n"
".quad 0x8690739b5d4ac0d7,0xcb512cd84fc15106,0xb90d063f38d33270,0x25a3e41f43973bd9\n"
".quad 0x7285ffff773f3106,0x2312c642324a22bb,0xc45552eac385b1ef,0xe5689eee1cd00bc4\n"
".quad 0x69f8e0d3bc14c04c,0xc37e314508c12a19,0xf87743989d9f48a7,0xecff561ca6130657\n"
".quad 0x6ff85db065dce03f,0xa687e4ecce8b0fb8,0x5a074dde7728ace0,0x621c4a582ab375b5\n"
".quad 0x93caf3c5b8e87bf0,0x10dcedaf26dcb0ab,0xe092943c14fe8659,0x758740764c0de783\n"
".quad 0x3a32e3dd3a58e3c5,0x11eba0e774536594,0xa5dbc27d98e4b55f,0x82582f2cd2e10041\n"
".quad 0x00354719ba340e10,0x612afa614ea763a8,0x55b4d0464019ad16,0xc4c68dd7a89e4290\n"
".quad 0x0c65b656ac70c7f3,0x9ed04a3b8056ce69,0x405a003129313676,0x01057e55b99fc370\n"
".quad 0x89b5a32283017478,0x97df86693ba96477,0x8777abaa2fcfa42e,0xa37db8ab01dae3da\n"
".quad 0xe90a6f3ff28f5f85,0xb1bdd3e693203441,0xa75bfe288d5b643d,0x280ec6d4c5db6fad\n"
".quad 0x639e98497dac6fe9,0x6ff2513100c3ca79,0x4bcf04f12ffdbab0,0x1b87d67660a24ddd\n"
".quad 0x2ccf2625bfaf1047,0x31098e6f5a6ef6fb,0x159151094e85d9e6,0x191945a0262de40d\n"
".quad 0xc9cbf6fafc573fc8,0x2e15309c9e4e6121,0x68b66bcb80a0dd22,0x2300019b57f3e635\n"
".quad 0x926610122be041bd,0x3653b36545a1295b,0x0ffce2259613d9ea,0xc5a8b90c20463ec1\n"
".quad 0x796dfce9596c6333,0x79d8207b2b454602,0x796490d0be143f32,0xd51657999ed8cdcb\n"
".quad 0x4c97be235c929b39,0x80fb7873053cc338,0x7f8c04df23a7bb9a,0x1edea3657aedcf34\n"
".quad 0x0d4f7861a630964b,0xe7c5b09d9c55a902,0x2c2a8d3eea02b61a,0xac062578d46a9b9e\n"
".quad 0x71e88e6771b2d992,0x254d612a909ec283,0x735abca2b254970c,0x6d251f7b791b9f7b\n"
".quad 0x503252e55517f254,0xd13160a999a274e4,0x0b10fae3ed0e8d99,0xdf6453831ffa6b05\n"
".quad 0xf643055e6606b128,0x0573550a88ba446e,0xc8e877ef257752b0,0x63a0d5fc8f8a0da6\n"
".quad 0x5d4ac0d746ffffa2,0x4fc15106e1ad6e68,0x38d33270cb512cd8,0xda21c8f9b90d063f\n"
".quad 0x773f310625a3e41f,0x324a22bb7285ffff,0xc385b1efc88f4032,0x1cd00bc4c45552ea\n"
".quad 0xbaa355aee5689eee,0x08c12a1969f8e0d3,0x9d9f48a7c37e3145,0xa6130657f7bd359f\n"
".quad 0x65dce03fecff561c,0x8139b0766ff85db0,0x7728ace0a687e4ec,0x2ab375b55a074dde\n"
".quad 0xb8e87bf0ca2f8c02,0x26dcb0ab93caf3c5,0x7c4fefca10dcedaf,0x4c0de783e092943c\n"
".quad 0x3a58e3c575874076,0x745365941e02e5d0,0x98e4b55f11eba0e7,0x56ede706a5dbc27d\n"
".quad 0xba340e1082582f2c,0x4ea763a800354719,0x4019ad161af7970f,0xa89e429055b4d046\n"
".quad 0x8b130c1bc4c68dd7,0x8056ce690c65b656,0x293136769ed04a3b,0xb99fc370d3ce25bc\n"
".quad 0x8301747801057e55,0xbbf97d0c89b5a322,0x2fcfa42e97df8669,0x01dae3da8777abaa\n"
".quad 0xf28f5f851bedf921,0x93203441e90a6f3f,0x562553eab1bdd3e6,0xc5db6fada75bfe28\n"
".quad 0x7dac6fe9280ec6d4,0x00c3ca7968a3fd45,0x2ffdbab06ff25131,0x9c600eb04bcf04f1\n"
".quad 0xbfaf10471b87d676,0x5a6ef6fb2ccf2625,0x4e85d9e6e9c7e64a,0x262de40d15915109\n"
".quad 0x81924fac191945a0,0x9e4e6121c9cbf6fa,0x80a0dd222e15309c,0x57f3e63540b18a86\n"
".quad 0x2be041bd2300019b,0x80af1ef692661012,0x9613d9ea3653b365,0x20463ec10ffce225\n"
".quad 0x596c63333837f513,0x2b454602796dfce9,0x93e35b5279d8207b,0x9ed8cdcb796490d0\n"
".quad 0x5c929b39d5165799,0x053cc338892a02a1,0x23a7bb9a80fb7873,0x77ad35ee7f8c04df\n"
".quad 0xa630964b1edea365,0x9c55a9020d4f7861,0xea02b61a090e1e87,0xd46a9b9e2c2a8d3e\n"
".quad 0x4fce9248ac062578,0x909ec28371e88e67,0xb254970c254d612a,0x791b9f7b9e16acf3\n"
".quad 0x5517f2546d251f7b,0x1146063d503252e5,0xed0e8d99d13160a9,0x1ffa6b050b10fae3\n"
".quad 0xed4195aca28fa548,0x716e48a496c6f8c5,0x87f8f7f8d4793a9b,0x108c0ba81fcacbba\n"
".quad 0x10daa2416c36f286,0x995ab821dab2372f,0x482c9dd90ba2d2d2,0x46c863a08ca63830\n"
".quad 0x135fa83f2846ddee,0x9866814c2a349e49,0x8dc4683729c881cc,0xa06427356f12f40f\n"
".quad 0x50da4badfc902f2e,0x1f1a2cd280cccdb4,0xbaebbacd3a13af65,0xdd393bf5a245e166\n"
".quad 0xfc59979988df63d3,0xb4af76b7474d4a13,0x4e5407701eba91ce,0x4dacbba3c0d7e0fa\n"
".quad 0x21532dd76c83a9c9,0x402403df0b2381d0,0x6ab5d3b748a58ecf,0x2dc8a9aef62e01b5\n"
".quad 0xfe118fbd438624ed,0xf3f55e7188c1ef0c,0xdec83db59879a256,0x2b2c570f845157c1\n"
".quad 0xf9ab4b6af6697252,0x5af532abd77c1687,0x9298d7f787ff081c,0x2e5d3dbbd8cd71ca\n"
".quad 0xe0d43dc80261c592,0x22436ac03b743c27,0x4b69f1fbc810eb26,0x1fdf99b3653654ad\n"
".quad 0xc27ddf2b575a3f04,0x8ba8c25b1fdc033c,0x94e353fd8d9a1614,0x83dd8e4c8dbc6335\n"
".quad 0x0a4c0b2b0f9048e4,0x84a2bab9a3249c37,0x50b30df408db8ada,0x6a054f8f1552e0b1\n"
".quad 0xf68d7e081da950e6,0xf11a65c7a927e8a2,0x5ea0a86f94229e7a,0xbdcba943f0f9d268\n"
".quad 0x369094e68ea6c380,0xc7c5104d891646d3,0x5be7c8991e31baee,0x1f590422ce8c49b1\n"
".quad 0x13c4beaf28999121,0xb27770c4d80c5116,0xd8dbdcf2c32ae83a,0x65fb31c4309e7020\n"
".quad 0x81a4c0b7a5706724,0xaf0d6473c1e015ef,0x0029c272a3b18110,0x91f4371e621c70bb\n"
".quad 0xdbee58ceac11943d,0x11ed710ec4441c9a,0x4a5aa015ba462b4f,0xef13f9dfa3b0d728\n"
".quad 0x3443a10e35e40454,0x9778b0d515d4cb62,0x6ba494e507d4a608,0x8c13fb95c9ad7a9a\n"
".quad 0xf4266b2395cbf007,0xb2570890fc14a580,0x46c627674fc839e0,0x80ee1c43acc4917d\n"
".quad 0x7a092c6f548487dd,0x442f304035c7be27,0xf1fc93e9d4b1f2c3,0x9590d5e50b867916\n"
".quad 0x81ae55e5ec8b4a9e,0x6e753e7cd4b9a7b1,0xae0258e87f333841,0x481c2f92430cd571\n"
".quad 0x3dbd95074786212b,0x334f4972bd695ae2,0xe1533995df0578b4,0x61f4be8764f445d9\n"
".quad 0xa46da9b6215a571d,0xe88dc09c269523be,0xd7ae4a186a041a7d,0xfdfc704480667feb\n"
".quad 0xc6b8d832c3d8c980,0x05722c0ebfad26f1,0x59d11020704b7b46,0xf12e78a55b101662\n"
".quad 0x8e66436af3496f02,0x198067145ddfad29,0x4b0b1ce3a1d11d27,0x9a053d81949bcb75\n"
".quad 0x8167593fbbd6479f,0x791b7dfe0a8b0807,0x4d6ccc9d4bd6fd76,0x5ad66536f39e123f\n"
".quad 0xd83b9d521290264d,0xaf1f60c9709f5b0a,0xa453cf40a538754f,0x0fb4e9d7ffaa44a9\n"
".quad 0xd1fb39fd34e1b474,0x31cada33877efc8d,0x0c32a44aacb06cb7,0x261d8aa269da442f\n"
".quad 0xb4c7072faa3f9f7e,0x75f6674fa99ae762,0x6fd61fcc0c170067,0xfcc143645583d631\n"
".quad 0xf9a94b3c32987b14,0x343cfff237519c52,0xc0dcb21ecd6e9508,0x94092bbaefb1ff9b\n"
".quad 0x17d7793ebc196902,0xe6d2ce5c61e71920,0xd6f2ae9a5e0db4c6,0x26eef5e6245a8e5e\n"
".quad 0x950eb0ddf1489ab0,0xdcfdea384310b2d1,0x6fcbac9b6c6dccb6,0x13902a27e66c3505\n"
".quad 0x799c35976515372a,0x976d0781c9be2fa9,0x1f53901e1177978d,0x52fb47059e4a681b\n"
".quad 0x73823fcfc8e4e729,0x0ec7387684e58c9a,0x15ce4aa19711fe0d,0x926bb5cd91ff59f9\n"
".quad 0x4a54c52d061308a8,0x936b58265ad5c215,0xb46746691c3c3ca0,0x13503b697b7fbc4c\n"
".quad 0xe6b7b8bd19377374,0xd8845d11ed1233f2,0x5e76a3441506a8d9,0x45220616bd23ee8a\n"
".quad 0x686b463e59844a39,0x74b4e75924caf62e,0xc0a693f1f04e5b9e,0x8de88064b8066bf3\n"
".quad 0x5bf7ba53472c554d,0x669e3ca9f827af5c,0xace24bde63b4c735,0x65a70350017d10bc\n"
".quad 0xb3debed92a895209,0xd1e4d1d67c9dc840,0x7420a11e02365d27,0xcf3164d5b6246d31\n"
".quad 0x1f7719b7ee1368ac,0x401b31b7ff73abaa,0x176bd7a29aa0b5af,0xd18e16c20a317226\n"
".quad 0xd0ba08fecb878fee,0x9eac7cd75901b399,0x055f59b779343660,0xc40e3b3615a3d5d7\n"
".quad 0x4786212b9344b1d7,0xbd695ae23dbd9507,0x6ac1fbde334f4972,0x64f445d9e1533995\n"
".quad 0x215a571d61f4be87,0x269523bed0d069be,0x6a041a7de88dc09c,0xfffa4f7bd7ae4a18\n"
".quad 0xc3d8c980fdfc7044,0xbfad26f1c6b8d832,0x704b7b460caac5db,0x5b10166259d11020\n"
".quad 0x8ef89470f12e78a5,0x5ddfad298e66436a,0xa1d11d2719806714,0x949bcb75a393ab60\n"
".quad 0xbbd6479f9a053d81,0xa61f0fb98167593f,0x4bd6fd76791b7dfe,0xf39e123f4d6ccc9d\n"
".quad 0x1290264d8ba6a0c2,0x709f5b0ad83b9d52,0x78cc52f9af1f60c9,0xffaa44a9a453cf40\n"
".quad 0x34e1b4740fb4e9d7,0x877efc8d7d01e503,0xacb06cb731cada33,0xfc548e630c32a44a\n"
".quad 0xaa3f9f7e261d8aa2,0xa99ae762b4c7072f,0x0c17006701af37ea,0x5583d6316fd61fcc\n"
".quad 0x925e8ec2fcc14364,0x37519c52f9a94b3c,0xcd6e9508343cfff2,0xefb1ff9b07022777\n"
".quad 0xbc19690294092bba,0xfd906e5f17d7793e,0x5e0db4c6e6d2ce5c,0x245a8e5ed6f2ae9a\n"
".quad 0xf1489ab0ee9d30c8,0x4310b2d1950eb0dd,0x36f4eaa3dcfdea38,0xe66c35056fcbac9b\n"
".quad 0x6515372a13902a27,0xc9be2fa9254c8a29,0x1177978d976d0781,0x9a8b10fa1f53901e\n"
".quad 0xc8e4e72952fb4705,0x84e58c9a73823fcf,0x9711fe0dbe322a16,0x91ff59f915ce4aa1\n"
".quad 0xe139eaf9926bb5cd,0x5ad5c2154a54c52d,0x1c3c3ca0936b5826,0x7b7fbc4c2af7ff91\n"
".quad 0x1937737413503b69,0xd2bbffefe6b7b8bd,0x1506a8d9d8845d11,0xbd23ee8a5e76a344\n"
".quad 0x59844a399de9ca5b,0x24caf62e686b463e,0x2e6e123774b4e759,0xb8066bf3c0a693f1\n"
".quad 0x472c554d8de88064,0xf827af5ce7477d32,0x63b4c735669e3ca9,0x29e5f6c2ace24bde\n"
".quad 0x2a89520965a70350,0x7c9dc840b3debed9,0x02365d2758165586,0xb6246d317420a11e\n"
".quad 0x1baab9dccf3164d5,0xff73abaa1f7719b7,0x9aa0b5af401b31b7,0x0a317226ab38dace\n"
".quad 0xcb878feed18e16c2,0x613f8df3d0ba08fe,0x793436609eac7cd7,0x15a3d5d7055f59b7\n"
".quad 0x9344b1d7f52745ea,0x3dbd95074786212b,0xf77c0087bd695ae2,0xe15339956ac1fbde\n"
".quad 0x61f4be8764f445d9,0xd0d069be091ee8bc,0xe88dc09c269523be,0x0d39ba2b6a041a7d\n"
".quad 0xfdfc7044fffa4f7b,0xc6b8d832c3d8c980,0x0caac5dbc722604e,0x59d11020704b7b46\n"
".quad 0x19a407145b101662,0x8e66436a8ef89470,0x198067145ddfad29,0xa393ab60645a4e95\n"
".quad 0x9a053d81949bcb75,0x2cdd5bd8bbd6479f,0x791b7dfea61f0fb9,0x4d6ccc9d4bd6fd76\n"
".quad 0x8ba6a0c25b16cbd4,0xd83b9d521290264d,0x9992336b709f5b0a,0xa453cf4078cc52f9\n"
".quad 0x0fb4e9d7ffaa44a9,0x7d01e503e1300136,0x31cada33877efc8d,0x3f2f5876acb06cb7\n"
".quad 0x261d8aa2fc548e63,0xb4c7072faa3f9f7e,0x01af37ea8c2224fc,0x6fd61fcc0c170067\n"
".quad 0xb86f5a385583d631,0xf9a94b3c925e8ec2,0x343cfff237519c52,0x07022777e1a0666f\n"
".quad 0x94092bbaefb1ff9b,0x6f549f1abc196902,0xe6d2ce5cfd906e5f,0xd6f2ae9a5e0db4c6\n"
".quad 0xee9d30c8b7b1bc46,0x950eb0ddf1489ab0,0x375744234310b2d1,0x6fcbac9b36f4eaa3\n"
".quad 0x13902a27e66c3505,0x254c8a290a5c2254,0x976d0781c9be2fa9,0x9da9aed61177978d\n"
".quad 0x52fb47059a8b10fa,0x73823fcfc8e4e729,0xbe322a1609b3d8b0,0x15ce4aa19711fe0d\n"
".quad 0xb9184e2891ff59f9,0x4a54c52de139eaf9,0x936b58265ad5c215,0x2af7ff912fbddcac\n"
".quad 0x13503b697b7fbc4c,0x032246c819377374,0xd8845d11d2bbffef,0x5e76a3441506a8d9\n"
".quad 0x9de9ca5bc50c275b,0x686b463e59844a39,0x0fc9c17924caf62e,0xc0a693f12e6e1237\n"
".quad 0x8de88064b8066bf3,0xe7477d3243384474,0x669e3ca9f827af5c,0x8d2ca15363b4c735\n"
".quad 0x65a7035029e5f6c2,0xb3debed92a895209,0x581655860bc10b70,0x7420a11e02365d27\n"
".quad 0x5eaca24ab6246d31,0x1f7719b71baab9dc,0x401b31b7ff73abaa,0xab38dace7e9a46ea\n"
".quad 0xd18e16c20a317226,0x30ca68c0cb878fee,0x9eac7cd7613f8df3,0x055f59b779343660\n"
".quad 0xf52745ea38c93b96,0x4786212b9344b1d7,0x34fcb1c83dbd9507,0x6ac1fbdef77c0087\n"
".quad 0x64f445d9e1533995,0x091ee8bccb0f6be6,0x269523bed0d069be,0xdfb606d8e88dc09c\n"
".quad 0xfffa4f7b0d39ba2b,0xc3d8c980fdfc7044,0xc722604e6ef33032,0x704b7b460caac5db\n"
".quad 0xa0b0c61c59d11020,0x8ef8947019a40714,0x5ddfad298e66436a,0x645a4e95aa007e62\n"
".quad 0x949bcb75a393ab60,0x745a28619a053d81,0xa61f0fb92cdd5bd8,0x4bd6fd76791b7dfe\n"
".quad 0x5b16cbd4d26f3e8a,0x1290264d8ba6a0c2,0xcb47b11dd83b9d52,0x78cc52f99992336b\n"
".quad 0xffaa44a9a453cf40,0xe1300136aa3d96da,0x877efc8d7d01e503,0xba66847331cada33\n"
".quad 0xfc548e633f2f5876,0xaa3f9f7e261d8aa2,0x8c2224fc9be98f23,0x0c17006701af37ea\n"
".quad 0x24e9e4aa6fd61fcc,0x925e8ec2b86f5a38,0x37519c52f9a94b3c,0xe1a0666fe067b95f\n"
".quad 0xefb1ff9b07022777,0xe01a97ef94092bba,0xfd906e5f6f549f1a,0x5e0db4c6e6d2ce5c\n"
".quad 0xb7b1bc46648f376f,0xf1489ab0ee9d30c8,0xa7225172950eb0dd,0x36f4eaa337574423\n"
".quad 0xe66c35056fcbac9b,0x0a5c22548c9e2cc5,0xc9be2fa9254c8a29,0xda79e1bd976d0781\n"
".quad 0x9a8b10fa9da9aed6,0xc8e4e72952fb4705,0x09b3d8b05fa5ec35,0x9711fe0dbe322a16\n"
".quad 0xe518742b15ce4aa1,0xe139eaf9b9184e28,0x5ad5c2154a54c52d,0x2fbddcac117c8863\n"
".quad 0x7b7fbc4c2af7ff91,0xc73864c913503b69,0xd2bbffef032246c8,0x1506a8d9d8845d11\n"
".quad 0xc50c275b52a5c115,0x59844a399de9ca5b,0xbc603cb1686b463e,0x2e6e12370fc9c179\n"
".quad 0xb8066bf3c0a693f1,0x43384474e360d950,0xf827af5ce7477d32,0xd901c9aa669e3ca9\n"
".quad 0x29e5f6c28d2ca153,0x2a89520965a70350,0x0bc10b706662f6fb,0x02365d2758165586\n"
".quad 0x356b2adc7420a11e,0x1baab9dc5eaca24a,0xff73abaa1f7719b7,0x7e9a46eacd1fbc05\n"
".quad 0x0a317226ab38dace,0x841ff90ed18e16c2,0x613f8df330ca68c0,0x793436609eac7cd7\n"
".quad 0x139c328a16052ec0,0xfb47dd3e599b87a5,0x2bb8bbc7c29272ce,0x6ad4ced7aef56868\n"
".quad 0x17687a992442a58a,0xcf01d6ef4f4cfe1e,0x802f0c3c4b8e99ca,0x9a7cab859ed7505f\n"
".quad 0xaf6f9aa0186c9670,0xbc7c64a0df4c0b63,0xbf20f0c53d5027dc,0x7e538edb3198eb4c\n"
".quad 0xb1b1626720161677,0x24579083335da638,0x71885313d279e686,0x8d91a7994b424317\n"
".quad 0x386d7fdd1b71fc48,0x5da63b2de05887c7,0x8fd9deb8ba3ab6fb,0xc13a002c9ecc1f87\n"
".quad 0x499a7bc7ec83e72b,0x2e0ee3ea4361a04c,0x225c02430ebc052d,0x78d6e2750eae31af\n"
".quad 0xe33dd31b2d97f6ff,0xf2ba15446cd39aec,0x4cae336f808f28f5,0x93c6a5b7753a3587\n"
".quad 0xb70ace86193e339b,0x8726219c26ed6255,0x51ed105f7776a266,0x3222c08ae6c9e364\n"
".quad 0xe7b582f14b1eeca1,0x2d8d4673efeae0b1,0xb32a726c6af9eaa4,0x93053c8734541972\n"
".quad 0xbeeafa65b120fe99,0x309e125ffa4006ba,0x6db322b0911ba56b,0x010493d087d6c96b\n"
".quad 0x3b06d7c7bd723d1a,0x752b2c4cd5441404,0x2cb686ea61c5cadd,0xd52a22157a08fcfa\n"
".quad 0x671f9c45207ad3f4,0xc385a47147369caa,0xab1b034408c8238b,0x419f20db7bca6168\n"
".quad 0x17f5858493fc18c1,0x0b8e329e600094e7,0x59f37f85e2fbddb2,0xe5a67c214ef20880\n"
".quad 0xf19c2b623f21cbe9,0xc3a41b4298759acc,0xff3898a528aee32a,0xc111a5ae082d141e\n"
".quad 0x196f4d85869faae6,0x081ad9a7d0c65d81,0xed7e019919a03393,0x820ef7fe3975e17c\n"
".quad 0x1eb2afb5e4ad4e02,0x4d9649c515665eb7,0x8cf1c585891d8b53,0x0a331291e2c9cfa6\n"
".quad 0xff512a8b9dc2bea2,0x6833d3e4d84039d3,0xb2d6ac48b50718f2,0xd6828efd015f1052\n"
".quad 0x06b01f0af7fc74c2,0x2bcd676b63ff4b93,0xced8d659a8ba20a2,0x9d0f88afc519dd29\n"
".quad 0xd25836929f39d588,0xb99fbe04e7331c4e,0xbd421e6fa23507d8,0x9e0c8f6253133367\n"
".quad 0x4bae1346e096c988,0xf87f3395419f6160,0x4caaa25b7c60ca9b,0xb339537f2d952fa8\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000300000001,0x0000000000000000,0x0000000000000000,0x0000000000000040\n"
".quad 0x00000000000002b3,0x0000000000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000030000000b,0x0000000000000000,0x0000000000000000,0x00000000000002f3\n"
".quad 0x000000000000054a,0x0000000000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000200000013,0x0000000000000000,0x0000000000000000,0x0000000000000840\n"
".quad 0x0000000000000288,0x0000001a00000002,0x0000000000000008,0x0000000000000018\n"
".quad 0x7000000000000118,0x0000000000000000,0x0000000000000000,0x0000000000000ac8\n"
".quad 0x0000000000000060,0x0000000000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x7000000000000193,0x0000000000000000,0x0000000000000000,0x0000000000000b28\n"
".quad 0x0000000000000050,0x0000000f00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x7000000000000056,0x0000000000000000,0x0000000000000000,0x0000000000000b78\n"
".quad 0x0000000000000040,0x0000000e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000900000290,0x0000000000000000,0x0000000000000000,0x0000000000000bb8\n"
".quad 0x0000000000000090,0x0000000c00000003,0x0000000000000008,0x0000000000000010\n"
".quad 0x0000000100000231,0x0000000000000002,0x0000000000000000,0x0000000000000c48\n"
".quad 0x0000000000000038,0x0000000f00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000268,0x0000000000000002,0x0000000000000000,0x0000000000000c80\n"
".quad 0x0000000000002048,0x0000000000000000,0x0000000000000008,0x0000000000000000\n"
".quad 0x00000001000000d4,0x0000000000000002,0x0000000000000000,0x0000000000002cc8\n"
".quad 0x000000000000001c,0x0000000e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000001f9,0x0000000000000002,0x0000000000000000,0x0000000000002ce4\n"
".quad 0x0000000000000008,0x0000000f00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000281,0x0000000000000002,0x0000000000000000,0x0000000000002cec\n"
".quad 0x0000000000000048,0x0000000000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000121,0x0000000000000002,0x0000000000000000,0x0000000000002d34\n"
".quad 0x000000000000002c,0x0000000e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000001b,0x0000000000100006,0x0000000000000000,0x0000000000002d60\n"
".quad 0x0000000000000aa0,0x1000000100000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000164,0x0000000000000006,0x0000000000000000,0x0000000000003800\n"
".quad 0x0000000000005eb8,0x1000000800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000002a3,0x0000000000000003,0x0000000000000000,0x00000000000096b8\n"
".quad 0x0000000000012f80,0x0000000000000000,0x0000000000000008,0x0000000000000000\n"
".quad 0x0000000800000276,0x0000000000000003,0x0000000000000000,0x000000000001c638\n"
".quad 0x0000000000001000,0x0000000000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000800000094,0x0000000000000003,0x0000000000000000,0x000000000001c638\n"
".quad 0x0000000000000800,0x0000000e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000500000006,0x000000000001caf8,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000000a8,0x00000000000000a8,0x0000000000000008,0x0000000500000001\n"
".quad 0x0000000000000c48,0x0000000000000000,0x0000000000000000,0x0000000000008a70\n"
".quad 0x0000000000008a70,0x0000000000000008,0x0000000600000001,0x00000000000096b8\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000012f80,0x0000000000013f80\n"
".quad 0x0000000000000008,0x0000007801010001,0x00000000000142c0,0x0000004000000000\n"
".quad 0x0000001400030001,0x0000001400000060,0x0000000000001015,0x0000000000000000\n"
".quad 0x000000000006d783,0x0000001200000048,0x6765727278616d2d,0x36313d746e756f63\n"
".quad 0x0000000001002020,0x72614365746e6f4d,0x656e72656b5f6f6c,0x0000000075632e6c\n"
".quad 0x3726af5bbdec9c78,0xb98515feed77a6b2,0xc1899933264896ce,0xfb1bec0d5f018d5c\n"
".quad 0x96f75756a8436366,0x81e3def61d0496ad,0x52bf3221ef8bbbff,0x28c0f6c2b5ad52ad\n"
".quad 0xc93265f90eb554a1,0xd3fa7f8324113c38,0x2ff3f77d7fabeffc,0xfaabf59bc3f8fddf\n"
".quad 0xdfdff3fb7d7eafa7,0xcad37c7f97e6fafd,0xfcfebfd7fb7abe9f,0xffbbe5f9be5f97ee\n"
".quad 0x6ff8bfbfbd9bddf3,0xfe6fa87feeff7ddf,0xfff9a7e3febfd7c3,0xfffbca6fd7edffbf\n"
".quad 0xbff317c5bdbfdbc6,0xf87f1f97fcdf9f3f,0x3ff7f3fb7e7fddf5,0x7787f9fbbc7ff37e\n"
".quad 0x5fad3f4fedf57fdf,0x16fef68b741ff77d,0x97fd7dde3fe3f2ff,0xd7fede5fdb57dbaf\n"
".quad 0xe5fbbcbfebf1ffaf,0xfcbf0fdbfcfe5fbb,0x7f9fa7fafdbe1fd7,0x5f2febfb7ddfdffc\n"
".quad 0xeefafcbf6ff3faff,0xfddfcfdde9fe7faf,0xffaf87e1fe7f2ff4,0xbfc7f9fe7f6fd3fe\n"
".quad 0xc7febf6f77c3f77e,0xff6f2ff5fb7cbf77,0x7afaf97eeff7d3f1,0xfbbf5ffbedf97fe8\n"
".quad 0x6fa3f6f5ff97fe9f,0xf5fdbedfd7f77e7e,0xe2ff6fedf57e9bfd,0xf1fdc3b7efffac76\n"
".quad 0x5fb7e1b7dfd0db9b,0xfb7dbf1ffbfafe7e,0x7fb7d7f6fedfd7fd,0xffaff0ff5f2abede\n"
".quad 0xef9beefdbfaf8ffa,0xeefafedffbf6f87e,0xd6bfebf1f6f368ab,0xf2ffafede3ff5f85\n"
".quad 0xcbfb2f01fb7edfcd,0x6fedf73e0ffdb9f5,0x7c5f6eafe1fdbf3f,0x5feefafec7c1fc6c\n"
".quad 0xf6fc0f07ddf6fbbf,0xf7edeaf9bebf17fd,0x57cdfd3787fdfddf,0xf9ff9bf5fcde397f\n"
".quad 0xb7d7f6f8ffc179a7,0xfc7ff3fdb3d474ff,0xbcbfc7feff7f57d3,0xefdbf3ff0bc3fefd\n"
".quad 0xbbdbff7ededfffbf,0xa7eeba9fdce5ea7f,0xfcdfb7d16fbddf9f,0xf6ff8fdbff3f8ffb\n"
".quad 0xff7fbbf9fed7fbcd,0xff9bf3fca5edb6a7,0xed3796d2b5bfe6f4,0xf9b66f2ca3d4de5c\n"
".quad 0x635ffde3b7affbff,0x7f7d739bcbeeb57e,0x659e17f7d5df9b49,0xde2fcfb5ffde317e\n"
".quad 0xd517f7d45bcc78ff,0xd5fce757fef6a379,0x65bceb63fb1fcc7e,0x797dad5ff7f51799\n"
".quad 0x79b4795e7dc5e7d3,0x7867fef2b51ffbf9,0xfcfade1f39ef36ee,0x579f48ffbea47e6a\n"
".quad 0x9f31dcd9bb79c2e3,0xfbc773f3aefbcdb2,0x75c1e877b66df48f,0xf9ffbfbe7fef5fc3\n"
".quad 0x540faaeabe578689,0xc367516f43eeac3f,0xa1b6f8d8382f3a8e,0x49b377e73affef95\n"
".quad 0xd686e6d7f98aecfb,0xc3bcc7599b306e23,0x66cdb91d98af396c,0x7a926cc9fcca0bce\n"
".quad 0xdecbcf5f67525e60,0xbbee4be62ffbfd0f,0x6775f0d6889f395a,0xc66bb35fe61c69f7\n"
".quad 0x9707434dba2f4f6c,0x84da270d363f0ff7,0x65ae314dc74f9a91,0x66363e13764e0858\n"
".quad 0x6909c3c3cf0bcf47,0xf38e7cbce779f3e9,0xedd9d468d765c736,0xcdf8f16b2629c9e8\n"
".quad 0x00b7dfd877d5ae1e,0x7fcd6cad986e86e2,0x3c7ff3c1ddd9114d,0xe4a7eeabe6edeaad\n"
".quad 0x208bce1ca3658e6e,0xea8915a03675ad82,0x05d0dfa250e68b86,0xc366be758229fff3\n"
".quad 0x7d9af14e1e9b1c68,0xc041b2871dbe3654,0x146ab78dc251051b,0xa189c21746100a59\n"
".quad 0x3704952cf72a1019,0xdb140d0f678bdd9b,0x8520b3e6ce8e110a,0x4f127b14f7568df3\n"
".quad 0xde3ba3298ae33c87,0x2436fc6ceb446bb2,0x89b8ad85d9fff34c,0x1b0a0c65de75b778\n"
".quad 0x4e57989509821d3a,0x9fd3e4d9d5668509,0xdc38f0ed59bdd4b8,0xefb8abc40b1042aa\n"
".quad 0xacbeb76ff670b5bb,0x7e0eed39766aa59b,0xaf6be43fb8d3245e,0xd57daf1cf8bc3fd2\n"
".quad 0xc347f1218b9a34b8,0x3e89435d9ce7c6f7,0xc57e8b328e7ba719,0x66abcd5bcd84a647\n"
".quad 0x9cdfcd10c64d4ff7,0xbb010c178e6d4655,0x1e185690ac899562,0x529b162d4cf44598\n"
".quad 0x4a72b8acf78d0625,0x714de593d8711ce0,0x8ae871d9d7a7ce3f,0x8adbd2edaf5e0579\n"
".quad 0x809d4d30a624400f,0x4fc451179c97cfd2,0x35f5737617761ab6,0x025a9a3a2d53a6d0\n"
".quad 0x105ef3f1a3568221,0xe1f6ce0c93476809,0xd9324327c1edbc8e,0x3ca55d81c0dd4dec\n"
".quad 0xf9cf9673d99752bd,0x160cb665f41bac05,0xe681531f215349a7,0x00249b2860b8c120\n"
".quad 0x28350d6ba64873e3,0xea02d4370205a032,0xc086250b3d087a0d,0x4d9a4c2df41474c2\n"
".quad 0x3c82457a30af8b4f,0x0c2acb57d043b55f,0xf3e23d7740771e37,0x64df6e9ecdc6fa32\n"
".quad 0xb6396c48b7b52b1a,0xce9fc1cd3d27bd2b,0x1e1b3b301e8a385e,0x3075abbfd60fd642\n"
".quad 0x79de183f3a4a187d,0x487d6312f407082b,0x94cb9d9668d2f1c8,0x294b6673b3d729e4\n"
".quad 0xdb83ad59d8dd0bfe,0x1c756a72afb59b29,0xa1aa18dc065010b2,0xcba4b8502cede0b6\n"
".quad 0x98743b36dfdece00,0x53a83a0382e5341e,0xdbc75f8568d1a556,0xfe765f3c8398514f\n"
".quad 0xde7cf29b3f843714,0xd8cd30c201fa0ccd,0x57d18bce9a87e166,0x1b0623c91a1471b3\n"
".quad 0x75685569548f0b8a,0xf986e801f4f8acba,0xcdc4811529ca1381,0xf39b28e94a38e76e\n"
".quad 0xfa486ae9b9cdbc3b,0x5395d9c2f3772cda,0xbf331d99b866c651,0x31f5563df7b0d7a3\n"
".quad 0x1fb3e2da14d1a4a0,0x3463e4d3bddb62eb,0x50f05a297a6ab9aa,0xc0b8e2d22afb7a0d\n"
".quad 0x87178b2283e7e2eb,0x3be14f11347bc66d,0xdde0a99414f30837,0x786ccf8b63367866\n"
".quad 0x73651b714092b758,0xd9857aae478ce2de,0xe88934e2f049f98a,0x7f0baa1acfc77ad5\n"
".quad 0x4f3b694de2843d01,0x6b68f8a990780e19,0x3636709085e8dc39,0x1c7db761f61ec607\n"
".quad 0xf20651b0eb4813d4,0x42e48547761d4c86,0x59e1e15603258371,0xa1242d3d35730e10\n"
".quad 0xb88f29f851272ad9,0x12d9a1c28930b88f,0x8460d3821a56c24a,0x04f47062cd91a031\n"
".quad 0x8e0c99ada93a0acc,0x32c78befe68b0106,0x76d0fd399c9bc107,0xd5b8f1ed0e0c492c\n"
".quad 0xdb5e2091e53f0434,0x1801295e0039d725,0x0e31b6fc3cbf5852,0x685e1cf06fc3cc52\n"
".quad 0x3fea1bd9525f7c36,0x563ef42c97621b84,0x3c6ee34cc59546c9,0x760e4be8dd01949d\n"
".quad 0x8b3947272bb009a3,0x2c9d1c3bb0a28db9,0x5530b6d0912746e6,0x78835908764dd429\n"
".quad 0x00a0460a353762a6,0x62c813791ba13372,0xa1532ef730a48c17,0x47323b90b25b72e0\n"
".quad 0x2405b9072c5616b8,0xd0d031b60f3ce4bb,0x81ae536b1e7cbc07,0x2138c6d634d4124d\n"
".quad 0xb6d166573339073f,0xfd1b6913b143dc6f,0x86e014d0e6ed0548,0xc36e264762ad5a1d\n"
".quad 0x92c684c7af431c61,0xd4834faecc1cdbc0,0x869fdab07a1b80d2,0x39b7867c6de1cac5\n"
".quad 0xa777161b70f37c68,0x800dede2cfaf8681,0x009a7b50f3a68873,0xa1240286a3461b28\n"
".quad 0x31f5263d08f4eaf6,0x7b85f4a616e9b609,0x1617b4cfa26d4248,0x9ba460c086da1cda\n"
".quad 0xd55b9a99b6933618,0xc099e1b70b3cfc62,0xc22486d83496e244,0xb5a36c1e4b7517ab\n"
".quad 0xde36b1a647a9dcf8,0xda6d22cf4d0d6308,0x6d024d552eab981d,0xd23c8c782f26b41a\n"
".quad 0x69265b45e63e8a6e,0x39c132e5b4ac04c3,0x56d56fa883990d9c,0x75977d9829b39339\n"
".quad 0x8b6dfa6ce24f4ba2,0xc1c68d94096774fa,0x5e1b209203e715d3,0x661650d317dac39f\n"
".quad 0xd9c4970355921eef,0xe4e0e7538f744330,0x12a63810491b4892,0x6c926b0fb5092d8e\n"
".quad 0x02bd0efc73682268,0xf4f28f89b30f35ba,0x3409f4c6c834e1e8,0xd3670673e4e6fd1e\n"
".quad 0xd5e2de19ee7aed02,0x729ce0e94e5e7da0,0x789aeba04cc3681e,0x59d3875da1b40d35\n"
".quad 0x915025f661e4befb,0xf269f03a6cc1c9cd,0xda6366124b1f1c90,0xb399359e905fb315\n"
".quad 0xc8961ddda9c40a01,0x2a8c22f5c6bac3d9,0x76031e474f9b4893,0x11fbd0db019fe314\n"
".quad 0x3af86d83489e8c88,0x76c0e774a2be06f6,0xa0e4cec36f024d93,0x85776d7ac02e56b6\n"
".quad 0x4ff92ad2ab6d81cd,0x8c33df2ee6f46d23,0x469616406d25af15,0x3c6d214dffa5e14c\n"
".quad 0x7690e7b9c9b6c617,0xddecc3c8f56610b4,0x72bb20b2b451b460,0x229f65366713a4d0\n"
".quad 0xb18331e42db75822,0xf63cbd6a760e1561,0x822317c6bec44af2,0x0b81a60d98597885\n"
".quad 0x56121b39325ceda0,0xb5052964830c15f9,0x82cb5a41f0470cb9,0x9b594ea1e46cda6d\n"
".quad 0xd0750d586586da2c,0x31c0c61786da2ca5,0x335a08206da4ce00,0x7e536b127e7cebcd\n"
".quad 0x23ed624cc198c0f1,0x6369125814d7591c,0x4fdb0803f07fd1ac,0x354f88cb96e029d3\n"
".quad 0xd05a89bfa8603e8b,0x9fad07d61b2ed3b4,0x61768521a1c64354,0x9c0887e3917de79c\n"
".quad 0xe812cc2e4b545111,0x21ede4de63823f01,0x1d684eba68cb53f9,0x1f665590f30d7a67\n"
".quad 0x91092734cfcc460c,0x6e3bccd8c66db4dc,0x9960cfd0c9e615e2,0xe60d3601ab1dfe55\n"
".quad 0x533900738df229fc,0xbad4b7c5cd86ee6b,0xd21053ad394286d5,0xe7eee6e99c874bd4\n"
".quad 0x8c4a021ec23a3b1c,0x95ab41b092a1ed26,0x023c710683c7f654,0x2ff4f031338b5798\n"
".quad 0x9429a978aadd5741,0x016f39037708b576,0xbbd880b834df335f,0x11e915be4149144b\n"
".quad 0xc9b9238d0b0cb26b,0x55aaf3f3a1bfa257,0x0292f06bcc93046a,0x1a77c63429367876\n"
".quad 0xbe098c073ce0d3a3,0xa4283662f61a0685,0x35c88fbbc47c38a0,0x469613b5b18d2332\n"
".quad 0xfa15ee160417a914,0x1fd99b8bc573af41,0xac323901d0f06513,0x20479f67dc9e88b4\n"
".quad 0x0f29ee9bd6f25fcd,0x28dd5d9d03c669bb,0x1c3cfe9a9eaefc88,0xb8c1bc7db862023b\n"
".quad 0x9071f7a5d046eefc,0xf1b1d5263cde1741,0xa371aaac12e52946,0x30dfa06e8e25c365\n"
".quad 0xa48986260854f28d,0x25114de0060eed08,0xdfec39011afcfa6c,0xaa186916e19dd6c1\n"
".quad 0x688c2b34e24258c4,0xde34be9579f48b5c,0xf43ae12c29c97e1e,0x81fbaa7171b4c65a\n"
".quad 0x0891ad0930ce846f,0x3439655ead603698,0x8c49f356202e537c,0x3615361ef059dd4d\n"
".quad 0xe3ab0559a05fbb36,0x1ca7b03ccc8c8648,0x5b90f31c3e71cff1,0x11a27bdb00c28327\n"
".quad 0x47c769d57cc9a65e,0x5c81a44f1d93048f,0xf6c5dae48fdc6cfd,0xc56b2e87991e36c5\n"
".quad 0x1a31125e3d2b2739,0x8906754ef58abd33,0x488dc5185c8b0a63,0xc213bc7ef5dde043\n"
".quad 0x319461f5eab87f42,0x73ec21f60894c806,0x17264873847bac50,0x846af75695c03d5a\n"
".quad 0x7372a5a81d3ebdaa,0x7646adb6049103dc,0x8540135c3b8c7b58,0x2aadfaa46367b4ab\n"
".quad 0x629ec91bb0636704,0x1bba89868cfa01aa,0x64be6b3db575d2f3,0xb0441f9de12edcbe\n"
".quad 0x062c61710abb5308,0xe211f7a68e887fef,0xb572361175887db1,0xc4bc099b39651555\n"
".quad 0xe53de470c877564f,0xe1c791d3b3ecad75,0x9ed90b8f6bb40848,0x143c260259f5dbf7\n"
".quad 0xf4568557c50e38f2,0x70fd9c13b07060d8,0xd8743e73794534dc,0x6decaeb6afedf15a\n"
".quad 0xf2ecb25627fd8312,0x6ec08db8d3073408,0x682d4c80d9be893c,0xcfb070348e38678e\n"
".quad 0x7efddd1629f53195,0xb7875a196d94dc47,0x2cac2e0dd21e86da,0x95f3a9bae03dd97a\n"
".quad 0x25074bd313beeda6,0x11de035645137304,0x397010c20c46f9f9,0x1aeb69990b61c5ee\n"
".quad 0x0ec3681839ee6e72,0x6d860e18b1cbb15c,0x21c79c2c8c256d07,0xeaf2e488f750ccef\n"
".quad 0xd9a77b76eee45917,0x2a78b6cce01f4429,0x6e7223d954f4b155,0x43ed69f0e4e54d43\n"
".quad 0x94ca1a03907653e7,0x5d0c761b048bf792,0xe30cdc67445efc89,0x7e9274266e9af718\n"
".quad 0x442794fb658a72e5,0xd1816eeef3290e63,0xce3d1856e61f70c1,0x4087f68485de2f99\n"
".quad 0x27d9c31cef282be1,0xb877e45635a2bb14,0x3e1d6221802f48ae,0xad54c523c665325a\n"
".quad 0x13440314a087c992,0xa11646995d093f37,0xe32ce25e46097401,0xc64b0ac9d4e3c705\n"
".quad 0xc8437cd847b0fbc0,0xafd5691c35a394e5,0x1d3bbd26d8680030,0xc0238381820be200\n"
".quad 0xf00f887b8002c415,0x470f30f3525d8796,0x894709bf669bdcb5,0xcdf3d9d5caa42d8f\n"
".quad 0x2b43ddba3dc9af1e,0x4aed018c35ae8c69,0x5ca6f742d071ae8f,0x33baec3284d261d3\n"
".quad 0x55b4dddc960d70ba,0x29989b4ee6e70641,0x874f3ef1a1bda037,0x08ab0a70939af3f1\n"
".quad 0x03de23126ca122fc,0x110e6681da717d11,0x7d93c51cd26361cc,0x1990487106445c23\n"
".quad 0xbeaae77445c29de5,0x08d2c3d2b0b56c84,0xc1a841c299348c0f,0x9994a45ae37772b0\n"
".quad 0xbb443968d3721dbf,0x02d302b231a9053b,0xd111ddb7402a329d,0xf0dea5574c81d7a9\n"
".quad 0xa067a9b21404e049,0xbfe60e4998f51be5,0x023a2671644fe33b,0x9b8e346b21d1d034\n"
".quad 0x4c7b0d757736972c,0x6a4787e5f934c119,0x10b5ffdab47a008e,0x79adb9651db3d3be\n"
".quad 0xd4c609d838c3bf66,0xcaa3276a6fea716e,0x4e34d9a9623134a6,0xd985d7d0a8c576ce\n"
".quad 0x6859a2ff9d018c22,0x9dd76fc5e98472f4,0xec2e76bdb8995e9b,0xda89aa3f252969c3\n"
".quad 0x22f8f98b18f70971,0x091d9ee1aae34c23,0xb82359c2b06e38c2,0x0bfd39fb96e02d80\n"
".quad 0x270621c35db8faa4,0x9bb6f2e9a895fa9c,0xfbac3b372055ebb3,0x5da2f2f5f0b95d26\n"
".quad 0x7708b5227c15c2ca,0xf9f576b6e720bdab,0xf711c33c298f69e9,0x958b61a302da2969\n"
".quad 0xb26cb494f6fa540a,0x633f30f3c61d7829,0x3812e6dcbecb2cf1,0x44894ae5f0345435\n"
".quad 0x53ac0c3d3f870ec3,0x9e2f4a2d2c7a0a33,0x9c4913a724b076b6,0xf40291e417eaaa1e\n"
".quad 0xcce45160bb38a2e5,0x10b5b31fd8d78344,0x114d79b31b91d3bc,0x901439320c801ee2\n"
".quad 0x1c8b691f6434a933,0xd84c264775e6cceb,0x62fe24f4e9dd0e37,0x0cb88b7a77512838\n"
".quad 0x3c689156756f85f5,0xd917aadf3af0f1df,0xcf5b2bb49b2313c3,0x62c601aae8fe6ed1\n"
".quad 0xfed54a5393664d9d,0x0571166f3188937e,0x3d936b2926dc2e1c,0xf5226df1807123de\n"
".quad 0x50483342cae5743d,0x95c4386ab864473b,0x2ce70290505bb98e,0x5afe3c4cab772ae4\n"
".quad 0x20562b055578394d,0x3d03d40c3abb8845,0x0cd653872c410355,0xc5223be9a7646da2\n"
".quad 0xcf4231841da641a0,0x9ba17911a27461ea,0x5e6d62111e890e62,0xae3ccce9c1002c44\n"
".quad 0x4da84eafb6810d31,0x894f15d1c72359c9,0xb16a81598ff48a75,0xecf81661ea581120\n"
".quad 0x0707450f73665a61,0x8430dadaa4ae09f9,0x61660ef1c736b487,0xdda672c5d13dc2f8\n"
".quad 0x2ebe2dfa2499af2f,0x6ab585289ad8a510,0x0d288df76016b58c,0x66b62a7c1f3d3a45\n"
".quad 0xa4d5f53382b7661e,0x5a7895dc8a93a7b0,0x4ae6a98b0925160a,0xe7a7214b56c3a1aa\n"
".quad 0xa7b13c90145309ad,0x697f0d6312de7ee5,0xaa1bcbba4a46b553,0xc6a8171a2ba33a8f\n"
".quad 0x5647e38a1713931e,0xfdab00d3995e5dc6,0xb3a20ea263850a46,0xea40da9c20d3e061\n"
".quad 0x5af0e70c2c8bea69,0xe1c29ebf3348d799,0xbe1849e9d0a582c6,0xc38d279e5dde7b75\n"
".quad 0x99c4338603b368a1,0x2736044b1c474e20,0xe03b655ebc4072e9,0xb3ea99c58d25d736\n"
".quad 0x7763c60529aa7252,0x38d1e75617283d25,0x1c4ca3c9844621fc,0x25ea06bc76c96e47\n"
".quad 0x0360c1215ab738f0,0xfb911c71d3e4049a,0x50eeef1e34c26ec3,0x65977c60d25a5eae\n"
".quad 0xbe3469b0139474e0,0xc68d25bd29c5cb3b,0x02d9df1b54b9f661,0x35c9e1b896b8e1a6\n"
".quad 0x9601052be446946e,0x6db8acce40892c7b,0xa6e2b1c90d3abcd1,0xdc0a47205ca01b17\n"
".quad 0xcf7fc98e3ca96b9f,0xd81c1c70f350404b,0xf271e0ce6038d7c2,0x5e94f8d1e55f15c2\n"
".quad 0x67e2c1947b26df32,0xc492c33c5ea70108,0xc89206f3089a5de2,0x67578f6b45b470e3\n"
".quad 0x274838737c40b3f2,0xfbdf3880a720c7bd,0xe20491c658b49c94,0x7122cedea68922d7\n"
".quad 0x34da187a1161054c,0xce4b16b66de66714,0x7985f09bc50f25f7,0xe7f5738a0665605f\n"
".quad 0x7bbde28792cbfb65,0xf471244b89915f95,0x0e349242f770b413,0x9f1a1ac61aa0f2d7\n"
".quad 0x8d2f861f3acde206,0x3cc736daab6ae9c5,0x91eb3ba568b9c615,0x18982c3ffe9ce34b\n"
".quad 0xceececbfa71e34a9,0x98e8a8d49c78f251,0x5f702225c78d30a6,0xbc35bd9f1a0c8aa0\n"
".quad 0xe5f04e28792cb216,0x4c71644fed468742,0x8a2e77ed86286318,0xd287d141a3637273\n"
".quad 0x39f225fbda1bdc50,0x8082dc253cac4e24,0x5bffb4ec28e7142c,0x3379f1bc7d738822\n"
".quad 0x426383d93870a513,0x2825e9c7e1c6929b,0x585d22ef0c34d116,0x63ec7b861642be48\n"
".quad 0x7e4156c3860e47d1,0x71ff4712648fec68,0x30b1c48d3fa4a7c5,0x9c387379198034fa\n"
".quad 0x4aab6b97d81183a3,0x7392934ea5738812,0x7a81214f871a5c35,0x581053841e5a44a0\n"
".quad 0x3861a7771c58eb3e,0x125f7d6bb55d0061,0x99da218caa910386,0xa1a5af5b015ee100\n"
".quad 0x6aae8c04340e0c79,0xc5c2e09d63841a5c,0x4c1f3e0059a6b076,0x437f2e4b9f868017\n"
".quad 0xdf829ba38df5bbf3,0x92db82a05ba23b4c,0x12e5cf05e64ddf8a,0xf78dd8c5c6fa2ccc\n"
".quad 0xed92f1ea537c04ff,0x114e7b437f12596a,0x461c01abe2a171c8,0x8092d88c8ac35b8c\n"
".quad 0x99e634a8fc3635df,0x4cd306e332ede046,0x952096577d746f04,0x04cd7ea52e1d9bc0\n"
".quad 0xf4691edb37b28e70,0x92bb43992e97b9cd,0x0e512c870cf35bf1,0x9e7dd3b11069a37f\n"
".quad 0x92b418c6d22ddfc7,0xbb081847ba30dfc7,0xfff45486e6fe04a6,0xa2b706fc14e0d6f0\n"
".quad 0x635df049343382cc,0xddf8b91c6b771f21,0xb5be0d27ca577a2d,0x86fa54f4e8e0f61f\n"
".quad 0xc4c88566aa1ae6df,0x52d8e6ee9d574def,0x30d505bb07a822c2,0x5ffbd27dee20cb76\n"
".quad 0xddcc31601e6119b5,0x16f4a0e3b61f7a48,0x77070c5b3c6914eb,0x572fac3c09621c4f\n"
".quad 0xa1dc50d2867e385d,0x2ee957f2972f9dab,0x1b34f359ea7757f6,0x09bcd48a6116d833\n"
".quad 0xe77dc8ef329813a0,0xa168b6a889c69331,0xc0c34dc8d0575173,0x331b3c0969761883\n"
".quad 0x6587afe5ad4345b9,0xa30806c09e8c2005,0x976147b4b112b795,0x36fbb8b2449aefaa\n"
".quad 0xf087c444780b22be,0x2a6c3baa9aab525d,0x4e30cdc25b74e4c5,0x8b65bd163fd3b314\n"
".quad 0x2dd54766b5787c32,0xd8f851b628139897,0xd0fcf4e621ac41ae,0x27d8df8b121acdca\n"
".quad 0xc2699561e6595353,0xfc479154b7c18556,0xeb0359bf1420b4f8,0x92853d250d4bfab2\n"
".quad 0x4f61df24a521d778,0x7cbe14f4638a6c4b,0xf11a7f2841650e8e,0xdd5ff572c62581b9\n"
".quad 0x6acdfba3198b6459,0xa74ca99098b679c2,0x9df814500f0a4046,0x3e1571bc252419f6\n"
".quad 0x20d29ba6446692ef,0xe600bf3b234d4874,0x3f984633e0a3ea4c,0x51003865b731ea8c\n"
".quad 0x8b91ac21c0b06e96,0xd9d1e42b9dcdaee1,0x60070de811889a61,0xd6570deb7453ad50\n"
".quad 0x1b51aef55e55566e,0xc87fbf45a8075601,0x8344194d3e4135b0,0x48c3c3c72f507877\n"
".quad 0xb4f830ffa9abe0cb,0xc7957495a7bbb0cf,0xb83c8f507ea9b861,0x1998f305d772d5ce\n"
".quad 0xb92ed1bf269b6964,0xb7045adb4e186539,0x601b0d3ebb19b32b,0xca276db044d40777\n"
".quad 0x096cc8b559c8b7a8,0xceb0e2c4268a4ebe,0x73ad6e01c08c361d,0xbf21ed177647335c\n"
".quad 0x1232683191bf0a70,0x4f7e3b89341be5b0,0xb70c6b35f1973d49,0xb22d5e49dcd9ebc3\n"
".quad 0xa58d9928a64811f3,0xdcb07d275c2d9046,0x59aea1d823321773,0xd52db0448ed48757\n"
".quad 0x5c62ab50efbe548d,0x413b0c2807341687,0xe7839b523438c516,0xb67299013f47f258\n"
".quad 0x6035d8d94ecb2516,0x3c68635aa4467ab2,0x38b6aacb14359b4e,0x3647df3bb30db137\n"
".quad 0x3c5f6ce35650759b,0x5c7862592df438a9,0x9068f3a716fc51b1,0x94b2b209dabfe44d\n"
".quad 0x4e384393a94e8b7b,0xa7cef8744a0491dd,0x99723746dc2b39cd,0x9a745acc48709e25\n"
".quad 0x393803bb6e93195d,0x9bbce1b8b0c00730,0xb641e2097b219e88,0x8738dac4b2c6c61f\n"
".quad 0x1dd97b24212ee86d,0xe0c39b78beca94aa,0x3ed54b414187154c,0x7007557d0c3d827c\n"
".quad 0xec5f950d80717d43,0x905637af97f0a4aa,0x98d28231aaca23c2,0xb0aad908f0602eaa\n"
".quad 0x4ee39442f3f5d083,0xd30ae8fe39efc886,0xe2a0f0c1a5087bbb,0xc47f2809f9d56b35\n"
".quad 0x6f88c5236ed2504b,0xaee3ceb454ed0261,0x397bb9d71a7aef0a,0x9d6c5b31277675a6\n"
".quad 0xe73b65d17436bf86,0x7a1557d1b2adb089,0x6d8adb303f4eed48,0x4aed570c667516fd\n"
".quad 0xc07ab0ed11e9bd87,0x0d78be953d66bd46,0x8ad9ad20c49f42c5,0x16065d4ec1488e6c\n"
".quad 0x308b8ffa71e84762,0x5cd7b14a4ab9efb8,0x5ff387f6d2aed610,0x990e6d454e9cd9ce\n"
".quad 0x86a103b7195de577,0xf68f9857001af4ed,0xd36df8e6cb8e7eb6,0x0ca2de6cb58d59bc\n"
".quad 0xb0ec0c7498055e2b,0x9fb68bae86483f61,0xe7b745f4288e61ee,0xf86e4855e40d77ca\n"
".quad 0x3b4783de8e46c3c9,0x2ab2d11dcc41b21d,0x59a438baabed6036,0x016469f0d7484be9\n"
".quad 0x69b6126e0b836f2e,0xe5d21ccf98279839,0x5886a1be9570c65d,0xc46aab3e5a121044\n"
".quad 0x7b30b02a2dd1c777,0x5505dd3d21852316,0xe0cb3d3ab0f280c6,0x7111aca38c1499af\n"
".quad 0xb2aff9cbf6ba3bea,0xb28b73214394d2c1,0x670defc9bdb7d894,0xc8170ab11d6baab3\n"
".quad 0x7b3b22f66cca52d9,0x610eeee411b0cdc9,0xec21a6216eeb1c19,0xf319486f6036365e\n"
".quad 0x6fae45b79267b127,0x2fa1462b9aa30d11,0x9844c55f771f07b1,0x5b446d3b04116856\n"
".quad 0x594c0a43b2c1eabf,0x80a1b895c8bb83a0,0x274a3834ccb836af,0x6e4a55142a8baf3c\n"
".quad 0x695442cc85e133d4,0x1b86ba7ec7d27360,0xb64f2c9dabaa5e63,0x467aabe9e1374e2d\n"
".quad 0x3d439a39833547f9,0x9410024c25e43a7b,0xfcd0acc5e4a70b24,0x1004bb220388facd\n"
".quad 0xa529e59ce186072a,0x2ec371e7aba3fe61,0xdfec5fab3514a3b1,0xecb118476296e2a7\n"
".quad 0x2722937fa9129e1a,0xf03340f24a25b6c3,0x025a6b746486fddc,0xa4c22c782d5b3e88\n"
".quad 0x430a47450f8c70bb,0x907f52f0d2becfb4,0xf1e6843997112fd1,0xc52115984c137227\n"
".quad 0x1cf0903995dd1361,0x760e02d5873b91ca,0xa08cc27609f30909,0x0d791353ea31206d\n"
".quad 0x4815b0a32e55f0dd,0xb1a4d3bb45b46fc4,0xdb45c4bb0a7303ce,0x1990cf9e9a63a306\n"
".quad 0x098775376feb9d6e,0x4e004b275a2bd79c,0xec1801074e4dec30,0x48f461163bf77738\n"
".quad 0xbbe3ab24cdd72cff,0xe9e236c99f0252c3,0xe85e01b4ef3e117a,0xa5a09d6ab4d87a69\n"
".quad 0xe22d90cc676eb61f,0xab28679eb07fcf03,0xa39b3642a5266683,0x2ef2c3dd55aeda08\n"
".quad 0x28c93679ddbed2ab,0xd1bd0b349b718e4c,0x25da691e7ab944c8,0x2bf00a364e25fbe5\n"
".quad 0xabbd8a75b0e5e6ac,0x1c6d46e0d857d2a1,0x82a695675aabed78,0xaf23169377e66de3\n"
".quad 0x4145d4e8eb1e418d,0x90e4ab60c5632464,0x74c393d278b345c1,0xa6e87fb2ad4b8d29\n"
".quad 0x3d381c357612ce35,0x321189d53cae426f,0xeb94aa3cb34b230c,0xa9d9dee851be6d72\n"
".quad 0xa9999196f3b6acac,0x08e817321d2e2156,0x26f0a1c5b7c3a555,0x89061a43b142a54b\n"
".quad 0xd5633f155ea3d651,0x863f189952197550,0xd5246855357604fb,0xe65eb8ab21c2c4e5\n"
".quad 0x4d8784e2fa0f5876,0x4260b0f392bdab14,0xd0383409636e8f22,0x4aa5dc1e82df28b2\n"
".quad 0x4375da59cb554751,0x2df62b2144abdafa,0x9d521cd89eaa6b9e,0x0b0ed875fe990a69\n"
".quad 0x57aaa28ebca21578,0x9bd605426edc6b44,0xb65535dd71cbb073,0x680fdb62d989b33a\n"
".quad 0x6b38a449a7f5720f,0x5c93510c87361aa8,0xca9e2eba899a3c4a,0xfa6199369bc2a475\n"
".quad 0x1425603191a2444f,0x4c0a5222173ca845,0x5cf558e954e08461,0xa8a09357085e6203\n"
".quad 0xd450ac174db371e8,0x64fdadbc3906329b,0x5786e22cd6d8449e,0xcdbc5971f2ab5872\n"
".quad 0xdbc496f999dd8c3d,0xb7952ded32d13091,0x5f6f22404d2c2357,0xa9c36f267a768117\n"
".quad 0xf3edc7af06a1a9aa,0x31b6912d05875d32,0xdc2cab099dbe1c55,0xcc81ae675b762946\n"
".quad 0xeb1f3ddd1429ed82,0x81d0d2b59b60320e,0x6eac8506d43c9d52,0x1d65cd1b48b25f5a\n"
".quad 0x4ce9b60731d64db0,0xd1b68520090b774e,0x39b7152d9739d39c,0xb6e2242cb0e9080b\n"
".quad 0x29628dd49a5cdb73,0xf6bc3022c4ddcdbc,0x297921b0a0db4492,0xb1cfaa3b61ebf96e\n"
".quad 0xd81c36b1e4bef87a,0x9ae6d8348fdcb7b0,0xb5ef445d5b5d5da6,0xacb4e5ee708f8db0\n"
".quad 0xf477a15734f6c126,0xa76dd8c24da859bb,0x032ee5dce6d254f7,0xac5d34da85909f07\n"
".quad 0xd31b5913b86bb887,0x8292e5fae552304a,0xf531e1bbb2043cda,0x170f300ebed47afd\n"
".quad 0xda915bb3a7da469b,0x41c56b29cc6ce1c9,0x28ec8fcb1b28b25d,0x1d80f7b20d2874b1\n"
".quad 0x39268a7b28925f66,0xa0efb8d8c9912c48,0xb2d6c21c8926c691,0xb10330a0b5d5e31d\n"
".quad 0x0521641aa11650e1,0xee321384e9ef31b0,0x4b30fec2e5ad8069,0x2ac1ae0b35f166e9\n"
".quad 0x081cf35f1e796a1f,0xa2ebd887997f1f93,0xe2d7c79f2a28e825,0xec414867868f4dde\n"
".quad 0x3baa62995174c71a,0x6ccf1c60cf19b201,0x7657044589d666c8,0xa7b5747d73671a7c\n"
".quad 0xebf146ce2c944ee5,0xdd94194e4cdf9d22,0x6c634d768c7b40e2,0x57af861d9b10ec56\n"
".quad 0xc93eaf1c6916f613,0xc505430035156c22,0x796e3b1a4eb620e6,0x38b2b2bad6c62497\n"
".quad 0x621346ce3497d871,0xa5dd98498cb4d6c5,0xd7362224b4d65c33,0x409b6f8b200aad66\n"
".quad 0xe63923256e3058d8,0x96f6ea9fd45635f1,0x0ce369b4b0d8d748,0x41878361ad853874\n"
".quad 0x2949bad0f3a65b9b,0xac03addd68697a29,0xb4132ef5a1667f46,0xd5ce9175b1e56adb\n"
".quad 0x67cd3ad7049c1758,0xf6692d80992d818b,0xcc66d2ed703945b1,0x0a2cbbae1325d481\n"
".quad 0xd555cd6c59ae8a0f,0x195635c227b1ebd6,0x1ae073faab118447,0x64ccf6ce13873c14\n"
".quad 0x9d5a07e6902f38eb,0xa55c1107925ad6c6,0x1f43102dad70493e,0xd2adad74392b11e2\n"
".quad 0xbb013258c4106890,0x9b10b302db5fc005,0x0644a36344587803,0x6340666e55db1762\n"
".quad 0xbafdc3e2dafb10d2,0x57866683aedd8899,0x5e2c7781363067a6,0xc6bb192bc014e1b6\n"
".quad 0x3641a4b6b85457d9,0x00b33c688d82d156,0x1e7fe1cb2688fe9b,0x6f2fbcb43d1b7362\n"
".quad 0x0ba49b20334dbb6e,0xf3336712626e6ebd,0xcda449a4f6fbfacb,0x224aa521f67883ad\n"
".quad 0x2a6b77e201871aed,0x41b0e44c27d9b369,0x383511efd3ece0cc,0x0f161cc8275b4872\n"
".quad 0x9fb471dac79c491e,0x9abb26091a6c130a,0x9cbcf78a75fb54e4,0x6ed0b60f4875ee7e\n"
".quad 0xcd15835755272026,0x5169455c515da6c2,0x5a78f2c58e63cca5,0x7f92814e239762c4\n"
".quad 0x7263da735e65b4bf,0xf83ee90ca69c427f,0x37a7ad27628c61a9,0xf3b93c26287a599a\n"
".quad 0xb626e22a89187c1a,0x3054ec1329c35a44,0x876c3d11f7e96225,0x5a404b11709315d5\n"
".quad 0x15ee90e770b18337,0x97dd01a0176edbc9,0x53b6714cfdc18fd8,0x4ea03d488a15108b\n"
".quad 0xfb38aa3c22e99dfb,0x8c2c459cd098d239,0x0a1e068808f946f1,0x05398f0e11643a15\n"
".quad 0xb132fb071e130d6a,0xf3b8c48bb39b87b6,0xb373777738f504cc,0xccf843966cbef6b7\n"
".quad 0x7cf2577a55d97f43,0xc85d6134ef371cfe,0x0c22a311d3f7fbe6,0x85fd408bb21f1cce\n"
".quad 0xe56224d35bd5ce5c,0x99ecb95f49bf649f,0xbb198843fdb05253,0x0747b6ddb998e388\n"
".quad 0x3621c5abf5746fdb,0xe1e85e26c15ea995,0x23eace190ce5184f,0xac30dc1c75f90f2c\n"
".quad 0x7117c4b6a30c7170,0x4e49bb5310aa3e1b,0x5589c0d84bb4e277,0x246233629bc29b44\n"
".quad 0x63be610db935f124,0xd976df0cfe064dbd,0x555bad061a8e4391,0xfb0a97a6a1c3c884\n"
".quad 0xb23f578d63eaf2cc,0x7c892c315c85a245,0x3851bc658a5a4da9,0x4addee3a0c210751\n"
".quad 0xcba1aeaade6c1c3d,0x97d1411ce1a7bde1,0xc06566e8edad17fc,0xb38b6ceb7bf977a3\n"
".quad 0xca6531a1e9ca74d9,0xdf87353485383865,0xc5814dddc497ab51,0xe30c8ad0e7750aa3\n"
".quad 0x8baf018d139e4b6c,0xe63c0d8c6e9b06e7,0xd10eba8cfa0b7349,0xdb6f1e4b4cf8b837\n"
".quad 0x30f353024a6f1714,0x49e4c56d76ded0e8,0x031b17c5cb8e168c,0x039ace2379dbfa96\n"
".quad 0x1da161f704f5575f,0x01127d1b3e3ac776,0xb3dd3869868921d9,0x7adc6104642c1768\n"
".quad 0xee5d3952a7b5a953,0x4fdc934447bddb99,0xd0be41e4d2d6cab9,0x12eb376acf20433b\n"
".quad 0x8ab2582aa15d8193,0xb50c4bc6a46c6b4c,0xef5dba47370f0591,0xdd45ae47126a404d\n"
".quad 0xb678bb7f11cd348c,0x748159ea53af6fb9,0x1571a2dd10f9762c,0x95e2c016bd722920\n"
".quad 0x0909ac1678b4a677,0xee309ed7e2331e5d,0x673969c5b420c65d,0x9312add44e8af082\n"
".quad 0xe1c74185a3d9ee88,0x9730d7b63a6c8f5e,0x597f6b501dd00f42,0xe6d9ef7a50f0c7bb\n"
".quad 0xec422156a2eb8455,0x005f0e1704ebe17a,0x1b19cd95a0484c66,0xfc11540471fbd838\n"
".quad 0x595717538b6e3bae,0xe7618a7a8a39e476,0xada1a291f146d7c9,0x48ce326e736b5251\n"
".quad 0x655eee4e9e42bae4,0x3f9da703cbe763c8,0x60f567f870666d5b,0xb3cbd151dcee9ae0\n"
".quad 0x5e182e4f2a7c0c5c,0xac110cf395340980,0x129a30fce6e46871,0x48b11677673268f9\n"
".quad 0x87ae09bdba51e8ce,0x35134cf4b36f5803,0x2358f29a3e11e909,0x01cee150f445768b\n"
".quad 0xec83fb02b747b6c7,0xef081339c878b86e,0x1e7c1a4d166ee230,0xcc2c9cd23a7613ba\n"
".quad 0x0950dc3b98451ce3,0x0879a870aa6ed8ae,0x4d9029d0f9b3a791,0x9b0dbcde1e5306ca\n"
".quad 0x0e521cff3360b462,0x9b9de3c5b735c663,0xa8e005e99a2378de,0x2736d382388c77d5\n"
".quad 0x0e314ce6d96c8a16,0xd9b5b8998af08333,0x2630d35cedbb435c,0xba5d8dc0e2398810\n"
".quad 0x3143c031756792c7,0x929ea537e5229061,0x37977c1c12baa8bf,0x7a0e5530bf2782e4\n"
".quad 0x3f436c3b716a516e,0xb69c45821f13e716,0xe605fa376aedc78b,0xbe805440ec5c814b\n"
".quad 0xba01bb764149fed9,0x19b7586c6a60a75d,0x7652089db82ad151,0x37e28d124f979107\n"
".quad 0xd0aba2a9e1704c23,0xa6b654f164306c8a,0xe464cccb309b24dc,0x7e42a7b17df8d863\n"
".quad 0x9288199eb4c85459,0x8f797174ee4a70c9,0x70a7b0e080086ce6,0x98525f556ac8c134\n"
".quad 0x41410623e6644286,0x66cd9cc59d2afa47,0x4b4e60cd23b218f5,0xdf88ee45a767ccdb\n"
".quad 0xa25365d759ea8ead,0x09659bcf5a773a90,0xc2ed438947788042,0x17f1ce509d45a216\n"
".quad 0xfe943e8ccc1d14f9,0x38c4d2adc66986c5,0x9366a869a5569bb5,0x487fde943f71f4e3\n"
".quad 0xfa895912f3b9b523,0xf02ccf41dee30169,0x3e1dfc42dcb1ad94,0xf35eee051657eb15\n"
".quad 0x16dba70f9532b2af,0x0da0eca64066edea,0x2ca0aeb9fb92a59b,0x1219010e2a8e0912\n"
".quad 0x0aac5c6d5712cd10,0xf55f04163891fbb4,0xb0388c3903cd41c5,0x622f68ba19e46759\n"
".quad 0x8252d384108a8a0b,0x62c1736f020c6e0a,0xb02ed0195414bbc3,0xb9a7e0b3e7476d45\n"
".quad 0xc95ede4e7102201f,0x71099cd33329b179,0xc38c9a0ebb190e74,0x25d216fd68dfa590\n"
".quad 0x465061487718418d,0x0bbcf14b1573796b,0xc1a5cf9bf3a8b57b,0x26eba80b39c5a25e\n"
".quad 0x1e20c8e57564a6ab,0x90ca295750555994,0x043884f9df095dc7,0x6531695aa4071e03\n"
".quad 0x0e0c02afa1906c07,0x8ee98c6c41ccaefa,0xbb8937e0194460db,0x7877603c52e2f2ca\n"
".quad 0x4a7f0ccdf77e41bc,0xb75f152cbb21d122,0xec721de8b4d99539,0x98a40a6c8945be30\n"
".quad 0xb58f81e9544ca793,0x4705107c25c5fd9f,0xec75f744a9d82aec,0x33c4e35439b13a03\n"
".quad 0xd16babb99889a077,0x9cd72af38de590bc,0x65d81b8d27792ad1,0xf7f909e38bc2d5c0\n"
".quad 0x5ed818a0098ea93e,0xb816d518e29c0467,0x0ee6e8a4440ac68a,0x8beed747e62c7672\n"
".quad 0xfc11c36cda01cbea,0x717312bb91b195d8,0x62d75077d1a6e7b0,0xc8ce3fa541594536\n"
".quad 0xeca9fdda0ec58c93,0xcae78c049190a1fe,0xd7ae06802bd8b671,0x515b37cb61a23b4b\n"
".quad 0x7e8dda56862bb09c,0xca1be485d3a38c21,0x1f68d41abd8769cf,0xc3c46343acd133ba\n"
".quad 0x6bb1753c7545945b,0x7986475902bd3138,0x6ad769135cbeb471,0x7f2af72088d9a871\n"
".quad 0x13d517e2bf4554c9,0xfd14a8915d7912be,0x70f04ebc594144f4,0x88c94888be72ed47\n"
".quad 0x34edd8344d55968e,0x5cf3bbb8ba8e6f02,0x15f6daa4e515dca2,0xc8b609c7ff2274e7\n"
".quad 0x866ae796eda8d061,0x352288d529ffbce6,0xe27bc2adc2c013cc,0x5e71194cada0f149\n"
".quad 0x21ce5573797bb830,0xac4e19c9e03d384d,0x9c2306115281f556,0x8abea990f9f11ee6\n"
".quad 0xfa1db36ab8c1661f,0x012c38e165cd6a84,0x7af1c4cbf9b5666d,0x1e738f1e58d045ef\n"
".quad 0x8f0a4e5eadf3f149,0xaf3e012ed39ae863,0x5c9cf43aedd671c7,0x6fc4f966624f9f1a\n"
".quad 0xc92cf452631c50f3,0x7a55be94f3881669,0x8b0bbc4832af82d3,0xdff3a7c41533aed1\n"
".quad 0xcdce202911a0846c,0x97103ceb54ca3084,0x8a0e6724e0480dc5,0x125f428d7bb45933\n"
".quad 0xa1156c5b7f869c49,0x9bd59334de289959,0xeaa8355c303260a7,0xc49abd5fc38da9e2\n"
".quad 0xe2069c5a9f0c39f9,0x148fe2e72b9b72fb,0x9ce8cee85073e70e,0xa1d93ab6b0a8e206\n"
".quad 0x03a1c90e2469afa2,0xa2c5bc48b3796cdd,0x38a1a6b92b268c53,0x8b215ec3fbf08967\n"
".quad 0x34cd632ccb3775c5,0xe183f7e6cd6ae716,0x075aec0ed571c54a,0xf07912a65de40a92\n"
".quad 0xd55f7598d3671e4c,0xea7448538f1e34a4,0x8b8e3cd5f0b263c8,0xee4059e5f7789758\n"
".quad 0x1c2ccf716653e85a,0xa049c71ddd9d6ae7,0x107aea68a5a71e34,0x28ff94ac738e1e58\n"
".quad 0x82b4d5fa6b8b2a4b,0x5f96ac6f1824bb59,0x596bccab5766e517,0x39d9e3400001d87c\n"
".quad 0x4696f6d4d0aaee24,0x40d254cbcfb835e2,0x12186167f396161c,0x66bfbc2c26e8bc49\n"
".quad 0x10180f76153d3891,0xb0d46c26eb9c4052,0xf94ddfe9c38f2f7e,0x7a2129c7121cb6c4\n"
".quad 0x793a70e34be41629,0xfc41535c5ab88a1e,0xf101c96df2e44ab2,0xa224b9e104aa5f58\n"
".quad 0x24beef0ed024cfb8,0x6bb5bf71614f38b1,0x355edc238b065ca9,0xbb3871a249269c14\n"
".quad 0x8367c59535de2c31,0xf5d070e548fdf54e,0x55a72e1cc9ae8526,0x2a81cf88266b2af4\n"
".quad 0xdbf0a44ee9ae7352,0x52b852a469cd0e0a,0x357d3a95797d4334,0x24d77a61d1846385\n"
".quad 0xe6baa4a70079d704,0x201259e9f38d7822,0x2d8799e7b52fc19b,0x4bb664b09b61c211\n"
".quad 0x355710a79c18b2d8,0xd03f3ce1469bba91,0x79c20b2b36ddc209,0x4986e1f05621f340\n"
".quad 0xb2dd888e7b43de14,0x59a165c2e9bb9c38,0x53ba41383cce2039,0x34a8d7bb9c48f2ae\n"
".quad 0xf5578a0a4b6c0fb8,0x6eece2839bd819fd,0x3578922450d762ae,0x3c48b25f4e8f685b\n"
".quad 0xd71434ba3ef55f1c,0x6f1a2ce132fbd08a,0xce28699bf39b2276,0xc1cc6c0eaf1eb449\n"
".quad 0x69925c792a5f2bf1,0xd0a55e87d20eb79c,0x079ae4188b323338,0x8e9b6ba61c71a24c\n"
".quad 0x2c786d7e3429ee55,0xb028d0f8c225854c,0x8c75c70f32a0b96b,0x911e614678ab574c\n"
".quad 0x2731b69d8d16f4d3,0x31619f93e66e3941,0x633b1b119e1ca133,0x7d76261b9ca0b324\n"
".quad 0xdd1e39516734c79e,0x5fb79ca1723b992f,0xfda5394165981b97,0xb0e5019a8121ce90\n"
".quad 0x0392224d2149441c,0xc9133aa68944ab11,0x3c9386b1130535b9,0xb244c16a80c16724\n"
".quad 0xe0686f840b57706c,0xcef0c238dbbab9b1,0xdc148d8b6154a2bf,0x6fc3d716ee7460bb\n"
".quad 0xbca9434050fa4d72,0x073a242589a60cab,0xb48d50e6a38aae0b,0x22f7e3a9dcd43def\n"
".quad 0x1eaae33c37bd0f4c,0xfb69bba970ceb6d4,0xd0d255b46ed72da0,0xabf976ed25534dbc\n"
".quad 0x5d4cb064c58bc926,0x31c27996adc1c1f7,0xe90444d78bafb24b,0x26fa8ab783eac8f3\n"
".quad 0x14f5371bc7b9c1aa,0x6d3900974c9053b3,0xf2e8a3e2584be1c8,0xac02ecc86cb45379\n"
".quad 0x80831ac686b0bc1c,0xca6f070edf1610be,0x61502aeeadcb1f84,0x502b165916e02f95\n"
".quad 0x68dc36dd588316f2,0x13844f027373d3d8,0xaac61326e45b6045,0xc1a237c32e292640\n"
".quad 0x0c3d65517c7a719d,0xb85dc5436695aacf,0x7e2ec2b82794e716,0x4eb8567e2e6019d0\n"
".quad 0x88a0eb2a7d6ab2e7,0xb4c872229451b926,0x71d2c19c7ee8cf52,0xe0e74e7a8c5236c2\n"
".quad 0x1228a29ec493b6bb,0x6e54a2687d042744,0x3b3c2b1d26a4a916,0x6181c24707cefe67\n"
".quad 0xc1e93ad819d3aaeb,0x65a6699072f4ce18,0xfe19e5915d85b846,0x0e1d6d83b8bef366\n"
".quad 0xeb16c4b370d3b8a6,0x57f46a4c35291c78,0xa6d072b2a8b27de6,0x5988a4b6ec796bc6\n"
".quad 0x074bf11ba5491892,0x1d81b119eac1cd72,0x1805b21ecd8a860e,0x404d017580164de4\n"
".quad 0xa7f11c5e4ca28028,0x2e6b57f9e2eb209a,0x61eba4c71a55b303,0xdaf696458679e54c\n"
".quad 0x7de1bd0c73e8722b,0xf9b3925c035039f1,0xf2c38d067d966581,0xc7937b069e84bd52\n"
".quad 0x9fbdeeeb4aeddee4,0xe3a61c40bb92ee3c,0x7129dbb186d5b12c,0x6c7cfc1d88d350eb\n"
".quad 0x56dab09ebb8dc5c4,0x0c79355670ef9722,0xdacd02da348dbb4c,0x31a504ca02df2575\n"
".quad 0xc0352a7d571f3794,0xd1addbeb36bb152a,0x1d5b0c4ed7477090,0xe3225e3e87aa9135\n"
".quad 0xb45fa877148d2c80,0x936fc474bbb060e0,0x66e629c308bd9e4b,0x1e76c9b170283dc1\n"
".quad 0x3e90923169c8be82,0x6a4a926dbf436c01,0x9c185e051159e9cc,0xca3f38e87a733f6a\n"
".quad 0xecda4fd632c28a14,0x719cde9fd575a1dd,0x157c36524d85c9e2,0x4f6493841738a1b5\n"
".quad 0x4dd06ddf5cdc8946,0x3720ed52a8c1ed35,0x6b24eb6792dac136,0x24999b6a3e45abb0\n"
".quad 0xbcdf65dd0df0d4e7,0x26e3823d97c9c719,0x308c14908cad51ef,0x5f205715524a4486\n"
".quad 0x86537b3ba0605060,0x46c8a2358469ee8c,0x0903b50e8d9b1916,0x3e99294ba706cdaa\n"
".quad 0xa16735d4a7315f74,0x672187c306c9d394,0xa6434bd38d5768b5,0x307b890ee91d361a\n"
".quad 0xfb06e499934fed19,0xc5526dfb4d75a243,0x16e90370b8a6ce61,0x956ebf71b6d1bc63\n"
".quad 0x6554b84865f245af,0xac5bd426847e5dc9,0x1044660b895628c9,0x57090233f152ee1d\n"
".quad 0xad9cabb6f9701669,0x9a596efc2a783526,0xe0c9c377c511016a,0x2831edd9da234ed5\n"
".quad 0x309709496a371ebd,0x3471329c26792fe4,0x38ec39ee50906192,0x45326720e32bee77\n"
".quad 0x452fd44c15c41e05,0x929a7d851344a3ef,0x1f1e5549064ed9c3,0x298490aae5511e26\n"
".quad 0x68b8c72c9c6df31a,0x4b937a744f948458,0x0787dab56c94bcd2,0x99185453d9c8bf57\n"
".quad 0x1a33145378af32ef,0xc2d1f266e4bc1f6a,0xf10f0f0143ae9b1a,0xee34583f495e7a64\n"
".quad 0xb838f9ce2f42ecb4,0x0d224312045328d8,0x1eae854d64cecee2,0xd7f4e1e4b1147044\n"
".quad 0x5b07a0ec7a1aa675,0x55c6f9e6d8af71f5,0xf42ab6d28d943782,0xfe538a2cb1909151\n"
".quad 0x2d86ac8fe4e14f2c,0xa5f303e48d6311c3,0x0f459baeaff22411,0x1c3e39ef80b538e3\n"
".quad 0x2ceeffed57bf53fc,0x9c908291f28990fc,0x6ab0317934c994cd,0x385f2dd841916157\n"
".quad 0x5a3f3173a1c2fac3,0x8f330903105bbd62,0xa5c41b28b38396fc,0x61d26c37663aa76c\n"
".quad 0xdb98259adf6c6911,0x4649d921107c48cd,0x40f575833c19f3cf,0x4a74aac79076d823\n"
".quad 0xef73403cb271c19b,0xdd51e1142f38690d,0x18d555f76baa585b,0xcea0295f18004928\n"
".quad 0xd07c3bc7c04b40c0,0x84cc76140b66e0e1,0x44b35cd060930f56,0x76358b0742f3ada1\n"
".quad 0x355ccd1d15ee1df2,0xe90e588bd31d5037,0xc8c7c124ca26fb1f,0x1f2acdaa56c9c831\n"
".quad 0x257139ead877ff07,0x8b261939753f41ac,0x70b981abf619f79d,0x0dc566f743f43cf0\n"
".quad 0x097f9c7d628b70a9,0x9d14c9ba2cbd0fb7,0x6f18b12ded4a99dd,0xdb8ee501ddad7dec\n"
".quad 0x7ed8b11257b28584,0x903550a99e84858e,0xc1a29108fd836253,0xbb0d3511a80ef2b9\n"
".quad 0x528d1c29661966bd,0x4b0f695768c06533,0x399e40ef34cb29ea,0x255a6a7eef32bc15\n"
".quad 0x989b03b082f9e662,0x47e772c3c8b41e91,0x9ec0b059ede078f3,0x3726d5ada738523e\n"
".quad 0x38c83f458d9eb944,0x0f9929600a998cd2,0xd58d4a6980c765dd,0xca8158eaf3ae2108\n"
".quad 0xb284899484f51c0c,0xc44414a56b018b3a,0x44eebee77163cc60,0xa4db0503c3b45497\n"
".quad 0x2bdb57f868dd0c4b,0xea84874e8b9e184e,0xf28d5d94c6857aef,0x361e084a3a373e65\n"
".quad 0x33abb25e0688b1d1,0x93ce180ee867bc50,0x6140819f48ff4423,0xef486a27c80dabd8\n"
".quad 0x24a9452a7235d062,0x78abb7eef3733caa,0x6744e4afb0f35416,0x9d8e4e153dd12693\n"
".quad 0x0f6a50b5c75e62ca,0x498eff22e3bc2776,0x66bd368355553739,0x7d34eaaad551be2c\n"
".quad 0xd7f16ac6ddab55d3,0xad15e4ec4ea3b864,0xf21842b9299b18d1,0xa85031cbd6867324\n"
".quad 0xac99eaa7945160ec,0x8046137032d55178,0xbb02232e8e59c942,0x626f2fa81a735502\n"
".quad 0xcb5f1c6bb48cf84a,0x560e1e953abb6b0a,0x16c59b025589d8c1,0x803c72f527659eb5\n"
".quad 0xc9a53bbc0f25c30e,0x9a97c70829dd8a32,0x4e48e2daf3a3d95e,0xe2cdb0e285bf6fb0\n"
".quad 0x70a2dc19b8e53a7c,0x03dcdb96d8be8e12,0x1c957426326e21eb,0xcd46d092bb46f763\n"
".quad 0x20bf9fb8943d0b21,0xdccd9a68e7ef377b,0x47bc88fff6cd3c2d,0x3d25a769fcc10871\n"
".quad 0xcf969573ea70f415,0x1aed8b12931fdabb,0x943d0c5da9a1fbf7,0xb223413d29a8c3c4\n"
".quad 0xa5bda8dcd2c5fcca,0xb1da847246554e25,0x270ee3b70edea6e8,0x4010488049552e85\n"
".quad 0xbb8d23c8f06bd194,0xce4d0f1d66f64079,0x781da89fdaeaeec1,0xa57670f750253eda\n"
".quad 0xe6957bb87298e55d,0x602b782e4b690629,0x0a4b0f3494578bef,0xe9a4e4a55fd73378\n"
".quad 0xdb4479a961eef23c,0xe1edd8cb37a264b9,0xd467337b1e5970a9,0xdacdec691e79db96\n"
".quad 0xefa24accae04e258,0x6fa3ce7387b0a435,0x9bf172337349c7b2,0x925f224de2c3a6d3\n"
".quad 0x5b1ddc1207f5bbf8,0xff7d23f48d7800a5,0x306208849be04699,0xa2b96a653f004c96\n"
".quad 0x4242b846f004c969,0xc01d1c08d3c1059e,0x7024c97dfe18924a,0x7a95b0ec6a2e8c16\n"
".quad 0xaa74ae0075478235,0x4428386b33821a4b,0x11a03dadfc396ef3,0xc2a879bf9525f763\n"
".quad 0x77f3d7b459e8e32e,0x024d634673fd4abb,0xf82c9024e2ff53f0,0x77d2a46086a2dc8e\n"
".quad 0xbe932daa6ec49e0f,0x44973a7e3bb6d539,0x26712ccf77bee6fe,0x34e1c50dabc0873f\n"
".quad 0x94ac1e38a3812269,0x7aacc4b9c18b3101,0xd74a9c29525d6e06,0x0e10f5fc4ed6e2bc\n"
".quad 0x479a83269d0d611d,0xf58200cab69b5ae1,0x38f7b87ac21c3913,0xf1c96bcde1879919\n"
".quad 0x9dab3030e10a92d4,0xe4a58f063cd8e23c,0x75c1093d90b11770,0x3225229562fa07a6\n"
".quad 0x24365d53a1e3bf38,0xc8f72e63980fc30d,0xbe67e303ea1e7065,0x06bc58c82e7083ca\n"
".quad 0x3eb2d71631c2152f,0xc3c76af0834afb2e,0xbb870a1ca8e8cf35,0xbc309233d4eac660\n"
".quad 0x6125a44c471dcb5e,0x0d2d152efce03e38,0xff02b3a8ac9ab5c2,0x83bd0daee75c3072\n"
".quad 0xb6f0ab863d7b324f,0x4ee1c094d01c7aed,0x9cef85126c610db6,0xc3cee42e675ee4fb\n"
".quad 0x394e8daf34bb1af0,0x872f8a544699be1c,0x148fb6b6de3155c2,0x5349e6271936e70a\n"
".quad 0x4d493677e3ae1879,0xb17f9e70e1cc0fb3,0xe777c4112d6c86d9,0x9c40f25d753e54ee\n"
".quad 0x4b856ac7ccab96eb,0xae15d0d7a7267121,0xcf5523207162c9d8,0x8c5b5389c6913c86\n"
".quad 0x0eba61c7053c47b3,0xc1e71e54d75afcad,0x3c69ecd5eef578cc,0x4841b76365361a1e\n"
".quad 0x2db35651bd22f1a2,0x3cdce8b2eb1e3099,0x39d1abdce3829f11,0xe4b0e2c99f5c28a6\n"
".quad 0x181c9af85b56b39b,0x96dbb0a858dbac3f,0xe94199bdb6b8a026,0x9dc19c279c509231\n"
".quad 0x024cdb9c511285e9,0x6343ce28691700de,0x70f8c1a71b8d3faa,0xf0fc58f3a5a51528\n"
".quad 0x49c6112d8b20f138,0x59c71125b4971715,0x1a48047805f0aad2,0x2abc9bf3a0ab638e\n"
".quad 0xca6ccf408c99c70d,0x140be65738c12421,0x26138d3d7dfe2c5a,0x9de301956e16bd57\n"
".quad 0xc71054f7ecab0656,0xe2cef183f7453ef9,0x039e3d83d1b6dbf0,0x0736c33b7f0adee2\n"
".quad 0xd3e42ad4e447b5c5,0xe7f4eb4de3859b10,0x7cb1c68d3311b8e7,0x180cbe586bae49bb\n"
".quad 0x4912dd3e86bac6d7,0x5d754e65e22be79c,0x2798fc77ab73891a,0xa1ac0e61e3cb578d\n"
".quad 0x43e999c5b140a744,0x559af6c439ee16f9,0x93c257dc062d98ab,0x03ddd7e4f0a81c27\n"
".quad 0xf7bbd58b4d8dbdcb,0xa22339f442a8089a,0xebd0151c3a1b00a8,0x80e8dd3cf2f44de3\n"
".quad 0x8c2750c48694b35c,0x319a8c054b72d4c9,0x3d2cd8270feebb82,0xdf38abf5e204dff8\n"
".quad 0x79cb5a2938a8ba54,0xeb02df6529c69e71,0x9ccf871ce1e48ce2,0x765dd938f2b70abf\n"
".quad 0xbf975a283440254e,0xd694dcc9708eb1ca,0x0c4c1153cc5961e5,0x9d62742349b0a92f\n"
".quad 0xa74e8456af6bb283,0xdf1b0c86a1859b06,0x8497890353fb1aec,0x594581a0763ecc04\n"
".quad 0xa00bb1bb37553cab,0x51320a471198c5e0,0x8c3ab08c5bdcf558,0x82919dc2797064db\n"
".quad 0x73ff4dfdb94e6be5,0xe4c2427208fa2393,0xcd2f9dc955a29606,0x011043c5d4b03e9d\n"
".quad 0x0e48154564016708,0x9e62d53a306e4b59,0x2be492afa071bc65,0xbbb9d9d6ea62a3a3\n"
".quad 0xbe16e3279ade6c5e,0x94fa08321b02a318,0xd0a55b100f31d16f,0x615ac028d061f838\n"
".quad 0x0f88d7eed16e1730,0xaad06ee9d275c60d,0xa3f028a6f9105c57,0xc0fec572fdad02e3\n"
".quad 0x9b1bd963db8f80e6,0x1b8dd5ba18350135,0xcf0294aa7f1fab12,0x59c21f5ded16dafb\n"
".quad 0x423ac88c275773b6,0xc75b8c46390d4e30,0x64e54e3c7a877120,0x042825158d481554\n"
".quad 0x0d350f3e53a6db64,0x487f3f105d8b0c5b,0x1e060ea01f7515a8,0xad6e5ca5d2b77476\n"
".quad 0xab9e6db90e6c871e,0xba17e61950a7a95d,0x43d4c9cb5d762ed6,0x6f143b9bf30c29fb\n"
".quad 0x30a89300f62e8a72,0xe09ec82f58e90b72,0x6bf063bb21e2ce10,0xf22e8fce17f5df7f\n"
".quad 0x2cbb43e5db8867bc,0xcee100f357136dec,0xe43bd13b6acd5a87,0x51bf0adf8341d883\n"
".quad 0xa83039c22c24e626,0x6e6e072fec51bae8,0x32d24821258c7da2,0x6d6bc7c062ca4482\n"
".quad 0xb559fe293d965d56,0xded166ae41218311,0x305166688cf0cdaa,0xa5f86629517629d2\n"
".quad 0x3008cba690a2bf71,0x5e8f00b8b39897ca,0x8b3de2c76e51c095,0x578bdaeaee0b5a43\n"
".quad 0x01572255e94ca139,0xc186f114a3c4da2e,0xa3dc3fa43ac8575f,0xe89af17473c19b68\n"
".quad 0x03ca5e2b66b53081,0xdb66c3b545bebb27,0x59646b5c3522f45d,0x8d2f0f98b143b4d0\n"
".quad 0xdda1a69d476712c3,0x84e1d3dab1da1841,0x3aa40d440547b75c,0x6937a8723f536ae8\n"
".quad 0x7145dac4f146aec3,0x8a760b5e04827540,0x5fb34f74e04b4da3,0x5270f4dbcbc2c5a6\n"
".quad 0xf947727178b56861,0x6cf200be7d1fa74b,0x1cb4f25646b883b1,0xd60d07a74c185cb0\n"
".quad 0x81f68e3f14846101,0xa88326115b017836,0x57d55f628f27acaa,0x2c3ad54829560788\n"
".quad 0xc3b9818f42700616,0x3c21075286774510,0xc92ddb780a660460,0xdf741674e372245b\n"
".quad 0xa7c2f7d12a63d12e,0x498a53f4ae131977,0x3ab27e8dcae2e41f,0x9836552204d14a2b\n"
".quad 0x78094be45aa9589b,0x891fe94ddaf7b9f5,0xb0b26ee0739b9654,0xe1c5aace44f6c3a4\n"
".quad 0xc9766909b1e22caf,0x13bfac62fd356714,0x319634e900dce9da,0x0e87c31c0389d8b7\n"
".quad 0xd0ce9ae10be4ea07,0xd6e19d0092ed7a82,0x6631bfce2928bc64,0x6d4aec1d7ad371e3\n"
".quad 0x0f28d4770badb38b,0xe8219944abb8e5cc,0x8b1f21f8bf0fe7a6,0x21c40d73df50e3bc\n"
".quad 0x766d501036ff80d4,0x1f1347158f38a01b,0x5ca4d809b0944a4a,0x6d883d1380a7da2d\n"
".quad 0x304341d1642e87c6,0x6a434e65ecadfacf,0x9af7a12a86509838,0x049aa3674a6ea997\n"
".quad 0xc60fb4e2cea1fc7c,0xc0d5a77bc24f79dc,0x0721877697a41e36,0x1d2fcd06cc9b91f9\n"
".quad 0x904eee8fa4edfa10,0x7abc78716de4bce8,0xbb273db47bb3bb24,0x819f2de916f0be6e\n"
".quad 0x1a358562ab7df9b2,0x08e1567650108a7f,0xcb80f35637a58758,0x6cd8b6d03188c2ea\n"
".quad 0x8afb54a77104357c,0x909b6c1846987b6b,0xde19836e9519b9c3,0x2ed519c55b0168ec\n"
".quad 0xcbb9f85c7bc21663,0xbe9a64a42e429e36,0x890ecedc2675efa0,0x779ecda76f565d1c\n"
".quad 0x25d8b5d0dd8d8a9d,0x2338339b20b78c2d,0x671cc999aaed761a,0xab2bd9b920e81f1c\n"
".quad 0x12fa5d32bdeec164,0x76ec721d5507498c,0x269c34e383f284fd,0x73687775a226fd80\n"
".quad 0x488f5019e98ae6b6,0x328929935e5eb28d,0x80d7cd5863b23a83,0xe94638074c0c6951\n"
".quad 0x8b8a179e469e5bdd,0x81ab014c26ca75ee,0x0cafb12f75841939,0xa4f64d2918feeb1f\n"
".quad 0xd57c16cba421b8b9,0x1f18edf7481316eb,0x08a705d4aec0121c,0x3502ce1bf6455900\n"
".quad 0xb03b79d60d925650,0xdb96585470efc650,0xb2044d7b7a453a31,0x11167d578ff36ffe\n"
".quad 0x76d25879033c31c9,0x32f66afabdcbfb5b,0x089a401d0c2cfdcb,0xcceb2cc85bb9cd50\n"
".quad 0x459b3e90f48ba900,0x65975826b3d3154a,0x50eeac6b4e1907a2,0x65631d0f28e383d0\n"
".quad 0x4b60fba357e44640,0x9ee287e405d080e4,0xa51c3b7e2c4d32ed,0xa9a790eced04d2ee\n"
".quad 0xdac44da0e0ec99d7,0x13ba4dd4e09899e4,0xc2f68088add05aee,0x1edfe4cef2e14536\n"
".quad 0x339135abb0a9c219,0x8f5d930983c89b69,0xa3246eace6fb4576,0x1941c38c39c6b3b8\n"
".quad 0x36b240c8bb4727dd,0x6bce6e1900d349d7,0xe294ee4616eef885,0xb06e96c6e5bbac51\n"
".quad 0x32a2a7d1209ae837,0x438c06bb6a273a89,0x521daec3450045c7,0x195674a736bdbc6e\n"
".quad 0x22c81824a6f1738c,0x17511b0cd76b494f,0xe5b68fa3b4075eb1,0x9eb15487db998c0a\n"
".quad 0x0cf08c67c6d1eedc,0xe4b628319f72caa6,0xd0aa2edc75f0c49a,0xe770a26ddcfa668f\n"
".quad 0xec9e0b12c18dce83,0xb9df3ca7e6aa51b4,0x33204ecaeaa7185c,0x6e89c239ed95d879\n"
".quad 0x034bb14e7175a2ee,0x1cc1358d6487ddbb,0x7bbac1e516767309,0x1eb5cc47ad4d4591\n"
".quad 0x46740e07a39e5892,0x5902ac6fdd417b97,0x7c10d753d9347324,0x37ed73ea2a39af0e\n"
".quad 0x9c11a1e5716ad53e,0x20f09eaae043083e,0x2d09d65367bd6356,0x89285cc3d429ec5c\n"
".quad 0xda6d54480d4f5c33,0x854869aaa488f828,0xcb29f728f0cf76fb,0x3d826d15961fd9e7\n"
".quad 0x3accaac965774724,0xeec30fd46eab36e7,0x88a8730232674521,0xb01c81393d4ee011\n"
".quad 0x310bdc7bc2952fb1,0x8830802d70634b48,0xa6175138412403c3,0x85169c28f23350ea\n"
".quad 0x55a472b83267b2b6,0x491c30737ea54fe6,0x3840664235521267,0xc3112deb3b7505d7\n"
".quad 0x84cd5a6b65361b61,0x841a6a20833de670,0x821a7a5f1a953eab,0x24b6f5bcaa9fce1f\n"
".quad 0xd25b74d644b87832,0x9663bde01a10bc09,0x34f6c1f53bc08334,0x4ea00eed3d61bf05\n"
".quad 0xfa1ae202ae2dec39,0xb84d45e705bbe112,0x3ac9914b34c6fa4c,0x29cac8b7c02725c2\n"
".quad 0xc12737f225acce51,0x4fc0872ae83dfe62,0x696b811e51904276,0x06bdf8592ca3a41f\n"
".quad 0xb0fc015338782313,0xcaab80227e4abbea,0xeb8df8a92cb7c7ae,0xbf0323fc51dd22af\n"
".quad 0xdf8593441ef03ce3,0xbe8f3184342b0462,0xfe9b7132e3f8cf9b,0xb4876b021f26fa14\n"
".quad 0xa9eae9a94fbf8d22,0x039dd902e6f61cca,0xee9a0d691bc9b2da,0x6c1dbef224fa2995\n"
".quad 0x0dc61bc8921649b1,0xd63781e4cf557ea6,0xb832417b983777c3,0x3497d47ef14f351b\n"
".quad 0xa433651e00e2e6e8,0xf2b1854a7dd43929,0x74f33741240bc79b,0x289cdd0a96fb268e\n"
".quad 0xdd8f5fb4ec54655f,0x834b504ae25cf8f4,0x26f5cad19716e26e,0x1debc58f5a8ab782\n"
".quad 0xdbb2261dbef45c8f,0x6fa18a16379127a8,0xe32e6f41497d4620,0xdec097a280e3b4da\n"
".quad 0x5b1bd113d371b397,0x90dd8a92c772c58a,0x9d8b31c1607a69b9,0x4c860f164500dd04\n"
".quad 0x65ab02f1ba95258d,0xbf4c6e61c8b20e2f,0x6e81c978cea1f50d,0xc96525a3410a0b82\n"
".quad 0x29373a4794dc6e80,0x00c19b9c0b741e60,0xa8214bdcdd479f83,0xb77af149cdd0c9a9\n"
".quad 0x03852e1d7dd0593a,0x63962ed6e4349610,0x625c8dc0896919f1,0xadbc39cd728e85d4\n"
".quad 0xe6de3484c98b742c,0x832135279646271a,0x2afa2c4aae18d9b7,0x74dfabb886b9b80f\n"
".quad 0x3b96a1736f124b9c,0xc56bb9b90b27369b,0x7d3cdd08934b0f3a,0xdba87381805ac879\n"
".quad 0xdee824cc8943dc29,0x98b2a260abe08c6d,0xa9132dc0bba6bf1b,0xe64f436cc0853a1b\n"
".quad 0x0c3dc0525cf33741,0x48b18ecb1b99ebf0,0xb7666e81cb27ce31,0xebb90f31c698c686\n"
".quad 0x6e84c9fe88d76c75,0x6e42496ee41e04c8,0x731e473732e898d5,0x29c65dfd7ccb1cb3\n"
".quad 0x62a796a7890fba89,0xc2f1223eee2c96a4,0x404dd3781a6b95d5,0x9ec7771249cb36dc\n"
".quad 0x6ee24c566b529e72,0x7491b43b638f3402,0xf26a87a6ac6ee249,0x40d6f6fdcdcc69a6\n"
".quad 0xd4e9be9f75127622,0x3b0d2ec156e834e4,0x003d373721e6b0f7,0xeb73731e51aea305\n"
".quad 0x37116667678e48ad,0xe444d647a11080be,0x34c55819f869c38e,0x23f3817d08c166ea\n"
".quad 0x0f18799b59bba112,0x03dcc8b5bb8d2cfa,0xb3f6e6f204b919c1,0xa7144872fd08d6d3\n"
".quad 0x675c89b5d74b0c5a,0x1c706c53b5a30ae9,0xeb01a2cc7e284336,0x5055d936e5999572\n"
".quad 0x44d54d4b62352719,0x5adc75cbef39771a,0x1b0e3bbb3ea0ab77,0x39b8047365c587a5\n"
".quad 0x9d0bd9f3524da121,0x337f79b024a7fd38,0xac3a7a79d05baf75,0xa726f8a321100cab\n"
".quad 0x494f7d4341e78665,0x7a98f41642f76abe,0xd51ad2ec6522e5d9,0x53c8c4c305366d70\n"
".quad 0xd34daa8cce5b0a47,0xacebb41e34a30e6e,0xe87562166cbcd1af,0x14af60275759a7b6\n"
".quad 0x2d306090f6134a12,0xb20dc6a34dbaf46e,0xce89b74f466674d2,0x8c677a643c57d76a\n"
".quad 0x2640c1ff6ec8d558,0x77be7774f0f17ffc,0xccdb13237948e983,0x0508c678d6728ac4\n"
".quad 0x2f5ea9e58909d418,0xb6445b18c3b36631,0x8ab21aa63091d1ad,0xa16782f074e6c487\n"
".quad 0xb4e2cf56f4c7aa33,0x33069a8d8fb2e1ad,0x260430922ee2868f,0xe1683850cb30dd87\n"
".quad 0xd9c55619196196e2,0x8aa92caf16dd88a5,0xe41770fbd64e90e8,0xc00eaac0c7aae6f2\n"
".quad 0xc9804d53b58baeb8,0xf5d0f5341090b1bb,0x21bd13c38c09e82d,0x20e067d4a9e787f5\n"
".quad 0xc1e2a63bc556aa89,0x4670d590b7c98a92,0xc566ec5233708d17,0x58cb1b7c71fc3483\n"
".quad 0xba10d40c4a3cf714,0x1f540ad0fe13896d,0xd7fd5c48af74dd38,0x1cd121defd554969\n"
".quad 0xc4cec8f49bd59197,0x90c484ecd4daee71,0xed90e168cdd9d103,0x2e9d695028c5ef99\n"
".quad 0x877c7d8dd057aa65,0xb966ac65a0ec6bec,0xcbbb3632c42d7a83,0x13446e5ace51c476\n"
".quad 0xf6db0fb7b97df3e9,0xa158fc73d817990f,0x9579ad72a0b02b2e,0x55e969340af4e4a6\n"
".quad 0xc04d8b58febaa2e5,0x3404acce34fea03d,0x186621f3f1c3a982,0x5e6ef08441164b42\n"
".quad 0x56b6fdf6734a7a8c,0xa85891c05a756895,0x38a8951eae8dcf0b,0x78686d380ba00ee9\n"
".quad 0x138438a283748afe,0x0875573993a33e5e,0x15be352aaa8cc3d9,0x7a3840e46108ebcd\n"
".quad 0xb6c81dd8796d6c3f,0x901d4a0ce0b0a473,0xbaf4854ff4512eb8,0xbbf17dca7e9c4b8d\n"
".quad 0xb6cc182e37ec216c,0x21daa0fc21b02c40,0x295a56e5b4bf4258,0x73797500e9c48e8e\n"
".quad 0xe87b6704e91d913b,0x7621de44767e0e7d,0xfabb9e8c2c7632a2,0x6abbc1d8d5a8337d\n"
".quad 0x9f89d4159b4ee7cb,0xddbe884d3193555c,0x147a0b5498489fac,0x2458804b9c0359f1\n"
".quad 0x1dcd57cf2056ecb5,0xa9c3a415a4386eee,0x6fe6d37b3cb9f611,0xb4ab26da84e2c123\n"
".quad 0xe1e3543272a2c316,0x6905da1b87d057f0,0xd22e9628e966e773,0x20cdf4fd40e721ea\n"
".quad 0x87d525fb5ee03e90,0xb1637d072e91b5b1,0x31055f0d5cb94341,0x95cef0606d942951\n"
".quad 0x3615745ccd93c651,0xeedeee8bac5806ea,0x80606a31450d986c,0x7ef8736c34fc988c\n"
".quad 0x2fb9104276d474bc,0x16347b02da2c2671,0xad222c01d8da5bef,0x94d43b2ac1982611\n"
".quad 0x3f0f9321a1615515,0x52ce4a6d67702400,0x1b997638caa9a587,0xb6b431eaec5b3ed5\n"
".quad 0x8e12faf9b388dcbf,0x2f1aeec7d139dbaf,0x20a9c1f40d681505,0xd634a717f2a8d596\n"
".quad 0xbda7ef856293cff0,0x9b2697c544c3cb33,0x3d37850600e579cf,0x9c6cab9d4ed52ed2\n"
".quad 0x854214871082daac,0x12f60ff28e0976b1,0x1649c33774f9293a,0x6ddabd2311064d35\n"
".quad 0x2aa2c68f24c8e138,0xf2eb33332d148f2c,0xc998008aac615ee6,0xaee2c05295a4762d\n"
".quad 0x5db9813b56e6f2c7,0x3d8655382219d127,0x4b9005a62dc2c1aa,0xa34354212cc724db\n"
".quad 0x43576bfa70f7bf56,0xf37bd93c4b85ace9,0xd59330977874a33b,0x4b32f536215b4ec2\n"
".quad 0xa2bb4d01767460d3,0x9c62ce06f84e5b47,0x6966f86eec0db78b,0x48c55c70c3619ddb\n"
".quad 0x36d901506e55638a,0x5da50a401fd739ab,0x17150ceaa65c88f4,0x077295c8f3451666\n"
".quad 0x5654ee463c358478,0xa6be5163818b82cc,0x3b9023b35804128c,0x3a7676592ca33440\n"
".quad 0xeeff866fb2d946b7,0xc522dac871232b56,0xbbad29f110a9a9bf,0x3427f6ef7127c434\n"
".quad 0x60e4b14e4360907d,0x474c34da53b1742b,0xafe0e6d201df3908,0xeed460c75b32f4d9\n"
".quad 0x84fa3b2c86a90b62,0x95ac632b8e127085,0xb243cd9728abd587,0xae8e4710137afb0f\n"
".quad 0x0995bbdb983bea0c,0xfc18708f6e53da1d,0x8d88bc443eab8681,0xf61ee46beca47b24\n"
".quad 0x8213ae912507b9c5,0x3ae5b47b20e49f51,0x09d03b2b7a33842d,0x7123a804cc00168e\n"
".quad 0x2382ab9e69cd13c6,0xa5d143327acea572,0x377e23b5e2da12f3,0x0b28ae608b284796\n"
".quad 0x6f84b0d0a57dead2,0x72c2ca94c3153626,0x97714c865a3952d3,0x2401ac09aba36835\n"
".quad 0x660d6be846efe085,0x57a8e602d21c6ba2,0xb3ab97d3955fb6cb,0xbbe6443ff4141f49\n"
".quad 0x22d74f0c2b29c7b5,0x5b9dc6e47cd95df3,0xde42af934e762be1,0x2b939eb551155235\n"
".quad 0xd71bcb0df4eaa94c,0xa6099aecedfde23d,0x5f111ea21826d546,0x968bee2eaacee619\n"
".quad 0xc5ab455e5c464ac4,0x2e36a4eceafb7576,0x4b1a6e1d4b028d0f,0x7d0026d5e190aa3a\n"
".quad 0x735beba17827d97d,0x3ab62429574326b7,0xa8db03d8f1237bc5,0xdb808ed6799e0a6c\n"
".quad 0x43dda95e2d388bf9,0x59bb5af835f59cb6,0x54a351bd3863e79b,0x8d69d78ad53b12a6\n"
".quad 0x9dd36b29527d20f6,0xa1ba2535522db29e,0x770ecdab0ca5a7bb,0xc252011614d911d1\n"
".quad 0x155366106476dc33,0x03938fa0a807463c,0x6e87c37a035d3c3c,0xaad717cb14fb865f\n"
".quad 0x8b683bb41658c06c,0x44aaff2a89394f61,0x41a4c9e4570f285c,0x2d5aed09444e79e7\n"
".quad 0x04a1fd8b56dac82e,0x1e9d12d3d39ae416,0xc8f89ee1c31d5984,0x52a9d3a9e8b5777a\n"
".quad 0x9c494b76a042c54c,0xea75e1bc026c8c0e,0xa7baba2e8b30aac1,0x64753c28131b3260\n"
".quad 0x31c686bb3047d4b5,0x6434290398867686,0xc3fa8ee9b7d5aa5d,0xb974b3f3bcb1735e\n"
".quad 0xe13c66db8fdc184e,0xfe6924ee037c316a,0x2cf0399b49d7a60a,0x1ebc6a35dee878fe\n"
".quad 0xd7487a7cfb15c411,0x516d1922aea2e207,0xb325137967ce8426,0x493870e0e5c1e410\n"
".quad 0x3dddd31a9f223723,0x11305d0b564c4237,0xe93bc9d664e681f3,0x3424edd9c2eb511f\n"
".quad 0xcd8f3656cd8492bf,0xcb8d3e5c55d12a0f,0xe472f70e8d2789a1,0xa96b699760a43951\n"
".quad 0xbda0aa5db142ae4c,0x6b2a807cde584932,0x2a3ca8b26c673531,0xd73942a5bfce6ea8\n"
".quad 0x7961e7c11c761266,0x5e5839e62c3abe09,0xc3962673bd0ed103,0x961a73cd1b2e0189\n"
".quad 0x4ba32159e52010e3,0x596468b83a73920e,0x67631dabc8812bbd,0xd1403471c7132882\n"
".quad 0xf6671a1c8d5b5748,0xf1a54bf7a2ce390c,0xba7181ce200e192a,0x08fc695359c1a1f4\n"
".quad 0xb57c6892126b1f3b,0x9ce2ca92fb5b1036,0xa1261be1a712c1e3,0xe5b2a9e2d5766938\n"
".quad 0x49a4dd9f083a3881,0xa610772c89ce2899,0x531c464b9c50b2b7,0x6566638b1e4c0561\n"
".quad 0xa9e3881a60eea25f,0x338922534d9b9474,0x44eed556d49c5b8b,0x6a7027e8d5ea8f18\n"
".quad 0x56ed41a229738d1e,0xf59b478bc78b2d52,0xf08e285391227b5d,0xdf0c68d5c9092dd2\n"
".quad 0x3024c7242c8e49aa,0xfc80f2156687fc93,0x0d2cb607f6606aa4,0xe3c8974c58d587c9\n"
".quad 0xc80f255888f89c9b,0xf913a6bb46dd3eb5,0x7204caf52adb6ce6,0xe3469b1a26763579\n"
".quad 0x4beb8d80418011ac,0xb775801de9738e1a,0xec0f931af1e34f6b,0xcf833b8e0e47c871\n"
".quad 0x29bb578d12475685,0x2e30b5fbdc55cd48,0x24b4885c38ad3802,0x87db850732d338f1\n"
".quad 0x09d1107a38e0e49c,0x9f2ce3c8935d09f1,0xe3c09b94c3bbebbf,0x20ce8a94790f4e14\n"
".quad 0x0b3226120796f572,0x4684c3c4ed9c5bc9,0xdb4dee8709e3932a,0x89e2fa5588e4869a\n"
".quad 0x49b13f5ce4c89ade,0x18494e4c79b9a1a9,0xe3ca0f25d415578b,0xa349324f2e704128\n"
".quad 0x6204eec10b7b9872,0xc939adbbf7a39402,0x66eb1bd763ca9333,0x8e1362f2a24a0a3b\n"
".quad 0x4a6d7244c9757575,0x7611c815251bb168,0x99b1e3c994d6de1e,0xa1c79ebd9be47249\n"
".quad 0x3a35706f14533847,0x891d3cc1dfc3c781,0xa17a6a4df7d5ce38,0xeeed0aaf0f8e024a\n"
".quad 0x5759d8b9c60125f6,0x1b594f8922755973,0x91c5093dbb9b3341,0x91e7c74a906a1c29\n"
".quad 0xd0d29e2b3728cc38,0x5d2be17459271434,0x9b0bf0e1f38a1a7c,0xd9538ec71844db62\n"
".quad 0xe732e71624a95912,0xc51ebcb29c40c942,0xe0f8b70dbe6942b9,0xb994250fc58525c2\n"
".quad 0x1a848675c61534f9,0x461f167af7971d74,0xb8b1a44cb4e8fe71,0x160ce018da549073\n"
".quad 0x2869d380264b5bc7,0x0992e7e5a4b0f3ce,0x92021593087898e2,0x94b3f3b04adce201\n"
".quad 0x77721d24c70c3cb8,0x80a93871a6b3d4d8,0x0a5b8b769060ebc7,0x2cae561afc1b7388\n"
".quad 0xbd0b434d2dae2079,0xbee5b04e248946a1,0xdf2b9c39abe41368,0x1ddf0c44e6d03843\n"
".quad 0x4d87085cb5529fdf,0x8494ce0c79ed4037,0x4df0444a9a4eb98c,0xe2382164e7c25703\n"
".quad 0xc4a3d87e940f406e,0x0e6c2c4c1b104766,0x43d9978b09b4fe7a,0x49173c1ee4094e4a\n"
".quad 0x9021c2244b7b4afb,0x6692f24e9742ecbb,0x2561cdc357f9e221,0x6ca786d06591a683\n"
".quad 0xa0d4db6b37bb1172,0xe5971831623abb59,0xc324a641df12ab3a,0x40e3737633d65770\n"
".quad 0x7ed3d3b8b49ae8d3,0x591900578dcb8382,0x6ec305477413c881,0x7bc1e8dbcf8c7a12\n"
".quad 0x61ebd3621372cdd8,0x3114f557b1354d3b,0x756159b145a17aad,0x40de02bb31c3cdc2\n"
".quad 0xb033fb7728ec3de3,0x5a8d472a54053714,0x043ae5d6d3678736,0xcdea0d4cbacc63ae\n"
".quad 0xa81d773c9e01121e,0x3e0d156ca7823dc5,0x8c18f3a0ab5aa004,0xae0d8621ed71a1a8\n"
".quad 0x86e2516d3687fa31,0xa1c72883dacfb69d,0xac39f21c004e3549,0x55f02662c95f612e\n"
".quad 0x453b76851b82410b,0xba9ab2894f513aee,0x94dd8b8791e2c20b,0x2b61fa187bb61e03\n"
".quad 0x6eb2e39f0302c4da,0xdaaf157a31e02d7b,0x1c2f404d70e31164,0x3273776aab8bb148\n"
".quad 0x1c8c790361227b8e,0x1453e8159d11c20c,0x3d48621187eef054,0x2b3645c2c3c70d51\n"
".quad 0xac8019dbfd6efc3d,0x34194bb7efacde76,0x36e73e2abd93603d,0xb6590ed136aa4316\n"
".quad 0xa384f0f314f740ee,0x4c478dc0f8d16eea,0x6cb667a6c5940a8c,0x74d23536ac89f8f5\n"
".quad 0xd135432e603d63c3,0x935d4616d88ecc24,0x139016087ecd921a,0x1ac5065499e11985\n"
".quad 0x06a37653eeb875d5,0x1050a98c1a29f111,0x9e35c080a5531024,0x8635c39a05981aa6\n"
".quad 0xb1403a3fdc51834a,0xae1749bfe9b5ef4b,0x4b8458dc8541dc12,0xd03b2a8b1c2ef975\n"
".quad 0xab9562292e14c093,0x148361525b03f655,0x9b35a4b7abb3f2cc,0xf5e74d2655f08504\n"
".quad 0x73d0f7b02d1c726d,0x6c2739cd0612d878,0xef559d006b25df5b,0x0e2e818ade200ace\n"
".quad 0xc76db41e2f783d7e,0x9ecd833653386d3a,0x0577d08ad69d8243,0xa3e569f1a21c44d8\n"
".quad 0x2d4d7e9b9321db51,0x1c7ac88e643c03a0,0xe8b90f90c63b42f7,0x58d5670379515d26\n"
".quad 0x09b97b01f3116611,0x8d747524d9499374,0x83bc135be7e9eb4d,0xb79e03a3aa956cbd\n"
".quad 0x0768bab11167a06a,0xff1b106d8f6742db,0x95bad9f7fb180c67,0xc8a95be0cc1d3ac1\n"
".quad 0x42911fb886059362,0x40a852fdd3cd461b,0x8517b35235ddd6dc,0x71321c9f6e5d5080\n"
".quad 0xd0aba5d15a0de6d5,0x384a092798b43887,0x43dcc584c6083694,0xd58e66ab9d8e7787\n"
".quad 0x22bda12c275b3209,0xaba6e5aa79a608da,0x68f3abbc2116e576,0x17bde33997276a71\n"
".quad 0xc7b669e1de917345,0xc9251516adca4b72,0xf6bb50e8565efb6e,0xbcde851e2320f68c\n"
".quad 0x6a3b5407839ed217,0x046b4324d95fcebb,0x621228120b645c7e,0x111eed338f51b114\n"
".quad 0xbac272acd3cbeb08,0xc54494da055f82d2,0xda09493ce7459d6d,0xc4ef6f9d4603de75\n"
".quad 0xcedcb2e000d5e288,0x428737ab9ddcb73b,0x64a1429de6e68a3b,0x66e4db03dc5ab66c\n"
".quad 0xbd1c10ae70c2e977,0x5a76ad5fff2bf87b,0x53a7231739718da6,0xe7b973a850c03007\n"
".quad 0x46894355cbf06a3b,0xaa489a33e5d0c639,0x6c2dcec47769fa45,0xa7850848498ffaa7\n"
".quad 0x92ac75f69714a3c6,0xf96f3ce56ac19a75,0xcdb977047bbf3f20,0xd8a1a2949913f83d\n"
".quad 0x2859321883d1101d,0xe02d7d6566ceb965,0x5552015e6589f98b,0xe860b2c348c356dc\n"
".quad 0x5499236eeb48a88b,0xdd6c28e36756bfe4,0x1d3db3b6b06a95c9,0xad46181933be75fa\n"
".quad 0x46216d9d1d618100,0x15715c1b8331d3c1,0xad122b766ed1b0f1,0xa57e63da5f39425d\n"
".quad 0x21e84df0e2e6b92b,0x3d1b7577d0a7b768,0xe73607a73b06b30b,0xff562914f1bd6328\n"
".quad 0xe3204c892316be32,0x128d5609cb101357,0x4164684d5de3c936,0xe4a7ebc982691ba6\n"
".quad 0x074ec6609455a215,0x1a98ddeb20cebae5,0xd2aa5999cff77fae,0xce961c40c257563e\n"
".quad 0xadcd39d98a858ce2,0x8874d9857990c05c,0x0a9aaca30f319ccd,0x7c43504632696380\n"
".quad 0xb98236ad56a34584,0xa32a7a9a5c79d538,0x8d47a6ceb5204924,0x62930ffceef10819\n"
".quad 0xe42ee22a2a77e92e,0x74eec76387a186c3,0x31c4a3c98c16ef53,0x94f5956d700dce50\n"
".quad 0x0f0111eeaf4a0613,0xc796c3117c281067,0xe53b30168e222b40,0xc66321d40984a026\n"
".quad 0x96586712d2bbf925,0xa79b81acd314e4e2,0x2e03f62cac8d69a5,0xeb651c511343c1e6\n"
".quad 0x6b7bee1b6878aed8,0x3e1ac4a03f52bf05,0x809828b5b6cf1758,0x35a8bb4bacf26306\n"
".quad 0x243f350176d3bd78,0x49ca222d9b75f07e,0xbf68cf114d1afe80,0x85cb71edf45b1552\n"
".quad 0x4fd4c671aedd430d,0xbe7829e320d69770,0x22981c19bb4b2897,0xfa684e0f280d859b\n"
".quad 0x16387b88dd0013a4,0xd69aa9e09169d5b6,0x7d72861a0c2fd288,0xeb22359c96afbd4c\n"
".quad 0x3ab28b1932c24b42,0xbd4912a1e4141287,0x934c87a24aa0839d,0x9e6f0e0323559bc2\n"
".quad 0x29f46a2ac0f4e0a6,0x56106cb336edabe1,0x818640eb5d4d7dc6,0x71a361c85d066d96\n"
".quad 0xb771d921beb15104,0x07cd644e55d6af5d,0xe5e874432845b61d,0x35094ceb2384751d\n"
".quad 0xc96b84e03884732f,0xad662d99c5bcb33f,0xdd6cbb4603816c90,0xb4451549426e1e19\n"
".quad 0xb9d7a9321459e171,0xec168e2fbe155c2e,0x4ce4441260833bba,0xbd9a4a051e6c9c6a\n"
".quad 0xe2d429ab4e053101,0xfa507a8b16266c26,0x90f215ed244599c5,0x7650fb52612f9c53\n"
".quad 0xd0f1ef8c94e5560b,0x3cef916d16826fdd,0x4e2d4fb343b8bfa8,0x0ad63543ab4cb0cc\n"
".quad 0x872bacb38b9c2f43,0xaea789072a572c68,0xcd7c1d39574a773e,0x84e34ed064307883\n"
".quad 0xd39db3ff5d8fae4f,0x28504d0aa49e6006,0x5d0aca74a70e80cf,0x38ebaa8deb575985\n"
".quad 0x9e812a972348e3ee,0x78baf2cc1b9ce8dd,0xbd6263f4514213ca,0x81ba4757e08c13d2\n"
".quad 0xc2aed48c111d0d35,0x3d65efd3c1d9dd67,0x429e1cf163d931e1,0x336ab88d6e8b1e5a\n"
".quad 0x7da8cda70d6e197a,0x16b730acaafdecd3,0xa14f74b04d150945,0xa397180438e82d37\n"
".quad 0xbe49b10d3923e5da,0x3ae58d968469d758,0xc9d2f662ef7360be,0xcd6fd5b942530655\n"
".quad 0x28aa7875a6d3fa09,0x8b963ba7a021b70f,0x6d8af95dbb785202,0xb281adbc199745b9\n"
".quad 0x1b0eb7022590e185,0x8ee614d4fac4f032,0xdd9b9912e6550f20,0xdd059a029b58d570\n"
".quad 0x9ba09365f513a385,0xd0990ba9c0654c69,0x3d76864edde052cd,0x3593f86c274fba8d\n"
".quad 0x91f17da9be79ba8f,0x2bda304e1f20dc89,0x16726e7a77372265,0x42f6577700a5244e\n"
".quad 0x206e204e5094ff55,0x978328b5a01eb4e6,0x097c32e8819edc01,0x8b399db45f19bdb8\n"
".quad 0x230187d9b2c905b6,0x1b4730a597abb683,0xc5dd81e6d65af2f2,0x6a1a0655daca9eca\n"
".quad 0x1dae20836a167bd8,0xa6b88acb6b3a6b3c,0x20a4656b0f692264,0xfccdab0bd39b50b3\n"
".quad 0x47ab1f231b4913d6,0x878f551dac19f620,0xdf3ca321b59127a4,0x324d6dc3c9772e04\n"
".quad 0xc4292bf62b404916,0x19f0870fd6e93c4d,0x0d38e93a09edddc4,0xfecc70f57beab9b7\n"
".quad 0x8625a727016de449,0xc9e39399b70334a5,0x5cbb88d394e6879b,0x29e6e454a592aaed\n"
".quad 0xbbcf72226b30015d,0x9b80b3071240e75e,0x4973f2d056743cb3,0x405d1e6fbd966e83\n"
".quad 0x29b77cc663751255,0x1a41e6ee34e1cd56,0x6d266ea4cc589ee5,0xbbb0720145ddb4ab\n"
".quad 0x737526476b83ded2,0xd479abbac99c5152,0x84ccf251b9b30b1d,0x741a7ac16b9edf6e\n"
".quad 0x49cbf21e15832e33,0x16819a5a194e0dd0,0xcb85eb1e6e45af2d,0xd872af0dd049cb8c\n"
".quad 0xf861bb0926d669bf,0x9ba05383a037d68a,0xa9133c712f0fed8b,0xad66224537cb0b5b\n"
".quad 0x7a34836a8b7752d7,0x57d0851bb8d262e1,0x7ddc292859f551bd,0xbc0d2a4a7363d63b\n"
".quad 0xc1125d54f67142a1,0x37822609a783d03b,0x092194b02d48a2ba,0x33e161a6352369bd\n"
".quad 0x1db2eb7e07e83bb8,0x29a98b80fdcddc29,0xfaa687bc0ae1bb97,0xd3898fa6f004b370\n"
".quad 0xe737bd092df7b819,0x9bb8d26f5bc5d741,0xc8afb0fa66b161eb,0xdd082ac052ddef23\n"
".quad 0x6efa7d94de869232,0xfd07406b7b0e6fc3,0x1046abbc8b24701d,0x23770e4574f4eafe\n"
".quad 0x7bb0d2aa1b5cb68b,0x8999cfb8ebd5c35e,0x94e32c2fdc8e01dd,0x8e3547764bf4dd05\n"
".quad 0x926c7dc86ea0c8e9,0x0fcbc6e81cd9cac4,0x931bba1332fe87dd,0xb90b2027b02fb327\n"
".quad 0x979eab317b0b0db9,0xd47d94e9613cdcc6,0x81989d63760e535c,0xc1f8dd8f5e5abb88\n"
".quad 0xf159bb8f35f6f890,0xd4de4a9a630d6f13,0xc0333a93eaf2439b,0x9bb0f1ff8711d01b\n"
".quad 0x50cfbd8ccfa6f834,0xd00b719766fc0ce2,0x3399dbf0054c4969,0xf68dce04695969d7\n"
".quad 0x16f0444f3f55c4b0,0xe0c796cfa4b1e947,0xc981ed33f55e4daa,0x5c683438dd1570a0\n"
".quad 0xa14a3aede14394d4,0x3073109c28d37de8,0xaef9f0824ce12f4d,0x1c20f3bd59b0da5c\n"
".quad 0x0e7dfd630eb35501,0x69aaf856af882384,0x3c8e30f025e96866,0x763c7a86434aacbc\n"
".quad 0xd14373a22fa8d4c5,0xfd558f6d3df14eec,0x8d9e4deaefe3b360,0xc13fd3a23ac1f1e7\n"
".quad 0xeaeec4ce379a4e27,0x5074d81b6ee8d216,0x1410473da68a6220,0x556000655f61afe6\n"
".quad 0xe1f7ce8622866ca2,0xbaa256664d5dda0e,0x2747bf6314d7b82f,0x90851a2ccb1b5e5c\n"
".quad 0xbf4b0404de2e7f6f,0xe879211bacfeb12f,0xd30dcbd12eb233bc,0x34d47edcfef6e2b0\n"
".quad 0x37ce068ce7dedaa4,0x8e83b1fde736653f,0x4e219b9f94ba6f7b,0x24ddeb08271d1eba\n"
".quad 0x3275da8c2a9b3ebc,0xde9b89d72e9d7699,0xba9bd630610ac712,0xadcd4728d5783635\n"
".quad 0x8589a442dc9b3658,0xf0cc35b24385172e,0x9ed0418286fbd880,0x08019b79362d614e\n"
".quad 0xee9a4166e5502e7b,0xe4638586be12c362,0xe0586acdb1a36998,0x814dee10566dfbe7\n"
".quad 0x9e2b0ccca7c3e32a,0x64d84acd6108f648,0x12d561e1c0e1a7a8,0x6c70355b5d1b155d\n"
".quad 0xbccbec4cad1f1db7,0xb74888189ec4a6d6,0xcabb8edeaa0c3270,0x4e38ba6d5be632e5\n"
".quad 0x07520022058a5e07,0x1dff675dbc337afb,0xb8e34da952d5b4e6,0x0df5b55e61020654\n"
".quad 0xa48b470f76628194,0x530f3addab42e61b,0x3804d656c40da539,0x0e48c4e77458f865\n"
".quad 0x5a2c750e7ae01ea7,0x0ec80ec508d84a7a,0xb68ea6d37b6311c9,0xe921f74071a035dc\n"
".quad 0x49151496761af9c4,0xae736b0b121cbd03,0xd5fb0e163ae0e6c1,0x0f478d0b4f39b042\n"
".quad 0x1ddb3667190d8a6e,0x29020253943535c4,0x2fbb9c4232194f85,0x06c74ea30c2c0e32\n"
".quad 0x1ab0d0b9690afd9c,0x18f639d55fd719f1,0xd54e3e9ec3971922,0x8c2c39221c24516d\n"
".quad 0xba8d8a1cd452f8aa,0x14a3abbc32198f91,0x26fd9bb845d8b51e,0x3e5c38d851a9c00c\n"
".quad 0x8f2a8b77ac2b5bbe,0x8c310b54cb724393,0x58c95b838c5113b2,0x85e55207446c4380\n"
".quad 0x5cbb4ec18724b7a0,0x45235da5b8072399,0x70108d6a9cd10839,0xb8aa547f764feb48\n"
".quad 0x76c7d8b67b04776a,0xadb86601e7667058,0xf67356704aba5bae,0xb108a86ebce6de05\n"
".quad 0xd48cde0e28a39646,0x55a4b1648e4dc3bb,0xc9b82c71727c1fab,0x39052d0748b21ee7\n"
".quad 0x8b9852b0d157be69,0xc213b1d38ee23990,0x1c65cb84b8048f77,0x3e57aa3cf6b69e3c\n"
".quad 0x99325287377c1e95,0x6d6a39d53b0b462b,0x4084f1ff60ec3b71,0x8366f80e6551302b\n"
".quad 0xcf8d8a5b66edbe02,0xc6591ef71d8ebe56,0xdbc9f2143f9a456b,0xb0536bc4858388b0\n"
".quad 0x53cf7966dfb37241,0xa88bbd6a9cf985be,0x6ab1584bb98cb28a,0xaad4308455586726\n"
".quad 0x08f5e438bf367ad3,0xdef7b01d301f3623,0xcc33d48b54d3a266,0xf837aef0c7b08ea4\n"
".quad 0x9a944c7ebbeff9e2,0x8b775033cfb307d2,0x84160fec9d6f4a11,0x5deecaa8b478a539\n"
".quad 0x17ab8dc0e62b3887,0xd9b68b9e5d521da9,0x4bcce8870e944aec,0x0514cef32aa92cda\n"
".quad 0x86a3867bdd5df7c3,0x8c1fb563599d3a1d,0x3eceeff8969e6ae9,0x918e5517443bcd21\n"
".quad 0x4e1f2d4e86addb10,0x6d7b11e038024013,0x481a754f34b7eb76,0xfc7fd7ff8e731851\n"
".quad 0xbcbfc7feff7f57d3,0xeeffbf6f57cdfefd,0xcbfabe6fe9bc3fef,0xf6fb7ddf9fa7e6f1\n"
".quad 0xfe7f1ff7f9bf6ffb,0xf6ff1f9bedff1fb7,0xde3fcdfafdde5fb7,0x6d4ffeff77f3fafe\n"
".quad 0xcde9ff37e7f94bdb,0x67d67ff9f2d8637f,0xb3b3e2bfb3ff7f5e,0x2c9fc5f5e1fc5e6b\n"
".quad 0x9f35edd9b0bdd911,0xf24075a7f9789586,0x99368c57b67e5b0b,0xfd9fbc65f71d35fd\n"
".quad 0xc65f3f92fde32fe9,0xff9fbc65fdef45fb,0x17a2802ef1cbffe7,0x3a6bc7b3e2bfb67f\n"
".quad 0xf78de6beb0d035fc,0x2e9fc5e3f432bcd7,0xf38cbe7f59f9c65f,0xfb35e7e7197cffb3\n"
".quad 0xf38cbf7df33f38cb,0xf9fce7e7197cffb3,0x5f9c65f3fdcfce32,0x3f38cbf67c578370\n"
".quad 0x2f9fee7e7197cfe7,0x5fb3e2bc1b82fce3,0x73f38cbe7f39f9c6,0x15e0dc17e7197cff\n"
".quad 0x65f3f9cfce32fd9f,0xe0bf38cbe7fb9f9c,0x7f70c13b9faff706,0x7f7ebf71afb9f5ed\n"
".quad 0xe7822ac7afdc5bee,0xf692cf37c1fef4bd,0x61fde533db5ed187,0x6f1c7f894cfef7b8\n"
".quad 0x5fe232fbaedcf77c,0x97f88cbe7f19fc46,0xfc469eff9fc67f11,0xd3eb3f88ddfe9f59\n"
".quad 0x23f7fcb5e7f11bbf,0xfc7d5bd7dbb4d0fe,0x7f1951f6c5ff7ac5,0xfc3fb37f1ed296e8\n"
".quad 0x078beea7d7d7f1e6,0xb9afd757e1f512b0,0x4587835ae8fb7c1d,0xf8fad5ff7edb5c04\n"
".quad 0xde3cbbfdff372e3b,0x7735f87f62a4bee4,0xe1fbba47f3416246,0xdb2f6b82b4befd2e\n"
".quad 0x9f707d40b69b6fe3,0x7c3dba625c05e5c7,0x63e5b65da542bb7b,0x3edbb41a971e314b\n"
".quad 0xf1efb79c5dcb7f09,0x5c2665c7a0efbf6a,0xbebaedcf2df8fe8d,0xd8f4bd77ecda3e6f\n"
".quad 0xf46bf7c1fbc7582f,0x917d170f6d46768b,0xfa1907fff4322fa1,0x9d791f43205e4dfd\n"
".quad 0x1942f3efefd0c917,0xdfee844f3e8dc8fa,0xefb741279f66f13f,0xf7dba013cfa2ec9f\n"
".quad 0x5f89e7c58fe9dc4f,0x169f57e73e765a7d,0x67cd481fd5f9cf9c,0xfbbeb3e6240feefd\n"
".quad 0xf4bb0fbbe0bcb09d,0xcf9fd4f37093f5f6,0x7939b67cfea79b43,0x7929b4f6238fedb2\n"
".quad 0x3c8cda78378ffdb2,0xe40e4f2130cf0af9,0xf78e793793c7cc73,0xee9e78e39e6df279\n"
".quad 0x8be8dd4f9cf8e792,0xdff1e22f8f117c78,0x3a073cdbc1fc7891,0x6ea7c700e792ee9e\n"
".quad 0x45cf9fd4f1b099f4,0xdd3c682e7cfea78d,0x393c6634fae38f11,0x0a5eab878ac22fa8\n"
".quad 0x09e3fafb791d0f15,0x9e3fadfde2f54f92,0x3e551e7e1f54f91c,0x9f103078be87f2d9\n"
".quad 0xc9fb773f8fc7f6d5,0x0ca7de0d67c38ca7,0xb3e14653e0dd67c3,0xe0baf3e10653e0de\n"
".quad 0x0845f26f73e0c653,0xe0845f0422fbbe1e,0xfe3eb3c108a4108b,0x1071e07ba785e999\n"
".quad 0xf0ffff12f3b73b9f,0xfe7c0e87ff799789,0xecbf67c57bdeae47,0x7db5ecbfa7fe7cbd\n"
".quad 0xfef7a2fde32f9fc9,0x5fbc65f3ffcfde32,0x01f731b378cbe7f6,0x37edddc6b1dfb7a8\n"
".quad 0x73cbee52eb93f7f1,0x3f7f137edfbd0050,0xe2fe673ebee532b9,0x94daf4fdfdbf65fa\n"
".quad 0x3ebf0feeba9cfafb,0xf7eea922bd3f7f6e,0xff7efbbc569ab2df,0xf8f680284975e9e7\n"
".quad 0x5e9e7f87d7aff75d,0xfe1ddf8f9b5a849d,0x8928d6a7cff0fef5,0x9f6eee755ef83f8e\n"
".quad 0x4648be3245f25fbd,0x719205f987dc64ae,0x5f8c7dc64817e61f,0x3e32473f88d71926\n"
".quad 0xf53e47c60ae7a9f2,0x16265ea7c8f8b95c,0xff1fc5081fecfb1f,0x94f8bfc7f13253e2\n"
".quad 0x9f11293e2ff1fc48,0x37e67e38d7279bf3,0x5e9e6fccfc732f4f,0xe3b16a7cdf99f8e9\n"
".quad 0x17473a0923c77e1f,0x157cc014af571d75,0x34fc451fa263da4f,0xd50a012ba54a8357\n"
".quad 0x454778944b0c79d5,0xc51c472b9752c1e0,0x3240b45dbc97177c,0x59b9c41f3798264e\n"
".quad 0xea11e973ceaa3e8c,0x236cc83a82c72b01,0xc5d5727458589fcf,0xda58fb63407ce768\n"
".quad 0x39952cdf4ab72cb9,0x40220e28dca22b0b,0xb0a25b8f6f9de759,0x3acb343d22950ab1\n"
".quad 0x0e77b315e9c43bce,0x4468945b2964f0d7,0x1c49be724559c73d,0x7f857dd88d345c18\n"
".quad 0x79670591826b8fb1,0x6e5d9c3506bcc762,0xa2a3f09a61cf659c,0x66b8d6ea42ca11c4\n"
".quad 0x0fc963a57f866ff5,0x861bc3c0039e6695,0xa8a46c389c32ca9a,0xc4f3568bfc5422d1\n"
".quad 0xfe4529e20d04fd02,0xe72de3ee4b246aeb,0x67b23e2ea1f138b5,0x98aa9e80275600bf\n"
".quad 0x16ca0e485b27fa7a,0xfa328ce4974d80f3,0xba5ca8b6c5af95ae,0x2894e2ceff133844\n"
".quad 0xa843c62b2544e9c5,0xdb1bbb757511afe2,0x3ac44be8f08f257d,0xf8aa07f8ee2797fe\n"
".quad 0x799dd05ffbfed4df,0x9c3a9ac7c234cf09,0x09e1fe96286bfe55,0x5da3ce3608755414\n"
".quad 0x55aa7bb33ba9ffaf,0xaca5ebbb0a879d10,0x42593c7a50d6910a,0x7199417f8f6b450d\n"
".quad 0xf472c0f396ca13f8,0x7faf9e4bb4b49570,0x1ed0ab9865ab1ef0,0xd51aaf28d7cbc2ff\n"
".quad 0xc5ac36b8768a51d1,0xed2c3a2a2ceff6f5,0xc63c5fc7b68a04f8,0x0f1f57ae59e25509\n"
".quad 0x3e5d320fd829d6a1,0x80cf1c661772e914,0xa5b2318de796afc1,0x3e5cb207cbc5f519\n"
".quad 0x03d0ebe39772e490,0xee3109379c8522f4,0x710a1f2e2107daec,0x058243bea5619079\n"
".quad 0xc2d038dfb5bf21b2,0x145d9772de943e5a,0xb62125f5c9772f8c,0xb428f2da9772eee8\n"
".quad 0x3eac49705d5912e5,0x781f8ef0cf5af21b,0x7542591f659d5628,0xd312e112b5504dcd\n"
".quad 0xf5b2a7ca21e7dd76,0xf424b9ae2db6c587,0x5dabb6b485a1afb8,0x0d5fbf6ddea21bf7\n"
".quad 0xdd05c260873eb481,0xf9d2a2d5405db2c4,0xa98d7afd76f72a4d,0xff4a3ef447224bf6\n"
".quad 0x3cf7c6cdd08916de,0x579c03e757fa27bb,0x779202b8d7ff6983,0x951938b9230e23d1\n"
".quad 0xcbdcd7852855e37e,0x4afd4c519b8bc194,0x0e0dd435f6fca874,0x6bc90bb12ed29dd5\n"
".quad 0x35e8503f08c0a757,0x2ee38682b96ec4e7,0xce7fa2d71ee1ac93,0x2e3c5463647a1447\n"
".quad 0xe83ee24046f77221,0x2a61e47abfb8541c,0x5a26bd6d76fe9e08,0x9dc3db83e3d02278\n"
".quad 0x6ed70f2d5a85261e,0x3ed75e15d0a4f0b7,0x3d23ea9aa63de74c,0x19c780defdbaa07e\n"
".quad 0x2946a447a22987b2,0x269a7dc458db5bea,0xb2e69a8d5e596481,0xa96b1330ebcb497e\n"
".quad 0x3b34e63357bed5c6,0x271bbcbc14c2d5fb,0x9af46e52d1abd38b,0x875a7bcbcae2ce01\n"
".quad 0x72f261a172f2a0b3,0x0cbf186ba372f280,0x0e616cb8e95cbc9c,0x0f920f5f54e07e4d\n"
".quad 0x83e470642c67557e,0x4e07e4506738c577,0x5dcb221abe477776,0x079641257b7e9cec\n"
".quad 0x2010bef483e76dd9,0xb4f8f4e5f6a427cb,0x17d5149f1f02bec0,0xe12bf1fd984863c0\n"
".quad 0xcbf41cdfaa04bcf1,0x2d1e072da992f1e1,0x7432fa8b3781304d,0x17c41095ecc120b4\n"
".quad 0x97c210950c83e392,0x97be92e53a25e372,0x22f7425ca705a3a2,0x702afed85cc88470\n"
".quad 0x3d47a8e0291d6c84,0xf187963a197ad36e,0x643e5711c8cbcb2f,0xe8047043fb1fef45\n"
".quad 0xfba791b12be78f17,0xfcd5c6a0c9613074,0xa5cfc72d13710927,0x0a4b2c224a6b1e46\n"
".quad 0x519812244a65da35,0x303d7a71682812ae,0x68b41977721e55da,0xfc3148738813e95f\n"
".quad 0x5dcbc4a0ccb941e5,0x623357c7109c60e2,0x9cde20027b764db8,0x1e588c396c218e27\n"
".quad 0xa6a8a3cb0f813545,0x25dcb5259d2da1a0,0xc77e5a721858c5f5,0x84d4c24bc2a42f74\n"
".quad 0x97307b56886132d7,0x78f3dd234fc242af,0x15f64e1ae75026f0,0xbf27cdc7da696848\n"
".quad 0x17b8f6f5482d0882,0x257f27846885a0e3,0x163affd72ee6820b,0xd9095ec81f29e10c\n"
".quad 0xbd5bf1990c145cfb,0xdb4972b7109f0482,0xb492e52b25e08267,0x2f19d6e4c5a0a217\n"
".quad 0x845e63c3c8894124,0xe05297bbeb8e9681,0x417814c7f2c07953,0x3784f85e041d795e\n"
".quad 0x92bd36f76e000d79,0x7bf7e0192dcf6efd,0x79e19dfbe61af3c3,0x7ac75e4a5efdef2d\n"
".quad 0x6d83ef38331c6b8f,0x39af9587bc67af2b,0x764a5f00ea3e577c,0x9f2baa72f7ff09e5\n"
".quad 0xf89293dd0217c390,0xd097962c84fb9c62,0x427b9462f8a213dc,0x97c3171f720a5f10\n"
".quad 0x8f3edf9065c7dc53,0x45f0251eb24dcae0,0x0d7be9375fb37704,0xc2de8ebddb87b5be\n"
".quad 0x9976f4e5eec4dd72,0x484f6f8e5eea4bad,0xd3dc084ae040f95c,0x0f3d4bf36971f6f4\n"
".quad 0x4f6825cad2473ede,0x88972b99b8f95bc1,0xc35e3e4efdba267d,0x0e783ef76bb3bf6d\n"
".quad 0xf6dc13ee167e7db7,0xe3e6dc63e5b7f399,0xaf5bf3e4b0fb2996,0x45d7a87302883a3a\n"
".quad 0xb9e6d5a7d2e082a5,0x494ee176782f3adb,0x3bc21da12c2e226c,0xde3da5547c9fd54e\n"
".quad 0xfaa3dab0bfcce2c2,0x1f4505a3dd7b9ec3,0xe34fbdca8d578bac,0xafefd971f0e3b88a\n"
".quad 0x7aa5baabae8bef38,0x4c5567576c93288d,0x1618ca7d18382d96,0x3f9a932c6a84e174\n"
".quad 0x327abd061ad419ba,0x684e200c31f8f7ac,0x879446001cb03b56,0xc0b6ee051e121bdb\n"
".quad 0x161ef843497e8b9c,0x899fee1ddf82b661,0x31edf180e3047322,0x694760f9c160f954\n"
".quad 0x058bfd76e40c325d,0xd5d1fb7d4388e878,0x1d3cd79f2a77fea8,0xe488c5f1df27826a\n"
".quad 0x532be3f4647c5d60,0x27543542547e24f0,0xed8ecc84a6edeba2,0x58d1567dbb7dd112\n"
".quad 0x24b561e88878dff3,0x963c7c11754e921d,0x7e8859574ff7acee,0x5ab37abb59f07bfb\n"
".quad 0xba38bdde15848724,0x5bac77f6e3efe879,0x41addf5d89a21883,0xbf749fee57ead5c4\n"
".quad 0xa51e56f26e7ff7ef,0x2a1fefd6d2cbd68d,0xbdfb31373fd76121,0x0f2b430e56ded190\n"
".quad 0x958488fd57f72f9f,0xe473d80a1f2b0947,0x9d78b7cf4d562eeb,0xef303efdd763e1e3\n"
".quad 0xd5cb6a062bd9ae61,0x5bad0f91b770412d,0xea45bdfe1ce6171f,0x1e392fee8bbdfdfa\n"
".quad 0x8d289361971d625c,0xb1edb4f83d8fb1fe,0xea8859a8d8f8a6cb,0xae83177a3e1e65e5\n"
".quad 0xba01772a09079406,0x2400888fb9db1359,0x00bb9508b12396e8,0x0a3d68d71608f1d5\n"
".quad 0xe287cfc83ca80481,0xba49885adcf494f3,0xd14e268b7e094312,0x478e745de218b0f9\n"
".quad 0xe06178c3083eb9d9,0xf753a2ef52e07fb6,0xbc31868a37a9e147,0xbb151fecfbcc3eb6\n"
".quad 0xded571a890ee3cb2,0xce5201efd8c9da1f,0xed341f05407f68fb,0xc5034f4455ccad36\n"
".quad 0x0082f5dd76e864ef,0xe82623f5b5d13bcb,0xb8e88c1f26eb9f92,0xbb738253d02da503\n"
".quad 0xc6d4fb007796e1f0,0xee3b3b8f6b1e8789,0x29cc1fe028742c77,0x981c33a830192755\n"
".quad 0xaa74ee1b7d6ab252,0x3fae0f5d39b5395b,0xa7508ca5b7aa6891,0x38fe7378b1db0bbe\n"
".quad 0x54cd10572b800482,0x19f628622d129710,0x68393535dbcd05da,0x82d001c65a4bd0e0\n"
".quad 0xb7cdcbf69af850d4,0xd6cb4efbf3f6c13a,0x4f5a01d439ad7ea4,0x29eaa85e2addc242\n"
".quad 0x23c6eee2faa375ab,0x1061807a148b86b1,0x886c1c9e46a42222,0x8eaeba6b1ef215a6\n"
".quad 0xad1a398f028bb98c,0xe6e3c07ecd7e9618,0x9013f093e71fa240,0x982d55b3f919de23\n"
".quad 0x73d280c48a3ab01d,0x6866980c911eb26e,0x3bc34f734c4c253d,0xe25814ded8ecb344\n"
".quad 0xbc617ee8b96793b3,0x2daa7d9a087366c6,0xee9e7333e3b75703,0x56062b228005379c\n"
".quad 0x43123325fd637805,0xa3bb43d82d6419b9,0xba6450f0d1672051,0x2c3877cc976562a4\n"
".quad 0x361f4cd767dc8ce7,0xb038b0f473053b1b,0x9f1a7cd1bcc66c2d,0x56f74d0ca7969abd\n"
".quad 0x7750df11438eaf11,0x0988fad0034142d2,0x86d2a7fc35382190,0xb538dba7e473f530\n"
".quad 0x485c3851b98b6000,0xd3d407433f1f3a11,0xe55ea4d42805ad70,0x7fae1546981b5886\n"
".quad 0x727880840ae873de,0xd20451849f17ba1f,0x3e4b07629dcb569e,0xccbb738a90bb1447\n"
".quad 0xe6e6ec27c9766f6a,0x6756d45ab3ef9e41,0xd4218bc55588b16c,0x24e2e757bdcc6f55\n"
".quad 0xc3aa02d5b163d23a,0x6b96b84a1287d742,0x0aa266287cc50af5,0xdf56eccc99dca50d\n"
".quad 0x1b77060e1cc4756b,0xa685aad2435505d3,0xecf74fd67d9ffa39,0x0a90590b2ad517a6\n"
".quad 0x26db0ea737b3c241,0x3ae67696cc16c1ff,0x06f36ef53ce8cdb8,0x7c67c937bde08297\n"
".quad 0xe74f094423215ebc,0xc18482da220d3490,0xe46ab96f55f589ae,0xfb125e7251407931\n"
".quad 0x0e366e07ab632042,0x8156eec781101366,0x7fda142be54ebcea,0x4aea16b96aeda4ad\n"
".quad 0xef2567d66e7d910d,0xe90166c38efd086c,0xa91672b9aed9d838,0x39c293e8d95c54ee\n"
".quad 0x0c3f5b02476ac2ed,0x91683b5ab19aa7d4,0x3b2c7310d0f7d5ba,0xf18f3fab8825d7dd\n"
".quad 0x9cd7728f6541f4e4,0xa77171613d2b5880,0xa075a57990875253,0x6f850a91ad33a275\n"
".quad 0x2fd0de24f8695350,0xcfcd081c8dcc514c,0x3d9fa146f8c87510,0x5240142f0303cb08\n"
".quad 0x13ee68ed9c35d34b,0x249936d7bb46de75,0x5411ed273e347ea7,0xcb178686bae94d9a\n"
".quad 0x94c904dc70190ef2,0xd785c595cfccfd53,0x304c06d5b64247e7,0xa9100b391ce19472\n"
".quad 0xd326ccbc776fe1f3,0xdb14c0e34261a686,0xf4a6cf1cbf22a258,0x85d83eec022bd148\n"
".quad 0x7c81b2ad80e64189,0xd3a0dea62802639e,0x68677430cfe80276,0x032615985aabe1c1\n"
".quad 0x31ecbb1153839aa8,0x94fde28f439747ad,0xfe9d22d872ea43a1,0x06c2172945481204\n"
".quad 0xc31894b7c0276d9e,0xdb7708fbaa5b41d7,0xb4d4785c168c377c,0x0751975cd1d05607\n"
".quad 0xc3e1a4e198e8c3c5,0x7eb0170c200c0861,0x6af6d3a894c6285b,0x5a324134aec39717\n"
".quad 0xcaada7f1f47c2dd7,0xdda4acdd0836f625,0x3399bb36f6f2a19f,0xcb7c311063a0f5e6\n"
".quad 0x38dba015221912f9,0xce887b2993fdd085,0xda717e6e5531ef87,0x37024326f53ec743\n"
".quad 0xcbd5dda9d65f7dd7,0xe76a3ddd94f21db0,0xdabeb284b42cf8d9,0xdda379ae18699c06\n"
".quad 0x08a70e1cb7f91572,0xf870e5964ced7bce,0xe1ca988258a3fa71,0x442128927aab589c\n"
".quad 0x536ac0b4ae2095f0,0x081ceeaa94e20895,0x461dca2fc40f267b,0xc6cf36ceaf0e2ce7\n"
".quad 0x46efb578516447cf,0x1d8e1c29dbada3e8,0x708248c503624327,0x890ab2ac29987964\n"
".quad 0x44d47293077b2e10,0x984eaecc8165a704,0x3e749b5fd33831e5,0x7dda13bb4d49c29b\n"
".quad 0x6f2317210e70e549,0x0c4ef91e1c5953f4,0x6284b1c3933b7a1e,0xd1c3893f7a0edd68\n"
".quad 0x1c19fe2d53745890,0x0e4611772222a10e,0x6e0658a2bc98d788,0x05e6ab679bc516bc\n"
".quad 0x8df6ce1c191e33a7,0xf003892e4be9ad11,0x895c41325f763b86,0x71054ccf05e68de3\n"
".quad 0xe18498781b64b50c,0x7024c96a760dc685,0xe0a6f5cf0db84b5b,0xfc4cf6bd3f20ecb7\n"
".quad 0x8b2546bbd1e1b0c6,0xbd8f3989aedc8bbe,0x6182e0afcc4e4b2b,0xed2e85ce9bf87377\n"
".quad 0x3149bf77f22490a0,0x9d0287bdbe0535d9,0xc4da4e32ccde8897,0x0a96b7a22506cceb\n"
".quad 0xa6f2048b909aecec,0x12ddc4da02ca9b91,0x1203504003c31bd1,0x61afd68b678b9bb9\n"
".quad 0x5bd8ffb37a065597,0x318de8592aa5a2db,0xec6f22cb88ac4a3e,0x7a1e7bac19baebb1\n"
".quad 0x183c9f832e2087c3,0xc772f63777a067cc,0x19ade8de46993e3f,0x0193175b74df4d38\n"
".quad 0x94e308d728295ade,0xec85e25bc3dadd86,0xc1ed116e9bb0326c,0x4af26f05c973f3b2\n"
".quad 0xda6ee2c963843af5,0x6f224c978dd2169b,0x3cf2926d4f6c1b9a,0x835c431d897846f2\n"
".quad 0x91a0df80939f3d5b,0xbc00733f68fe89b6,0xe606e9df2d12f97a,0xe5513688a656b7f0\n"
".quad 0x8fa6dd61d1be8b2e,0x7669068bbe112c5e,0x0bbcf780242a5694,0xa8f17780a75431bf\n"
".quad 0x65bb032770b4a541,0xba052420b4a9698f,0x414b45af1e80d24d,0x14e6ddafd15fc86e\n"
".quad 0xf67050bbcc7286e6,0x447ad462b5b99325,0x80c0646bddc99c7f,0x0ed61bc8725a1310\n"
".quad 0x57e1c55bbed850f9,0x810deca7862037b2,0x57556c9b577b2267,0x26e003137c1e4b1c\n"
".quad 0xc17d37d1a6541787,0x1bd852e0ecdc022e,0x7f2b98d439169afb,0x266a2102d90f7a2d\n"
".quad 0x3dd8491831c1ab77,0x06fef6ea6cb64f64,0xad37730e47ddb58a,0x63c6e834d11a1b82\n"
".quad 0x6e20ca8ee9ed8cab,0x36e1a577aabd0dad,0x097b8447721221c6,0xff48d634951a4db8\n"
".quad 0xae6128d229f6b125,0xc363644b9e1b4893,0x6d2558f3b7d98192,0x81a928ed551d9069\n"
".quad 0xae3d88b04d9449d5,0x585254da039f3b2c,0xf038ed23cd7c66c0,0xb9b40b2fe883f215\n"
".quad 0xd01c93fd17baaca5,0xebf065625e529e2e,0x2033fbe55e9e3b21,0xd88798a7280d523b\n"
".quad 0x01d80596c77267e2,0xcec5af8b297551cf,0xc8bae9ebf4bd71c7,0x4e91582d2d7616ca\n"
".quad 0xf3c83c5a1f06574d,0x32b83a64dfafa7e5,0x16e1d30761329578,0x9f5e757575aa7a59\n"
".quad 0x58cdb00c2f7b1ea6,0x273f5dc2804deac5,0x34dc2389371072dd,0x023ed102a369da8c\n"
".quad 0x6e58db6310fec859,0x9766b2c6e7fbb11b,0xa768bc63b88549b0,0xb051749ee29e3752\n"
".quad 0x353d99504a035d7f,0x7d2ab5b30c74147f,0x4f224e28c6aaa580,0x970cd4de4e2cdfd5\n"
".quad 0x18c4b085c14423d1,0x4d9398d24209cdf3,0x0c16bc867f329883,0xcc667d05b67ac793\n"
".quad 0x829eec0d661b3983,0x940d214ec618f3f9,0xc3fe762d75a86975,0x16063218a17094fb\n"
".quad 0x1a49c3a61ffaa730,0xe6a00b0972528dee,0xcaf261a8c58f3818,0x52ba6d07bcc1c949\n"
".quad 0xd3d2ab37829c71d1,0x4ea13bd13d0e8c00,0x4c2355845d78e7c7,0x0f465e9c29b508f5\n"
".quad 0xb0132ecdb9d0e463,0x366f79a7de8b5788,0xa001e07d670e68c2,0x7121c63c8e038d6e\n"
".quad 0x3858e81162891f99,0xe891290ee5dbdf58,0x1c9b0c32ae939a0f,0x0f88df0279b8483d\n"
".quad 0xc2c6202100c876df,0xd2459b46539f7b10,0x4d37677fce0f171a,0x47747c0445188105\n"
".quad 0x7dd4e42686565d79,0x855321bdc6eda319,0xc31336a15f863934,0x26df639ba7859f88\n"
".quad 0x69b5317d9862e3ae,0x422cbcf40cd34f51,0xe861a0b7cdda9920,0xdb65e7d3715e167a\n"
".quad 0x818276d368872762,0xe41d51549e5a03b7,0x33ea1049a87d1eb4,0x29ec62cbdcec44a6\n"
".quad 0xefb542fcb7bcf38b,0x7b16512e2834addc,0x253b47a8d1e29d86,0x8d0c3dc549a1db41\n"
".quad 0x9cd3a55a4ae8bafa,0x9a8e9dbad350a95e,0xca3c243bc19c39f8,0x9c9bd690b1f32802\n"
".quad 0x0cd075653678a426,0xb66f002a61b106df,0xd73b5c0dc8f70de3,0x67a138976b082308\n"
".quad 0xbc58e37130838a8a,0xf47343135ac118bd,0xd241b567ba59874e,0x37aa1fe38798f495\n"
".quad 0xbf443cd03e7d0ef1,0x441e571c5f8b59da,0x8ef553fc53e2f377,0x3194ff860dabf57b\n"
".quad 0x7787bfbd437c2269,0x0d6f041936ca917a,0xcd7c93672a31a26d,0xdf8f7bdf3177383b\n"
".quad 0x60250cbeabbb461e,0xee669765005d62dd,0x624a0a1dcf42adb4,0xf8fe6abcc49d3905\n"
".quad 0xee0734b9199b6e3c,0x2f97eb9e232e9b44,0x93e737b5e06164d8,0xd3212ae3dca79e05\n"
".quad 0x11168423a0c7378d,0x5dd811599503d318,0x2ae93d72c8da785f,0x69d671886115757f\n"
".quad 0x07d86a6e503a5762,0x9361c38ee764a4a3,0xf29475db8dd3e90e,0xd039398be75880ee\n"
".quad 0x1b0fa808f1219969,0xc19056e6c8918344,0x2d6cc663aab74012,0xa2f130f6f409290f\n"
".quad 0x64e36690e3555db3,0x132d5db5d77ee3ac,0xfd38e0961012ef4c,0xc172d9b4c41ad393\n"
".quad 0x60e87f48bfe055ef,0x8592ed6e4082e5f6,0xfac70ca098451681,0xe2791819550fbf08\n"
".quad 0xb61d9c2ff76bd45e,0x3839b27a09fcad05,0x9f1b75df2ade847b,0x8ce0265e9ba15828\n"
".quad 0x77ef3e7100f3569c,0xf677f21ef61f5bd0,0xfca72944e2d9508b,0x08b960b4dddb9bd1\n"
".quad 0xb20c94c2f11d82ac,0x2919284704741cbb,0x225c79b8478e44a7,0xa51bc5b09ae7b045\n"
".quad 0x96ce104a90fbb50e,0x0e719215b00b06fb,0x618a83f59ca26081,0xc32d61ec03162555\n"
".quad 0x4522e095884922c5,0x58adbbdecdfff6f4,0xfd8afeef625b2cac,0xc13f8c25dd49a201\n"
".quad 0x634c1ba1f8d8fd4f,0x6effc64fc1b1b6dc,0xcd52511535425c6b,0x59f67586c360d5b3\n"
".quad 0x6232332854d66aab,0xda4d19bbe24b88c4,0xef60f821dec253f9,0x7615f1d0285d7b3f\n"
".quad 0x7dabd542cecdcc18,0xc1008027b8c16ef3,0x318a318b078046c7,0x0cc65eb5996603c3\n"
".quad 0x723941271fddfcd9,0x4c9cb7a8f12d5611,0xa3a0a2a8606940d1,0x3b11af635811e579\n"
".quad 0x4b224c1a903c7acd,0x0155c11d1d8356eb,0xacab746d58424092,0xdef19c8b6ba1da7a\n"
".quad 0x9e809906310a819d,0x1a5cfe3ecf441196,0xdec3b1c7b1d18cce,0x8801d428f0e02330\n"
".quad 0x99693d2b2579f765,0x0f0d2839ed622870,0x5019603681613015,0x215a3420073f4eaa\n"
".quad 0xbb0c83894b49e943,0x8762d882b1c27888,0xbc009af64d32c781,0x338962032c8f7e16\n"
".quad 0x0d2c0158e8d2c120,0x44828b072de75cc2,0xab1e21c1ac6ec5a8,0x1bc0ce80130a6088\n"
".quad 0xf85220b0eab90e8c,0x9d5670e4e1fb6235,0x9332bcee898608fa,0x98b1cd7d0aa19df6\n"
".quad 0x9ab5761621a00893,0x833c30c9b4192e91,0xc64d38907330388f,0xff77590fd3c54a09\n"
".quad 0x6de7d00cc9b8580e,0x3879b02ee47f7f24,0x688d659d015ea3fd,0x79034741d182886c\n"
".quad 0x77cb1016d5c5a213,0x2315579b0b865918,0xd083b59d5b8d3a13,0xccb66707fd3d9e21\n"
".quad 0xbcae744ddec7e3c6,0x18ebc782bc166c52,0x82827112f50c324e,0xc38320219da994de\n"
".quad 0x2ec608fb37e5e3ff,0xdd229f55c451f811,0xde044f934b0677db,0x03a4dfe4ca093176\n"
".quad 0x37ec60c74bdbc700,0xbc5a4d83994c76a5,0x83fe8bdfd085cedc,0x700e4d240ffd8461\n"
".quad 0x1239073177121697,0x06dfffc76d02ccc0,0xc688ca66d729451d,0x66db7a92cc54050a\n"
".quad 0x17a2eb6a3cc2741b,0x2d5db3889cd087a3,0x7a161ae0419be312,0x1adcec13a41b81f1\n"
".quad 0xa75ea61919d416b8,0xe2e75051c9671176,0xa85668ba507734b1,0xf0ea394c61679836\n"
".quad 0xf0cf22667ed07d30,0x5f0f1cac2185260d,0xad04dc21f47d3614,0xd009447481760ae8\n"
".quad 0xd83babddfe28892d,0x657c76ff1c5db097,0xbe6784410a336574,0x246c3986cec6aa9c\n"
".quad 0x6bd265ff3261b1ec,0xa552e634438af862,0x2ec865e9b9e79c58,0xdbd390ce315e724d\n"
".quad 0x75ecc9ec787b99b0,0x53008cd9dff81d28,0xbc5721d2c7c43008,0x57abfb0aed17d368\n"
".quad 0x1b1738a6aa30bb39,0x96483828f54ccd8b,0xb3bdbd16c61748c1,0x298e0c2c459a0db9\n"
".quad 0xa1a9ce8ee819863e,0x2d10b18898659a8c,0x9563292d9b4884ac,0xdba010d723245221\n"
".quad 0x448d4ca62e80412c,0x31b730edf79b70b8,0x45e1801806001d49,0xda51597f46c1b513\n"
".quad 0x5083b036cc21c3f3,0x78221608bbbcd333,0x69805784e4553d83,0x8ffc39f773686542\n"
".quad 0x32d0043e382c25ec,0x2824d4cc75d0931b,0x53b92d4e8d2118fb,0x5762030c3c7d6f73\n"
".quad 0xd976d26d8d8c109b,0x9f0aca1820fca807,0xe6eda1198f578510,0x43aba8f40f0b1881\n"
".quad 0x2d12c0ba4d942031,0xf8a9066f806f8911,0x5b26f616fc2b2f5c,0x7bd05be774412a44\n"
".quad 0x41ef665d9fd6d914,0xbd44e0f8c8bf1a6f,0x736d5adcd7f9be04,0xf89c35938ef60af7\n"
".quad 0x8107d0db0de80df4,0xd949bd01bdb2db39,0x38de435f36ede5e3,0xc0b7f45947506423\n"
".quad 0xf7b1136af61f4e37,0xaac2600aa616f412,0x9783e00dec25ee9a,0xee426f80efa5ac58\n"
".quad 0xb77bd88bc48547fd,0x58dec35f7964db5d,0xbd03beb10990162b,0xe102b35d1cdaed0f\n"
".quad 0x6b66d99c22cde83d,0x017ade869fec1e0f,0xbe6f212fd4348b52,0xe89bda748657d9c2\n"
".quad 0xe01d93587231f8fb,0x4b2e76b1ab9be83b,0xa42cdfc59ff0573c,0xbf06be5a4558b9c1\n"
".quad 0xdfc75fdba5373b57,0xf6bdd1b569e8f02c,0xc3aef35a0156fc1a,0x02918e81bf04bfb4\n"
".quad 0xcdf81defb3b3ba18,0x97a3b907c6269572,0x03c445b59ecf77d0,0xbd7c659be87bc41c\n"
".quad 0x2183df44deed7b37,0xed1efa1efefcdd24,0x8c77c177e7098955,0xf035f602462b840d\n"
".quad 0xa1af0df64f07c9bd,0xabdeacd81268e3ef,0x11b79419b737f0d7,0x52e70c201c007bd1\n"
".quad 0x4591828df84df507,0x98c7000eff8305ea,0xfc0afb13cef6a95b,0xaa987d6ab46b2c16\n"
".quad 0xa7f545f71f781057,0x916654b3820d787b,0x8d9f061af9a92216,0x07c206bdb03d59e8\n"
".quad 0x18bbddef23560059,0xc2109b45b039131c,0x60242824759c183b,0x1eae1415eb76bb3d\n"
".quad 0x0a1af47b1e264dd8,0xf3545c5c61c4dba7,0x47b890bceb3f0c0a,0xf684559c405bd8b1\n"
".quad 0x46670e0af1b35183,0x7a7102afaf3ad372,0x7162aff4383280a8,0x2fad00facbf90bb6\n"
".quad 0x21c0d1ce38587180,0xb9871c34ff26bd9f,0xc786bc4dd8357c66,0x793d20fabb78b689\n"
".quad 0x7a32dece38c39119,0xf95c6276f91097e6,0x98059c37b8f0d7b4,0x19cbb5ff1c707bf3\n"
".quad 0xa62197181ef96528,0x28538e0d797c04dd,0x8e3c45e5dbb15457,0x77917ac1a326dbc2\n"
".quad 0x2523c8468e6d38f0,0x395b0e7a671a22f0,0x04c087c705bd6208,0x671e02fa9e98dad8\n"
".quad 0xc16f27ad85f0de4a,0xe2fc213829e01871,0x1208eab3ff0e3845,0xa6ddccf1c706bdd9\n"
".quad 0x28d672006f98cd51,0x0037e8b2e4ede271,0x7bde7ef5ed98b639,0x1b9201fe07669c88\n"
".quad 0x75326359c883bdbe,0xe3bec38f177bb4ec,0x5c886bddeeb7c250,0x35ed3c40b9470e13\n"
".quad 0x24b350f838a00e4c,0xa126b4aece4415f4,0xa8cc391097a81f56,0x7c886be73154982e\n"
".quad 0x00f7bb5848024613,0xeeb4d7c1731710f9,0x4fc93fdf9fde4845,0x80e9bf5555c908bc\n"
".quad 0x71f674f7394117b6,0xd0bfe393137dcb81,0x3b57221ef0886dda,0xe5025e7f49a01622\n"
".quad 0xe4c4dec90ffb84c0,0x55f06759a39e4c58,0x89bd84e0c70a3e4c,0xda575f6a036f79c7\n"
".quad 0x6d417f62f8e0f7cc,0xf1fc4e3900b7a6d9,0x9c71c22f0fc6d439,0x037acaee29962980\n"
".quad 0xc98db47cce85738e,0x7d2fb747a3bc683b,0xbad60958ade3890d,0x3e9438a037a0f6f3\n"
".quad 0x73dc14e772b1871a,0x5ab0932adec107b6,0xb27a7f618d9d25cb,0xc9b3ca41f8403b5e\n"
".quad 0x07f63b6c0939419e,0x60c2d35a1c8e49b1,0xa6bc435b177d27b5,0xda19bd5afdea752a\n"
".quad 0x58a1737d1e82664d,0xa98e0301259e2db3,0x3539998f1c1868d3,0xc1faf84e587f00e4\n"
".quad 0x14f82ddbb3d3847b,0x5ea66168524c6e02,0x5c74208f9ae204e7,0x9bd0f2f1eea804b4\n"
".quad 0xabea49c0da28187c,0x753df8ff0e9ebb66,0x10e4c86c72429379,0x022b579466762b04\n"
".quad 0x11d4a4368c0a9785,0xf6ae4703f13befc4,0x8a2e24e012d621d2,0x000c26d19def3655\n"
".quad 0x7255d886649b32af,0xab279f440dd4742c,0x1e6458baf088a1c4,0x8f8ffc21451ff53c\n"
".quad 0xbacb85a7518ade4e,0xe582c16448299bd8,0x371fbd03d21a4764,0x49cd0b51c4501608\n"
".quad 0x1bfa0d4dc4608e1a,0x1591cedbcc47002c,0x0463b3dc0b23b833,0x8ddd033877b624a1\n"
".quad 0x49b0fcbd41fd4e36,0x60735966ded37819,0x3246b079c4530d1a,0x584cb9cb6a9fca33\n"
".quad 0x90275706bc8b45a1,0x22a44f3eb3a20d13,0xf133f929e3971edc,0x71318ad8db243835\n"
".quad 0xb7a6cd7b47d01873,0x8d0270101decaa27,0x47463bc4cc1a7e95,0x8d0a8585e4fa3bf4\n"
".quad 0xe7e360f98e38d143,0xff4f9c72ee1d1ab7,0x6c82cf661c9fe483,0x1b55ca9b07184e58\n"
".quad 0x2fae911187410c2f,0xb519878b6fff43d5,0xfad67568cf79b66a,0x67873bd93d815e31\n"
".quad 0x83f368fd682442ab,0x9b8838fe6749cdba,0x9882819ebe1ae2dd,0x18c1b4469c283601\n"
".quad 0x1f74fbd13ace41b1,0x84264443ac8730eb,0x10159a299054e66f,0xeff8c3a6221a6334\n"
".quad 0x1b02ca7139684822,0x99809d0b60469901,0x8b75f0467861855f,0x46cc8fc4dbdf0dfe\n"
".quad 0x7a5d881d66d18caf,0xe006382315344ab2,0x669e9bbdbb4dad25,0x25e040cbb3c0082c\n"
".quad 0x59061b09df6a9f71,0x1b5e83a099320871,0x3db4fd05bbc8e20f,0x4818f39ffd1d618c\n"
".quad 0x1798d06a8def84ab,0x9b439fe7d1981c72,0xd1da034d646793b9,0x3aec759671deef94\n"
".quad 0x7435619a0f356c16,0x7db07d89b59bf346,0x7622e1b361383430,0x8de8c62d4608639e\n"
".quad 0x99af472e76eb4361,0xcda380cd02f4830b,0x2082f20ecce05a31,0x4d6e3a8e53955e41\n"
".quad 0x1e26d5a771d097b6,0x2ac98731b8e0f617,0x88f42682733bddde,0x453087c8bf1850e6\n"
".quad 0xd6cd8af886df6b38,0xa52b527bca3c2f1b,0x09e14e9777efba57,0x58c0860cdd1d1d3c\n"
".quad 0xa070050d1bba892b,0xc11767d4bddd3d71,0xe2a6833c35803bb0,0x1c9323533d784fd6\n"
".quad 0xb8f789874d8ca910,0x7ac8eb38cbbd1705,0x97a94ed170ea3907,0xc9a62bf20b743679\n"
".quad 0xc20219eb3b1157c1,0x40bf4ee96442debb,0x27587c0d0977aa82,0x26c42302c0776ade\n"
".quad 0x1e536662296055c7,0x2440360c88cb11ca,0x1f852a3d37ed3602,0x611d39d899600c15\n"
".quad 0xf668da1e59835c15,0xd38e328819faceda,0x6bfbb1679cb6b898,0x9c1fb32f64c96f38\n"
".quad 0xa53e6f4a0450342a,0x006a26fd61e30b8f,0xc61caf5e685b5a48,0xcdc3391810750883\n"
".quad 0xf1e124cc1e4a1bd5,0x026b615419758e37,0xdc1e3044db2cf20e,0x7625b51ee19ac86c\n"
".quad 0x331f47c4d5b558f2,0xe1f66cfe033d6879,0x6f30b4a9468bc1bb,0x52439b478a818c0e\n"
".quad 0x1cc936208feca3d3,0xb58c9362e4bd22e8,0x018875ed71b24380,0x91064c850257020b\n"
".quad 0x0c9eb1f66e48e753,0xadc67452edf4199d,0x3b33c7031239428b,0x30a85e721f830791\n"
".quad 0xd144d1baf4dbaaf5,0x089d152505faaf16,0xd5e0e242709f8def,0x00f4506a639f616a\n"
".quad 0x358b1e02d0601ab1,0x3ed8a3974271c219,0xbf13271c7b3866ee,0x13cf9d18361069b3\n"
".quad 0x2e16c90d40720294,0xd5a741eb28c2203c,0xbb17a1f46c02cf1c,0x80f0eac6cdb31db2\n"
".quad 0x0685599260aef6ed,0xc5ade6cf2285f850,0xcceb6f959a8be052,0xf262e5bcc132f5d7\n"
".quad 0x8aea0b0b00228179,0xc4659be96c75e825,0xa0debb4ef9f208c6,0xf028649d5c06a1d7\n"
".quad 0x5a07b30278123a1f,0x71faee67027ff602,0x6d33d8e99b06c1ef,0x1b2944243ec0db4f\n"
".quad 0x4480c36d5b62c30d,0xe9d839132fdaaf51,0x071d5823ad8c80cd,0xf016153688597402\n"
".quad 0x245a9abf1a5e879e,0x290c045810393a16,0xf48e3d9834e737b0,0xafd5673f68874140\n"
".quad 0x1b1366006f16d3b1,0x875a0dfc1214ea37,0x5b703ae8ed1c9635,0xe009ec9f60ec3e44\n"
".quad 0x0e2a8821b89a36ee,0xef0a03709807f3d8,0x98fc399a9f742629,0x861f2ce98afc70b5\n"
".quad 0x3b9c5128c7d34598,0xd9a5fa3733c6304c,0x1959b2e40bdf1841,0x0ee00b2b496893ad\n"
".quad 0xac9a17e8d261cd96,0x70758edb4ce893d7,0xb4926666f0d86e51,0xb87b5d660dd3a8ce\n"
".quad 0xd0086b008f877239,0xe498b0a3eac02c71,0x65b39a59b66ab220,0xb5a1250f1c791e35\n"
".quad 0x3b2867d574691205,0x19ad5e4c9cc517d8,0x5516264ec51934db,0x62608c55861b2e90\n"
".quad 0xecbb8381a209bc09,0x8430307335ad162d,0x6b56ee6a0685dca3,0x29500f060e0747ba\n"
".quad 0xc65ddbb2ec60d72e,0xcd0e7758f53c3f3c,0x0154a34ed22cf4dc,0xdfe0a7e145708669\n"
".quad 0xefc82ff1956daa71,0x78039d98804c5b78,0x68a6d004b9bb8d9b,0x434cd6ee0d828b0e\n"
".quad 0xd9c642bd0b339341,0xd60d7a0f88d44fd1,0x3b38e271f36d354f,0x169cd4c8fda7c60b\n"
".quad 0x9b2db16949ba2054,0x672409c7311a1cc9,0x8c184872d648d643,0x65d940073bc43ac3\n"
".quad 0x5da49d761b6a635b,0x99ff4e9aa5640758,0xc262454308159940,0x05de70fac911471a\n"
".quad 0x5e2097d0e6268fff,0xf10f67077e44afc9,0xe5acfdb141c23833,0x905afecefa0f8d1d\n"
".quad 0xe47873fd874eb824,0x563da66258e310c5,0x3113ec0b86fc72da,0x367f9b6aa9a2b93a\n"
".quad 0x4363a2e355a63288,0xeaa44e8da20c1d16,0xd09fd3620080a3e2,0xe14168c30bc1cf89\n"
".quad 0x6e6305324ae78598,0xb0a36312e8248990,0x787c7857ac28e057,0x9c7de2ac5c396c01\n"
".quad 0x75db939dd4de687c,0xc467f9bd9a1ae4df,0xcc032804621b019b,0x078d734d949b97e3\n"
".quad 0x95ede58d5b419b22,0x994ea9d095b99827,0xefa919fabc0c1a3a,0x0b41863d6283b832\n"
".quad 0x62e54414834e2ccb,0x5268b1832c438af2,0x237b6fe2b8e0f79e,0x6e6f338e117c6e4e\n"
".quad 0x43f1c16faa99a388,0xe383de2d8eb6f1c5,0x7e3a382fd78b1a67,0x61ada312caf38e09\n"
".quad 0x1be744cea38d157a,0x0b38907161af262d,0x83e242df6543cdb9,0x8e2045f6b6ddac69\n"
".quad 0x1be71471dec458ff,0xd66ef63021fe1c30,0x5a6a94383e180dfd,0x6857bc1cf85137bf\n"
".quad 0xc739711cfc308bef,0x46aeea9bc305bd3e,0x7882173820b78081,0x276384097c49d160\n"
".quad 0xe142deb5646c9f26,0xe144dfdfc41b0f93,0xbc0d4c2744680f6a,0x33f053557127c307\n"
".quad 0xbdf1139df87081ef,0x86e45cb2a991c38a,0x9222f15043e202df,0xdab87389077b7f8f\n"
".quad 0x7c384bd12d1b5d4a,0xafbaa1ffc5854b35,0xb324e10f342e70a0,0x42bc84bc5f1006f6\n"
".quad 0xb1c551f94e203df2,0xdff39ce2855e1f6a,0x4e2835ef92b27444,0x05f338e6c6fcde36\n"
".quad 0x80ce5726f1ccce20,0x902e2663fe1c2df3,0x6def1612f77fcc29,0x5aa7121af5505cd3\n"
".quad 0x435f956b3877f7ba,0x8bf6909bd06bbbe2,0x84ace1c3d0517c40,0x1f473a5df1416fc3\n"
".quad 0xe61d47121af66f06,0x401be231146d39da,0x7f7daacf34cd6a9c,0xde41239d67f7890b\n"
".quad 0xab890a03169c485b,0x8849ae284dee87ec,0xc481bd89970af60b,0x244dedfb72a7855d\n"
".quad 0xbe7b56251f04aeae,0xe7aab41bfd99c605,0xb035db38c097de5c,0xd6c738c0b78e5627\n"
".quad 0x3b7c484bfd9a32f4,0x2f880b79efa0daed,0x5c486bcd0fbbacb1,0x15fe5e3eac4bd60a\n"
".quad 0x3d9bc606529ace30,0xbcbfedf07c708bc0,0xab72738e137ba123,0xf07c707bc1c036e1\n"
".quad 0x00afd4e98c278257,0x0b7e7f87311bc5f2,0x6db8fff6edad0390,0xe3cf89eb0e403de7\n"
".quad 0x61831f790177c98e,0xeb469c804bcb97a0,0xed179c784bd3b804,0xe342debd616e720c\n"
".quad 0xe08eec4dd238899c,0x9e822f70a3e3025e,0xcea3e2c79fe8b0c5,0x9d6b388177abc912\n"
".quad 0xff78b117c63b3bf0,0x684bda7b7168cba3,0xcc0f67c1d06e469c,0xce87d32b3fbc688b\n"
".quad 0x97e8d1f1a16f01ed,0xbace3435fcde8df0,0xf117b56906e3b8a9,0x3c4dfdb858ec5fb8\n"
".quad 0xeefb3580890eb90e,0xc48b1dd621ce3045,0x62c43f160af9ff59,0xeeb8b117dbd86885\n"
".quad 0x58d3fe77c1c636ba,0x7819f7ac000d069c,0xe8593ee896c38b0f,0x2508ef387c506bfc\n"
".quad 0x571e302de53e19c3,0xfbc588bdd6824178,0x40deeb7e81679ba8,0x9bd3b3fd91dfbde3\n"
".quad 0x9fd9ac776e789c60,0xf72ed671e02f884d,0xe3825ec753d7ac22,0xd2f9b024a345d1c7\n"
".quad 0x43aba55c61c78abd,0x934eb60a87141ef7,0xafab413880f7e6c8,0xb313880b7ef7a36e\n"
".quad 0x0e12fddbde8be135,0x1af73ac167a18a87,0x40f665ecdf5ba710,0xc0823ace7100af78\n"
".quad 0xd6bcfc405bf16c9b,0x3425fe3bbc111d86,0x0637100b0eab483e,0xf341617547c703bf\n"
".quad 0x47a5c78c077cdc83,0x19989c606bf02571,0xc808bdb2249cdbe5,0x5f634b0d69462f05\n"
".quad 0x302a279957a3e444,0xdb33563d6bdb18ea,0x8b15f63a8508a3a0,0x3ad9020c16e73ada\n"
".quad 0x72e5e87a0455d3b0,0x1c6f1e6cea35db58,0x0d605e71384b30e5,0xe488e1627f0aba7c\n"
".quad 0x2dcdee8112b5948d,0x1d30e22c89a8ecb3,0x58e854253049a67a,0x577c3f324d61b425\n"
".quad 0xbb7a9ae96b40b174,0xfc9806fd55e79816,0x66ede9716b315385,0x5e704f0db3fb2fbd\n"
".quad 0x1ebb1db09b1b00a7,0xde32a11ff81e30a7,0x0969c2d3c57f248f,0x7af69d365ebe8ffd\n"
".quad 0x266871b3a6e5e033,0x8cb06aacbbe0f4cb,0xdddb4c32f38ff773,0x02d0f380bcf338cd\n"
".quad 0xe311f7bb1e4da31c,0xd3d330f342fd507b,0xce0f4156ed9b02f1,0x2677260271f5eb07\n"
".quad 0xaf7938b4dc41562e,0x716a7d5f4a3acbd0,0x0fe0a4c9aade1bb5,0xe7dd5e1583214188\n"
".quad 0x617bfab8fb0bf49b,0x0002b24cd94896d8,0x40261945a63c3c41,0xc1bb22ad1f2d7697\n"
".quad 0x869587beaeac027c,0x733e9ae836883d81,0x69812ef9e70e8406,0xeb83913c08f9f4ec\n"
".quad 0x14a467695c65593a,0x93b8dad8e7632fdd,0x83d8f44cc6273f83,0xbe4eb58b92bd9174\n"
".quad 0x10409995e717e9bf,0xf7d9316b1c434463,0x067ce6f81ab4060d,0x865a43d4ab72d2d4\n"
".quad 0x8ac4ccecef875250,0xbb3ad9806c55360d,0xcac8a7af5fc655d3,0x5d0871b34f754d53\n"
".quad 0x6c9aff3305d88763,0xeeb9a27be4423e0e,0xcbb37a187db1d50c,0xe4b6ee3e9e14c7ed\n"
".quad 0xed01370b9ff6042c,0x9e271d10bcb93c8c,0x9c07b93ca5a27627,0x15a0c4da6a40c72d\n"
".quad 0x9ba11ba4afc1eea3,0xaf06d19b30d11eac,0x187dc034e9f8e4f1,0xa1b837b22e5c3641\n"
".quad 0x810c66c1ce6ed36e,0x2f063d6bcddfb9d1,0x90d95373340129d4,0x78dfb4b40383f8ef\n"
".quad 0x3ef77ef710ead9a7,0x43401e0c30f29025,0x13fc54fd66e7c7d5,0x25cc4135a36f276d\n"
".quad 0xe0259230a0536cd8,0xae3a77d671e8a8d0,0xe38216cc4388a49f,0xf4a9c6d1d171bfc2\n"
".quad 0x323fdeccb825c888,0xfce399a99b496044,0x11bae305e7d8866d,0xc5e916cb72329260\n"
".quad 0x6afe83b67079f670,0x47df762cc077a9f6,0x4c3a4998527f3d1b,0x2aa23871425a3d93\n"
".quad 0xca97b280aceaa974,0xd6f92ef00ec04112,0x9bf06fae4d82faf1,0xf9e79db48c330387\n"
".quad 0x8eddb44ab82275ef,0xc35e998f185089ff,0xbfc02ace4fd702ba,0x678a0f7c378b27e0\n"
".quad 0x08f279237c74500d,0x2f852f2e28fd76e6,0xc44885b9e6c0ac76,0xd5d6a3271fe6cebd\n"
".quad 0x4e93125cc33809d8,0x322c40aacc6dd093,0xded7decf26f8b40a,0x5534493839d27640\n"
".quad 0x4642e16a9908f583,0xe4cd4659f27a363d,0x8c1e416789bc0424,0x2edea917518cc4b6\n"
".quad 0x6ce1af074f5bc6df,0x39f77c28ce50530a,0x35b65f0ee31c751b,0xc0d554c96d1f8386\n"
".quad 0xdc74c792e0c25bc5,0x98feccd0468e011d,0x0260fa618e918997,0xd333de00882c168b\n"
".quad 0xc7fba19fe4c7d9cb,0x213fb3f05eae8e8f,0xc5e39e1472a66efc,0x5319b37ba0bd0e27\n"
".quad 0xee257aefbe760e9c,0x32c9bc5d1125c4fc,0x9a5c036079147ef5,0x31be117c79e6dd57\n"
".quad 0xa0a1db47d3e8e24c,0x947a0f8c61c80800,0x6d1ff8dcadb60217,0x9d357a16bb1d30bd\n"
".quad 0x346b64ab116070c2,0x4e05de70278b46cc,0xd27cbfbac9faca19,0x7bd388296a4013c6\n"
".quad 0x24fec058aa7a45da,0xa1efe1b8ea331101,0xb40b323e9218b3ac,0x3a23e7c76a0473e0\n"
".quad 0x9594293f2d66253f,0x8eedda81318ab82f,0x9d0a4a28c32f6775,0x534e3b1390b6b3fc\n"
".quad 0x270829a949b6bb64,0x6be1ffe01b72ed59,0x9833b9c382184136,0xbe23e3965c1db41c\n"
".quad 0xa9c44ac1cfed469a,0x3bfaed3a11b74d9d,0x04236cddf54e95c2,0xc43210c9e99c52fa\n"
".quad 0x23a21498e8491da6,0x3e01ac28a1aa7cda,0xa1fce9dc227c2363,0x40b722cde4eb38ef\n"
".quad 0xf09be11d1b743e65,0x84b8876cdc18e6f2,0x3e11ca938a270566,0x4d9e3ea233564273\n"
".quad 0x2b24f42767bb96c5,0xb069376c68a38c4b,0xde2063394498f839,0xb031a37761429b24\n"
".quad 0x27f1a2e8399c0ecb,0xe8783458673a0b58,0x31a3e12a757c4a60,0x5aeed1b0cc9c0fed\n"
".quad 0x91cc50fac824ca65,0x776cad3175ed6a88,0xf2ba8f3c7e3fe9e3,0xb925365542ca9377\n"
".quad 0xc81933c39e155166,0xffaf5d71cd6a2e31,0x6b2b8e654ca1ddea,0xa087202e18d517cf\n"
".quad 0xf4c614d926ae0044,0x898b2ef72487f7b3,0xe37237b06203592b,0x8f2535e6c9d6c31f\n"
".quad 0x8e4fa78847d5cb26,0x76184738a07123bd,0x4fa3a1504b3fb058,0xcb2a621924a1808a\n"
".quad 0x9fc8de1af62af02c,0x520205473bfd4fec,0xe7271aec7c6fbcd3,0xcc5eb43239c614ec\n"
".quad 0x5713522b0c510eec,0xe63f2102ad1a03b0,0x1a7106f169c71d4b,0x6541d6863b58af42\n"
".quad 0x3c062c59070b2766,0x44eaa3e1c9e3f8bb,0xeff5a73691ab8aad,0x403123452d9ab2e2\n"
".quad 0x97b63714d066ca46,0xe0f397463eefbade,0x23813e0cbb7932ad,0xa87a6f49b19f6543\n"
".quad 0x0f3e435f4d98422d,0x22c33d99b7161176,0x8a24f050f6c2040c,0x4df82b3b17726815\n"
".quad 0x7c72de185b54411d,0x7355c39be3697da2,0x5f99c59019309e72,0x85e9b266cde87d91\n"
".quad 0x7f7f7d7a50938e5e,0xa07dda59528d5d0e,0x60792e34849a26ae,0x9c169ddd060d7b9f\n"
".quad 0x9e396d0e7be418ba,0x8a22051d85f82bb8,0xae83d63dffb17e78,0xa4f66ac41aeed468\n"
".quad 0xd6467eb9a3b88a1e,0x126a1b109834c997,0x390e268f93d8f215,0xb7e473070c3e00bf\n"
".quad 0x1ec665acf929710d,0xe55d8cc49eae02ed,0xcf3e06a273b5c880,0x2f6704e94368331b\n"
".quad 0x1cc7fbcddef7a0c2,0x47d370627827c1a4,0x976602c369c331f7,0x83f93000364ca74c\n"
".quad 0x9ec94620fabcf214,0xe55c8430c5c811d0,0x1675523124445d2a,0x17e9145e22dca551\n"
".quad 0x2fc50f36794ee21e,0x9a370735297b7e71,0x8be6147a0c66d3c6,0x8c7ac8e2714f78f8\n"
".quad 0xde5ced7e749b2076,0xf1e5713ba30d5a35,0xefe4cfe271e7c51d,0xd65b26dc34c391c2\n"
".quad 0xb98e7d83abea7dc7,0x31126182fa4cbff3,0xd8630284dd6439be,0xe8ac4a34091a0fef\n"
".quad 0x4e72cd37c1a4cda6,0x656d9b3e15f7a559,0xf0c6a691f02a86e2,0xc605045a2f21b3d2\n"
".quad 0x420d6d82c5a10ed9,0x1d8d6d20af945591,0x7436b177f62c6518,0xd80ef0c911de1272\n"
".quad 0x90b7cefb17d4785e,0x9bdd2f76490c6476,0x137fba335a907b48,0x8a064ac3b5726365\n"
".quad 0xac2c300ca66ca26f,0x64ce4d3650779059,0xd0d6cc1afcaf444f,0xd016f62b45ea9ef4\n"
".quad 0x022fafd54106d7e6,0xfafb8aba55e6ce6d,0x6dbf682c9a6d43cf,0x53245b99bb48abc7\n"
".quad 0x685f9799b404bdbd,0x3fc539f66117bae4,0x5c804bd9045f90fa,0xcca7733640d7de43\n"
".quad 0x8c7660d7dfd6ed8c,0x206f8a3e175de30e,0xd40af4efd5ed50ed,0xd9c25eea132ac096\n"
".quad 0x4bd287675d3a0b70,0xbc98d73732a67b38,0x08eb4d856e99b104,0x1066e59ad902de48\n"
".quad 0xb832b67017cc7ac1,0x10b68077e85aafc6,0xd61afceb29569361,0x88bcbf4f66e94ce6\n"
".quad 0x0abc909719a5a3b5,0x24444ef8f7d4e9b5,0x7b066f406a6d412f,0xbcf2ec31f76a0f7f\n"
".quad 0xacc42c7da815e72b,0xc5ed202f3ab0b7aa,0x212f3c3ec9659690,0xe54a47f198c9c5ed\n"
".quad 0xe787172063d9c69f,0xfc07383c9a6ca0ef,0x4f34d9c2df104b15,0xded016f09dd15f70\n"
".quad 0xeb660f7e5a82ba74,0x0aff5fd9ecc024ba,0xe3674ed3228f3ecc,0xdb3633439b303bd7\n"
".quad 0x5b1f6138b671579b,0x56eb61b386bff856,0xcd9c39fe396dd867,0x6f38cdc53fc8fddc\n"
".quad 0x86b35836f3de6cc2,0xfd5b38b44d9825ee,0x693bbad9c25f290f,0xb485be04e73dbd92\n"
".quad 0x6bed8ca37ab0cb81,0x2d84fd276a539b50,0xe578b0f56d41ef12,0x9f6a48e7bb507bdb\n"
".quad 0xe9b375ada83de1b6,0x6e92b36d037809c6,0x9236f117faff8ce9,0xcff0075d1a366c3d\n"
".quad 0x5789969df6996dc3,0x4785a4d1b684bd86,0x6e6b6c077879aa6c,0xb788bddf43d5845a\n"
".quad 0x8bbdde7ddc52bb67,0x0f7b58a110fd59b6,0x3df07683a8b60f6d,0x3fc1dda23a9acdac\n"
".quad 0xea9deca0c36e0f7b,0xdb458db835eefa30,0x8edc16f7c558f585,0x68ede0ef5c3e71f9\n"
".quad 0xdc455eeb4d87537f,0x3794b6c2d333f0ac,0x78098f29b7d73710,0xf089d7ed9ee40efc\n"
".quad 0x38683566e62af75a,0xeef7405781382de0,0xcdd045f5ee801bfe,0xb7ef498ce645ac8a\n"
".quad 0xe3b1fac60b20f740,0xf8bba57e6ea2af07,0xe42966ec1ef564d8,0xdd42df6be318b78e\n"
".quad 0xb375017d136eb436,0x7bac57b08297bd1e,0xefec8bc302db760b,0x824bfaaccb766e61\n"
".quad 0x4dc7fed7b770b7cf,0x56eee1966ee22f33,0x908d375057911b4a,0xd44dd045e3d41d8c\n"
".quad 0xea0ef98858bd7a39,0xa89bf3dc02219dd6,0x6f7f00dfaac47a1b,0x6c5b39ef0bac6ee0\n"
".quad 0x7ad2f84cde02df00,0xc6c86ee0af813cad,0xe1bc85be31c15229,0xf770d79680256660\n"
".quad 0x818ffd1913762a61,0xb3bb4d266f00afc5,0xd71f570ddc35efdb,0x9da377077f942a9f\n"
".quad 0x13ee616f74bce9b3,0xdc435fd3c19f1f77,0x0665e167906a5eba,0xed1fae90046e20af\n"
".quad 0x9916c58c58db035e,0x314e7643e40b9e60,0xcdfde48da6e40f60,0xb362470cd7100c83\n"
".quad 0xfa2f7310faf146aa,0x8b8fdd0f229685e8,0x0310cb22d5eb7baf,0xd2a59cee6b86388a\n"
".quad 0x1207b5ecf95b4781,0xab7638b804983986,0x9bef33e5cbd47fe9,0xef16089d36d98119\n"
".quad 0xa4d2581cfac4eeb7,0x289930a4fd3371e8,0x7fd1b35b205da663,0x3189a69316c227a1\n"
".quad 0x58548255c59fa4ea,0xc93caf087bc5bd20,0x3593c9e33542f5b6,0x8737b64c85b654da\n"
".quad 0xad10bada319dab00,0xc66241d63a4c7811,0xbb62097a8d34e3b5,0xff2840dd31d8a7d8\n"
".quad 0x1a5aaf7a00a4d678,0x36701639db2c69b8,0x96b450d950d0e090,0x684ac41a3011d9d8\n"
".quad 0x054b803b0e9f85ac,0x158295ace3b05a79,0xafb0fab38825f477,0xc21adbe57f2c4f72\n"
".quad 0xa2d8da310c0e5f1d,0x033294e096966bc8,0x7d52ce363747e81d,0xfe1d197a0de2a976\n"
".quad 0xb9ad8689a2978a9b,0x3793cab8aa1f70d8,0x6f4c80ab833eed06,0xf6329d17c5dbaeec\n"
".quad 0xb2c383119076ce16,0xa2e10c17b4f70c10,0x6df2f970615d17f7,0x47036707be004e9b\n"
".quad 0x005e388fb0e0b66d,0x55f558b4f0f4811b,0xf531b461026411a4,0x06ef3ff9f67368cb\n"
".quad 0x66f08afee89a1c9c,0x9930485a43d4f89b,0x5c612d1bd2018174,0x037c735057671c30\n"
".quad 0x4d46ca2e260730e0,0x4f8428bcd48c4e42,0x68b352392f975ebd,0xf60cb78374160c6f\n"
".quad 0xbfcf1625bc7f43c4,0x2a29d1f65c18233b,0x2eb97846e14705eb,0x373cdcea61eec0d4\n"
".quad 0x2a8151e5fce51352,0x8a863071c88866a2,0xa79621995ae69f98,0x96284305a64dc3e8\n"
".quad 0x184ab779a0711b38,0x09263cdcece3f654,0xe01d7617f99b08b5,0x0deb5ebeb8aea42f\n"
".quad 0xc626fc0e6a1716d8,0xaa166ec5d5c053ed,0x162f20066324d6cd,0xc608c2eaf27ddae1\n"
".quad 0x9b615b292c542317,0x3648e762f3b11394,0x2ea47766580ac705,0xe39c73dac1c67f47\n"
".quad 0x81a5c766ae337bd5,0x3e1fb85098e6d542,0xde0d661bb7895c86,0x4700694c630c76d8\n"
".quad 0x60add839b69a6561,0xd0a4f31816b17746,0x382c298b3483c791,0x0cf40ec0d1eb183d\n"
".quad 0xf8360ad92f69a455,0xff3b2b31c27c310f,0x02807d9aa1ce00ed,0x0dbe5af0d59a65d8\n"
".quad 0x9bb0bb136c01dc85,0x15ab14654d274635,0xb43d89e753a8a58f,0x1a51c7398dbd78d2\n"
".quad 0x64dbdea80cc3ed4b,0xeee6931cda00ce8b,0x0fc9c66fc58efc4c,0x2eb0f53d4acbe1a3\n"
".quad 0x1b714ec524d64f71,0x9d707b67c5b4633d,0x11e4e24ee712af24,0xceef41c5f7627571\n"
".quad 0xd2fe8d56c144d027,0x469720f051b7d4c1,0x3edabd9a18e08c86,0xbb67b9d26c05149c\n"
".quad 0x7b27e153e6956c14,0xddd7dfb27190e6b0,0xc161151da0c1f67a,0xb8c788d5c506e29b\n"
".quad 0xcd6ced797916da38,0x77e706c241a78ddd,0x31d083a315e0e68e,0x3d8310e78e21fd2e\n"
".quad 0x9031e35b9dd45df4,0x7dd0eaf5d19627df,0xdb62d9656463f988,0xab931681ce71f9c9\n"
".quad 0x3dd42cf9a5da454e,0xda5b95ab1b473c19,0x6a1c200e773c870a,0xa7e850a289b853b0\n"
".quad 0xded8dbfa52906820,0x6cd70d0be2f8f23b,0xd8f6bdb60f2127b3,0x08b1ef17008a8a48\n"
".quad 0xddb72aecbdc736c8,0xf867472bd268f005,0x5635e30680954c0e,0xfc1899193067f485\n"
".quad 0x30cdec32a775ee0c,0x0bfa4d74c69911da,0xc1539c1745db0b8e,0x95c5d2d29c1ce0d8\n"
".quad 0x506a357ee648830d,0x18c36a419fe21f53,0x8a4dcde6f2def060,0x985c071c9b380b2f\n"
".quad 0xb06140e6f6d2573a,0x2bdad9ac0cc50414,0xe8c7477c70a78c78,0x16487e937c5b58e9\n"
".quad 0x07aa64bf64f121c9,0xfbce3384298391e7,0xd6ef07ad9c4179bc,0x73fed4ccebe259d1\n"
".quad 0xb414507fb0e2c658,0x7c6f246699e5759a,0x88810075838e28ba,0xb504690c8ea871e5\n"
".quad 0x812bd8f1b9a17628,0x18a0e0393c4d714b,0x5ec778f1d60e4d2d,0x0fb783bb37b9beab\n"
".quad 0xd071a14d7451c4a8,0x33b3132e25709b16,0xee37ee764bd55f02,0x2d77b3eb82307692\n"
".quad 0x75e70207f9b28300,0x9be44e19d0d486ae,0xa2e32c0b1f46b543,0x1ebc2cd6f29de2ff\n"
".quad 0x689a0c2880b62050,0x52837fa015d381e6,0x4c26c191e14acc10,0x96a5f34e24a38712\n"
".quad 0x1c343e5744acc775,0x8c0065574d6bb658,0x16a14826f85d7832,0xeab7f1164d87fdf5\n"
".quad 0x18d8ec74f83e013f,0x5890bffbbbab010a,0x83553321d8e6abb3,0x0dacc5f03eef478f\n"
".quad 0xe64a885cadeec70d,0x867a81a449b31a80,0x04db8492761dea95,0x2afae756f3a8fa49\n"
".quad 0x324c3fd2354c4ab7,0x799b7a66f1074ea4,0x2084ab59b3f8b26d,0x66e85c909880f0c1\n"
".quad 0x70835ce5c4e85065,0x92346cc7be8a2189,0xb3e5b15bf9859065,0xb74660ee1ce18308\n"
".quad 0x0d22c4fc5598a93f,0xc589202e3b38d326,0xcf83a66d50e265b3,0x8e89071ad99ad8bc\n"
".quad 0x33663febee029a95,0xe6cd02a8b307c0b9,0x642288c7031be477,0x807499df6b257416\n"
".quad 0x22149b79981bc02d,0x3123dca6cd1732f7,0xc0886fa64da39d7b,0x0f823072d9b8a884\n"
".quad 0x393d470c554d15cb,0x6ad54d07c1400793,0x1bf0896cc7cb0ec9,0x1425ca7136b772d5\n"
".quad 0x5c81d1cbaf61eb06,0x2ef593eb381185b1,0xa6c0e86c38346383,0xff5c5a4b19335344\n"
".quad 0x150fd961af68f837,0x3538fabdf38fff23,0x17a8f6ddc1502431,0x31997ce75f843c7f\n"
".quad 0x4b0c4eef7bb06f54,0x060c2c5900e1c01e,0x4ac2933236302be3,0xc058d1ce20b2e352\n"
".quad 0xb81a2a204e116480,0x076ec7e6f9baa692,0xe01dc9316eb64191,0x686f82f50c688823\n"
".quad 0x4cb904433a5a213a,0x0c51c191805bb191,0x822e126a6695dd03,0xd2930dbe3f6405d5\n"
".quad 0x034d9a8947ecb300,0x14e69c14e83ce930,0xd35be6c9f6b83eef,0xcc3c13ee5b213aaf\n"
".quad 0x836e6987c36513aa,0xe7ca30e5660f7d97,0x8d15d92788e62db8,0x70849a9e6ff4de22\n"
".quad 0xc55a0e29370c0745,0x21159baa0c6b60c9,0x9d85d120a3af44cd,0xa2f6efd4ba51d223\n"
".quad 0xf8e3e78d74bdbbb0,0x0e6d9116a946be14,0xc51258990668e484,0xcf041094f01faca3\n"
".quad 0xfa25ca325f0ef18a,0x2f7c4308cccece73,0xfc3181b305199c8c,0x7342b85a2d056f93\n"
".quad 0x0ecfe806904dfae0,0xf7126968a3310620,0x0f09439c81551263,0x31796736f1e7fb4a\n"
".quad 0xb3c7710d7bfe3300,0x04dc43deeb6b7a35,0xee02af4b8695b0bf,0xa7f91db3dd4ac933\n"
".quad 0xe93611e608e93731,0xa969ec519bb06bdc,0x66daa4de02df3d60,0x522dec4dee9638a7\n"
".quad 0xdf435fda59ae75b1,0xefc2af683394f681,0xf61af09d33bf7ed1,0x0b7cafc0e5107626\n"
".quad 0x7bbe9028c5c2037b,0x2cbfc4f827f7790d,0x66be1d833a6f41af,0x70647c9cdd835eed\n"
".quad 0x6dd5c378117dcd08,0x660bf86f036f033e,0x586ee0efaf852716,0x0d7dd6945c6d0c1f\n"
".quad 0x9bd37f2d96fe4775,0x9b5d8cf18b83dbb0,0x45498fe956ea12f5,0x322b27bc83bdf5d4\n"
".quad 0x5e31ef22af0ea007,0x7b077cdfac15250c,0x2fcbb098d078d673,0xceba7983ac0a6fe1\n"
".quad 0x9ab577de6cf7e037,0x3b1934cc99bf08bd,0x0ab57cf301c008bd,0x61e00adf415ee86a\n"
".quad 0x675be87bf8dc9a34,0xb9be89bfdaf0b1cc,0x825f40051f0668fd,0xf43f842a49c383df\n"
".quad 0xe64849a7de3efe06,0xa51bfcece0045f91,0xb51c9f0226f77b0d,0xb55f002ef7571672\n"
".quad 0xfc06f19c0a279c53,0xec35fa359396198e,0x22f21b4dd883d58d,0xf9386c5005e21ef6\n"
".quad 0xc8c25f75bd82be88,0x37b1e7ffd091faa5,0xbdd8ce400091318c,0xf844c1aac2f1be09\n"
".quad 0x0d9870b1bc85bdd3,0x8e9fc6f216f19822,0x67bc01bee8166c56,0xaddc25f68fb3965b\n"
".quad 0xf80ade710a41e5e2,0xbe9fc8ad58ef22cf,0x869224df0799bc89,0xe3b71947bd86bc4b\n"
".quad 0xb1f78097a8a2f26c,0x0d7a71e06729b816,0xc12e2d9f586aeb77,0x767a718fc39bd06b\n"
".quad 0x000051bc04beb2d6,0x1166ea1af7932cf3,0x8eee16fa2bc4b42b,0xee61ef7567144a92\n"
".quad 0xb885bf1bd06cd3b8,0xf7d7197ad8e82de9,0xe843e81168563710,0x9c4bb0c3a6e416fa\n"
".quad 0x71371dc479ffdf62,0xfcf370057ba802a8,0xf6f0b7dd023f520d,0x4dee960409c5e310\n"
".quad 0x3df38ec9c3aaadb8,0xffd08cde6b6a8dbc,0xde4550db805e3560,0x7d36e0f7804838c5\n"
".quad 0x6dc1ef46bc98eb11,0x78ebe372b9a8655f,0x59b706bdbec0dcfb,0xc42de178157e1888\n"
".quad 0xe01af4cb35611bbd,0x86d9bb3470f35e3e,0xf985918e68f6e117,0xc5d051db825e7488\n"
".quad 0x9bdb82df896ca63b,0xe6dc12f40362e68e,0xdf322bcdbbc19780,0xb9c3b863563cdb81\n"
".quad 0x46d5e85d7370097b,0xb3a2fd9b885bdf7e,0x347b905be9d160c4,0xba09bdd4e82f6420\n"
".quad 0x89bd18171f40bd7b,0xf3f4040d70a3e1b9,0xe1537676ab0dcc45,0xe60feb375077b94a\n"
".quad 0xb376117bad8509ce,0xea0ef35ad566106f,0x077a6833c00013a6,0xd7825a5d1310e374\n"
".quad 0x35451fb5eee6b740,0x776758c240eea12f,0xa6ec5f09ba80be2d,0x780b506ea16f7ef8\n"
".quad 0x6b730d7bb5f41c39,0xdef3cbc94b0f7384,0x5ea3c7bbe0d1dcc1,0xf1a79829ae50dc80\n"
".quad 0xcf339782e66dc855,0x2cbe34d51b908bdd,0x137c7dc03df1de81,0xa90ad1d153d57c2e\n"
".quad 0xe654702556269e17,0xd8976d019b2fea7c,0x1a31dbd1b5dbd6b0,0x7372c9cbd486a55b\n"
".quad 0x1565b3873124fb7c,0xdd2fa8c3ec66c4df,0xc7744cdb06b2c979,0x63bac22c55c158c8\n"
".quad 0xab62b46c31025f50,0x7ef2b108bb6f40c2,0x6eb6644792d68dc3,0xd89060c596f2e4e3\n"
".quad 0x0dd677eb6b438241,0x62453d6b32cc0611,0x36d4abaa0062fa41,0x16c504058328d8e9\n"
".quad 0x9d7105fddd5d26d3,0x7d28cf70243579d3,0x83377018332addea,0x27676776bdcf5e61\n"
".quad 0xb3a263460814068e,0xb440c1bfba3c468c,0x1cdbc777ad1d0077,0x8671c5922ef8f627\n"
".quad 0x62ff05e1d5bc0327,0xc72acf0bec1ef7b5,0x78061d1318b8dde3,0x4ec03d0ba0ca0b61\n"
".quad 0x0423c908cde2e8e3,0xe9ac5e3ecfb389e5,0xa1d68c43468576cf,0x0a87bb51b128e493\n"
".quad 0x76357dfeb8248727,0x90e3f4c80f1a4760,0x9d93066615dca2e3,0x81f89abe6f3f6d26\n"
".quad 0x9f010e4ea318ae3e,0xf446a7277e7bc009,0xd8b2da3216ad02ce,0xd07016b0fbc9bbff\n"
".quad 0x988e50e4d4fb4209,0xeb51ece06b0c97a6,0x970eef4cf19adbd1,0x88d6cf60ebdcbbd9\n"
".quad 0x10d2ecf9419eda26,0x6c1ff51bace81f07,0x9e38a5374e2c09bb,0x732fb174755650c3\n"
".quad 0xad4bd2f1daa0e395,0x3d0370758dc36ce4,0x6d9d49d9bd3e1d7d,0x40430421d1aedc79\n"
".quad 0xf899bb08041f702d,0xe85147524f77615a,0x4cb1cc5cca38fb66,0x6317ddab6b384c46\n"
".quad 0x9428b45b4dc7866c,0x1a03476fdbb57e3a,0xa35e3270f0e2fefc,0x1874620d6218991e\n"
".quad 0x916e56838a096e88,0xcfa11cef68366105,0x902b49d85338e110,0x96435152af8ddd54\n"
".quad 0xc19d2629a394dbb3,0x90c786d8b8326fc9,0x6b2a193843259312,0xc73575c8bb5c4483\n"
".quad 0xf3ed866e2cd1f862,0x13b80a093203b89c,0x685265ff49b803d4,0x355e8e0a73629b99\n"
".quad 0xefccd3bde99867b8,0x0647205f4d5aa691,0x5f63a556ee15473d,0x83a0c9c0fb66bf8c\n"
".quad 0xb28ec218ede1fc45,0x9d370875de45ec6c,0x6c324c8f83835c4f,0x45aa08b5c362cd6c\n"
".quad 0x9ac9d21b319b1af6,0x67b7a2eaaa7086d9,0x6346ab8f75acd22b,0x519ad916189b32b0\n"
".quad 0xb1f09c6dbdda0b34,0x3c1302690633ebd5,0x23802660dfa0237a,0x57259bc90258ae84\n"
".quad 0x238c97ac3963e2d9,0xe1fa13a23e0afe9a,0x90c6af59d5d808d8,0x724f7796a6534707\n"
".quad 0xc98cf33a6cf244f9,0x329584ec4ab6aeb1,0x6394a9a086397d42,0x5b150d67e8b12a94\n"
".quad 0xda79c32b1326506d,0xdb5116cb43abb4d8,0xd14e16b58d08ddb5,0x749b3fda59ddfef0\n"
".quad 0xccadab63fcdce825,0x0fe1936e4dc42337,0x27476c8b3a334223,0x48c73f9a4c038eba\n"
".quad 0xd1d252b80fdce97b,0x77518d592da2f2f1,0x8be4c4a9263e955b,0x7c5246d1c416f831\n"
".quad 0xee8e0f8b1df4e407,0x8c8b22b156741fb8,0xc63d442003264c41,0xd41da5a4c3816c26\n"
".quad 0x1eb38c4088c1ae59,0x122b864507de902b,0xb2a8234066ba1b17,0xb9379fdbb46d3107\n"
".quad 0x391749b1df04b4c7,0x7af7317616efc4f3,0x76696598a0923776,0x7ab41075d82cac87\n"
".quad 0x3a5bd6bccd3326e1,0xfedffdfffb8a21c8,0xedff97ff3feeff37,0xf77f8ff2ffc7fd3f\n"
".quad 0xd7ff9ff4ffcbff1f,0xfb69ff77f8ff6c7f,0xf871e7fc7ff2ffc7,0x61fff7dff8ffc79f\n"
".quad 0xfbbfe3fc3ff6da5a,0xcff2fe8e60d5ffc7,0xff6f93ff7f1c71e0,0x767ca1f09d823cb9\n"
".quad 0x1d2a10ff1c161abd,0xfea96df9d71683ba,0xf3fdc7a57fe123bf,0xf8f9ce307220ab5f\n"
".quad 0x879668fa6cca013d,0x38116fe797f03f3a,0x12bfdb6013bff43b,0x48523498298a0980\n"
".quad 0xfa4671601047c7d3,0x05b18abb73c6b9d8,0x73b77efe70a468af,0x80c45e45ccd84b82\n"
".quad 0x92bfa0e01289d80d,0xc874de07f1155e21,0x54c77c8c17e9408f,0x3ec4c6670c3217cf\n"
".quad 0xf23ed011f2fa5606,0x462b34eb9ffd70ff,0x8dc8075fa5bac443,0xc699bd77b765dd64\n"
".quad 0x3a46ccae7cfb7c50,0xba5ab7b6cbe74b22,0xa1d003b33a6ba7e7,0xdc68e31c9845576f\n"
".quad 0x51b02c43117694cb,0xe44f640a53e7f84d,0x29389b89acbb2fe1,0xe81977f9c71cc2c6\n"
".quad 0x92d354ce874be0c5,0xe0c5ca00ef8bb13e,0x66718b15e8a56fa2,0x5723b595b232a7c0\n"
".quad 0x21ce1865574959a1,0xb9352973e94c3198,0x236d4f5e32745060,0x3af1e6f84e303ec1\n"
".quad 0x18c255d95442964e,0x39e3dbfca89ab758,0x7cfbf68c6bdccfbd,0x6b325110bb1e80fb\n"
".quad 0x0027069f6a30f906,0x9059bd5eb994f1f4,0x9d37e78be5a8d99e,0x54ff54985f13de90\n"
".quad 0x0f37c372bdabe3f3,0xc0c7268430c865d7,0x69a4a83837ca7e63,0x505b03d45dbf7cff\n"
".quad 0x58c2ef88ccbfbca6,0xc854a617393e77ba,0xfc714add2ae5af45,0x34fdaecc43f88dd8\n"
".quad 0xbfe9d5ce15b91358,0xc232aa26e4530013,0xf1e3b24be675cfc2,0x41c419809f4f7590\n"
".quad 0xdb362fcb6bd2b442,0xa9e2b764e3068284,0xbdd0846fb4c0e797,0x706b0bbe8ec60057\n"
".quad 0x127f0fab8e7b109c,0x539daef3670cf8e2,0xb4380f4507c5c9ad,0xc955a91f888fe365\n"
".quad 0x9e8936ac83e0f57b,0xa0c5c8422d2280b1,0xbb9a1a5f34214be1,0xcd61e8a33a2f796b\n"
".quad 0x88a64df0420fffb6,0xca35504e3b64fae6,0xf6766b765c17c282,0x8239a12a4d7abe17\n"
".quad 0xd18916803fd95ff1,0x0f303277a1367d04,0x14b56c64d5804ab6,0x451ff97d3ea7ba9b\n"
".quad 0xe5ea8195a001c160,0xe762eefd269ee03b,0xe96812d4a33132c3,0xefcfa7407bf159cf\n"
".quad 0xcb79450545b720e0,0xd7a404ed01e0649f,0x99c70d72e8392b4a,0x69718987cfefc931\n"
".quad 0x56e79d3ebb15a0cb,0xe51d4c2f24ec5d2a,0xaab1607c7cfcc74f,0xdf0364111733b05d\n"
".quad 0xf8b54315bb8517ff,0x557976e35922bdb3,0x7257e6281e035f62,0x52c18d8d4f7e9670\n"
".quad 0x6100baf1e9364317,0x7124036ca3f1ab4b,0xd861680db5e4cef6,0xfb8900e19d5e1433\n"
".quad 0x0f91e4e98ffd1085,0x84d68f6d58efcbdb,0x32d4e2f7c044ee30,0xc31afb1b6a55bd8f\n"
".quad 0x57018400196a2ecc,0x8fbdd993f530a006,0xa9f4af20edc18e5f,0xaac9c998c70fcfd5\n"
".quad 0x0b3170933e4da7d6,0xf7fc7012a78feffd,0x321e01292af7b9dc,0x4514eefcacae009a\n"
".quad 0x8dabc886f97d095c,0xce76202b4c67a97b,0x8fb826d18651e596,0x4776a478710ae528\n"
".quad 0x3f31a290bf982654,0x4a0f3c8c28a694d0,0xe75ea49f40cb7acc,0x34256737afeba4aa\n"
".quad 0x18711ae67bfaf3cb,0xf7174412b7fa737f,0xd0c412f2d0ce6cac,0x46e065dff89cc5ca\n"
".quad 0x1b0dd8f864db5eed,0x750e009f898060f5,0xbf8f1f62e2e8abab,0x6565937d8a6d0400\n"
".quad 0xe3edc9ab2e55a4b5,0xa745488a6d999599,0x9942c3df1c0f8733,0xb6ebf8e091bb91eb\n"
".quad 0xd4853b0d7ea8dc38,0x25d9e2dcf87deaf7,0x9224d88cc91ce9e8,0xbb6719a41980bf56\n"
".quad 0x38446ff925a39630,0x0bcc898896556816,0x670f6cc09f2bb583,0x476ec22b7c046412\n"
".quad 0x6bfe00b4c96068c1,0x210395f0d5334c75,0xddb1ce72cb5a8f43,0xa16ac0a8ead98640\n"
".quad 0x678e294798385fde,0x48366654a1e698c4,0xc50251fe4e2ea37a,0x6ee5a4b990677d4c\n"
".quad 0xd25339b367cfab9d,0x0d774bea044e9a78,0xa33f3857d2052048,0xcea4ce0c6f14d429\n"
".quad 0x4fa4f7a295bbed95,0xaabe0320dfce730d,0x298291bf286a3468,0x51da4344f0750759\n"
".quad 0xc7d9c673a1809231,0xce872707181deb8a,0xeec816e615262afb,0xba8d928a6bcc541c\n"
".quad 0xefd07179ccfda117,0xcd4791c6c3e82c95,0xb1eea387032b74eb,0xd328c0f3997770ed\n"
".quad 0x1b5840669f31755e,0x8c5ce228e9f57486,0x79b17c37957c4211,0x373776494d1f7966\n"
".quad 0xfd281d3e4e4a1052,0xa32d3615f201f21a,0x14bf4dd46c1967fd,0x8c80bc0ed52b1614\n"
".quad 0x2324c2c77973e163,0xec78e9f8f1a1c9f1,0xb994423683582e25,0x629bc0bde024afb4\n"
".quad 0xd9d9e5c0311e4cba,0xf1c32b790d3260e5,0xf1bcb7f5db52ec2d,0x06200b53b0ebc3e3\n"
".quad 0x48ef4c323ac7e78c,0x7a70ca9b15119433,0xd5b28ca6abf31d7a,0xc3b9340217e2419b\n"
".quad 0x0ae340b78bd899c9,0x2772df32b0255c49,0xef459817bd3b5280,0x76777d2f65e189c5\n"
".quad 0xbdb2ff279d8f5d17,0xa302ab53a1abe2a3,0x4c2a61e4bb317b2a,0x12cc99b12c18a3e0\n"
".quad 0x87ac34d87502a024,0x4d10c8dd414ab79e,0xa19707d4bee75036,0x0ee6684ce15c4672\n"
".quad 0x83f37750ae970819,0xa82c6514e05799b2,0x671c088de14cc8a9,0x9d6849af8a04cbd0\n"
".quad 0x3f869939afd92b01,0x0344184990f2c148,0xf921234c78a4f7e4,0xff946315b076f2da\n"
".quad 0xebc5905999020a5d,0x02a86f0d7c4a5d99,0xa1cabc7189df6af8,0xad47112bff59ab31\n"
".quad 0xbf98229e3934bac1,0x31f242a083316295,0xd0770b45a1534aed,0x1ca156c6bb1d5af2\n"
".quad 0x5ad68150ea2e0d64,0x31c8b7990cd542c1,0x14ce93a4e70cadc6,0xba3a4c12c7a60673\n"
".quad 0xd2b3000a3c474a43,0x1d092ca5b5784a5c,0xabb431c626afd4e4,0xf239abf8f1288b04\n"
".quad 0x22ec704f320cd975,0x168017ba022bb829,0x31845dd8706ace0c,0xf40817fef26beaac\n"
".quad 0xf070c4c3a7783127,0xc8f55df882807252,0x1a78dd747dff4663,0xd4c041f1980c6667\n"
".quad 0xf766c10e0be92ff4,0xdea9a113b83d65e7,0x600fc85e2c4030fd,0xcdfd96bc6a8a6176\n"
".quad 0x9acef30d53ad0c9d,0x25ceb625132eaba6,0x3129cd8b2fc64be3,0x6e11706608892fc8\n"
".quad 0x5d6365cb3692c98d,0xe976e470295bcd79,0x50ca95488a7fb675,0xa218446fbc0a6f3b\n"
".quad 0x3a5efbf92c1fc97d,0xa2afbc7cd2289d4d,0x2de9944a0329a899,0xf64237f8090c33ca\n"
".quad 0xb0b26c1967cd3b31,0x767213f6151e4c55,0x9e0046fa804cb82e,0x3874058eb0fe1c6c\n"
".quad 0xbc73bfcb37a10c94,0xd44523febb73718b,0xc9a86612c4327818,0x47aa393ec2b84582\n"
".quad 0xb9bb020aa1c90e09,0x6f8de68fcf0109da,0x850cd38b04067f1e,0x80931772421c9da7\n"
".quad 0xd2bad3fac656eea8,0x10174cb7528aaeea,0xa4efc023fb9ded53,0x0b89242700add774\n"
".quad 0x3319bb2cd98cab0e,0x4f9adfa38215bee7,0xd8d4dc4e8223e7ec,0xe33fa3d208fe4153\n"
".quad 0x139dbe39b6ec05f2,0x0eee96f67b388b14,0x774ad48f6212beb2,0x4c941e72d4408fad\n"
".quad 0x7c0d365a700b3e77,0xed22a63f03404a1d,0x7583e3e0fa599f29,0xf43cd9b0f1d61ff5\n"
".quad 0x6ade5800178fa179,0x5369f31878ff7ee3,0x893427340649913c,0x88da3f1e9ffea170\n"
".quad 0x7bab469a4877cca9,0xf4cfa06616b45b60,0xf1f92e98ac22a76f,0xacaf38ff77d1488a\n"
".quad 0x35945a19dc7f7eba,0xe1b569b966704a3c,0x39ecefc259abfbea,0x9be613442b7ecb2a\n"
".quad 0xbb84d801caaa8f9d,0x6116bd09ac865bfa,0x1414e31eb36334cb,0xbceb5ecbcaddc8f9\n"
".quad 0x8f1507902832cf99,0xe8bcf510577b1528,0x4addc0c2b7cab475,0x70b6745f53a770c2\n"
".quad 0x6a2d45332cec7ac7,0xee48a1cdcee30c0e,0x5d665b9249ce3df2,0xd7097d92d6b31ef4\n"
".quad 0x528f57268646eb80,0x9ea75a1f096f8ca2,0xf3e7878850bf3c58,0x582b6a4faabb3502\n"
".quad 0xb8ecc9722c6b0425,0x26c0c57587b22a8c,0xfd8f57615440a872,0xcd08add1bc4dfe25\n"
".quad 0xe06992b76bbb5cad,0x27a6012d19b00eac,0x08bea8da6fa31601,0xacb6bfba0af37644\n"
".quad 0xb6826e5b64f5b248,0x003ce2cff98bb79b,0xb2116ec960a582dc,0x1fe5987d2670cade\n"
".quad 0xfbb7c813e09f59ad,0xefb4189dfa515c47,0x890dcb5abd91cde0,0x4a2c024bcc5a6836\n"
".quad 0x60a2f54a1c8f7612,0xecec007a5a4b811a,0x51ecc4a5f4619dda,0x1026821ce9e65d00\n"
".quad 0x9319d2820bc0efa5,0xa9cb317b41927ac7,0xa74c6c26645770f0,0x985e9bdc2727e5ac\n"
".quad 0x30896f8788ab908d,0xd113a9a0cdf3a5be,0xdef780a46fc96916,0xeb5eaf9a543fe5dd\n"
".quad 0xb83237c2c406b655,0xe755e24807139a82,0xcd110064b0131063,0x9b38fd08bf35abdf\n"
".quad 0xc09f1f66953435d0,0x0ca3f4314bad83b4,0xfcfceea19139e148,0x4c8a0c27563e8c15\n"
".quad 0xad1e871d440c8dc4,0xdcdba63d8539f39d,0x7a0c1dbce7c9253a,0x3ad526aedffa8310\n"
".quad 0x814f0d82456b17d7,0x7e267208df37b620,0x31d1d1b19f2f5430,0x8c41fdf4092e1067\n"
".quad 0xf69b358bb9a303e3,0x15ec3aefe6940843,0x5822a9d23219cf13,0x10bcd7b9886fede6\n"
".quad 0xed5a5e2a34db3cd0,0xa1b1433d5d7c113b,0x950b1e2f06ccb7b4,0xde391688027757d3\n"
".quad 0x41a496f492093e6d,0xc05394c02731f69b,0x11ad56cbec5cf78a,0x69163671a179acbe\n"
".quad 0x6bd404ade5be56f5,0x9987a48aa543babc,0x0211bd432aa2020a,0x0721d53e6252077f\n"
".quad 0xaaa85daaeb13bd2a,0x0b8247419ae96161,0xd3257563c61f3e87,0xf08757ff8e6d64f5\n"
".quad 0x6c0da01074d108df,0xaf396d184b582e24,0xbbfcb2064ee4beaa,0x19c5b1d2b50d3386\n"
".quad 0xcb251cff15ae7336,0x7ee4f8146ed6144f,0xb94329c7334a0f66,0x8f7826b8720fe1e2\n"
".quad 0xa42817d180f3efb8,0xd18bdd111c84ccd3,0x4500299f19544584,0x5768d499dd5abd23\n"
".quad 0xcf62bba2078a89ad,0x39847d54793b02c8,0x38856e7feca4db0f,0x7c6d5b318635fbcb\n"
".quad 0x845257d2dc42b585,0x0d92e165dd318b9d,0x72b6387ae16a8e11,0x11e459ff395457f4\n"
".quad 0x9b1741cd61b4cfa3,0x0bf3432776fd3262,0x4a0babfce09cae8c,0xb7c43a4ffcbcb165\n"
".quad 0xe2aa2c318fa1f422,0x3899cfdd0986d05d,0xaca34be9b623bc97,0x44bc1515a5519786\n"
".quad 0xb97985fb3faf30f9,0x485c9dd4ccf8e193,0xd3088b07cc03d7ae,0x6ad7c1049dc22d5d\n"
".quad 0xa104331a09f4a617,0xfd0e085a5ad99bb3,0x731de3382ad7d26f,0xbb87a360767db7b1\n"
".quad 0x216a68428f0df4b5,0xb8d49b58fa8e080c,0x1beddb31dde99a2d,0x9f609e7ab167d429\n"
".quad 0xcd922e77b43e2e8c,0x32bacb20d7bcd35a,0xa2a646caf13835e3,0x3d8cd9cf3ad66b7e\n"
".quad 0x31d81f4742d6204a,0xc2554709dc72f9d5,0xa6c20327785c65b0,0x896e562f2da0f8b0\n"
".quad 0xd7caf0667dd83bf3,0xc9b2382e19c3b187,0xa2670cd2c065bcb6,0x58213ba6e2ab71be\n"
".quad 0x3f3eea6a3850ec11,0xa66aee86cd4b61c0,0x4ba9cd6b7e8865ee,0xbf8e9b08b7350258\n"
".quad 0x8dd3111ed734782e,0xc5c7a0e0d1eb9ffe,0x8fd37bc5a935c6c1,0x28ff2724b82f034d\n"
".quad 0xef1ce05ec089dc43,0x91128b5066ae60e3,0xdacc9ebb73a8113b,0x4038e688e80f8aa1\n"
".quad 0xd2c470890299c2e7,0x3146acdc2fdb9ff1,0xea78344d051482ef,0x63f6904efb65e0a3\n"
".quad 0x666bb8abe83aa25a,0x1a2167922396fc21,0x7523a9b5f1a8e29d,0x5eefaab2a38f0267\n"
".quad 0xf53e92d0e31e6854,0x9e81fc5ccf413df0,0x023e3e3ff370c43e,0xb6225527deba5e63\n"
".quad 0x9d3d3f0b4cb9c4f0,0xe99340f39c10e3d2,0xa1e7e7e944c8e299,0xc16acfb9a250d26e\n"
".quad 0xc86174379e5c1d1f,0xedf0f0983bc584f4,0xca6650b33cfad5f3,0x4309fbbdc0480954\n"
".quad 0xd308d47e79b89393,0x724b088f4a4a66bc,0xf8f60e711d3731c9,0x274790bc139732a5\n"
".quad 0x7d2d09d58ec2994b,0xc0bb679074111be0,0xc5541b5b2c7fc0b1,0x1f46d0842fe6c914\n"
".quad 0xc73d95b4b2bbd8bf,0x2a38c39b5f30db11,0x26ed9d62997ebca0,0x91d987334ef52ee6\n"
".quad 0x295b8cfcfca8d271,0xcda396c4e5456222,0xb0a92e00d1231da6,0x56ee41d9344277f0\n"
".quad 0x3dbb15a02168f84e,0xec259163b127417a,0x6c0ea83e77106c25,0x97577359b4d15fcf\n"
".quad 0x1b6c6ca4d10add5d,0xac1600c668e63cce,0xe1a6d0e3c02cfe56,0x19e7ebce9b431fff\n"
".quad 0x7bc075f4fd9064d6,0x905fff47f8fe1e22,0xfe838bb8e1588cf0,0x4ff39d7aeff2e797\n"
".quad 0x0216cd09ff5ffbab,0x90251e5c04a7cf93,0x1bae23e3a794ed73,0xde1946ae606e59c9\n"
".quad 0xf998a30fc3108bbf,0xb217f8e6aca26e02,0x5fd2af12621df953,0xd6bedce75585c185\n"
".quad 0x49bd41f51f695c95,0x2458ef7e418bbfb0,0xa6e694ad50fd30b0,0x4427777b2502c2cf\n"
".quad 0x9973400655e78ba3,0x14345d6c63704508,0x04c68292d0ff67a0,0xe25acedb17be387e\n"
".quad 0x3153b87b9a96fae9,0xe85c550449e36e2e,0x7380479728cd9dc4,0x531f824efb0095ef\n"
".quad 0xdc655e47102100b5,0x8c5e39f1e047629d,0x154c7a4ea548238d,0x76f14ee2eace68fd\n"
".quad 0x6ebff54e7aeb0479,0x5b32e15fc7089de4,0xd1900bbf01272024,0x64e9f6e25fbae290\n"
".quad 0xe290da2fa43d06a9,0x1a8138897675d3dc,0x2ec3ca4d7dcd3a0e,0x01c1bb2735016f10\n"
".quad 0xfd699d5daed9c874,0x310cded6647c045d,0x178256b309f3f81e,0xc3338056f918a4fe\n"
".quad 0x057eae1f0d9e6502,0x39d30d90f9d02111,0x1c1081676ea33cc3,0xf3c1878051bd62e7\n"
".quad 0xf59805d3cdf0ad5a,0x63f599f1f12b3ef3,0x3ccf99d3cdfcc574,0x2db611559668be7e\n"
".quad 0x218668295d8674b0,0xb5e461f59650cc1c,0x51f667c97f58050f,0xa4ef77ca28b78664\n"
".quad 0xa8bc5adc9cd1f188,0xe292bbd403cdbf72,0x1b0574889a4295bb,0x96a9a5049a5eaf56\n"
".quad 0xebd49342a2518004,0x55f7f7d340c1ae85,0xd08a5ce0546bb931,0x4d17d907df0251e9\n"
".quad 0x42e738fe9cd4e468,0x702c9f6dc1fcf17c,0x94b9b1925f978521,0x36b28ee54858eaf2\n"
".quad 0x35f32bd59b5c8d7c,0x912ef268d26a5097,0xb1eecd6c3c7b7f93,0xcf51f1028c9b575e\n"
".quad 0xd3d691e9e6e0e0c8,0x7287c6d71d3ee598,0x1a826e861c9cf73a,0xef102193149ac2b4\n"
".quad 0x5479172ab73a19cb,0x5570e79e773128dc,0x9fe5871bd8293bf4,0x5ef881bc0aca3d6c\n"
".quad 0x051c1093c22b3070,0x894e1ac996f4ce80,0x0ac2e3eb99946a6b,0x4c4148356ba10e45\n"
".quad 0x1f452d296052e30c,0xd0649f1959ac27f7,0x24aef61bf7fffaf0,0x2535ee821cb94022\n"
".quad 0x40b1e7ca74802374,0xc409180f284f7039,0x2bad884ee03b497e,0x154ec04cece18a39\n"
".quad 0x4c65f88648de17e9,0xde24b2eec320f97b,0x87b67170cd9d416b,0xce193ba6d8538467\n"
".quad 0xe2a0151a5de77651,0x71fc84d4b7c76d55,0x7f1caa094570b7fa,0x0d81040e56bcc040\n"
".quad 0x9e5ff4692dfb94aa,0xed5145bd364f3bcf,0xdc17d3677117c63d,0xf3545c4a0fdf8049\n"
".quad 0xe50d9dcbd60c50e5,0x49219052f2c903df,0x4ea473c7cc44ad18,0xf22bad84e65468d6\n"
".quad 0x2dece576cc32f7b7,0xf8534b1d4599f25b,0x19576011b81f8d54,0x0a38e56567824700\n"
".quad 0xf221155abc45cb9c,0x7bc6d365f3370242,0x78c2c454735f56d8,0x8a59e994aad7cc76\n"
".quad 0x45a8cc9d5926fde3,0x856ea9017990ae37,0x65864b66c5d5b9b0,0x1fbe75bf5043972c\n"
".quad 0x1ff6333bcdcb4e64,0xb346b66a26afe363,0x8fbffc317230aeb4,0x9d945e288257f344\n"
".quad 0x3f71c75f3a9a84e4,0xb4a4d1c83fd7da5b,0x884d934a1c98e41c,0x5ee94ec5a65cd3ce\n"
".quad 0xe6e86b78ebe5517b,0x363888749c642b05,0x9941901277035130,0xc97e717541056934\n"
".quad 0x20394c840f1ae1d6,0x8cd714ff316111b8,0x2e35e6e57e827f66,0x92d3fb711861d010\n"
".quad 0xa88910cdec69bb14,0x8e1f3c58cbb009b4,0xa78aab3f75be3fbf,0xb24cb1a582350aba\n"
".quad 0x581641f8295f3ddc,0xf8f0e085f80a0a43,0xc74dadc55537f1af,0x98fc2c1869f5ecde\n"
".quad 0xd92e743eae50646b,0x341ceb44237e82f7,0xa230a919542f2979,0xf25a6064ef9f816d\n"
".quad 0x0045daa0c34edd58,0xdb3b77265bd25f97,0x08efba475bc94f52,0x58dc9b3def9cf758\n"
".quad 0xcf3789a48582801e,0xf905ae23a2ba02d7,0x5f3f1ea979c3bfb4,0xd66a99ba1093e36c\n"
".quad 0x9bcfa00fdfb31702,0x56387a3f8ab4e71f,0xb20c77cc49aab2fb,0x339170e01fcf3170\n"
".quad 0xb250213bf2489c3b,0xf1a14de668320abc,0xfc42d31a4ce8f200,0xdf3b9d8f81750645\n"
".quad 0x645978b56599e5b3,0x25f073061b603a26,0x9f9b9334f7416d46,0xa1952ede36a9cbe6\n"
".quad 0x76a09047c70c8df2,0xcef23ce32348b33a,0x269bf3c5fcde286a,0x5d421932d0faf3ae\n"
".quad 0x133c6b46a436c5df,0x8d067fa4e0465f2b,0xfb19cc44643b482e,0xeeff686cf0fa1929\n"
".quad 0x3aad92c15ad97211,0x54757c3d3c9ad922,0x4691d176366a6cc2,0xe5bb9b85b5639070\n"
".quad 0x8bf0cfe10bf584c4,0xbedae0fb177b8a3d,0xb29252f51719a090,0x6acafc2cf0379563\n"
".quad 0x6fa732ec0ca3d29c,0x15e998a088c2339d,0x86d4170f66cde28e,0x58b32463cbfd17ba\n"
".quad 0x2ce76fde73557f56,0x66f3452f740d5552,0x5db0469234fb9d2f,0x460a01277e25d7c5\n"
".quad 0xf21c48a4e3bc95a4,0x659bcba2c5e33092,0x20d7a69a0ae58e70,0xe86a02314d4be88f\n"
".quad 0xbc042cf0ac1caec6,0x671a28852e68a418,0x5163571a114daa49,0xca58b22d86d1056e\n"
".quad 0x7796d05d8322a436,0x9859d60010f4b677,0x504933de00794f24,0xd6f0648015e19f4c\n"
".quad 0xc8bcfb1008df17d2,0x576678ae3bb6154c,0x0e9c58256e727169,0x3f8725aa58ce6961\n"
".quad 0x84221ae437ac5e70,0x33ab12a4e6b343f2,0x8068bb08e2b2631f,0x35d1137c7c7909b2\n"
".quad 0x9c2de3e70c56e538,0xcf9eef4bcbacdd2c,0x8bd58f3e164d06c9,0xcd19465bd4b84f5b\n"
".quad 0xfd976d187d9cdc41,0xb011880de99bd2ae,0x50f0424f973e5381,0x94f4ffedb3770e46\n"
".quad 0xfa44a7c7cc09d283,0x6bbad33be0f308a3,0xdd987fe83a5c2d2c,0xc67e39cfc5b798bc\n"
".quad 0x723b020a07dcf99e,0x69323ce9b4fa17bb,0xb1483fdbf82b0d81,0xce4cdc0abb8adf48\n"
".quad 0x68656e1d6ac7347b,0x184e3a6f19a852d2,0xe326b460be5b6d1f,0x9aea0b94500ac38f\n"
".quad 0xc5557575ab2706e0,0x5dffa8cdb96452f1,0x36bee5eecaf72684,0xd6090d31872a78ce\n"
".quad 0x382fd37580a0cb3d,0xc5a861198aa72204,0x95fe55321a242ae7,0x074f37aa1d530518\n"
".quad 0xeee116658ed5f7ce,0x7c7532fb862c2ac9,0x7397becc0ccc1a31,0x54047a048de03d2c\n"
".quad 0x3e3a06e0c51038f1,0xc0a1f4a9ae5988a0,0x10b29012f694abed,0xeff74a450481bec4\n"
".quad 0xc4277c37e71ab13a,0x939c4f1bb438ff89,0x13a6d21665c3a314,0xb6c6e3cea7842775\n"
".quad 0xb368abcd8707c2cc,0x8b811f550e9a52fb,0x54ae34560e650baa,0xeb550707e41e322f\n"
".quad 0x717668a46ec38356,0x26ef01480aa2c958,0xc38a5aff7e28fb09,0x2625cf9f7e447047\n"
".quad 0x70e192171426d806,0xf1de43c975e001c4,0xb9d8a599ab83b8c9,0x999c2277cd8db31c\n"
".quad 0x7e1fa5d95bdb5fef,0xaad01177e929b8b7,0x1fb914b314214b31,0xca2fbaa8c05986e0\n"
".quad 0xf578469f7295128a,0x79c0a2572aa1b14a,0x9a08b3d57ccd5681,0xd9f52935e68ec2bc\n"
".quad 0x8fe3b27d8d29a5ec,0xa132de3c11642032,0xf79b5fca9b3ae2a5,0x083bfe5558ad2c00\n"
".quad 0x436cf80c7b17f9d4,0x68de3052f70a465c,0xf61ca0d56ad076da,0x6ce312bed1af3bff\n"
".quad 0xf0979a3dc7d7c5f2,0x4debbbd875ea75ad,0x30ef2d2dab92842d,0x0f0cec0d103c5cc8\n"
".quad 0xea6af8ce86de2678,0x09909a215b94b28a,0x8669d31972a19b02,0xb3299d9e3e3c22d2\n"
".quad 0x43e5c98fb8e4f187,0xba9b33696b7c4e4a,0xdf807082d7c6cec9,0xced40390a48bcc1b\n"
".quad 0x40456e1b60a02618,0x5328bf2c0f18d8e8,0x8245fd7ab45ea05c,0xd35053323b29f44d\n"
".quad 0x50e34e738284136b,0xc7b838b5fae831d7,0x9af453d323adb11a,0x4aebe0cf0a1f7ecc\n"
".quad 0x5f33f5c1814addee,0x08fe3a4d57fef584,0xc3c0095fc138e139,0x1d07412112093301\n"
".quad 0x14e780ca503d8e97,0x01555d512681d37b,0x100933595b2a9334,0xb032cf6cac805287\n"
".quad 0x7ca338e281956bd6,0x483c0d5715f41ca8,0x2431704d9b0ff310,0xa44f91feee69a785\n"
".quad 0x31b565cbbe116a36,0x66778293c5ffbbbf,0x305e3c3e74415f95,0x654746ce6b5a577f\n"
".quad 0x8b32737b7075d03b,0x5cfca3b270b462cf,0x2d25f2559aa08959,0x6f2d2f6354b8b149\n"
".quad 0x68ae4ffb1c6bf2cf,0xd4654df7781dd58f,0xf77ebd853ade9e6e,0x4aae8ba4c73bfa8a\n"
".quad 0x1ac3f6d108adca3c,0xf8c64326961d35aa,0xdf1f74d3f4d27776,0xbd372fa30bbcb2e4\n"
".quad 0xee88443e9b52c7d1,0x08a3cc8ce4419574,0xa71cd5b4f674d33f,0x7bffd932a75e1ed1\n"
".quad 0x4c976cc55f0c9c39,0x9eb4fc1fb1162f2c,0x9929f26ed91de971,0x2522ed568b136566\n"
".quad 0x1627967f596645eb,0xda13ee3452772b85,0xb9eb087b5aeeb790,0x1c128f2bc67de1f8\n"
".quad 0x2bcc9f063d64d81f,0xd3555d4496f26d00,0x3fb09a735b279374,0x5e6eab48a0fa234b\n"
".quad 0x7664675cce773288,0x4d5db823bbf1c72b,0x1a678987de21e529,0x8008adcb8d920b0b\n"
".quad 0x35732c67982da2e1,0x9d4409b2a36312c7,0x15812f7246067405,0x30b929d33dc1fd28\n"
".quad 0x092bf9deb6c23f3b,0x02f5671157f34b1a,0xd3fde0e4cc4caef6,0x484c7236d5376a79\n"
".quad 0x81a9aa0b2a9b1e32,0x489e015c0f3b2b8a,0x97158d1cdfcbc02b,0x6ccffc56f4b712e3\n"
".quad 0x5f472e4b670ca3ec,0xcd71c01a2191e56f,0xff1fd8e8428fc745,0x2fde4adee2eb0916\n"
".quad 0xd39dbcd3eaada9d6,0x7b98e8735479c4ed,0x4be3bd3eabb8e4d9,0xd0446eb2e4bf72a9\n"
".quad 0xf2e3ea62cabf0a64,0x22dffa5e6346de0c,0x33d8e66708036005,0xff94aede695d8608\n"
".quad 0x850b75f3a1c888e7,0x975aaeb6982e01d6,0x9fd63096cf05c399,0xd247ec3f6a718064\n"
".quad 0x123700f25a6f1f87,0x78d8707c763458c4,0x04acc2ea2e4a73a5,0x76d635a07496188f\n"
".quad 0x258e5ec0324d7ad5,0x11e2a8be4db672bc,0xac88dcb2398825ee,0x4f3a1339e7a933f4\n"
".quad 0x5e423d6092ea6fcf,0x2c90c6e8518c88e4,0x199ba704892c9091,0x0bfce3c16615269f\n"
".quad 0x9d329904397f80e8,0xd17a0c98144328fb,0xf03b331331697ea2,0x6c8e7ef0a80446f8\n"
".quad 0x27524a5553a8412a,0xaeeb73e4c1270c1b,0x9f6066bfa4be03e9,0x0e5fe65a8d1b8e55\n"
".quad 0xc0359d7d2c1093cc,0x9ecd6719a16fcb63,0x58db78191bca58a0,0x0132d5edad61f813\n"
".quad 0x6185067c9cb040b1,0xb3ab0985bdc43640,0xf2c026a7f8ce2943,0x011b88828bde0e4f\n"
".quad 0x058154f14e18dc9a,0xf3fdbc95315c2d60,0xac68ddf8177739d3,0x7e84dbda0f2dad98\n"
".quad 0x162ad06cddd316fe,0xecbd4ae74b73b59a,0xf375834ad92746a0,0xebf77d029030807c\n"
".quad 0xd50673bd16b043f0,0xde903e8fcf37a235,0xd5661584af99dce5,0xd54d5e8b936a5b0b\n"
".quad 0x41e70ccc63cd592f,0x6aae5834a732eab3,0xf70832b7a745cc7d,0x90f2ecbfbd7db60d\n"
".quad 0xe28cb96db2ba74c9,0xf92a6afde15d8c41,0x2a5f8f26d781c322,0x974c47eeaad8f7d2\n"
".quad 0x5162a94445af6790,0x9d07ddde4f6acfdd,0xeb2e482177f83ece,0xf5c0d31522d1b130\n"
".quad 0x845ef25aaade44c6,0x166d3e926c1c6d66,0x78a8e7b8252765f7,0xba775775b7169471\n"
".quad 0xf050e2aa3a4f7a8f,0x309bf3d3c9ad4573,0x87e4fb893d4d5f46,0xecfeff8a172988b8\n"
".quad 0x73ebf5598c3f64e6,0x14db455f93672872,0xf2ec9dcb54c92dfd,0xa447b6af48b02cd9\n"
".quad 0x6e21fcfeff586cde,0xf08c62d862ce19d9,0x1e90ecc65b768871,0xbca54dc546826844\n"
".quad 0x969f8ad863d06566,0x12598b45fba9f8ff,0xab95fc04af005928,0xe2f7cb43fe1f7bbb\n"
".quad 0x9b580911cf9e1fef,0x65014b38c6316d25,0x0d691008dcfad26c,0x74b4689692c34f12\n"
".quad 0x715434fc4221f52c,0x674ab2bad23e8929,0xcc522f65e4dcdb90,0x6eade0aa3639fc66\n"
".quad 0x0ae57f029d6d0885,0x452e787a096cc995,0x4f6e9078a8424fd3,0x18bbe77bf8326244\n"
".quad 0xa8e878776f8eae87,0xc703878842dabd3b,0x31627ca6d42f2890,0xc98460c68249ed62\n"
".quad 0x42a204832f2bad81,0xe6f9e9f1d496f17d,0x871e5f09d3c37493,0xff4ffcfffefff52c\n"
".quad 0xc6d4c3ffdffc7ffe,0x82225241d2d473e1,0x371722e1990cede2,0x83b3995779f53418\n"
".quad 0xcf3140b6d3df50ea,0x38d9ce82c457f081,0x2310cadc02ce53eb,0xed40d899efa44154\n"
".quad 0x8bb8a450be55f1d1,0x456a2c3cd4024ee4,0xbf540e226a371429,0x769aa3067c732b67\n"
".quad 0xbe0825a068cbaa01,0x163ec74424b436c1,0x738a4efbd59f5b00,0xe016bc6719dc03c2\n"
".quad 0xf715fc9a210b0957,0xb954ffd17532b062,0x971ce16049f31e35,0xdb1ef2a2d1fea29e\n"
".quad 0x28bdb0eca554cf0c,0x59fb501779c2df0d,0x2f7545f41ccceb10,0x095f79dde7a8335f\n"
".quad 0x1311486d361b7ba1,0x26e8359cd400c081,0x85ce368cc819dee7,0x3feca3121fb6c455\n"
".quad 0x121563ef9e217077,0xa1a902f681277d8b,0xe8b62e86f23403d9,0x6064ee49f3ccc5ac\n"
".quad 0xb390c35818eaaa91,0x65578dd65688e022,0x5b239234441ec7a8,0xb261a5e45ce686dc\n"
".quad 0xf937cc7e1d681a0f,0x4cbfa1738df800bb,0x44838e843dcce242,0x92e6d84c258242fd\n"
".quad 0x52fcdcdbd47122f0,0x5a1769ef4ce3feba,0xa6b8c547f550b267,0x2ed777b21f2076c3\n"
".quad 0x91ae477d8e0947b7,0x0212ae30134eca79,0x107861931c3e203f,0x8fc92e67b735f8e1\n"
".quad 0x6e8e028a890d0cc9,0x46d8cd576fc82ee6,0x26546968e415ccf2,0x3a941127a119c976\n"
".quad 0x30d529f7b402b45b,0x373ab5caf631ac1a,0x47a919c8300b3012,0xcc8187dd680b38af\n"
".quad 0x58b27e74acaa05dd,0x085e81781b71e6a8,0x585a80ec380df2e1,0xe7723442b7acacd1\n"
".quad 0xe04c9b5e526e09c3,0x808b3e4d14ba2fa4,0x93dca91417113683,0x0c9eea7c33ec3c71\n"
".quad 0xb0ffc2ef4316e92f,0x60c894c14cd57b5a,0xfb280297f92193b5,0xb96e2d17b666d887\n"
".quad 0x7fac1d1f739663e8,0xed6371c0dd81a296,0x06deb04154445e7e,0xd59206ac504d7ab1\n"
".quad 0x224b2f2ad2a59d46,0x70f7646b3546d2f6,0x8c59a36902a7052b,0xcd04b7339c35f298\n"
".quad 0x2c3593032cf03e99,0xb5e0d4a483d6cfce,0x1c15c176f2d93860,0x0fd868d925b642ff\n"
".quad 0x71e420070d733550,0x9bb1083f9dca8a66,0x2c29a27d223a5176,0x541f844afd700608\n"
".quad 0x667949eb8bbf247c,0xdd03bc3f5392c927,0xe07746f1157d39c5,0xa5a95e8cfc205b54\n"
".quad 0x735312344328f183,0x73e8327b38939cfa,0x21f1a395b97d2b7e,0xa6b0a7d91fa07fa4\n"
".quad 0x909ac0549cb0a6d0,0x6bb071182e73c7fd,0xa27a0f5441152be2,0x2f658c0328f9f91a\n"
".quad 0xede24109d4a9c4fb,0x402afda51575af36,0xeb594ccb72de3fac,0x5baae4dec235dc7e\n"
".quad 0x2c225c2c66c8d115,0x30c7e58ec9b34ede,0x51e3674d7af2627c,0x73b076f2b803e38e\n"
".quad 0x5813a8331a4abd4b,0xba09570120f8825d,0xc97f57b3e55ad954,0xf0d8fac60c70b667\n"
".quad 0x34bd5772b73e4f88,0x8609dd7bd87c19a7,0x8197bf98673b1bb5,0x830cdd4325f8feb6\n"
".quad 0x17bf58be200468fa,0x2e644b8fb24fbce3,0x2559ebcdfa39034e,0x59cc633c79c651c0\n"
".quad 0xc19a0e1103c1150e,0xfa9b742de3716f9a,0xc9f810add8457336,0x448515f1ada395f1\n"
".quad 0x7dbebfaeaafb0721,0x91666539eb93b5bc,0x8bf69ff8edc0c7ab,0xaebbada8821e883f\n"
".quad 0xf61e39d229c5ef52,0x40cb3c50e9a23184,0xe56d594d1bc9388f,0x259fd231461d1850\n"
".quad 0x45b326ecaccf0f50,0xa6d7d5836ac9c105,0x97517c7710de7d5f,0xa418d7822e442692\n"
".quad 0x15b3a36527041c77,0x7a365da9094095bf,0x19d00cfe1cfb8ecd,0xddc709052eff6f83\n"
".quad 0x83aaa8db3e735d7d,0xf232a2caec243b89,0x279c84cd1757c157,0xaf405517699e338b\n"
".quad 0xa0a49e0cecc72ee6,0x2b8b760ca7f28dca,0xeb02731420dcb0d1,0x74b5d21dc4c68a59\n"
".quad 0x37cebe1e816757f0,0x5e040a1120dce5f5,0x2130aee404cbaf6b,0xd0392b40ecc39b79\n"
".quad 0xfc5c8c4933e78bee,0x1e4ce85a37e3fdd6,0x63e787b33abce431,0x1d1e91c54fc77657\n"
".quad 0xb1e723f3fac4b13f,0x325bb212fce4f0e5,0x49db64de07517d0a,0x4ad0e4af8c5e4ec9\n"
".quad 0xeb04f8fb4e302e18,0xc8fc90bc592aed7e,0x33e41e0fee2718bd,0x615ec06710d18da0\n"
".quad 0x0cd5c83d5ea37a66,0xea24f5a5a193435d,0x422cf69e18bd4e66,0x2bf6b90108d0f793\n"
".quad 0x0896a446746c6c92,0x71271dcdd3e79b98,0x9b91b996839712f2,0x2be134c1c31c8598\n"
".quad 0x32f0d1647723d296,0xe088860ede74bb9f,0xbfbd380907af8ad7,0xef9a202c836e87fb\n"
".quad 0x8622167c20aea97e,0x0f79764517b14e44,0x45efbde4317ed027,0xa9d66060afe77ee0\n"
".quad 0x7adeabcf77e52971,0xb0e35638646fadbb,0x42693aee871be44e,0x26b636735977d1d3\n"
".quad 0x4f40bfd6064ef8ea,0x069d2d19dae6c061,0x79226a144a6ce50f,0xb1c0863f6e8c8c56\n"
".quad 0xde38d24e06e138c9,0xffcf3781f33ec60f,0xa58bfed0ac71dfd1,0x88954dd90723e747\n"
".quad 0xe87158384be832b7,0xc7eeb68f3786fa2a,0xf1626daeac6b9eac,0x81873438e2bb8e5a\n"
".quad 0x83fccd28f0802bd5,0xb52fcbe4f6044408,0x241166bd13f08002,0xa007e3864240c93f\n"
".quad 0x70158011a00fd76c,0xaaed89377e9ad559,0xe0be8e578391286a,0xcd539b7bda28d854\n"
".quad 0x5557606fcff3edcd,0x29bf59d9ae500482,0x0c73960649fdd897,0x454d590323ca7aaa\n"
".quad 0x97833545c5fb774a,0xf9e6e0bacc0b17f1,0x7cb160a680d919d5,0x099634862cfd7b4b\n"
".quad 0x75070c2e44cfa487,0x2ecdb4d01297f66d,0x8caeede1c8a4219d,0x677d611732e43b10\n"
".quad 0x63603583862fd981,0x05c56d100608e852,0x400423bce1177fdf,0xab340cf160a6a09b\n"
".quad 0x89d9270e0851f608,0x3430adfc9b97d809,0x5cd83f8f53e54f87,0x47dee6d13a70529d\n"
".quad 0xefc18990b2a7d343,0x31dd500177ebfa4a,0x644051158dc0d61a,0x6a3e7abed52ed93f\n"
".quad 0x0b0029e023ba9838,0xf32962d33b989c6f,0x3c9762a8506f11c6,0xdf1e077657ffd634\n"
".quad 0xb61083f898256cbe,0xc7f15273a7accb1c,0x39a28b583ff16c89,0x021922c5e60856ef\n"
".quad 0x400c47d9afae1d9d,0x8ab347075f5338ba,0xa1ae146cee2a1d93,0xfdefbb812a062899\n"
".quad 0x477c193be566e2d1,0xa28b1b354d66e605,0xce0251fa1895d6c3,0x078f1d79d2a55d75\n"
".quad 0x4e913f5ced6b84b0,0xad2c9ab3fa8f9b0c,0x949331e6c5a40213,0x79f024b9c8832473\n"
".quad 0xfdbd83879559c32b,0x781a2e7a55758996,0x93db9f8a114ce194,0x2885c544647443fd\n"
".quad 0x916b8cb218200f2a,0x0aa0e130b60de488,0x54c4bdd0cd8e060b,0x4f22415becd27d73\n"
".quad 0x161c9aa96cca72a4,0xbd0a59e367179967,0x01b0188a1afd2ecb,0x6afde476f0f8e0ff\n"
".quad 0x698a456de9f299ad,0xe209cca7c3ebf83c,0xf7ec9739b325c68c,0x6b4dd34446af1e6f\n"
".quad 0x26e7ba8670863675,0xcbb0c554013bae1d,0x2c9a4a13988732a9,0xde3ab69f67ffcbd3\n"
".quad 0x9c722322ebc290d1,0xb2bb2104a5324b5c,0x7bed39302ab19f8e,0x943d9f98bdb31609\n"
".quad 0xdf2118ab30da4307,0x2802f30b432b752d,0x8b8e628f4552d99a,0x5d5c9d4690fbcff3\n"
".quad 0x9db5ccacc90457c7,0xdadc381228bdb5cc,0xee3f6885dfd1d4ec,0xc68f5b8c598d2514\n"
".quad 0x7c0059fe466621aa,0x5f96e366eec63c07,0x74789654bc9857b1,0x80e7bfaf7c3a80e5\n"
".quad 0xb6451b9e624445c6,0xf1e6fdd593547462,0x254d7a115b08a084,0x94789a2eaf79f06e\n"
".quad 0xcff9c9ad98224980,0xecb5be037b157496,0x76e21b63bc74c004,0x2a0d84f7d813ebfa\n"
".quad 0x24bcbe91b793240f,0x67869dbf0322ffbb,0x63a4d26a2ea9aeed,0x2217bcadd7b739a2\n"
".quad 0xbd300af4ab8fa8f4,0x5d7b9c68eccb1948,0x81c30690afeb9859,0x760bc339cce994e4\n"
".quad 0x7f9fdfa51892fd9e,0xd4d02739b370c9d2,0xeee51e0a6d6b3823,0x515773228677b0e9\n"
".quad 0x87cd64d0b0dfc193,0xedc52680ecc31781,0x4cd9ce61907c8718,0x254bec75109db459\n"
".quad 0x2c33c68823c097b9,0x9e05d80ce39b204b,0xf63804cd0851f2df,0x6edf1176aa63ce1b\n"
".quad 0xc8bd7044f392fdae,0x48a9d96147dc691c,0xe3b7fcc65e09f33e,0x8f3e7d7e8a0317ff\n"
".quad 0xed996fed8eb0a6e2,0xb99029410212006a,0x51bc8c6ddbeeb879,0x13d85050fefe952c\n"
".quad 0x675abcf38eca784e,0x9d613801b087796e,0x2aac0285b7ae7220,0x8b8df9e6e48749ee\n"
".quad 0x670ce6ad0a20cc86,0xe663fd63be90c961,0xff94d1cb3a7d7ed9,0x3a730e22d0557298\n"
".quad 0x6f32bf172004bcc3,0x7ab2cd20eaf2db1d,0xcad9750222a28a75,0x83a5940446ee71aa\n"
".quad 0x232be3975ad51e32,0x8046fc9615cb5505,0x1a82a2fd99c2cd20,0x6d5e43194b27b417\n"
".quad 0xb68b25cd0388cb44,0x24d173de3b3292f8,0x9c00add10c914846,0xb08e931f68a8c759\n"
".quad 0x86aaf450505ec0a2,0xe3e3a0757327cf37,0xc8460d2333550c67,0xe2afd97793a2a06e\n"
".quad 0x61b279b1235e6942,0x7262260f9f34d14e,0x7778e137022cf978,0x24ddae29ac976e24\n"
".quad 0x67762167bba256fd,0x0af80eb4b6ff8514,0x43e625c8baa705e4,0x606492f067a462c8\n"
".quad 0x138d586fcf9a9f7e,0xace195b8bde72719,0x9f5dacd63c7163a1,0xa969773de47187d1\n"
".quad 0x565959ea6c18856e,0xd65d1d5a43cf6e58,0xb372a7bb643b3933,0xaf24b47c1a2dd510\n"
".quad 0x32a7fff416d2ec79,0xcc4608d6e59d3d3c,0x1c7e1c0e537355be,0x26c008bfed213dd8\n"
".quad 0xd5390df2b4b97632,0x8d0ff278157591ce,0x04ef032b2242122d,0xc8299671378d95eb\n"
".quad 0xf2cd2ea0656ed942,0x78e8edb14d6ceccd,0xa3f10a3ccfe6a862,0x05004fe4385a004b\n"
".quad 0x9c2942507829426d,0xb665c0aeaea714ca,0x8606cb59b2d3b8bc,0x1aa8020f1475d580\n"
".quad 0x967889623aeef8f3,0x447e7dbc89ebdbb9,0xf5d457a5a53fba55,0x3588f717d41e93e0\n"
".quad 0x3c6b29d199d1d079,0xa2f1a56e69c8f42a,0x2107f530662bc1c5,0x10167aa8f8d92e54\n"
".quad 0x6fefe25b7573b135,0x5fe7faff3fd7f865,0xd8f3febf9febfcff,0x26348f33dafc3f33\n"
".quad 0x38b6d705e0d05fd9,0x303ed7287e865889,0x0729bbc065aeeb4a,0x9002b7fff6b9c11a\n"
".quad 0x934f8afcf63e42d5,0x473d28e763bdf9cf,0x948b6fbe03927f1f,0xd7106076688a316d\n"
".quad 0xd0e723d3a0a15e95,0x042ceb766d57cfcf,0xde67f5ef361099c8,0x70b1114addcad728\n"
".quad 0xa354722aefa0be4f,0x67e5a2970e513b23,0xeadd0d6c9759ce39,0xaeaab3aa59bd5378\n"
".quad 0xfb7e5b1d05ad20b4,0xfd5ebd547dbc710e,0x10191af33a63b430,0x7039fc70a0020adc\n"
".quad 0x335ad177824bf2d5,0x5f0c41ffbe355619,0xd81b6721e90f3158,0x7dea71ebbcaca664\n"
".quad 0x92b1fb2a804e6261,0x65c298bb08731d2e,0x313bce42c0c900e3,0xd48fa3b0921dc11a\n"
".quad 0xb94e6bb0d23eca55,0x188f8c9f15c14b3d,0xf1d46453f59517ad,0xc674c55f697a976f\n"
".quad 0x1390c8eec17d5516,0xe8148aa002c38b17,0x9ca7c0e41fdc2c92,0x19d50e291facd9e7\n"
".quad 0xe7149dc1a1cec210,0x28af5abc55ee75c6,0xfc2e7ae284e8e4c8,0xf7fc759a5407ef7d\n"
".quad 0xd9656087e64ef4e2,0x95b045dfc5aceb80,0x28eab35fa6b59046,0x90128f37f321de02\n"
".quad 0x3c48fe4d31f5eb85,0x88bb22b02334ad9f,0x9917a1ebabd9f07d,0x429b12244c8f8e5f\n"
".quad 0x4eed1e264d10d260,0xd103e3f9186d1806,0x96d04e9c7b517f5a,0x9a123056ec22f7cb\n"
".quad 0x8b9081e829ae0a45,0xa2a639f30232462d,0x1719cd181d803e98,0x7fbfb07eeee186bf\n"
".quad 0x26962d6648a34017,0xf8fc11cf03f265b5,0x61e3fdc128e60656,0xb21ad35bf4c99339\n"
".quad 0xf6c0bb1d06553168,0x8e2f396934dfccc6,0xa1cbc74780a4f662,0x2770a5d545f8f16e\n"
".quad 0xd3d93b4e60de8fc3,0x25fe540e7ede89c9,0xc7fc0628c62b73c3,0xe1e44391ed49923d\n"
".quad 0xeada6dd6d187c9a9,0x655397d1fdbcd095,0x5c2437e927cfd89c,0x46727166c02917f3\n"
".quad 0xd2c13a007e7ebe94,0x8a2216793e4d2e80,0x2e84446c87266938,0x2d58c5653da3e6b1\n"
".quad 0x3990f03179ac574a,0xa2962cf55e96ea8e,0x8d118b3c77f29815,0x47d9c919e5bdac84\n"
".quad 0x7b40139f81912116,0x2c5625e7366a2496,0x50ffdc6a4c818739,0x166ca2b62ea4c8bd\n"
".quad 0x5cf8a453a368e1bc,0x329ce9eefb9deb59,0xf9d79aa48b9eb38e,0xbdca8f2e49b85e38\n"
".quad 0x59263bf912743c7d,0x60b09e732025e9f3,0x09614fee82e4c316,0x00ab92a201c014cc\n"
".quad 0x6f1945fdacecc530,0x50b5ea38eeab3805,0x77c099872365ddd7,0xf41078217bc0eaa5\n"
".quad 0x53753b1f2d914609,0x4dc060a9ccb42ecd,0x561af8f396a294a0,0x11f9dbb34a612df4\n"
".quad 0x9bfaa23106ffcc45,0x66d269ad094e1af7,0x452cf9abce607263,0x60a29a2a678149d3\n"
".quad 0xe53bd8e77b6ba1af,0x6aabadfd05cefb1b,0x1779f3e51187164b,0x4fceb499a031f1d2\n"
".quad 0x922043dde4ccd78f,0xa1a74e8d419b85eb,0xeaa0ede73c7d7f77,0xd311014575347a02\n"
".quad 0xc28357ed6d46a39c,0x0efe5750e026c3dd,0xeeaaf646a89fc856,0x11b9eeaa53a753ba\n"
".quad 0xb3b6e3a88123bd81,0xff43335460130f02,0x30a7a6473f008320,0x9e8cad3a28b21570\n"
".quad 0x6f8e8784993629ce,0xd0bb88cad5c5a832,0x3cdc14f9321181d5,0x830a9bf1d36b079f\n"
".quad 0xdc08b6a261218831,0xb5c9b8128988451e,0x829254e768397208,0x3673f53aaf76818a\n"
".quad 0x5d2b4c6b13156717,0x720f0b37631a11d5,0xf6c28320f80e052b,0xe76b08cde7a022e3\n"
".quad 0x09118adee514a7aa,0x43372d31b74c6478,0x29f852d5ca0fd9c0,0x4c6e8dc542fc9b84\n"
".quad 0x3c0e6c72fe44c162,0x010a5f1147742ac5,0x1b8352b952ed002a,0x5782fdba8802fc7a\n"
".quad 0x1d463b7b9d68446e,0x78cda4fdc485cff1,0xb1a5ed1d031a4b63,0x8c5684d56f2cf1ac\n"
".quad 0x79e18b3ccd509e1a,0x8ff8e0424f957653,0xab785a04bff83c72,0xbc75e543764c081d\n"
".quad 0xa77587c716942115,0x0bfa5b27aff30c89,0xe5735c09f4749b6e,0x68139b97ae3cec11\n"
".quad 0x1c8a5a679b4356e1,0x49b5d87dc009de21,0x58584ec8a254d77c,0x111b8f985d35de49\n"
".quad 0x4f99d28cce215fc4,0x2a148d3aa3435f16,0x07a6c0e0366c4138,0x96e40cbd114a345c\n"
".quad 0x6434c1f8d71fdc69,0xae9f10738a59f60e,0x733066162abb9875,0xe56fcfa65f74827c\n"
".quad 0x4e1ce7da247ed760,0xbdcaeb3b6a080cb0,0x00a58c3638f7ae5f,0xe90f9ae6138080d7\n"
".quad 0x6a0e638af4560996,0xaf6158d40947cd7e,0x7a4459f128553358,0x85bf808a3f68665f\n"
".quad 0xe65bfed78334ed2e,0x3f851793071b763a,0x7b501c3eb85b7c60,0xdd97d9340e48bedd\n"
".quad 0x493821478e9d52df,0x796c403e5afee38c,0xcc9545a3024c7ac4,0x67589b1663c7148d\n"
".quad 0xeeeb0b663847ae64,0x394d32ccd1fedcdc,0x35c7d730f8e1f92e,0x8eaef9cbb24b1712\n"
".quad 0x0c6160204292beb2,0x74755cc5d71c1d18,0x102947cf392f9134,0x0a0cce65ce319c74\n"
".quad 0x696c4aee8d878f05,0x4044944b56518825,0x7398c12d80b1e8f3,0xae8a23c738ef160c\n"
".quad 0x499b30f870113bc5,0x16c8fb40594f3ff8,0x27580883c2bf38ae,0x1d5f12f740d9d63a\n"
".quad 0x98a327c737ce857e,0x4cd04929a7ab638a,0x0417a5b44c1e0fc5,0x77b72515b1da3545\n"
".quad 0x7d7d60021b7357cf,0x1e75617e62897b05,0x9959bce6130e60a5,0xd0e756abe3df568a\n"
".quad 0xd12c6a5f4e34da8b,0x3739ee2cde1d99cb,0x4561fe7940601df9,0x08620049200237db\n"
".quad 0xaace9d59d2a92c86,0x8720d0459e9184aa,0xe391b6bd94387a43,0x0eabc39c4bf12b14\n"
".quad 0xa4899ba3d22eaa22,0x97bc7635ad1986ea,0xe0c0e41e3993cb77,0x5f87c20148408df9\n"
".quad 0x5de94dc7a8f10b54,0x348b5e4b5268a59f,0x702dfc198f3e5774,0x6b2d2dc56143ce4c\n"
".quad 0xaeaae7937ed08bad,0x3500becce65b516b,0x85b3c297bb3de71d,0x4998dab9f29dee68\n"
".quad 0x7774c0a70fbc1755,0xf5644eb613813452,0x9e961ad0b8981995,0x6f20e6957e4dbe43\n"
".quad 0xb09572488a6d24a8,0x215be30aba4eecc6,0x84be7926026014a4,0xfe18982cd3b336f8\n"
".quad 0xc93ce605aa8c320d,0x639978f5cb89a5ab,0x45edb1364960f781,0x058927733a4195b3\n"
".quad 0xbcd7b27f274f28c6,0xbd6ee3f070dc7e7d,0x97639a5572ac5f02,0xfc70d158097ba6c8\n"
".quad 0x286d8dca0a1d738e,0xd8e9ca25d4c077c8,0x2d184204bdaf2880,0x016296d7147acabb\n"
".quad 0x35debf0df1af1dc1,0xcedad86ada109bfe,0x2b01f7a2bea2cba9,0x2117c884107f71f2\n"
".quad 0x1c6100209597338e,0xe6b8dcdf3f26b362,0xfd8272021bafbf0b,0x51236a0269d27baa\n"
".quad 0xf8e013ba978295fa,0x6c5c240f8730d00a,0x93c74b33ac7573d7,0x09a2c8f1a0947b05\n"
".quad 0xc8ba9c9031277810,0x62ba6cab325f9196,0xe6768f15e7e1dbae,0x038778eb6424978b\n"
".quad 0x55fe96675ddeca7c,0xb4397165fe084408,0xdda9d9f83aede946,0x9f5350722bc3f109\n"
".quad 0xe86eb72f4ef8e2b6,0x9cd098a323195b48,0x91f38d96ba3f4aaf,0x6463e3fc36c9130b\n"
".quad 0x23c6844ee0525394,0xcbd404ca4be423f7,0x22ce091be870e973,0x6e1c503451e32630\n"
".quad 0x41c035dde3123478,0x218a091b2ef1d4b6,0x518436438a138b6d,0x14572ce6475441de\n"
".quad 0xf5ebd34d7c7109dd,0x2733117817fb33ab,0x42180420fef47c96,0xd461904184b1fc1c\n"
".quad 0x9833fa50aa8be9a1,0xf8e822bab0c7c5f0,0xb18989996e58c3a2,0x3bd8b82d88cc7da6\n"
".quad 0x917151f8fea3a221,0xb8a98424851028c9,0xc89eef09e370042f,0xf13226bdadfd42c7\n"
".quad 0xf769b61c97b4a636,0xb9def0ff607da53f,0x0fc42d12122d32c1,0x463ba1b7341916ff\n"
".quad 0x37a0e784a14f6412,0xc4b7808adcf5cbbc,0xaa73fb910adf8564,0x4c281c108b26f651\n"
".quad 0x36cca5d3484cdc9c,0xbcd99145e8b285b6,0xeb2c9e0128f329dc,0xcc3948dc67351244\n"
".quad 0x4e7594787bbb2f95,0xa79234645eb2eede,0xf6e1eb3389964aa7,0xabfb478d6baa774b\n"
".quad 0xb4368ba44d1822aa,0x40dcb9084ee061ba,0x724d7b75481b2d37,0x3c80411b8e9bbf00\n"
".quad 0xdd86299d52ece966,0xb9de14978d959e9c,0x1e0709c64cca8d0d,0x9345e1559a68b8fe\n"
".quad 0x988c56fc438399af,0x3fb072a4c37ac76b,0xe0a59e340b8a6960,0xc455ca160cb93466\n"
".quad 0x67c8a8e1c2da2061,0xb1cd22565765e791,0xe45c535bca3fdd4f,0x1078fc32bae59b86\n"
".quad 0x176e5ddf23bed161,0xfc42b75770910634,0x5e4e8fac79da7cfa,0x7be2f244524d3549\n"
".quad 0x892ebaa615bd6676,0x2716171e1d54989f,0x758a1f52dada398f,0xb86f1d5b462393bc\n"
".quad 0x0ce67c4b9afa72fe,0x506b0d4d8520ff15,0x0e964c328be66960,0xc722a419f5b8a716\n"
".quad 0x79a238a20be98e6f,0x0939eb1a96b260cc,0x21d1824eefea64a1,0xe9269bf90e5610a4\n"
".quad 0x045ee303a2e65e4e,0x38a3f6950a4754ea,0xc0accfc50f1b1cb9,0xc4aa1723d9ab3f49\n"
".quad 0xf77ed3892269d8ef,0xbe0e56fbd02c543a,0xcd2657609e79d6ec,0xdc75ca8e03474409\n"
".quad 0xb38fcd59e474d1c9,0xbb4e4089a0855f38,0x3cf69f6597be6575,0xd83a39752389eca9\n"
".quad 0xaef7f9c0c6c5f3d4,0x0a2c427762b2aa5a,0x782e9526f5eec9fd,0xe81cc91a28c2b0ee\n"
".quad 0x922b5a1673620cb3,0x56384a7f91b679f8,0x3a39ef5b48ec13cc,0xa57acc89e3e1fc60\n"
".quad 0xbea4fbc39ab9c732,0xb92830aed8095bf2,0xa8a5294e030cdbf9,0xb31493ffb52d7753\n"
".quad 0xc3167d5e5df74ab6,0x7e99eadab29681d9,0xc5206a701918458d,0x76251c69f39973a0\n"
".quad 0xeffd714a906f20bc,0x357436440266a802,0xafc8b3e609695157,0x116f39c127752118\n"
".quad 0x694fb81e55ebf07a,0xe08da8afe796ff12,0x4225d21c415d3f30,0x355356d3eca0a20e\n"
".quad 0x770646ee522bde8c,0x2f57a3c70206606b,0xf9162bebe93e8301,0x8b3aaa3e43b88a56\n"
".quad 0xaad01f37a268384b,0x1158fc73c929dcf6,0xb1e24e0588b6f426,0x760a41ffc412ba9c\n"
".quad 0x007344a9aa5e0dba,0x62b799a97c9c9bad,0x3384e716088f939c,0x3fd7f9febfcff5fe\n"
".quad 0x6ae1fcffafe7faff,0x1e8fdb697f47a3fb,0x23fd2e77a63f68fd,0x8da07395730039af\n"
".quad 0xf5451ae407093f7f,0x19b2882e070aee63,0x3dde61262b389a68,0x030c19cea68a639e\n"
".quad 0xd9fcdfc3216fca8d,0xa2d22489ce70cb3f,0xdf87616cd2e1cc6f,0x5414ce6f7498190a\n"
".quad 0x1f9d89c4af99eae9,0x773a1d4f1f3bc062,0x7d93865ef6b8a702,0x342f13462b117144\n"
".quad 0x7b6018b09e032c45,0x8a0188c65ecb0423,0xcea5a6a1191ef154,0x52c5777326bc10ac\n"
".quad 0x39e969f3707ea39e,0x47357a61717f3f39,0xa16ac710b00849f7,0x526e95432a4d63ee\n"
".quad 0x87c10120f6ae54ae,0x1ea5c05a2739ad48,0x4d80325cf053a398,0xf63f9b828a5982a7\n"
".quad 0x205b425155907669,0x4423753a4a338e21,0x7292882f8e8d6713,0xc200558c6ce81c66\n"
".quad 0xd1ad6018191a017b,0xcbb11cdaa49f8e15,0x1297441b40cb5dd0,0x8bc9f9ab8cb5dd6d\n"
".quad 0x62f14027766ad629,0x8b0093f2a379f844,0x7d116114d56334c1,0xd7cf17f361bdfcae\n"
".quad 0x5a6b3ab12fe3d4f4,0x2816c14545a4b8c1,0x61fcc5fa37ac9331,0x604f4e76481ec328\n"
".quad 0x2b7f33ab698b9697,0x34fd91e68dbb6883,0x49860349b3dc0dd5,0x7c4a88e0e56e2d79\n"
".quad 0xf3f61fd0d7ba3e19,0xe7c9b68f27d9d71c,0xb3d63279d85f3730,0x87b841056982e2c2\n"
".quad 0xf134432b715fcead,0xca66ec5af39f7b92,0x8062b7e25b47db19,0xe0b9450a2953a2f0\n"
".quad 0xc7e54a72e5e45250,0x04bb39664dbb179d,0xb3aae115fbb239ae,0x2083fccf68af8e45\n"
".quad 0xbf1b15a4ebbce21c,0x3c69273f3261135b,0xcdb035c01cbfc14b,0x7c144513f7842534\n"
".quad 0xc859a9bb4186b906,0xe53cf5751b46b579,0x9ccb7faf4ffc012a,0x339ca5d04318bdca\n"
".quad 0xd6a880ba014fd391,0xba93a31093f82e9c,0xe2e2a15ca1b25143,0xb2ef4bcc11b2bba5\n"
".quad 0x533629608624bf79,0x9ce38620032d15aa,0x6ad2058d0893d911,0x76087600fcaed844\n"
".quad 0xb347b1a3e3fce93b,0xdbaba9cc4c87b3aa,0x03223f5a55c4cc7f,0x614730076a5faa9e\n"
".quad 0xc1bbced9daa9fba4,0xec9f8e29678e4a8a,0x4de763b17e7159dd,0x114786db3766b8c0\n"
".quad 0x4137661313310f8e,0x919c85cae22003c1,0x4fbeeae52389030e,0xce579b671f41ca33\n"
".quad 0xfe7d6cbbe133d319,0x9f6e29405b99c02a,0x65a10116c8fa9631,0x3f84117b97628aee\n"
".quad 0xf38ce1280338167d,0xc480cca5841637ba,0xe4598d84aac8c620,0xc198fd3176f33eb9\n"
".quad 0x662e5c402f7fbcc7,0xa1a901066065550c,0x808df7a1977fc340,0x2d6bc68ca846439f\n"
".quad 0x06a6ac9bb2bb036d,0x53be8b391957cd64,0x1b798e75dcd56b0d,0x452b268841ffd60b\n"
".quad 0xdc05d8bcc59dd835,0x856ff7bb2c35e3db,0x1772e45ecc2fa988,0x9cf19f743fddcc45\n"
".quad 0xf8ace6ef91534f8c,0xdd16fb4e9ef3dfc7,0xe111241c147d9f1c,0xa87d48195bf43b56\n"
".quad 0x04229eaa22039332,0x967a4427c3ccb330,0xb8b4be47f4321f02,0x15ae5393e9c58283\n"
".quad 0x7855df337b18bda5,0xfd8a9dd78e2ee432,0xa2c0c5c5f4041188,0x541a18bb5b02083f\n"
".quad 0xfb1aa191c0630081,0xa3223967892a8a7a,0xcb2e0cf8cc873aad,0x4f9e81ecf4b08bef\n"
".quad 0xfef2a07009545fdf,0xf022d194f2fe0fa3,0xfa2317bc039ca4d2,0x4326ab67dd8bd9d6\n"
".quad 0xfc6ecc3baf0cbca5,0xcd81aedc781f0c4e,0x54a330633e1dc7c9,0x7fd28c05b6462570\n"
".quad 0x121796c95af3f2c0,0xb7f9055ab651032d,0xb26054176958a022,0x2fe3e70d89b83b25\n"
".quad 0xbd34a0d032f710b5,0x43bf9b32c6762087,0x1565795077f2f273,0xec78adfc61b2a58a\n"
".quad 0x03d25b494570e888,0x5c005d2ca8f0459e,0xcd9ca58ecfe4452c,0xdf61899344217e5b\n"
".quad 0xb9ebf0b80cb2598d,0x3f1b41ff55166c24,0x478fd7602061f26d,0x7a526546a8a6a1b0\n"
".quad 0x2a05270f4f3795cd,0x843f5cf82236736a,0x3edee5cab6d7bbff,0x1aeee67fe136f79f\n"
".quad 0x3cbf4d38f41fc811,0x1657371fb125979f,0x00492f90cf8e8748,0x727b2bd98c637342\n"
".quad 0xca4204ded7c2002f,0xc7bb2358461ee2ae,0x4d2d038b04bf9f6f,0x9ae6c6583270fb80\n"
".quad 0xb3b8cbdcce7b14fd,0x2aa9d66ee856d3f2,0x19afabc2fa473d23,0xe07309b670893c3a\n"
".quad 0x59b77899326f3c17,0xa7032b75791ab9c6,0x1afd5b9563d21fe5,0xc5846553f751e45c\n"
".quad 0xb32e65e1c3640782,0xc95a9774df43d952,0x16328548231ad2de,0xbaa418fc423723f5\n"
".quad 0x6b496248425dcf0b,0x0856e0a6265a868d,0xc6192e32cbd01c5e,0x901b302cc38d599d\n"
".quad 0x1f67d283d1f67b17,0x69e5d6b75db1f2c9,0x7c78a1d3db9b6e50,0xe278b22ad378943e\n"
".quad 0xd2127326a17009b3,0x112e87e7fbe24996,0xe06303541104b426,0x990aa0fb8c8d57df\n"
".quad 0x210fb07146d373bd,0x2c79363c57204431,0xb8296788fcb7f135,0x42a215f6916eda11\n"
".quad 0xc45c92199e753b84,0xc59561c49a4d1cad,0xabe4e124106e3052,0x54d93c3f0a215694\n"
".quad 0xade03564264de93b,0xdd1e7ad4eeef4470,0x30021c2e1cf022ef,0xb77226edeaad1065\n"
".quad 0x9b31e38859fa06b8,0x5ddcb9f2ca661e43,0x167a47c781339533,0xded8e854c8dfb699\n"
".quad 0xdd61f5ae4ae701a9,0xb11d3c3cc8e98bb0,0x91c6af14ecdb2b0a,0xbfcac9aa1da69ac5\n"
".quad 0xb7d81324ead4d04b,0x725ba66038e16474,0xcaaa998e83224021,0x482c99d38c401732\n"
".quad 0xa09f63e8da948b56,0x92bb05afcd08adc4,0xb0b706305e8fd20e,0x7b9ce115ba04294b\n"
".quad 0x9d0f9f86a8719932,0x86996cc88cb548e7,0xcda4ec3179290ca1,0x66cad8ad0aa87fa4\n"
".quad 0x0c3814adceec2c65,0x9c69853600bc2c3e,0x451e8ea5760b4dc2,0xd562a19095ab5160\n"
".quad 0x730c7dc9d88ec10a,0x62d25944322a0a5a,0x0916dceaf10f6f05,0xe064efb732ef49aa\n"
".quad 0xacf8ca74051f1e52,0x938dcbacdaadb2c9,0xc84ae95ad39c124f,0x79d68e36a87f65b2\n"
".quad 0x7abbd758438e6c40,0x8744da3e86acf263,0xb017c75fb62f4d4c,0x8d18a56e1860abb5\n"
".quad 0xd367068d148e1034,0xa3de6c95d6956307,0x4d158402dab38714,0xd5d220336265c83a\n"
".quad 0x2d794c514ce70c4c,0x066c04a365325e6f,0xa3c92c98e6687b8a,0xaeaa3e2eaaef6714\n"
".quad 0x95aa6be49ca58244,0x00118b94dc8115ba,0xe971f631d9e17e4f,0xa57a871cd1d7f2ca\n"
".quad 0xe95b9398fdd03b0b,0xea9f434ef62e3b2e,0x8e44e234322fc374,0x53b1ba8c8e6ccfb1\n"
".quad 0x6cc080893f6d555f,0xb34d5b9392c7f751,0x9e4e3d0cd7266180,0xcf3ceafbd5041c1c\n"
".quad 0x0b513584901e10ca,0x09dea7a79c7129d1,0x905863e28046c980,0xebd891d157587d04\n"
".quad 0x6fdd2cf9e6e9d273,0x22e134564e7dad76,0xe56da682da733684,0x1455d57f3cd12b55\n"
".quad 0xc5c433f306eeb4e7,0x61d11083e70ccfc9,0x0fdbf28456eb3bb4,0xd4049bfb14a97a8c\n"
".quad 0x59706fcd319ed1c5,0x661f3aebe65b2a9e,0x36e29579a4933f6d,0xdf61509c39ca7209\n"
".quad 0x40117bc4785d1b6e,0xc2d2cd55e651f734,0x4afe04cc7b8e3c71,0x2bf38e97305a9d08\n"
".quad 0x95130be8797b8ae2,0x744870dd18b153d7,0x8bf42f0b4e4f9c51,0x2ba50fe38a770065\n"
".quad 0x2740e286084efcb6,0xd94366aa2bece9a3,0x8451eb162f7c4e22,0x045184cae5363b49\n"
".quad 0x3399346ef2168a29,0x72697035dd2c6bf5,0x0f498b95095c7d6e,0xe6ecb7355d9c8485\n"
".quad 0xc9568d6952e774e9,0xdbf5025fdc623799,0x5339dd6f7468ffc7,0x97e0f251a6abc130\n"
".quad 0x18bec072c74e14aa,0xbaa1adb2bec04ed7,0x003efd356139bc11,0xc99007200f0456ef\n"
".quad 0x13eadc336e413024,0x11a70493009bf9e4,0x67651ded639959cf,0xac9d8787134478cb\n"
".quad 0x183793d43c3d9746,0xcd53116ece1ee8e5,0xd35d3fdf6309da19,0x49fba233ecd69c73\n"
".quad 0x3351863a78f97d42,0x144720c57552d82f,0x22eda6c9f3cb05b2,0x7544b1d92c471955\n"
".quad 0x4dc7f0779ced111b,0x0c83c6e17325603c,0x6958f3c23e68aa2a,0xafb44b775cf739c9\n"
".quad 0xc588323c139e6085,0x045d2d5179637c02,0xbb20ba5dbc69e2e9,0xfc281ac4726f7d25\n"
".quad 0xa03087c30441d0a9,0x2ce28e072b7a5bc9,0xba4d5d1aa6b0c763,0xc72b7b8c7247c5a5\n"
".quad 0xebf4ae63017f2bf1,0x9ad454ce48020a31,0x02c0b389b2928cc1,0xb74c3f8256e882f2\n"
".quad 0x2215bcf83391ec1c,0xda81e4a60360344a,0x0083f4b376fe9f8f,0xc1fe7566fe735ccc\n"
".quad 0x11062a47afb607a5,0x2b44ad9ec4e34ecb,0x419ff04884b4f4dc,0x1af1c0059f0575c6\n"
".quad 0x53bda32015976ca4,0x60927fb199089208,0x23e9f1b466cfe8d3,0x02639c8350d47b9d\n"
".quad 0x626a155a952a3ccb,0x0c403204bea33b05,0xa013bc3b99b73eae,0x05d74678f1ffe069\n"
".quad 0x29b961eee73c8e0d,0xd0f01ceafe7a7b44,0x2619b2dfc711d595,0xcec7e5e2c5d351d7\n"
".quad 0xd6622742b4e77283,0x59d60bab29f939ad,0x3588393be3405760,0x74b3a6f7567c1d76\n"
".quad 0xe862aab8652220bc,0xe86ca873ad0cadde,0x1c7ec63c9c3c8d94,0x77d4cb26f44c524b\n"
".quad 0x72377a899f929222,0x4f3ad1a105a2052c,0xf34d048ddc814a89,0xebbbd6d579c462e5\n"
".quad 0x7cf77f775d5d4e38,0x690f785675e12982,0xf99470fe40e6a097,0x73399c560ad0143a\n"
".quad 0x74a31464f9a0ccbc,0x7720b75eb1159767,0xd34c79b9712044ee,0x5300f1b2cc28bc98\n"
".quad 0x1ccd6d344277fd96,0xd33bb9ce9915baab,0xf9275c930295e53b,0x768e80168c26abf6\n"
".quad 0x9f753060248378ce,0xaf0a9ca68651fc6e,0x6659abb9ca6c04be,0x034822b7c299b7f9\n"
".quad 0x887272e37bcc565c,0x9d05f722604de89d,0x8e12ba97709eecf1,0x1bcc011573ac9c8d\n"
".quad 0x0a0278d361b78e2e,0xe292784eb54442b7,0xa0be617db5682b62,0x307f27b868845ee6\n"
".quad 0xf375a92cc7e548e7,0xb1d078b068f94c65,0x9f2316134f4b65d0,0xf4965ad4a08e16ca\n"
".quad 0xca7475c648468e59,0xa8ceea36cc098aea,0xda04a590a5ee1a8c,0xde748d2659f23e38\n"
".quad 0x6226af4e272866e4,0x2a6ae1c1b3e78eb4,0xcc01b38b32329a4f,0xb3370093bfc17313\n"
".quad 0x41e9e17af5597104,0x57740893f3041420,0x0e3af2a5ca875308,0xa4e50c9398de2bf8\n"
".quad 0x3c47a1394b31c723,0x19a2016cfa8bcbc0,0x48bf919b2df7158c,0x42a0cb85cfa1ad31\n"
".quad 0x6266a836acb53a6e,0x4397d509b201893c,0x0768188984bead77,0x6cfdfc3c2ce515c5\n"
".quad 0xef1dcbc71d505290,0xd12cc501dc5de382,0x22113ba02134d61e,0xa2898d0a385bc483\n"
".quad 0x195bf45b3ab43dde,0xc2e7343f29d13158,0x0655bab0464d98f7,0x471c179e067b759f\n"
".quad 0xa4a9bec754517dca,0x285552ed27c9a42f,0xfef7972b39c2277b,0x847fe3b3d8a8c690\n"
".quad 0xb0d90a56e14e0a36,0xc79fb48bface3b41,0x45f5ea847004c08e,0xb4721742afb2aea3\n"
".quad 0x84a5a6cfde63a1c6,0xa11024aff278e109,0xb525ab96635c8abd,0xfe91cdc92a743297\n"
".quad 0xcd7296839bf20c9d,0x0da2f75dbe4d11e5,0xdb4a100ca068c55d,0x8fabc11f2ee76bba\n"
".quad 0x3b7a70c97baa92ec,0x520cadf81373a3a5,0xb377dc94c7944e98,0x93ba98356b443e33\n"
".quad 0x37b1cb3b45849ce0,0x8f582f10363d5629,0xbd5755d2ea1563aa,0x06a8f830cd830922\n"
".quad 0x28aba2ea46ee83b7,0xcc120d3e9fe7bbf1,0xe32f240e39a2915d,0x68fa3af1f6f5b4aa\n"
".quad 0xd060dfad2a19cd0a,0x9bce8c5e767a97be,0xf1e775706896b2bc,0xb5905aaac05a1f4e\n"
".quad 0xd61b08a41bfff2ce,0x8b8040253e99b429,0xfd8251ee004b7a40,0xedb210abe75b3024\n"
".quad 0x31abaafd9bba1ec3,0xf0750aa8b5ee2b48,0x3c44f3333233b815,0x8ded5d65faf68770\n"
".quad 0x8cc5b0a59960aa14,0x67103ded37d4ddc9,0x508cbb20a56fba01,0x06008f464518977c\n"
".quad 0x6abd946bbd2d4775,0x629b57827e50faf0,0xb0d97b078c96d6e4,0x5178314bf27667ea\n"
".quad 0x4b94ac9ccfa257a2,0x54d10b3c24173347,0xc79488e621d671f5,0x7957488a6f33707e\n"
".quad 0xe9f0e037a5bc3621,0x9d0fa579792df3ad,0x049dcb035596718c,0x55cf42cde4e3835c\n"
".quad 0xf122a08821581e36,0x9ce4de58a80324f7,0x3dcb7927a2643063,0x48b23500b4e8fdfd\n"
".quad 0x592d01c49c548a1c,0x2b02049991040167,0xf3bd3a82107d44ee,0xfa51e02899f4c533\n"
".quad 0xbc8300c83fb9db2e,0x38a58af6e60c68fb,0x390da77a7f81680e,0xfe596155e1cc1ec0\n"
".quad 0x0e0a28f26f13ec71,0x893cc897318ac6e3,0xb66f22f4a2cc7cd0,0x4a9438280fdd8be8\n"
".quad 0xa2432fc35121c784,0xcebd535f89ad6526,0xee8104ae531869a8,0xb1fa279fef166a82\n"
".quad 0xb7bd445f62c1d23e,0x5ddf7b4d018b674f,0x1f2dfe03008d3213,0xc74cdf966bc7c7bd\n"
".quad 0x1974a849b3380642,0xaec448e515d75c19,0x4123a463888baafa,0x471600eade75ceb2\n"
".quad 0x46e5dab8b2fa0ec8,0xf38d552b24c7a806,0xd1f2d154549b57a5,0x2cdda83ff940107b\n"
".quad 0xe000747eae24bbb5,0x28cece535753b1ab,0xf1817be48c382a5a,0x3290297450875d26\n"
".quad 0x0cb3fbbc92cd3d43,0x6d784971a4ab77c1,0x71bb9432b7b2e20c,0x78886a1649d90727\n"
".quad 0xc54d5339589530fb,0x7313d1c68726f5f0,0xe757f16b2e4d7232,0x753cf70b6259ca0b\n"
".quad 0x92eb67cf0ff8a657,0xe5245d57e2f9be13,0x3cc0e46f8f57ff84,0x9ed825718a02b8af\n"
".quad 0xe29e4e27fba23273,0x419b71fcbaed588d,0x68acf56a936c1f71,0xc70893e00174bbed\n"
".quad 0xb72032576644b037,0x1fe409656eea184f,0x809e99221939e004,0x028f2bf1a577d52c\n"
".quad 0x8975053b68c398d8,0xd85ef66f17510f90,0xe107cf41ce608035,0xba0078b0269f0649\n"
".quad 0xf9f622cdc0fc7b55,0x886b56ab04c6065a,0x260963bb884bf096,0x4b54b4d4a3973a07\n"
".quad 0xd1f33b3f00cead0d,0x1f5fe4a4d1c2b3e2,0x3b035b39f363aa2f,0xe68d09cdb301165c\n"
".quad 0xf5457d0108bf8cf4,0x5599cb39ec0e96f0,0x24c7917468ef45fb,0x5ca29c742043cac9\n"
".quad 0x0b62770d6ea8bcbd,0xdceede6e3f2095fc,0xb28a51870cbc5ce3,0x7aee8415bcce2faf\n"
".quad 0x1986b097d39c9db7,0x94d28cf526f9bf47,0xd0142275fa2d9159,0x4d72768487a434cb\n"
".quad 0x07668856f3acaabb,0x595f65c0410a4615,0x3c52bad82e75b96a,0xe9727f662b3432b7\n"
".quad 0xab4f709c953772c5,0xbaaf0b788f4a10b1,0x82822aaa27633ac5,0x8f3175944c4aeb35\n"
".quad 0xe2ca19e501af3042,0xf6cb65cd17f9c5f7,0x4023c1f5da0a56ea,0x4a7d270f97a07973\n"
".quad 0xf7e89a75e419b468,0x2f95fe02ad606f09,0xb68c9522a4e65ca0,0xa7243b40ce7e9e6f\n"
".quad 0x56fcccef0056ceef,0x5a05c00adc9bf457,0xa52ef2494ce7827c,0x8726bd4992e554c6\n"
".quad 0x00d92e7d681bc2c3,0x970ae35af756179d,0xe891972f559be832,0xd9ef60c269880c8d\n"
".quad 0x7c5564f4da682102,0x53baa781967a4d67,0x2eec42481f332fae,0x1a3b7553437cba94\n"
".quad 0x08db08fa674911e4,0x52821b556319c7ff,0xe580442fb3999b96,0xaa149f5fe1097246\n"
".quad 0x75ddee5bc3c7ae75,0xd65528e70ca3e90a,0xb988760b25e0f024,0x315e3f099b0b1e0d\n"
".quad 0xf7e8a03214f41bd4,0xab04b13df5e390f4,0xc6fcfeff231cb7c2,0x36732af5b08d4fb0\n"
".quad 0xd9e1ee8e32fdd2d6,0x1bbeb4550e730fa3,0x781a30a8c66ceaf3,0xec581f15a41659a7\n"
".quad 0xf48bb6f050d15821,0xe0623757f1545b8d,0x19384a73adbfb12d,0x1fdb2e37b2574e56\n"
".quad 0x696c9d7c441884ef,0xe7eddc1bae581b22,0xe0a749085aba765d,0xa49e118a666412e9\n"
".quad 0xb2584b8dcc90054c,0x79500344c0cadf2e,0x387754a5245b642f,0xecb5c7e0147835e6\n"
".quad 0x676cc6ed72d9b230,0xd5b4987357d54b49,0x66109d093835629c,0xb2280456b04bd3e0\n"
".quad 0x81a708832cf4cd18,0xfabab0cb27352081,0xc10add5ed21d8387,0xa6672559d05ef2a5\n"
".quad 0x3aae6d300ffc6222,0x87e9d36f2383260b,0xee27ef29f7c83a55,0xef1613d7d2445f78\n"
".quad 0xbfd88be8dba1e025,0xf84b5cf2682db999,0x735e24850c39c124,0xa6b1a24d11e5e9d9\n"
".quad 0xf426be81bb13baf9,0xca3462ef42a7bfa4,0x66726a113363a3c6,0x8fdd8c220f158265\n"
".quad 0x902778f51e45ac81,0xc8af9f6f436d6346,0x1ae98bde539a1089,0x41e95184d22e9191\n"
".quad 0x263eb179397a4250,0x8a2b0d7724e4e97c,0xa88846fb186fd3a4,0x4e2638c72eb54379\n"
".quad 0xdf95c9e80d455041,0x26c49330bf087009,0x3ddd2379813482d5,0xac41a35a74d3cc25\n"
".quad 0x27aaa83fe8442f9c,0x796f5a87cc327ff5,0x1d77a4e208859f27,0x76ba4450068a5146\n"
".quad 0x6c6b3114a3ee01ce,0xe6f4a443de5db2b0,0xf4c0ea1fdf3de6d5,0x9610ed73da45af60\n"
".quad 0x6086c5f23d9cb6c8,0xf80a4dbfd5157db3,0x6b3abe5f510498db,0x77c0e4efe6a3694d\n"
".quad 0x454812dd3ef884c0,0xcb05280b12bba1b8,0xd8b25fcddd8f3ad3,0x1f2029554c82903e\n"
".quad 0x5ee6b2babbda6f8f,0xda6c0406ead5f708,0x4fe76cf780b10cf5,0x00270f1c3237303d\n"
".quad 0x7d3a42128b087c59,0xec8cc24a1c55cb73,0x0caf3f1afc87a23b,0x0d278d7bc8442a1f\n"
".quad 0xb88e41ff38b4ba0d,0x7105eeab93b66fa7,0x46e5484f0e2e9ff9,0x667db7d217296388\n"
".quad 0xd2cf97c75ef39ad4,0xc75dd8f1c5e40bf0,0xf86a3535ddf3fd7f,0xa766c56e8b840b48\n"
".quad 0xf4415c9f87bb9ada,0x1ed0ee86047a14d3,0x3f1eb3a7f7f6e7b8,0x15606422c89e7438\n"
".quad 0x6f778587ce89d36a,0x4db8e583a8ab1d5b,0x8c7420ec31d329e8,0x11f14217bcd04d5f\n"
".quad 0x3125ebab2e64c92a,0xcf295dd6e1490da4,0x755fe48ab0018a3f,0x5496e134023e4e16\n"
".quad 0x7e8d972d579e9761,0xb485d7b1bc988f15,0x0adf6eebb5caea2a,0x9e4f6598a6e6e6a0\n"
".quad 0x0cf249164d8c9c9d,0x588710f160649e80,0x9d99c3bc4d04cee6,0x7368fc799bcca39d\n"
".quad 0xda2a4c884b316b19,0x91d1d928a10ae714,0xee822b788332591a,0xa1365fbc37addbf9\n"
".quad 0xc9f3c5834f00e6a4,0xf1ed6864a0085dff,0xec4a4ffac3e90ce3,0x96a36ecf73879b27\n"
".quad 0x4c82bac55862f2b0,0x8b55de25712ca39c,0xc75089cff3c5f0db,0x759935bba5d5cf99\n"
".quad 0x359c024f4845c5f4,0x01ae15af360afc7d,0xaad5577d94300a3d,0x5e9737ba096507b1\n"
".quad 0x92c6bec176818f33,0x8cab510407012b1c,0x4c1dc40edc1c9df8,0xce2d06dbcf579769\n"
".quad 0xbc75898fc5257ce0,0x6a72cbcb8b39ca18,0x8e63d8b2e74671c0,0xa68d3a03f5a92e3f\n"
".quad 0xa11caaa5d2362f3a,0x0b7c00bdec81d4b5,0x7eb5394f060ff496,0x9b3ec7331efc7788\n"
".quad 0x581025cf00851f57,0x57f9dbd4d38ed84d,0x120335a5e1265b83,0x316a25e9768006d4\n"
".quad 0x790fae2f94326020,0x1e00aebb6e7d8094,0xb3a04d92cbcdb40b,0xc14291bb346aa3cb\n"
".quad 0xaa9d682fa43467a5,0xe354a057731cb0c0,0x80e4a10fe48c2277,0x65aeeeb292950c4e\n"
".quad 0x93211e3d5fdbad99,0x1d00123c23d57ea1,0xc80fd3c3e80c2d3f,0x620ed21680a7bbc3\n"
".quad 0x15075dd0c5201e14,0x943b27ed87a1559f,0x4e623a5a27510c95,0xa1482fbf59c245da\n"
".quad 0xfed37f20a2681127,0x987951ce49f76916,0x4404e920241e23e4,0x3bb414b45c9b1b30\n"
".quad 0xb67aae595696fa8e,0xe7ac326a59d21b33,0x55c656a0b41789d5,0x969a2127f350aaae\n"
".quad 0x51c8d0dcbf2cd508,0x91baee0527d3bb03,0x653c49aff470ae00,0x82bc26f03011bf98\n"
".quad 0xb6d644386b76d5ca,0x93b4f7339afb4839,0x00a09be3c3d36d31,0x707d74be119f5920\n"
".quad 0x247fe3fddb0f9090,0x62cde84b997f8f34,0x729ab8a4bf46a8aa,0x30c004e3cb849bba\n"
".quad 0xd0798d36f1cc3693,0x7340917feb9dc549,0x3fe03bca7e0f179e,0x43277c1b516f1553\n"
".quad 0xe72712466b815bcc,0x5a6bae333b2a1754,0x83a15ec08947e1e6,0x0018414fbf653ce8\n"
".quad 0x1bd55274ac6b8dd0,0xd2688d685db29011,0xe931e748859c51b3,0x678fc561c0041fd1\n"
".quad 0x72d1fd6638ba8a99,0x8d391619d099cb98,0xb47c55aff16ef0cc,0xf5ea5ebbb98186e9\n"
".quad 0x273d09b8072387a7,0x8f2a62ca491b00e0,0x4e9a759ec9e3ddea,0x7f7d1f7fccd777bf\n"
".quad 0x932245170ec8c008,0xbc9d15b1ec92d211,0x1b537be7382c6d52,0x8a518459fd733174\n"
".quad 0xc8aeea1ad96709c4,0x334527721eab1d26,0x34193178795d18a8,0x30394bf8e41d3bfa\n"
".quad 0x64359f3dcbf1c51c,0xe9442ab3da5a829d,0xefcedc2c6d50ef60,0x2d27767fe296c012\n"
".quad 0xa05b08d9f18ec912,0x1bdf7f1fe79bed18,0x6d3a3f6bf1d33362,0xe5eb9bfd30a3362e\n"
".quad 0xc8ed87a342921b7e,0xb311c440bb936204,0x5bee69ffe312beaa,0x7e673f338dbb347b\n"
".quad 0x706b50bb0107ecc5,0x03139622c6352778,0x8620e22d61b0240b,0x96e7768a466968d0\n"
".quad 0x87beffe186d91e9e,0x6fbf648b24591564,0x0f0f7a5b860ac04b,0xab16375914f553c9\n"
".quad 0x6b48b3314e6514aa,0xf0b6e2a4e666a467,0x27182d71580e2ce5,0xc0c1bad5497975dd\n"
".quad 0xf56d01933b041cb6,0x258502eeae396d9c,0x4acfa718cf1b8d57,0xe44853761e03758c\n"
".quad 0x3987b2a8b055804f,0x1ec3a0dde0d38c73,0x1daf1cd912429bb7,0x1ca71641e5d72846\n"
".quad 0x3e73d682679cbd95,0x8b515e4931d634ee,0x307a704ef8768779,0xf99cc250a7ef1af7\n"
".quad 0x8493d0e715a304d8,0xf5afe18d2ea8e7fc,0x290f2b24e5d96c0c,0x44d5cae3bf9ca81f\n"
".quad 0xd1680f1456c9070a,0xfe1587c9d1861266,0x439db5181b9ce4e1,0x7743d1e65508cebe\n"
".quad 0xb646c362a3949ac0,0x8e0e4721a0b9409d,0x371fbd0084c00261,0x9db906f3ef24747d\n"
".quad 0x1f418a6c0b0dfccb,0x53868304ffbaf620,0x8067cd9f37b0ea76,0x8f14272d99be5cfb\n"
".quad 0x7153d017e95c0fa6,0x52fd1a9c2a021cd9,0xe41ea9ccb9701e5c,0x6a098c87bcc8cc66\n"
".quad 0xe8cf60a5291c4b90,0xbc1180c5462cb757,0x1841398581e7accc,0xa0a394a2037714c6\n"
".quad 0x3e15641982fff79d,0x39a8db32704c88ed,0x54e54df06864919c,0x1ae6caf730550862\n"
".quad 0x8d7914061d7716fa,0xcc478f571ea6db8e,0x11cc960f87db1722,0x1503755352f2d05f\n"
".quad 0x5639c8f356519884,0x2e68daac2ac60b38,0x2ba1495e584acd54,0x2223997c25f1c346\n"
".quad 0x5703ac534f33fc3d,0xb2c90a0980664bee,0x2f7244abf566972d,0x0e6ae1860c4ab29b\n"
".quad 0x6bac04760a5f94a9,0x27a41479393a10c5,0xb2e5f1700f9d0c1e,0xd73997430a606379\n"
".quad 0x8744c2c4b3c133c0,0x57d91c59ab30a5d9,0x9716b8f0c7a4e396,0x623f2db0cc3305cf\n"
".quad 0xa6e791a9f0580712,0x41b959707aa54f90,0x5189c7a0b6e101ff,0x6d0197365e02893b\n"
".quad 0x3a3377d3a3557a12,0x526c37effd01fc98,0x5a8d00b051ebce60,0x6a30185492fc62c1\n"
".quad 0xf0c9f37d991b5cc3,0x5f7c49fbf59cb811,0xa49045921eba1f91,0x3e5e7f23e0d18f4e\n"
".quad 0x29fb6d53fa6f6e8e,0x3c2d69dceae41464,0x75b6063caf22cdc6,0xc3793038b3366446\n"
".quad 0xfa1cf5febdd1e0dd,0x5c03b6b8965ad24c,0x314d04ddc46a2c38,0x67810f3e480f873a\n"
".quad 0xd599f8ed8480ed5e,0x25b1426061502b36,0xa7e336efd469320d,0xf72c764c30a9e363\n"
".quad 0xad624b8c730e15cf,0xf51db3c61a965bd8,0x81a3d03d903694e2,0xa6633c58145ed39f\n"
".quad 0xcce79b83b90676e0,0x281bda2c9df896ee,0x8de4099b3258c405,0xca2e46c3d1831f31\n"
".quad 0x18cf4f64cf64cae1,0x431e481c3e20c3ce,0x8eee4d9e81fdc9ac,0x49db8d199b4414e1\n"
".quad 0x3b96c041815bfb10,0x26cc66d3e52fd72f,0x35639d7b16479aba,0x4dbaa1795c691d39\n"
".quad 0xa80e9d4a31c6c3da,0x789d8039a00c7335,0x6e245a78332f5c11,0x50385365d25cb990\n"
".quad 0x3ae8d88314ee88cf,0xc30c51ee2cfb87c8,0x7c7d9f6a74805316,0x3b081be8a4d899fc\n"
".quad 0x2e80e65650a92e76,0x3752619c646ab1be,0x4c72e63424c85ab2,0x90a7cf60cae2c60a\n"
".quad 0x9b71b5b180a69f67,0x88f9f99b1dcac7cc,0xe67cdf14973c2429,0xca32e215b26c8186\n"
".quad 0xe946232a2585e714,0x8038ce8f5cf91381,0x53b9d39116c3fce3,0xcef9f8e5eabee62b\n"
".quad 0xd2f624449474b8ae,0xf2c90c6de680b4fb,0x2b2d0596676439c8,0xdab90a5c1ac3bfdb\n"
".quad 0x81035c71f23b68d1,0xf40d6b314b9b4606,0x05bcddf5940ec393,0x1bfcf9f0d17195a0\n"
".quad 0x84cbb10412b8a47a,0x3833f68c47d37d3f,0x92e46aeee62ad1c8,0x6340ec943b9df587\n"
".quad 0xa869c7c7116ae3f7,0x7333464c7b16bd91,0x20b001e27c337358,0x030ec8a57e84b767\n"
".quad 0xe331f21c57722b09,0x53c894d1f25f6767,0x6dc3bc0187db20db,0x18fe23b2bdd94eee\n"
".quad 0xb0294d5b22d4a357,0xd5538d1549a26cc8,0xf14498beca98c1a5,0x6638589ccbc4a69a\n"
".quad 0xd7f790378432e5c4,0x53625285331f7e39,0x21673f9f83b383e4,0x43246ecee20d484b\n"
".quad 0xf14a09f4dfeb2539,0x9dc62b5c1bb17649,0x1cc3f08fa5616729,0xcf24442423485377\n"
".quad 0x234e5563b5b58281,0x397195386eeaa28e,0xbc3d267699ee3c05,0x77e6b7bb0374d69f\n"
".quad 0x9f4d898544a9e4be,0x5a8061d53496914a,0x376ee44ced6924f6,0x8179f393237bbc85\n"
".quad 0x10aa24a567c9cd76,0xc420101672fd38b3,0x5344007db498c560,0x6cbab51a5c6399b2\n"
".quad 0x330d80ec6d0660de,0x052887d663f6b955,0x39cbce2ecbe2f3f7,0x815b5f8dc22cef24\n"
".quad 0x3396e338c4d89812,0xee1a349b4d5945b0,0x7c7ddfef77d3bab9,0x7f777ededd3b8b68\n"
".quad 0x6eef6fb7bb87e6fb,0x4e4ffaf37dbeee1f,0x92fa5fff8f4ef292,0x0142a6cb8e912394\n"
".quad 0x95de5527136e1216,0xc80a628a48fb5425,0xc04366c8e0888fc4,0xfa8d6cf81716674a\n"
".quad 0x8b3d69d803d6edb4,0x69430a4d11603bec,0x7239f299599ddd92,0xca3e87124b3341e5\n"
".quad 0x321411f1bae52aa4,0x5ff206e447b3b847,0x2bd383794b9d3ad3,0xe2f3fe7a493eb089\n"
".quad 0xf9ee1278fe3f1fa7,0xedf9eefbbd3fef8b,0xf5e1fede9f8f847f,0xffdf5ffebddf4fab\n"
".quad 0xffffce7fd8d28fcb,0x2d7edf7ffefd3fcf,0xeeee1f17b3fbff6e,0xed11fab7f49edeef\n"
".quad 0xf7bae6e3dbeb536f,0x5ecf6fecf1ffb3c4,0xf70f8bf9e1febfdc,0xecafc3ecff3d5faf\n"
".quad 0xf9f2547cbf097cff,0x7df2fcaa32bff767,0x9cdb50e95ffbe5fc,0xfe4257eaff767dc3\n"
".quad 0xbc79e55e6fc5f8cf,0xc7a7f1693f7f94f8,0x25fc0e872f37c57f,0x7fde6f1783b3881d\n"
".quad 0xecf173ce5f465cf7,0x115f4a7c5e9ffbed,0xfc5eaf8fc3d9f4f9,0x1787c3f5f1f26ba5\n"
".quad 0x20c270fd8fe43c3f,0xe78ff67cbcc695b7,0xd5fe7bbfbdbfcf0f,0xa7edefbf386dc757\n"
".quad 0x40d7abe3fcfe2f37,0xeecf97eb9b01579a,0xfc4dd4886a42bd5e,0x6e3bb6901ba6d8f8\n"
".quad 0xf91c7167bb731be0,0xfc2e9003ccb69925,0xfe3e2ff777b7c5d9,0x7c35281e51d404f5\n"
".quad 0x8a7d2e6bad377a4b,0xce67bcb6ce729f2c,0xddcdfef4ffa24ef7,0x0fcf8b035e6f8fc3\n"
".quad 0xa9ee92cc90fa53f8,0x9fc9bf211b9fa7c4,0x6d9f2f4ff89c9f9e,0x3d08bed0f8fb3e5e\n"
".quad 0xd013b2dc4eaaa7c6,0x61d3e0c04ec1c430,0x4c99b67cbf26f602,0x65fd6d40b01348e0\n"
".quad 0x5940f5ab29e04899,0xc21556112ab59405,0x125b977fcd584ada,0x2bbe6ee89ec217d6\n"
".quad 0xb61259b67cbe2d22,0xb292c7b39e3b4da2,0x600b8853f6d21442,0x204857525b363f7e\n"
".quad 0x335e4f0735e42daf,0xd5e4489579035702,0x4ebe4cd792bebc85,0x97b9f021742be92d\n"
".quad 0x6cd8fde06e675fb6,0x0d3f3decea616349,0xe1a61e442bb226bb,0x5f644d6cd8fde06f\n"
".quad 0xe316b08d3f1561a6,0x89321666eac350a3,0x521892c793a048b0,0x892e5216766859d4\n"
".quad 0xc7248b3f46215521,0xaea42d25aa4ec132,0xb6169acc2cfc08b3,0x27524c8a2bb542d0\n"
".quad 0x5995c2d35da43c13,0x1422d35f859f83b8,0x4264ec4950b3745a,0x8e5c2aa85a4b0c87\n"
".quad 0x7d7557797ad5dd5f,0x84a87892a012ed17,0xf8ef12ebe159b50e,0xf9175578d7ad50a5\n"
".quad 0x5a8742543a49167e,0xcfc1785996caf32f,0x82b724baab22bd62,0x5eb50e04a87092aa\n"
".quad 0xbb77e4bd945d5593,0x424edca2ebaca2f5,0x24bd7a1b09d0d927,0xebd4ed7e7844aaeb\n"
".quad 0x9d5315b3b5d753b5,0xa9caf5e868274344,0x57af5395f9e9caeb,0x3249126ece575d4e\n"
".quad 0xb0f6a6ebd7fede74,0x35412666a92ff939,0x42ed03d27de2eaab,0xd90e55325e7acb7f\n"
".quad 0xe2ea07cbb75980e9,0x40ce3dc1bdc7b4b3,0x70e2d94ce2da47ff,0xb3db9cf26e750ce3\n"
".quad 0xb19dfd9f2f0fd7fb,0x79ffd7f1ba2f8428,0xa9edfafafff0ea77,0xd4edff8f501fff24\n"
".quad 0xb8f15dbd8fede58f,0xf20b6f45c5d666b7,0x0b192dbe17e9f9f6,0xc50b08f1ca160f45\n"
".quad 0xe465c5f64a8a06b2,0xe9a237797d14cc60,0x4d5917bcb8887d26,0x99c24a16f512a49e\n"
".quad 0xa2d8f6f81b940c18,0x74af0324ab486655,0x96820c0434b18ad7,0x9671f9c1224d1a06\n"
".quad 0xc8b8cec2b8d0d2c6,0x646e5e432b2b90cc,0x6e5dd16888636248,0x90b218d829a04863\n"
".quad 0x57189a58c6da3f54,0xd14d3c1819971858,0x175a9217995790be,0x080a1758176f1882\n"
".quad 0xb78fb5842a85d60b,0x85c5b675c5c6d62e,0x8d7bc90ebc84c5a6,0xc566d62bb52f2161\n"
".quad 0x064f054685c55655,0xd4bc852635e429b4,0x1713d957141b58a2,0x15c2a4042a13139a\n"
".quad 0x129b5896d4bc84c6,0x153c121a17125957,0xa5e42330afc65954,0xb886c6b888dac456\n"
".quad 0x7bb2cba089e084d0,0xe6d61fb52f2101b9,0x84c3c685c3d635c3,0xd49074dcbc6d6506\n"
".quad 0xce550415adc41072,0xe2a9ebffb87bbf5f,0xfebc3ddfefaff74a,0xf77bbff79bfdddcd\n"
".quad 0xebfdfdffedb3abfa,0xbbfdf1f8787ddffb,0x77bbfba7ddf70bdf,0xeffd787bb87ebeaf\n"
".quad 0xa247f77f1fc3fbbf,0x8c3de5f62a4a7fa0,0x13dd5f6ea4a7faca,0xdcf616af44101c17\n"
".quad 0x2e3abd0c95fbbf48,0x90a0dca171f5e983,0xf57fbe9fc55b592b,0x931f1787f84414ab\n"
".quad 0x4fa8c18d28c18bda,0xb9bddfd9cf6eeeaf,0xede51ad6feeee9fd,0x4dbbbfdeefb7d2ad\n"
".quad 0x7a7f5fb78fdbabd1,0x4d14fe6f37bb9bfb,0xc97d31cbeb2e6fae,0xbf5d490fe95eb3a6\n"
".quad 0x4fc1a31001a3539e,0xdc3d3f77de8a32e9,0x5ce0b5d70f7878bd,0xa51de54465c51cc1\n"
".quad 0x1eefb3eda4621a06,0x8b18236ce48448ee,0xdccbd3aab9bd1b22,0xf36eaf25ae710c03\n"
".quad 0x2376aee1eee9ff24,0x095e8ed4dd59b33b,0xb3a0712492778ed9,0xdc335d7f6d37d40f\n"
".quad 0x86c6a86c6e125467,0xea1b1ea1a4f434aa,0x8b64b5d2d24850d2,0x5d9f912b883bc6ab\n"
".quad 0x0bbe757bbdbd368d,0x24cade93d62973d4,0xc9c9647dbe969b3f,0x397e64ed42a748be\n"
".quad 0xac7c1b9a1a01fb5f,0x20ed809c121a783d,0xe1b806b9f33d4851,0x069b25036b685073\n"
".quad 0x3eecfb7f2df4c93f,0x78d8effa3fc58b65,0x265a5b0e35bb32da,0xdb6beb6e5d6df32a\n"
".quad 0x8a4da4538df341b4,0x17eb1a49324e36a3,0xcead525dfb6c7c9f,0x46190ff971ff363f\n"
".quad 0x65366b786f4fcad9,0x24e5c486f2d31a1a,0x37c02e976ca0697c,0xf3707e25ada6bf35\n"
".quad 0x8aa05b6d56803fab,0x82abf340e00adb69,0xb79700c435fb541e,0x542205949de41511\n"
".quad 0x263a76ea34398238,0x4d16fbb526e7f92c,0xd11c94fb0678d8c8,0x2fd1d9910a475384\n"
".quad 0xe0757ec11897dc31,0xca38a0cd470c6428,0xa08d9f410970d0cb,0xfcfb42348b3e0068\n"
".quad 0x8563cb837ed086fc,0x6f796f91e66c1bf6,0xe0a99086fdbe58f2,0xb2221db088cb2fba\n"
".quad 0xedb5f86afdb4d1d3,0x721ced119920e541,0x7102d21ed1aba8db,0xa3b65cd326d2d2be\n"
".quad 0x36cb14345291a965,0x65683663a5b6508b,0xc8193a20f72215fb,0x09baf0fe83f05a3f\n"
".quad 0xe73cc768ee45e752,0xb023cd3fc07f7c77,0x6e6cd7ee4a49fb65,0x9d99164c8e51628a\n"
".quad 0xcbce5bd93036fdba,0xb758f33221d9494c,0xfe7c2f2d43806c5f,0x6fdb7d7ee6bf77d5\n"
".quad 0xb79201e34709c4c8,0xfc6636b700ab7001,0xab914bbca2b90eda,0x9c32a4e6658c71b8\n"
".quad 0xa13b65699f300b5d,0x0239e55bb69addce,0x330eaa9a0b10c128,0x0b0d528299aa0a79\n"
".quad 0x6751321761aaf790,0x07c9aa9955b337de,0x2863a8bffaf8a112,0x438a6eee796dbf9d\n"
".quad 0x49d761920e34a1a9,0xb7d2141fb5bdc997,0x6b0d649e388e5b47,0xef3ff1f369a3eea7\n"
".quad 0x97a35cc46406c171,0xf7d02f3efef2fecf,0xcff96fcf4f2c6d79,0x7980a9392f28f037\n"
".quad 0xa3b5c17c9e0c33f3,0x427d24f2333ab20c,0xe7c45ec9279bee7e,0x79de190937124bc7\n"
".quad 0x06c696b4a3edd7ed,0xbe6869251cad4aca,0x84cd3cd3a63c6439,0x0dfce3e6d3caf812\n"
".quad 0x8ca52a273f374bcc,0xdb4fab09ca51da3b,0x9f202f947d99d947,0xc1c7e9e09fd28f0d\n"
".quad 0x9a76d89ddbbf1d22,0x4762f5f0be754c3e,0xbbfddf1a8a9698db,0x868467dffdfca708\n"
".quad 0x2a3c1dedfeffc173,0xd6fe5ef8f0f8c3fe,0x63912e3bff3165a7,0xecabbec879d9d94f\n"
".quad 0x1c26fc7575f150f4,0xf4ebbff2afa7fdbf,0x18a20a55383144ef,0x954e616834106bdc\n"
".quad 0xff52a15155cf10e3,0x00c70176a9dcb21f,0x4e0327a25c426e58,0xc1d4dec8cc6d0673\n"
".quad 0x07149c8b65819c87,0xe6f5a73bb46e7ead,0xf7fb87c3eee2f907,0xcf173b32209e217f\n"
".quad 0xfdc186d17673d930,0x12adfdcfce7d78a0,0xbd3e2f10e754ed2e,0x23457960e30d31fb\n"
".quad 0xa2407e02a4637d3f,0x7950b854c60487ed,0x323b9f62294f0f6f,0xe40f2bfa1c9532a6\n"
".quad 0xa91ec8e11d385198,0x537d1b4a1f37f87e,0x6919eb487c9e669a,0x45fa7b3a45fa0e71\n"
".quad 0x6790a1d2383fbede,0xb760dedad8e89187,0x17221994f0fd145f,0x519467ff9e1b06ee\n"
".quad 0x6c3a0a90299f3769,0xbca7988a2bf15506,0xc48d09405254184d,0x3233ec7e1b4a802e\n"
".quad 0x305e6dbf6e73abed,0x937a507d6d1dbd2d,0xe97d1cef55524fee,0x61290cf389480d1c\n"
".quad 0xcf3110f7ed4780f4,0x9b498fd32cf97636,0x87a9b408df04a5e6,0xeaf98fc7d08f8da6\n"
".quad 0x9eceb4d098f87eb7,0x339a83b6fd5adcbc,0x1a15a9fc7eafeb91,0x96fb4d1c69b09d9d\n"
".quad 0xaf8d0ff5eefe6ce2,0x9f8e85cc752278b0,0x65e47016565f0915,0xad1301d54d20a2b7\n"
".quad 0xb29f53b09719354d,0x3c06fa843c16454d,0xd1bfc599d5ef7584,0x4622a373fd5fd1bf\n"
".quad 0xa83c69d5f27cea33,0x9a2ce26b0d32a8df,0x5230fb897fbc10a5,0x9fe9ece85dc45aa3\n"
".quad 0xf55bb89f5febfd7e,0x5f089e93d517b264,0xdf07932557cd11b5,0xa07b7331137ecb31\n"
".quad 0x0115bf675196a502,0x8c95c5147780f149,0x2f3cdcc7c43b2568,0x643b7dd39a51a224\n"
".quad 0x839353960dcf9c75,0x7dd3f5828da3e9a1,0xd21c68ff15f0edd9,0xb5b2a10914ddb2fd\n"
".quad 0xa62d1c737faf1226,0x0ff75ff8fd208843,0xc64eaea699896084,0x7c0b5df1fc7f89c6\n"
".quad 0xe5dca0d8c588cd93,0xefa4945d0ed5c686,0x330efb0c3aec7fde,0x51829a29d87602a5\n"
".quad 0xe0fa966b32253b80,0x46055d6d18ef7034,0x64c92ffafc68d509,0x00d9d0d78c02233b\n"
".quad 0x48347455164b1d96,0x3d379aa4182bfb4d,0x1e7aaa242a64671d,0x7452cda141affba2\n"
".quad 0x9e0ad70035463953,0xaffc4bd80f64824d,0xd3845463beaaad7f,0x5a9d4d857a74bfeb\n"
".quad 0x6c11f359f481ced1,0x49a41f16fa7d660c,0x1025a9b765f2c7e5,0x66b26365496bdd58\n"
".quad 0x0a0dc4eaa0f7106c,0xf7ab74f38133aac4,0x10c31760649ee82a,0x6e46d3e3b5114159\n"
".quad 0x814424d07db2a1f3,0x372d1de535e6dd25,0xf33a6d9db3462d77,0xc77d3fdb3ba197dc\n"
".quad 0x8a728a38b936e7ff,0xccf9d0a4ce285eab,0xd46dc061ba1545c0,0xf32a33be64dc144e\n"
".quad 0xe0da96999e7586af,0x5267457d759e92fa,0xd450992abb07d7ef,0x9b4be0a2edb27fad\n"
".quad 0xe442167ce9ce0469,0x879ef0d4c98e7778,0xdd07691e5f220eb4,0x16669b51a624c984\n"
".quad 0xb2121662c2f19212,0xd252a9dc9786cbaa,0xddb4d4bdf7104b6d,0xe98758a929990720\n"
".quad 0x381605aadc1966dc,0x373b83b81c773b94,0x1cee24eb0d94381f,0xe43aa3acf666e090\n"
".quad 0x2c6012c5fd5122e4,0xa51fdbf7c1e3828e,0xfd6c847c59e8bde1,0x38d03e9b1a2da7e8\n"
".quad 0x7438e4c264400d44,0x10149b8211a8041b,0x8f6379f7f0b81200,0x4b42dbcc7b5fc16d\n"
".quad 0x34352af458bc4b50,0xa97818dbb6898e06,0x49efdaaf41f89721,0x2cc659b8891a8a71\n"
".quad 0xfb7d5f2bc8d3dcba,0x8311c94991e20d01,0x061b19c1d24ea811,0x67b3d45eb8b38f51\n"
".quad 0x867f245794fe55ef,0x39a493ec7182c59c,0x43281a562655e973,0x55e47c3d653939b6\n"
".quad 0x847517328872a767,0x53f3ab13afeac69c,0x5048485637395564,0x31ab61cadb444e7d\n"
".quad 0xb6daad368f6d30d3,0x24b3952fd6e84dcb,0x51db1e721adecd6c,0x2b4dd699f5483b21\n"
".quad 0x3beb2e6e61ab6077,0x824b2dcf58f06f39,0xc72aec755c53a543,0xe574b7584ec1d342\n"
".quad 0x31f245fb55e8eac9,0x74544fa4f0aa713c,0x31ea72c74973a749,0x3b64d2438415713c\n"
".quad 0x30c9e16c4f1479aa,0xecd9d5b0a4fa64b7,0xaceab89777413c51,0xa53e409e47438e56\n"
".quad 0x17ed5af3ab279530,0xd9f49e1424f147f9,0x8f66c4dd4b97698d,0x351367d59f2789e1\n"
".quad 0x7859789e18f17aa3,0xfe7769ff692dcc32,0xb794d7c4f0c7cbde,0x6e863f551db30321\n"
".quad 0x94c990e975ba14de,0x4d5b228f56c4bd4b,0xa3dd41db33321b85,0x75a5a9fad90be6c8\n"
".quad 0xd5aa28ff6484e7c5,0x1c3419b36321b91c,0xfa5d6a85105aa18f,0x63d5b12f5201b264\n"
".quad 0xd9c990dcf26a16a8,0xd50ba0b5431eaa0e,0xf7c6964fc925a9fa,0x0dd566a16a863f41\n"
".quad 0x42cbda8fa0ed9e19,0x49a214cb74bacbdd,0xcadd5aa28f56c4bd,0x656d47d076cfcc86\n"
".quad 0xa79ee5da3283a629,0xe10c7bb527ea4e98,0x8fc0dda159e677ce,0xe5d7681f379272da\n"
".quad 0xfc8a4071b7d91f6e,0xc8675dd4711d36a3,0x7c93b6d47e06ed19,0xe03f397e7ebf40ff\n"
".quad 0xc6a78da8f1fa06c8,0x6d47e06ed28c9806,0x12d76bf40f4fc90f,0x1e386cec8e0aa701\n"
".quad 0xdf218877510841b5,0x05488b6a3c581db4,0x48ffb2fcfd7e81b6,0x0210936a3c50cb64\n"
".quad 0x021b2d9071620e5d,0xaef281b28e6fd6f7,0x51c9ab6fa06ca3b8,0xa45380238838ecb6\n"
".quad 0x9cdcc3273144ec46,0xca34f53599398354,0x45148d2c81144c3b,0x08620ab46ab8c3cb\n"
".quad 0x1b13ec6949486975,0xc74a0c768666de4f,0x725d21be80312eb8,0x5bec767d661292c9\n"
".quad 0xbfc5d8c964c7cb53,0x6456f5baf4f9bddd,0x3b6e92bd6c764537,0xe7ea9ed4f69b336d\n"
".quad 0x6701ae7c32e41a3d,0x25f9a29e1cfb25e6,0x0b4565c54fb597c5,0x7c3f5faf87eeff7d\n"
".quad 0xac99723f575290fa,0xb7b8fd099f6bfd7f,0x7a4f16dfcbe7ec98,0xc6f9f40e262a8e1b\n"
".quad 0xa0ff787f5eaf2d99,0xcfa9ccc64a7564fe,0xfbbeff5f67e544f1,0x21bb5e27d9797fcf\n"
".quad 0x296aa486a54b5acd,0x9bafb3b502c739f2,0x8ef390c5f1e3026e,0xcb88320c7335232f\n"
".quad 0x2be987672ce799fb,0xafa740a35fc130cc,0x985ea468a5882a3a,0x4903e7b9898f6ea4\n"
".quad 0xa49a885909e683d7,0xb15ee5928e51f3dd,0x1624c182990af493,0x1633548483f66798\n"
".quad 0x54845c7649e048d2,0x039075a0c8c4cb32,0x782b9f57795c2d81,0x4501f68d3d464eb0\n"
".quad 0x5d9c26b7aa9a6263,0xe09ce124d6ea7068,0x33bc385e9b9eda92,0x47314fc0418d60d1\n"
".quad 0xfd0d3300673ab524,0x31cf2c26930590fb,0xf90743799a2615bc,0xc726dc8244e29283\n"
".quad 0x6fee7baed880709f,0x4e74352df67b3b4a,0xc869d23c83b3a013,0x2c81363c83203e81\n"
".quad 0x150c92b5d9aa94e8,0xc3568bac6d2d9d52,0x0dcce43e27e03df0,0x3d10df23b8ec8878\n"
".quad 0x3e3f5104c88f2491,0x8a727186c3d93c65,0xde915a7d8a2c70a1,0x692af1023972664a\n"
".quad 0x7ce330a6ea78cd81,0x59a70dd6f79c99d5,0xb3670c9295e7185a,0x4db9f692eaaaf0f6\n"
".quad 0xad2c506e0f553ca6,0xd5884652204e8e3e,0x4d243340313a90ff,0x6ef9375094eb8d90\n"
".quad 0x01f62c3edb2f3bf3,0xce2ce48fb4f41b9f,0x792cb90992a4bd2f,0xebbaf8975f4e4a42\n"
".quad 0xc73d7abb7b84c75e,0xb4fb67768ef35213,0xf7491e7f41e6971c,0x268689ace5e9220d\n"
".quad 0xb391363c4d727560,0x1626d384915df026,0x92b29503dbbe109b,0x9d032945d7108932\n"
".quad 0xb9cf5e5d74e7654c,0xacbf287c59edcd67,0x8aa67d2c9b95c6bd,0x164e61f19a1922b4\n"
".quad 0x4d3d95588cda2d8e,0x1f6cbfa60eba60cd,0xa074685329cf9a19,0x54950cf6c5f64282\n"
".quad 0x1cf3f5fb9eac030e,0x848d39e4b73c58ed,0x48023949fa474cf9,0x2bce7bff07efe29a\n"
".quad 0x3dfd5ddf93f77e60,0x73492db52474d491,0x185ac0a9641beb0a,0x1a12c0d054dac590\n"
".quad 0xe5b5d23445f0d3b0,0x230072250bc0b31a,0x4d18e6294412c8cd,0x94aa79961426da72\n"
".quad 0x5e8587cf4593519b,0x8395360728d892e7,0xb528e5e79f113ee5,0xe26ae551da4924cb\n"
".quad 0x8e6cefb24484ad07,0x39393637b906e499,0xcdaa3b202fba3c37,0x4f7545fc91cc9131\n"
".quad 0x15a0ed34a6ee26c7,0xddfca73ce153d40d,0x6f9ffdf9fcb5b9ed,0x6197f8ffdc3ddedf\n"
".quad 0x1e4aac915c23c11f,0x3ed7b39584c926c8,0x1e72b2761771db8f,0x668ad2592604774c\n"
".quad 0x930a7f67aeefe749,0x6574d18a746d9cf0,0x1665e43637fc9014,0x61cbeec75bc63e65\n"
".quad 0x93900019b4827ca9,0xec1cc345eba6c6ff,0xc88a01bbe00cba00,0x0ec09d566f401806\n"
".quad 0x7bf08a8d0300cae0,0x508dcf2dd66dc118,0x5c0466eb71c1192a,0xae7cacd8fa810046\n"
".quad 0xd3503ad2a05ac3c3,0x68748df0bfcc6499,0x507a59cc2563a55d,0xa087e2b8ad7be398\n"
".quad 0x3b5e602b8bdb6ab8,0x903d8eabdd74abdc,0xfacb1ae4c4720175,0xb303b9658a9b2c2a\n"
".quad 0xd0ee5982a6cc0ab9,0x3b5668a9b342ae6c,0xd59a2b6cd0ab9b34,0xc2c9734017f6cd0e\n"
".quad 0xce02e59c096ce160,0x383b6ce0edb383b6,0x0b6c34a6e6ce01db,0x56d9c0dbe2eca956\n"
".quad 0x767055ed9c1deb38,0x67055dd9c1de6964,0xc157767077ace157,0x55dd9c1d9b3855d9\n"
".quad 0xff670766ce15f670,0x9c09ece0ae59c04b,0xe0efb383bece02d5,0x81d0ce01fb383bec\n"
".quad 0x670f7ace15b6702f,0xc157f670776ce15f,0x5b599c1ddb385439,0x70776ce150e70b70\n"
".quad 0x1dbb385439c1570e,0xb38547767035c39c,0xc673808f1dd9c0db,0x39e0a099da316ea8\n"
".quad 0xc55c7627fe9b3af0,0x72744df019d8ad8e,0x5263269066e1149b,0x2d6ea49a3d3431d7\n"
".quad 0x569a68a6d97ed24e,0x5aa6d8edf72989a1,0x5fcd3754d04ba236,0x1daf8f68ba8eda67\n"
".quad 0x9fa9bf7cbe59f3e5,0x47b0c6d9c2f5983f,0x307489bf3582d311,0x325c531e66d0a35c\n"
".quad 0xe2599cf71545058f,0x2b971492dd78f7e2,0x4ed1b93c3f9f694d,0x127e4840da13f3eb\n"
".quad 0x2c469e00fbbc4b3c,0x42869a4e767310e7,0x686e0627856fb453,0x45503e95fd02cd3d\n"
".quad 0xfc182ecc3ad6bac0,0x5b9dc6974ec7382b,0x16734b8a18d941e2,0x4592f767347aedc4\n"
".quad 0x7aa81f2020fe5f97,0x6a92dfa84b7e2469,0xdf7420e68622b479,0x069036a06a7ea818\n"
".quad 0xa7575da95beca66a,0x9aa2d681a1855f24,0x74a5deab28671298,0xb073e931870136e0\n"
".quad 0x5b2c504e9870bfcf,0x6769018d6e2d9124,0xd606f8f348bfcfa3,0x40d3b9152b957628\n"
".quad 0x273d9e04f79d2571,0xa7b1750295c55db8,0xd27b1eb27b4feab4,0x693d97a4f68e4f6c\n"
".quad 0xa97162953d71c9ec,0xe49d483813d963a7,0x929ec748ea573476,0x62a5c520c9ed337a\n"
".quad 0x520dc525a7b4b27b,0x4bd27a40a7b65a5c,0x575376e4b8a46b8a,0x48d714969ea5a90a\n"
".quad 0xd3da193d3141b8f1,0x300bcf1e291ae292,0xa42b8a4b5011513d,0x92d5c629ae3162b8\n"
".quad 0x8a6b8c59ae290ae2,0x166b8a44b8a4b971,0x912e292e5c629ae3,0x4b9718a1b8c59ae2\n"
".quad 0x4339b5ab38a44b8a,0x33be174714962e31,0x1c5258b8c50dc62c,0xe3143718b0ce05e3\n"
".quad 0xe21619c26c63824b,0x65b7a423b2f881b6,0xad20bd97c22b6e11,0x0c31b5ef88fa21ad\n"
".quad 0xd6c67dba770ba448,0x1ec83d9ae6787e55,0xd24f6baa96dd18dd,0xe7b4d09daac761d8\n"
".quad 0x563bb6258ee151b8,0xb1d9b6a583bdc2b1,0x609d4b1dabf5d770,0x62e69596c4acb209\n"
".quad 0xa9ee712b6681c78c,0xa77462e6958ec4ac,0x8ea5109e8528269e,0x2b669ec75c62e695\n"
".quad 0xe6958ec4aca9ee71,0x9e8538269ea74462,0x4f68af66959ea710,0x567b8a427a017593\n"
".quad 0xdce256cd3d25bd9a,0xd03ecd2b3d895953,0xc567b12b2f14969e,0x3dce256cd3d24839\n"
".quad 0xed0c1cf2b0389595,0xc7760712b2f14969,0x84f4312b6604540a,0x3e3141fdc61c0f14\n"
".quad 0x83fb12b84f73895b,0x312b67c6283fb8c3,0xa0fee30e27b124f4,0x707f62571c125f18\n"
".quad 0xa023b2f881a2f710,0x5f08a8bdc21c17b7,0xa312b56a2f6072f6,0x5f5b56ead82e9ded\n"
".quad 0x4d5d5d56468b2f57,0x27568cb8392e7a7d,0x4a74c8928cb814a6,0x931ed161040d6dea\n"
".quad 0xa9892badad94348a,0x867f26f35ae7929b,0x8c26fafcf7185db4,0x64a806b9c26dbb9a\n"
".quad 0x42e18a1b754804db,0x277978bf79ba17bd,0xcd27f2bb03c2eaf1,0xcfa62d5c73f5fb9f\n"
".quad 0x63ba3cfc9cde792d,0x140914d747b0faf1,0xbbf26eefc9fbbf26,0xe6dc99efebaefc9d\n"
".quad 0x644b3f44394fd6cb,0x981c09804fd18f57,0xadf229fd90df42eb,0x12f16d9384c1c774\n"
".quad 0xc0db8605d23f9cda,0x0983d8454ea197af,0xb163ecb5386842d5,0x8c7cccae6e71cccd\n"
".quad 0x281895e9acb93748,0x339e3da61bfd7aee,0xfee4f143f6fd7878,0xa40299f29baffc43\n"
".quad 0xcd2f1c124a727ce8,0x46ffc7fd324c444d,0x4cdfad717c9e464e,0xa5dde2813cd58616\n"
".quad 0x79d0e51d615e1544,0x778a7c1044b82d14,0xbe76591daecf153e,0xf6464218c3c98584\n"
".quad 0xbafd439d97158800,0xaeaf7bfe96dfeb81,0x71ca5a830a1dcf01,0x9063ff4a1ff5c76c\n"
".quad 0x6fdde2914018171d,0x759680331c6ba9c5,0xe28a81c06ba7de80,0xf92dd3e22714b9a9\n"
".quad 0x4f52504a0510d3ee,0xd1e0983497dc4032,0x0208e3ecd3ae9b69,0x9eae4d712ff90558\n"
".quad 0xaeb1f7424898193b,0x79a6e1ede610ec7c,0xec03a8e66e1af917,0x2a66f1aea67136f0\n"
".quad 0x0133380f6f20879e,0xf1887a02a67012f4,0x3802679dcb3380f6,0x99c07b78843d1153\n"
".quad 0xce02d0b8049fa209,0x18024e03dd380aaa,0x2538028f2105396c,0xc03b3f2ebab380b6\n"
".quad 0x115b380967d449d9,0xa209d9c03b61c63d,0xb61843d115738097,0x5738097a209b9c07\n"
".quad 0x1e39c07b61443d11,0x0821e88ab9c06bd1,0x00eba5752dce03db,0xf9c0547f380b44a7\n"
".quad 0xe0011a998c397001,0xc38036a1dc678a6a,0x1ed2a10ec7e7b3c3,0x57ce025cc8127e70\n"
".quad 0x827e700ed2918f44,0x2810f4457ce025e8,0x2e025e8827e701ed,0x61701ed2710f4454\n"
".quad 0x0f44542e025cc512,0x53f04a6c701ed261,0xbaf44705c05aa701,0x100ad4fd510f3621\n"
".quad 0x2687116cca482357,0xe09b0b887680d47e,0x0dfb485470b8873c,0x0b8833cd8bb1c2e2\n"
".quad 0x9b1c2e20dfb48547,0x87485470b8873cd0,0x8873cc89b1c2e20d,0xc417106c3a42a20b\n"
".quad 0xb8834ce2157f3026,0x4838b41a9c457420,0x8fe2d57100ad4ddd,0xcaaa6105c46b9059\n"
".quad 0x9efad2c417206c7a,0x62730ec232784e40,0xec2320a4e625ea02,0x564e825ea8272740\n"
".quad 0xeb0f2410e99d8b54,0x2760ec2323a4ea35,0x21db5aec127eb827,0x3b2e5d4767615128\n"
".quad 0xabebf55d802b5213,0xd67694b11410f1ad,0x229d86b4a9bc5043,0x498e6d410f99dec0\n"
".quad 0x21fb3bd80453b0b0,0xd804d3b097b009a8,0xd86bd81e6822033b,0x04f411059dec0269\n"
".quad 0x4c04416b5d824fd8,0x733a551cabfb4aae,0x6f5423aaee019a53,0x4467600b89a0886d\n"
".quad 0x2086771ace0a4984,0x12f641330445677b,0x998446677b208677,0xb3bd90433b8974c3\n"
".quad 0x259dc6bd91e18223,0xfd904ec11219dec8,0x10d60890d6e9dc14,0x3d4a9c3b15198957\n"
".quad 0x0894d6f52ed355bf,0x3b044b67624ddab6,0x77b20967712d6e71,0xe7712f6413b044c6\n"
".quad 0xf641373b876b77a8,0x044e677b208e7712,0x6411cee2c69a39b7,0x127ec826e089ecef\n"
".quad 0x67715978227b5aee,0xdb72fac7c1dea8c4,0x822835bd1381acb2,0x4fc11459d893e6af\n"
".quad 0xadec8279dc4b5c7c,0x3cee0999e197e149,0xee9fcf60a6d6f641,0x7b0546b7b2081770\n"
".quad 0xb5bd9040bb877536,0xebb855e550e6c22a,0xa2eb5b3ec8108aac,0xabc028433d01e054\n"
".quad 0x1071e42bb3bd0a11,0xbf24c790aec6ede7,0xddbde225f3bc0579,0x5f3bc0c5f1b115d8\n"
".quad 0x8be362f0358464b2,0x76372da154be7781,0x2421e4f0317c6c45,0x0017f8d8bc0d6119\n"
".quad 0x4498d0639c57635e,0x25131c07816e62ce,0x38b2cef14249212c,0x1b11658d896123df\n"
".quad 0x2cb1bda0493c015f,0x37b40927802be362,0x8124f0057c6c4596,0x9e00af8d88b2c6f6\n"
".quad 0x2ff1b11658ded024,0xc4d8d14f02d0bc00,0xc256f95caf150611,0x38b4cecc2786aa13\n"
".quad 0xb11698dc94a6abdf,0xd31bda0453c015f1,0xdc869a7802be3622,0x4f035d809c9bc076\n"
".quad 0xbbce990b4c6f6813,0x2d31bda04d3c0c5f,0x88cf0373fee93a64,0x74184428c6867816\n"
".quad 0xaa85309607f7853c,0xaa61e42db3b30a61,0x4a1d9c85b637252d,0x8b6c6f6810cf0359\n"
".quad 0x8ded0219e00af8d8,0xf035d871c98f216d,0xecc790b6c6f6812c,0x637b40967812ec38\n"
".quad 0x0b54f000bfc6c45b,0x3c941f942ac4db3c,0x0d556347a8ee4db8,0xad57be71759d9857\n"
".quad 0x902be3622eb1b929,0x7c6c45d637b608e7,0x88bac6f6c11cf205,0x58ded8239e40af8d\n"
".quad 0xdb04f3c815f1b117,0x679005fe3622eb1b,0xad32916626f9e45a,0xa16c25a78de1e43b\n"
".quad 0xed5f0bcdecc2d86a,0x8b61e5fc2f35b529,0x766f21d8464f25f3,0x3b08c820bc897650\n"
".quad 0x2a17912eca0ecde4,0x5d941c98bcd6d5b6,0xb3790ec232382f23,0x405e6b5e424fb283\n"
".quad 0x3546a3185b083555,0xd542e44a3d732e0f,0x6e1ca517dad985c8,0x5db06b0f20d9e9ca\n"
".quad 0x41b08d36d052bc84,0x494af22976312a5e,0xd802a97906c234da,0x3b08e365452bc8a5\n"
".quad 0x84f22975dfdd22fb,0xcf38a917d9ded820,0x0197c8bed6bc8ecf,0x0f4546e1c4ab6ee1\n"
".quad 0xf06aa1782510dcee,0x7e11eb748c2d6ec2,0x0c5d129748c2cef2,0x05d230b3bdc0493d\n"
".quad 0x2cef70124f431747,0xdc0493d015f1b38c,0xa1ad296a4c430b3b,0x1498861677b808a7\n"
".quad 0xe4616b6cf4127a53,0xa3d0a562a7d0a5bb,0xe3550bf129b387a6,0xab9a9208636b7617\n"
".quad 0xa12ee72598863676,0x9310c6ced5739247,0xdaae7648f435dcec,0x9e86bb9e926218d9\n"
".quad 0x5a576218d9dee026,0x18d9dee0269e858f,0x6d6bd069e0225262,0x1d4b1e22fc68610c\n"
".quad 0xaa1842535ef83d55,0x4b2410c8d6ec3086,0x5dd34b310c8ced57,0x310c8ceee9a68f42\n"
".quad 0xeee9e68f435dd3c9,0xcf435dd449310c8c,0x0f2f610c8cef7012,0x0c8cef70112f9c61\n"
".quad 0x0c8d6d8610817f61,0xca8dc6f686109b61,0x51aa862896d4901e,0xddd84d043335bb0c\n"
".quad 0x1ec4bbb196621999,0x524c43333bd5d8c9,0x677abb2923d8d776,0xae7b1aeece498866\n"
".quad 0x88aee10cccef5ba2,0xf9ec3b08c92f0862,0x37c3333b618a205f,0x603db51984e08c51\n"
".quad 0x761903550c812f9a,0x3435bd5ddc90686f,0x5de491ec4bbbc966,0xec6bbbd9263435bd\n"
".quad 0xe9263435bd5dec91,0xa1adee8205ec6bbb,0xbdd040886408ae11,0xadb0c8102fc23435\n"
".quad 0xab4110c81a0f21a1,0x14dcd82d72f75063,0x1a5adb8658d6384a,0x6721a59deaf16492\n"
".quad 0xabc69249ec2bbc69,0xb12ef1e49c869677,0x721a59deaf1e4927,0xdd04149ec4bbc892\n"
".quad 0x5219622b8a434b3b,0x9b3eb90d2cef7410,0x4948696b5cf61d7a,0xdf418f632aa71963\n"
".quad 0x6af6029a919c39d3,0x79b2490d4d6dc338,0x25de6cb390d4cef5,0x721a99deaf3648f6\n"
".quad 0xd5e6c91ec6bbcd92,0xd8d779b24e43533b,0x4e4e43533bdd0453,0x4cee7b4f47b1ae7b\n"
".quad 0xb5ec34f9ef39390d,0x2739c3384d5486a6,0x00b694de5a1803c7,0x9243635b70d11abe\n"
".quad 0xa72ce43633bd5e9c,0xc677abd3923e0977,0x7247c1aef4e49c86,0xde9c9390d8cef57a\n"
".quad 0x3633bd4fd1c8f835,0xece47c1ae7ece4e4,0xf3f872721b19dea7,0x1b7cb80d8d6be069\n"
".quad 0x18b3c7ad18ca1a22,0x41abe00b6e5d42b9,0x35ec492436b5b70d,0xc04c212bae436b3b\n"
".quad 0x9390dacecd7b1247,0xd9af6248f835dec4,0x1f06bbd892721b59,0x9c9c86d6766a0639\n"
".quad 0x3b35039c8f835d03,0x7c0d3e820e4e436b,0x71386a0d1d21b5ad,0x731d15c8c89e3f78\n"
".quad 0xb9adb86b8d5f005b,0x721b99d9af764921,0x35eec91f04bbdd96,0xe0d77bb24e43733b\n"
".quad 0x49c86e6766bdd923,0xd9a848e47c1aef76,0x3e0d742672721b99,0x39390dccecd42672\n"
".quad 0x6f86e675f034fa14,0x2e78dde0b4fa1ae2,0x743684bef005c343,0x7c7241c1bdf86d0d\n"
".quad 0xd12ef8e598e0d6cd,0xe498e0d6cd7c7247,0xd6cd7c7247d1aef8,0x8e47d1aef8e498e0\n"
".quad 0xba1f3931c1ad9a87,0xe0cecd43e7229f44,0x6f9f424fa2039350,0x95af0da134750e0d\n"
".quad 0xd12a138d0ce9e3d1,0x28726b7e1ba35d0d,0x259a8726766be892,0xd9afa248a7d0aefa\n"
".quad 0x9f44bbe8926a1c99,0x49a8726766be8922,0x35151c8a7d12efa2,0xd1ae8a8e4d43933b\n"
".quad 0x26a1c99d9a8a8e47,0x50e4d6be869f4547,0xe308eef594374692,0x43804b2c9f0d0d19\n"
".quad 0x648a1cdadf8700d7,0xbed966a1cd9d9afb,0x39b3b35f6c91f44b,0xed923e8d77db24d4\n"
".quad 0xaefb649a8736766b,0xa1cd9d9a8c4e47d1,0x462723e8d7462726,0x4fa3139350e6cecd\n"
".quad 0x3804d528736b5f43,0x0686a4f1f85a729c,0xe1c635d0e312aaaa,0x6776bf39228756b7\n"
".quad 0x247e12efce59a875,0xf9c9350eaceed7e7,0xd59ddafce48fc35d,0x8391f86bbf3926a1\n"
".quad 0xd1c1c9a8756776a3,0x3ab3bb51c1c8fc35,0x5a77e0d3e8e0e4d4,0x4d7521603f5a091d\n"
".quad 0x0c6bae88ae45f800,0x76ab22450a8d6fc3,0x2d89756459a85467,0x22cd42a33bb55912\n"
".quad 0x19ddaac8916c4bab,0x448b635d59126a15,0xeac8b350a8ceed56,0x0a8ceed751245b12\n"
".quad 0x130195b06dd44935,0x98f406d6e1c10148,0x349515d0ef5c3d18,0x196be5478c5b0370\n"
".quad 0x7ea6c7c4c4568d4c,0xaf0f295745ad205f,0x8692f2f0a0b40bf8,0xb298f3044537a649\n"
".quad 0x8ce7b833282c7993,0x660a50de998ac698,0x378d5a688467454c,0xb959668344714034\n"
".quad 0xbb94bc7f2540c1a0,0xd5e8917bca69092f,0x4525a06852b12f4d,0x1fa6d57206e6e2ed\n"
".quad 0x86ea6cb6b2311e2f,0xeb05eda1babae54a,0x0c0f0b8292e6405a,0xae6aa59c2ad337b9\n"
".quad 0x314d48794fb10474,0xb95399093e5fd14e,0x850eb49439c17a77,0x646e18d37a85ba0e\n"
".quad 0x9c739efc90cb3195,0x82b1357b55e8a55f,0xd6956ddd4271ae92,0xefe289fbdfc21376\n"
".quad 0x33444c3f62bbf27a,0x089db258d7471fd8,0x0aa65fc9d48e77d5,0xa96bb953d1256bfd\n"
".quad 0xdf68bfc52af7f993,0x8e66374638c5daf9,0xa183bf66daa18a6e,0x943436cd67ad2e97\n"
".quad 0x54c750e44cb52d06,0x82a98ebe93733201,0x41400575d5b1a15a,0xaba9a5319ffadb7c\n"
".quad 0x3ff57438a7aa69ff,0x2a53ff5361b7ae03,0x0aa8553edd578b4c,0x8cc097661bcaf779\n"
".quad 0x1df3169efa87e503,0x7389d065db9e9e00,0xc002bca593efdfbe,0xef9fc4262d3b73d8\n"
".quad 0x0f7887175e162a0f,0xae5dfa0ed540eb82,0xd75e02840a042694,0x97b7489468a5c197\n"
".quad 0x1ddc4f47ef9e6a8d,0x5308de2c538341ec,0xc34a6134af61b13d,0x1203e754cebd15f9\n"
".quad 0xed7d1fcf5a9bc61b,0x0f1a2428c0c8c760,0xfb8ae49c360ec76f,0x74d0a0c1d2ca3f9e\n"
".quad 0x83b5d03ae487d49c,0xe2b0e91651f5270d,0x2d87d49c35ca40a4,0x5258df832b4c1c9c\n"
".quad 0x35bad8f03bb90c78,0x484e25606a2441f5,0xd48aa3e9488c20c0,0xa6460fa958ecb4e0\n"
".quad 0x567b24f83532a8b4,0xb83532a8b4a6460a,0x6a6075c50a567b1c,0xe24ee0540a563b07\n"
".quad 0x997968877b8978ae,0xd06a1e0e5e2793ab,0xef38b925e01b536e,0xfbd552a8b5093ad8\n"
".quad 0x2a9384180e84eb08,0x94bcf601706aa559,0xaf8783552ac9549c,0x1aa9564aa4e4a5e7\n"
".quad 0xa83ae6a52f3d781c,0xca5979eb9fe0d34b,0xb2a252f05dc49f56,0xfef22805ccbcb476\n"
".quad 0x60234a6ee9e95e39,0xb4dcfad8eec9b926,0x54119c4ccf555b24,0x6ae5552b9392d022\n"
".quad 0xa95c9c54ccf5a8f0,0xe2a667acc383572a,0x3d61fc1ab9554ae4,0xa717556bddb31533\n"
".quad 0x061b955333d5ddc1,0xd247a6653c6aa18f,0x18e664564f04ccb5,0xf196075759db0736\n"
".quad 0xb055d6960f5b9984,0xe68a304a75861a86,0x9a9d8ec3d24b4b24,0x6a7e3b0f49ad2d13\n"
".quad 0x60c6b1ad9574b64e,0x170b78f686e650cf,0x38003878d1c761e9,0x0e9d2201728052ba\n"
".quad 0xb8eb76a1c28e50ca,0xbb44f5d16fe080ea,0xaa1b48155ba38409,0x6022c129c51c0e09\n"
".quad 0x4129dc154432f138,0xc761e90c65f270da,0x963602a99809c351,0x09b46df9ca39ebef\n"
".quad 0xa045e1d3471d87a4,0xd472d7c916a38af0,0xd2705e018ee0ba8a,0xa4d1f56ced7056a5\n"
".quad 0x8362225a961b7c13,0x889cb10c04e6542e,0x2272c8655b622259,0x89cb21b56d888966\n"
".quad 0xa72c8755b6222598,0x8721f56d58b23805,0x20d4b15e149d6437,0x3194ad593a965af9\n"
".quad 0x656e2574f1416a6a,0xdcd472235ee96105,0x4e3a7202738a581a,0x38e44eadb1911cc6\n"
".quad 0xe3914ab6c6447319,0x8e456adb1911cc64,0x916ab6ad593c05d3,0xf92348b54ba58517\n"
".quad 0x994b136e8be6965a,0xa580ad49c8e07172,0x3227917af6265fc4,0xe786202738462a36\n"
".quad 0x9e466adb1913cc64,0x791aab6c644f3193,0x146eadb19102c64e,0x1cab6ad590208538\n"
".quad 0xaa58af0a4e8c0b95,0x2f0bae834b2d7c90,0x2d0ab2528cad8953,0x8550a3d5ec49d3b9\n"
".quad 0x70a3852756c5286c,0xc0d3c761e91c1642,0x034f1d87a4085909,0x4a963642a8e66423\n"
".quad 0x873025460e6a78eb,0x78550e6a786c3d22,0xa9e1af92248f54ba,0xe6567229887f8839\n"
".quad 0x156e9e1356445c59,0xe120a8d11f107324,0x88399948c28c24a4,0x3291839920a76893\n"
".quad 0xc11920a768978823,0x642ac6ca55119948,0x49a11813a3054f3d,0x58b51f728a9e3b0f\n"
".quad 0x1054f2d7c902482a,0x71697cac3f53114f,0xc90d5b922ce25916,0x12938486a3652208\n"
".quad 0xdb29104665230a30,0x9489265270464869,0x44932939232434ed,0x60528c91921a76ca\n"
".quad 0x2129921a76af5924,0x6be481d21a97213f,0x85cd2988c7892a79,0x48d3896469c592b4\n"
".quad 0x2a8d94892324556e,0x5329385180ea4e12,0x949c51922a76ca44,0x4e28c9153b652229\n"
".quad 0x14648a9db29114ca,0x8a9dabd6451815a3,0x922a574f00b68a94,0x7a8a3239eb4d3f40\n"
".quad 0x6e562cb957aa988e,0x9255b923ce254c07,0xab3849283662228c,0x9889a1c8663637fc\n"
".quad 0x44d33139a32494ed,0x69989cd1924a76cc,0x2d4668c9253b6622,0xe8c9253b582c9a30\n"
".quad 0xf54ca41def1a41e2,0x98907a9aa996be48,0x54c07694dfd65282,0x2a98c92d5b9244e2\n"
".quad 0xc5182b3aa9454367,0x25a763d048667270,0x1d87a4d199c9c319,0x58d9caa667270d53\n"
".quad 0xe302f4e1aa67a9f1,0x9244e29aa63b0f49,0x4eb442f2fc092d2b,0x64d5ab8913896324\n"
".quad 0x47e25923f16c8641,0x6ce558be7751deda,0xe581eb056754d628,0x96a98ec3d22acce4\n"
".quad 0x5aa63b0f486b3393,0x5298b1b3956cce4e,0x1e90360629cb54cf,0x6a57248fc5b54c76\n"
".quad 0x754ca102c943a812,0xddb0724196c48fc4,0x17b692b88e2a93d5,0xa5141b41122f9dc1\n"
".quad 0x11cd04e389e02d32,0x4734138e4a2adb41,0x1cd04e3928ab6d04,0xc0d538e4a2adb411\n"
".quad 0x4ae2f928ab6b2593,0xcb5f241849452b52,0x0721856c495c4f55,0x693788ef54ad698a\n"
".quad 0x41b49122f9dadb7b,0xd24e7a8a02d32a55,0x4065c4aaadb4913c,0xb9ea089631019218\n"
".quad 0x963103921840e5ca,0x92184165cab9ea00,0x8a1ab9e9f8963105,0x6be48d25552d4937\n"
".quad 0xe3de2d8937881ab9,0x4388e4a1c50c84c0,0xb49122f9d9a37b69,0x27023d0169c25751\n"
".quad 0x73d3ceac621d2469,0xac621f243087cb95,0x24b0884b9573d3be,0x72d571d3aeac6221\n"
".quad 0x2574ec4466961119,0x0a4aea5a9287147b,0xc4a1d41ed570d7c9,0x3929f1503871c5d6\n"
".quad 0x58be761b5eda53e2,0xa385e7538c286d45,0x5b0d88d49b66a230,0x4ec46e69611b972d\n"
".quad 0x11c9a584725cb25b,0x649611d972c96d3b,0xe28ab67a69858c47,0x5af922496d4b5253\n"
".quad 0x38ce4b6253ea0ab6,0xda56e2392b716a9c,0xa86d6558be75cb5e,0xd646146125e75339\n"
".quad 0x6cf4ca6b1892c92c,0x6b1893492c24d2e5,0xc92c24f2e56cf4c6,0x12e56cf4c26b1893\n"
".quad 0xf4be6b1894492c25,0x25f52d42b2c92d6c,0x895b892ad96be481,0xc9678b63f0e2e6af\n"
".quad 0x45f3abd6f6d2cf11,0x3012f384c2a36b22,0xd8ed21e6926b270a,0x96313092584c25ca\n"
".quad 0x92584c65cad9e963,0xa5cad9e95b963131,0xe95396313292584c,0xa6152f49678aaad9\n"
".quad 0x12cf1155b2d7c903,0x0aad6ab901c5285f,0x17cea54bdb4b9c47,0x80ebce131a8dac89\n"
".quad 0x2563139923593851,0x992584e65cad9e94,0xe65cad9e93a56313,0x9e93256313992584\n"
".quad 0x6313992584e65cad,0xf49738baad9e92a5,0x973ad38dd03a634a,0x738906be25cea6ac\n"
".quad 0xb697f895f029a537,0x741b61122f9d3697,0x14331b1bfe589c26,0x7f2e57c76feb3431\n"
".quad 0xcf4888b189fc92c2,0xb189fc92c27f2e57,0x92c27f2e57cf4848,0x5357cf4808b189fc\n"
".quad 0xc91e1d33a57a4bfc,0xbca4d2ff10d5f2d7,0xb895f029a537f387,0x6da55b592277f698\n"
".quad 0xa770a3062751efa8,0xf477eb18a2492c9d,0x18a2492c2892e57c,0x2c2892e57cf473eb\n"
".quad 0xe57cf46feb18a249,0x6beb18a2492c2892,0x4a57a4c5c5b57cf4,0x711d5f2d7c90e1d3\n"
".quad 0x57249038672a4d31,0x0e57f699788e4cbc,0x27519d286da55759,0x52648da4e382ab06\n"
".quad 0x149972be7a31a58c,0xbe7a2fa58c526496,0xad98526496149972,0x314992585265c4d6\n"
".quad 0x49978aeaf9e8ae96,0x80694ecf4826b4af,0x294526997a9eaf94,0x713c9a38be7d6c3c\n"
".quad 0xdb889eb1f4afed34,0x273c5b01999537a0,0x33d13aac629f246e,0xac629f24b0a7cb96\n"
".quad 0x24b0a7cb9633d12a,0xcb9633d11aac629f,0xd10aac629f24b0a7,0x4de9599347143633\n"
".quad 0x81b268eb47172110,0xaaa83c1ef5269a3a,0xafed35f13c9af8a1,0xa1f050c8a0e4b1cc\n"
".quad 0x492379381a880cce,0x525cb19e87416315,0x9e86c16315492585,0x6315492585525cb1\n"
".quad 0x2385525cb19e8641,0xeeb18e85c1631549,0x92349cd4b326be28,0x5669af883bac61af\n"
".quad 0x2c605b73197b214a,0xdce471a46fed3771,0x28c34ccea14b50c8,0x4ad631599239bc8c\n"
".quad 0x32470accb8eb18e8,0x971d631d085ac62b,0xa0eb58c56648e159,0xacc91c2b32e3ac63\n"
".quad 0xddc5158cf4196b18,0x8cb5f24493aa9664,0x71e052ab34ddd415,0xbfb4e3c4f271e2ac\n"
".quad 0x829943246391c5f1,0x91ce04608fc0353a,0x2e59cf410cb18afc,0x40ccb18afc91c2bf\n"
".quad 0x8afc91c2bf2e59cf,0xc2bf2e59cf408cb1,0x59cf404cb18afc91,0x99e13ca9664e3c59\n"
".quad 0xde57c00152c8144b,0xebfb4a3c4f000142,0xd4002a18e6491c52,0x62f388db1cba7171\n"
".quad 0x385e738db3dfe13c,0xe36cf7f04f18bce2,0xfa13c62f388e179c,0x8bce2385e738db3d\n"
".quad 0x36d95536cf7e04f1,0x7a74eae7cf1fb11c,0x61ac5be1ce6ab689,0xf35be7b47ac9a323\n"
".quad 0x0d8b9dd19d98ee09,0x96bd22fdfe362e70,0xa6f6e89c35eef180,0xa5e321c1d3f83f3e\n"
".quad 0xa74c95bf5d02aaba,0xe6e24f16f8bcdfc9,0xba33bb2347d1d723,0xf54387b287aa9630\n"
".quad 0x2b57b05ea67ca367,0xed7af67e99cb8f9e,0x621625b3f54f00d8,0x5a982b2d9fae7283\n"
".quad 0x09e86e0a18fec9e0,0x9e3f9c7adfe3f127,0x48f2ef0bb29a9696,0xd907ee1ca286db7f\n"
".quad 0x1ec03c58c765a4b4,0x398ab808ee8f2761,0x0b28586f3ae8f614,0x881caa5bab0b23a5\n"
".quad 0x1afbedf058969617,0xdc09b4a58dc7be4e,0x2861bead280e80f2,0x88ffd7238b5d63aa\n"
".quad 0xd2ad183cc2b9196d,0x5460bb1a1749e599,0xe5b1d2ad23ee8739,0xf47cb6e0bb1e1749\n"
".quad 0x007df32e4f9568d8,0xd11f4c0fa673627c,0x0fa161f49e5e1f2a,0x7cab45cfa1c4812e\n"
".quad 0xaf39452243ef9874,0xe1e9f2ad1004c38b,0xc389a2ae52481f49,0x1f49e201f2ad0bbc\n"
".quad 0x22a7a1c2f32e5348,0xaf9ca690a1f69d35,0xf118f95684e661c2,0xdce13b9729a40fa4\n"
".quad 0x3a9a46a9a7361151,0x8d534e74a08ea50e,0xf54c2ae77c2ce534,0x381ce5ca691aa69c\n"
".quad 0x53483534e66a7157,0x4e66a715f383b4ee,0x2be762cce5348353,0x631a6916a69ced4e\n"
".quad 0x795cba56435acdf5,0x4dd4c3dfb6392d32,0xf47307753edc5bf9,0x5cea02bcb137eda9\n"
".quad 0xeba8bd2e0713c68f,0xa7572e37b2db9734,0xae3f16d568b70749,0x3015f7da97cfc9de\n"
".quad 0x29631f5743c93c2c,0xd817acc0356c2059,0xa97a05985234fd77,0x6465fd5a13aaad1e\n"
".quad 0x98b5b7bbfbbb87cd,0xff7d087fedfb8449,0xf0fa7c3f5faf87ee,0x17bf8febc3ddc3f5\n"
".quad 0xfe9fdaa7f74fbbee,0xeefe3f87f77fdff3,0x36f77a6debfd7f8f,0x0b96fca448efa942\n"
".quad 0xbb87a7eef8588a3b,0xfde6f0fc5fef0f17,0x662bb01dd81111b7,0xc529edc307a7e0c2\n"
".quad 0x3485cf54b40df1df,0x920b2d5024e73650,0x77b7cbaeebc614ba,0x189015607faacfb1\n"
".quad 0x92713a7b877f83a2,0x9e7310a39ff00545,0x1d315bb806dc5714,0x197257035e7304a0\n"
".quad 0x970cfb283a62af70,0xae2ab65fcd8be0cb,0xc5f0a49dcf5f100b,0x32ee05d3153b2eca\n"
".quad 0x081b50f43de420fe,0xe206b065e02539ea,0x3690367f3bd54ba5,0xb4b50a206ec39662\n"
".quad 0x2b0b819204223d8a,0x67d9fb2f5413af8c,0xc544f1027ac6aebd,0x3c6a0846eb76afb5\n"
".quad 0x43f0fe48a29aeefc,0x0fe28fef6ca822a5,0x45722d9a06d89eb7,0xd7ee7f3de62cb098\n"
".quad 0x79e4b73e9dfb71cf,0x3359306edeea84a3,0x76efe32f75d9be6e,0xabbf27aefc99bbf2\n"
".quad 0xa6a3ef75a062efc9,0x5d307a648ac68b96,0x642f2ba4d0fda834,0x85e526acad8a8360\n"
".quad 0x80056d80c69d31b2,0x7619a4a428c549a2,0x531ddfcc85feb810,0xb995b753bfa3dff3\n"
".quad 0xe94cdf36e16d14bc,0x933c5247cc880e7c,0xc62e26757dcba3e5,0xaf54212cf1e469c4\n"
".quad 0xd35eec0605f072f4,0x9f3dc37532996102,0xb139ba2e15fa9b9b,0x1d86c4b4003616d8\n"
".quad 0xce7d7fb87d50a2ed,0xfbf3ff20d3dbbbf8,0x1e73fbfeffbedf3f,0xcbfc7fee1eef6fb7\n"
".quad 0xadca26cb002b7ecb,0x9a87b5863df00792,0xcc06d6d839398853,0x2ae3911dd7dc8d59\n"
".quad 0xb2165e324e9edc42,0x73a635d14051a6e0,0x2ecd28a13f0868b1,0x76398c298b22811b\n"
".quad 0x81432be98c50878f,0x358235dc9c99562c,0x0caa00fd4fd80516,0xee104f08d2ae97d0\n"
".quad 0x51c05162582355c9,0x6efde8065b007e85,0xc4afee4c4cbaaac0,0x4211fa1092028b12\n"
".quad 0x170ba38023f6c11d,0x2531625895fdc99c,0xb8c8160b5890347f,0x9311be366e7e3224\n"
".quad 0x952350959312743c,0x2f9a126dd7999ce1,0x72b658b74db906ec,0x9e2052b64ba8df0b\n"
".quad 0x602eb303bd4c98de,0x2edc9e78f5600b1e,0x8a5dee78a9b3c1b2,0x6d006c8bb727a003\n"
".quad 0xd9e880e3977ba02a,0xdee88a9b446b95a5,0x83755a527a203925,0x44072cbbdd115368\n"
".quad 0x857ad1113e650a4f,0x1db688172d115b68,0x8eda21db68876da2,0x04e2688ada2a0688\n"
".quad 0x7a22b6d10ef6868f,0xb2285c9e88f72388,0xb3d10ef42b23b441,0x7dd1157688d72a8b\n"
".quad 0x35caa2ecf4407a1c,0x101ea71f74455da2,0x1157688372a8b93d,0xaa2ecf4407b1c7dd\n"
".quad 0x22bed10aeda21a7c,0xf68877da229cefba,0x1a223f68877da21d,0x1a5192065377a87a\n"
".quad 0x10f4457da21dec4d,0x82729cb9bd11ef40,0x4407d807dd1150e8,0x44543a209ca72e6f\n"
".quad 0x29cb9bd101f801f7,0x7e807dd1150e8827,0x43a209ca72e6f440,0xb9bd101fc01f7445\n"
".quad 0x30e602029ca7329c,0xd563ae6a94a2a6f5,0x57ecb9322ec160df,0x1a92274d70c91984\n"
".quad 0xed268b59eda99d7f,0xfc7205a8aa34b494,0x6a8b455468ca47d1,0x5fe86fa84bce893f\n"
".quad 0x6ae0bb6e2eaad6c3,0x06906fa81837d947,0xa17144c5a7859744,0x2e1e5d9e9e179d88\n"
".quad 0x15e2e9a785165828,0xa70869418dbe1dfd,0x6be918eb65e2bfc7,0x9f14ae034141174f\n"
".quad 0x32ae6d0f432ae00e,0xa4f3edcd64ce481d,0xb3b4699d6d50b4ce,0x48dba15bd3badfd2\n"
".quad 0x9cf9c15ff2f3f827,0xb0c77ae96d43172a,0x234f5a5c548f5a38,0xff5f9471147a55f1\n"
".quad 0x7c91fa63ff144a90,0xc62b47c4f62f4952,0xcc694650ab90e7a2,0x9883001b4b33bf52\n"
".quad 0x67c57d7b75e2b7c5,0x92a596ad934e7e57,0xe2b702f3449afe95,0x17f9f78e73b03c07\n"
".quad 0x59e34ac093a1ad69,0x22ff3e235a31263e,0xfc2dc1c2853b254d,0xa2986c40f25fb301\n"
".quad 0x7d304900a7ee04f4,0xf609a0d964f48a4f,0xed2c9ed8a4f63d64,0xc4f6349e94e10d89\n"
".quad 0x6c4f724873013a6d,0xeb814f6074f4a3f0,0x0c50f89ea4b98f09,0xfa5da70098d184f6\n"
".quad 0x0d8c714969ed0c9e,0xa45deb01786dc905,0xaa9184f61530f89e,0x22e5309eba2f6500\n"
".quad 0x6402cdc638a4b4f7,0xe292d3da693df45e,0xa2836cdb8a0bc518,0x7c7427b11407c022\n"
".quad 0xe1f38c535c62c506,0xd718b35c5213d2cd,0x67427b15b07ce314,0x1f38c535c62cd06e\n"
".quad 0x2ac559c5213d2dfa,0x427a5d103e718a68,0x0f9c6286e3166b8a,0xc58608b2184f638b\n"
".quad 0x27a5f483e718a1b8,0x97c6286e3161b8a4,0xdb88586081a4c704,0x4596de908ecbe206\n"
".quad 0xb6b482f65f08adb8,0xebfc49db2d4f1e7a,0x9e1f957571ab6e8f,0x84ba25f9a21b66f9\n"
".quad 0x6ab1576aab26c93f,0xb5da4bd2856bbf41,0xb66f141c97c90b88,0x6db961eb222d96bb\n"
".quad 0xea5aed58449c2d76,0x895960e8d1284c04,0x9ee71ab668190776,0xf68a768958ec6aca\n"
".quad 0xac754884f42a4134,0xb9c6ad9a7a4b3b44,0xa05da2563b1ab2a7,0x1d56213d0ab04d3d\n"
".quad 0x036b269ed25ed12b,0x437b44acf71484f4,0x1ab2a7b9c6ad9a7a,0x292d3da7bda2567b\n"
".quad 0xa410748acf63565e,0x71ab2a7b9c6ad9a7,0xe292d3da683a6560,0x08a815aeec0e3565\n"
".quad 0x181e2909e86356cc,0xc6ad9f18a0e3ab8c,0x4f6c3be38d5827b9,0xd8927a18d5b3e314\n"
".quad 0x25f18a57f3f18313,0x351db0af8e3561c1,0xe10623b1a4765f10,0xe80e5ecbe11510ea\n"
".quad 0x555863561b92c9a5,0x6bd5d425bf21dfe3,0x8d4a587734816fcc,0x09dbd25df1294b2d\n"
".quad 0x833508985891ca6d,0xb6a86dc886db4ad8,0x52de499826dea08c,0xb9a6edf9cffb7f6c\n"
".quad 0x3672666de7da47fd,0x481ff57c983b622b,0x9ba24e123ead4d53,0x427733ee3a567f70\n"
".quad 0xbf73f9a42ee611e5,0x9bcf25b9e6e4ae7e,0x80c2be7870c6854b,0xf93d77e4cddfc534\n"
".quad 0xfa8fdf93977e4d5d,0x3f87d5b2387c103b,0x035b076ef4a96ae1,0x03b898bb41c4060a\n"
".quad 0x6722eddcb2b63243,0xe5cdb9fb19a0b89f,0x0755ff13656f1a27,0xe3b27949538f8056\n"
".quad 0x9b6307d9694ddd64,0x618ee46a9a308399,0x5caf8e9fc80cf869,0x283ab8651a507377\n"
".quad 0xab7f3a0eeeec239d,0x8f3d44d13bba1d22,0x093fd6cd8c8baa15,0xe23b84ace0e06b00\n"
".quad 0x974ba2785767040a,0xe4e8442c0ea62d29,0x2e4f2801702e4510,0x7cf573265d0e2cf0\n"
".quad 0x465c2e777bfe94c9,0xe771677d72624457,0x7fe97c97ced5c532,0xa96ca2b5f01b2188\n"
".quad 0x0ead323982cbedf5,0x06b99de807180b2c,0x72f97d7aa428727c,0x3918a04f0eb20eaa\n"
".quad 0x1cf97db9a113c251,0x54701a090e2854c4,0xc2f77885cdc2b739,0x3c1f2da6f9de1cee\n"
".quad 0x5cedaecdc87b7a44,0x93730ec03a874e42,0x43d3153398d73b5b,0x35ced2e4dd07b79c\n"
".quad 0x41ede610f5054ce8,0x1533a0f24377d667,0xbee4dd07b79443d5,0xb2b3a0b54e8227c3\n"
".quad 0x720f750647386e82,0x319cddae391d042b,0xb432e2fd258741e1,0xce83ccb75f5d9d03\n"
".quad 0xec741ed8b10f5456,0x10f5456ce81d9461,0xf32d97d76741ed8a,0x07b62443d51573a0\n"
".quad 0x55ce83ccb5df5b9d,0x7d6e741ed8810f54,0x5ce82d33a095f2d5,0x951143920e1ba0a8\n"
".quad 0xd86a924827400adc,0x3f3bead607545f1d,0x4bebf3a0f6978878,0x5c21ea8af9d07996\n"
".quad 0x41e658efafce83da,0x3a0f696887aa2be7,0xa8af9d079962bebf,0xc37d7e740e8ff51e\n"
".quad 0x4ac43d5150ba0f32,0x8257cb05f585d07b,0xac6e82b60ba0b5ce,0x1d44337299150323\n"
".quad 0x74df3c12af6d3509,0xf4a26c2ea1da2355,0x961fdd6151c4ea1c,0x4ea29765c29751ee\n"
".quad 0x751eea59fdd6151c,0x854713a8a5e418e9,0x55aa5d47bad47f75,0x9fdd6151c4ea2970\n"
".quad 0xfcfcd2aa9751eec4,0xc33e794aea0d0ba8,0x443372dde505c6de,0x4a87adedc808755d\n"
".quad 0xb5470ec6a8fe5160,0x4ec31785e2a5d83b,0xec0262770ec23238,0x4f01d84641e4ee25\n"
".quad 0x1ec8ac9e04bd904e,0xaf687927901afbee,0x393d0761192d2791,0x9ed68f27a053f6c1\n"
".quad 0x4030daf61a24f728,0x5b7a0453d0866e66,0x8a2ced4162284283,0xee0229e862f86a54\n"
".quad 0x4f41de459fc1499d,0xe472748a6cef7011,0x91519dee0269e862,0xbdc04d3d0c5c058e\n"
".quad 0xbd0fcfca32522ab3,0xdfbf86694928aad6,0x4d3d8876e6d06a0c,0xfc5fba4a2bb5b7b0\n"
".quad 0xcdbce4f421619de6,0x4c59677ba0867b12,0x9dee8219ec4b9e1d,0x410cf63175b09169\n"
".quad 0xc62e417548b6cef7,0xb2b91719dee8259e,0x5610b8d6bd8ecfc1,0xeb5541b11731ec57\n"
".quad 0xe6b6f60867b10edc,0xeb62af1a9ed5b085,0x12cf61d837d6c7b1,0x3175d8948c0cef74\n"
".quad 0x26e7b0ed7ef51cf6,0x4cef7411cf625ee8,0x8239ec62e152748c,0x667f4867818d9dee\n"
".quad 0xa96942808636b5ec,0xedcfc9d41c637329,0xf3acbdb2c8247b10,0x3d719de3559ab37c\n"
".quad 0x279ec4b607c4fcf6,0x99c8197e199adee8,0xbf0ced6f7413cf60,0xdee8205ec1392b3c\n"
".quad 0x2f625ddce2611a1a,0xe1d5360d2d6f7410,0xf62be08d2cebd8c9,0x10dc8deae0edabb8\n"
".quad 0xa8ad7b72196357c1,0x24c6b6b778388112,0xef0f10793e097a01,0x790b7115c790d6ce\n"
".quad 0xb911497c06c23218,0xcf2e1ef0a8f27c14,0xf0797d47d727c1eb,0xbe25f01b08c82149\n"
".quad 0x0521adad13e0ecfe,0x3e65c1f077305d8d,0xad6df013cf8221b9,0xe46d6762f848290d\n"
".quad 0xef78104f8297c142,0x49486008ae290dac,0x8222bca436b3bde0,0xf290dacef7812521\n"
".quad 0x6b3bde049486108a,0x6b452186205fca43,0x8165cc186345486d,0x3523e0886e583d70\n"
".quad 0x13566f9eb557b63a,0xbb343b390dccee4b,0x721b99def0229f04,0x73c3453e0d766872\n"
".quad 0xa7c1aecd0e4df03b,0x8457d486e677bc09,0x721b99def026a432,0x0dcd6be089e36e72\n"
".quad 0x2e10d5b9832c69a9,0xe020f27c010dcc1c,0xbc6b1b54d21bdadb,0x12ed04ecdf07b0d7\n"
".quad 0xd9c86f677bc0867c,0xcef7810cf825da09,0x19f06bb4139390de,0x68276721bd9def02\n"
".quad 0x437b3bde04b3e097,0x6f6b4521a6205fda,0xe117eb9834c4db48,0xfa0827d112dcd30a\n"
".quad 0x2f1acad5b48716b6,0xa2cb4f3bb7d1ec60,0x3bb90e2cef7c11cf,0x2cef7c11cfa2cb4f\n"
".quad 0x11cfa2cb4f3bb90e,0xcb4f3bb90e2cef7c,0xb90e2cef7c11cfa2,0x438b5afa1d7b4f3b\n"
".quad 0x970913dcc1b626fa,0xd8de123e8896e722,0xf1aced59be7bd3de,0x86f08afe7d1ec8a6\n"
".quad 0x74ecdf43b08c8ef4,0xd0ec2320e17d12ed,0xf8a85f44bb5d3b37,0x5d3937d01ca26e1e\n"
".quad 0xfa1d8464b05f46bb,0x9ad93e849f6ba766,0x4b42ee0de1a0ea1c,0x0891f444b73d66b8\n"
".quad 0x686acdf3e146f6c7,0x15c753e8765a578d,0x8e6cef7c10750e11,0xc10753e885d15b7c\n"
".quad 0x0e1115c750e6cef7,0x5712873677be0825,0x1cd9def820943844,0x1cdad90e1112fc4a\n"
".quad 0x90a6f37b0708d04a,0x3904921c83515340,0xb16c926f9f1f77b6,0x250e4115c4a1d59d\n"
".quad 0x045792875677c009,0x4a1d59df00249439,0x677c009250e4115e,0x14fc35a64949a875\n"
".quad 0x4c9a9350eacef801,0x834528756b5f844f,0x54d70242a115ec1c,0xd2ded8e71248738d\n"
".quad 0x87767721b249be7c,0x3a68a7e12ef9259a,0xfc35df2c937e0ee4,0xbf00e8c970ef9648\n"
".quad 0x7c009a7e1aef9a49,0xfc3580a949a87767,0x529350eecef80134,0x4328776b5f844f07\n"
".quad 0x2e0242a65dec1ce3,0xded8ea1248750d4c,0x36f1adcd59be7d27,0xfc25df74b37e1ed3\n"
".quad 0x7c9350f0ceefba68,0xf0ceefbe68fc35df,0x012cfc35df849350,0x87508af650f0cef8\n"
".quad 0xc5b143c33be004b2,0xb650f0d6bf0c9fda,0x6ee90aae97b07509,0x6f6c76891fc45b4a\n"
".quad 0xd33bbf8924df3ebe,0x9923f8977f32cd43,0xa926fe03acb5c3bf,0xdae1dfd491fc6bbf\n"
".quad 0xfe35dfdc937f01d6,0x3f80ebad70f8455c,0xd846417943b44577,0x99d50ed112ffcfe1\n"
".quad 0x8ac3b7b07689be1e,0x8091fc45b72a107c,0xd9924df3ee8ef6c7,0xfc4bc049663e35be\n"
".quad 0x7f01d8fee1e02491,0xf01648fe35e02c93,0xf01a49bf80ecbf70,0x847c6b7c20817f1a\n"
".quad 0x8d6f84102a1e022b,0x7c6b543c044bf08f,0x856c6bf83c0683e8,0xeb47f116d48f31cc\n"
".quad 0xc781b24d0fad6f92,0xf03a59e9fc3b6c8b,0xdd170f03a49a7f0a,0xfe25e07c93d3f8f6\n"
".quad 0xf1edc22e1e07c934,0x4169fc4bc10927a7,0xe622b8b43eb3be10,0xebd0facef84105a1\n"
".quad 0xb43eb5afe2d7af93,0x3ec85dbefe0f31a0,0xb63d848a7f016dcd,0x1bc782b24d2b9ed7\n"
".quad 0xf89782b2cdfc7b77,0xfe03bc8dc3c15923,0xe0ac91fc6bc15926,0xe0ac937f01dec6e1\n"
".quad 0xd0fccef84124fe35,0xa493d1fc6ba49393,0x113e92ce4f43f33b,0xe0f61355a1f9ad7f\n"
".quad 0x0118d8c9d94e062f,0x37cfda0bdb1f2248,0x7003dc0d5e35ddab,0x1e0dc92004bc1b96\n"
".quad 0x5e0dc938001e0eae,0x0f0b570f06e49003,0x8e4801af06e49c00,0x9c9c000f0f570e95\n"
".quad 0xae1d2b9c90035d2b,0x44fa583938001e26,0x31f234368806b600,0xc1a991982858c1b9\n"
".quad 0xcfe4abdb1f82450f,0x03dc61de35e5ab37,0x10492004bc209670,0x104938001e38ee1e\n"
".quad 0x20770f082490035e,0x4801af08249c000f,0x9c000f24770e988e,0x1d319c90035d319c\n"
".quad 0xfa643938001e50ee,0x068ed102d6ea0034,0x5cdf050b2d57263f,0x9adc00227f3e5aef\n"
".quad 0xf72d978f09649a20,0xb248012f09659c00,0xb24e000798cb8784,0x65c3c2592400d784\n"
".quad 0x006bc259270003cd,0xc9e8826766a6e392,0xe1d379c90035d379,0x4fa703938001e7b2\n"
".quad 0x31fe26f882676004,0x11adcc112e1a13b9,0xc90846f7a2042481,0xcb3811ee856f1e15\n"
".quad 0xb70f0ae490225e15,0x11af0ae49c080f46,0x0407a55b87857248,0x4f472408d785724e\n"
".quad 0x9ece4e0407a75b87,0x56e1d3d9c868112e,0x89f4f87266811eea,0x90213473108d6c08\n"
".quad 0x8d6e63c370d5e5c9,0x0c4335bd10512408,0x6810eeafaf1e1849,0x30921a042bc30966\n"
".quad 0xefacd023dd6f5c3c,0x70f0c2486811e216,0x5e184933408f75fd,0xd8f5c3a86390d022\n"
".quad 0x811aea18e4cd023d,0xc080f67d70ea18e4,0x4335b02227d431c9,0x70db2dd99051a48c\n"
".quad 0x108124088d6e5cc3,0xef1e1ac90c43b5bd,0x225e1acb3811eed9,0x080f70f70f0d6490\n"
".quad 0x86b24811af0d649c,0x86b24e0407ba7b87,0xbc7b8751a72408d7,0x4811aea34e4e0407\n"
".quad 0x9c080f7cf70ea34e,0xc43b5b02227d469c,0x6a1c0ebb321026a8,0x310b124108e6e775\n"
".quad 0x42f1e1dc90c44b5b,0x0425e1dcb3821ef0,0xc100f86170f0ee49,0x787724821af0ee49\n"
".quad 0x787724e0807c50b8,0x7c70b8752872410d,0xe4821aea50e4e080,0xc9c100f92170ea50\n"
".quad 0x48969cd041a7d4a1,0xcb8b8428a0b96d7b,0x218686b6be08dfcf,0xb35f1ef2e6f1d891\n"
".quad 0xdc3b12245f12ec48,0xe25d89166be03e6c,0x7c07cf9b8762448b,0xec48917c6bb1224d\n"
".quad 0x762459af80fa3370,0x3e9cdc3bec922f89,0x400be0dbec926be0,0x8f66341845f756a3\n"
".quad 0xdac2bf8ea62cbaf6,0x348227f38846e597,0x0b567dda9172ded3,0xa60b4062fab5363c\n"
".quad 0x6498922f2f1b4b47,0x9953298f305c53a6,0x6c08ce7b84b282c7,0xf990a3210de9deac\n"
".quad 0x9552190bda6f1a06,0x5f18c893091efecf,0xcc57ee5123ddd979,0x342358f6b8c55e4d\n"
".quad 0xea702939a98ff9bf,0xdc58ea9f0dc9410b,0xb76462552b6e4130,0xb6b8d4cc5b69b516\n"
".quad 0x050e144c9b7a6998,0x75adfbead13076c5,0xc096faba5539a556,0xa1029af3ba321cd3\n"
".quad 0x0d397f825423bfb2,0x6f2e5ce79c665cd0,0xfb863b6fe0b7c697,0xdc3e16717a68854e\n"
".quad 0x2a905e09e1161bd7,0x19bb2b1bc08b05eb,0xff83f7f14cfdefe1,0xf41018b2fc7eb33d\n"
".quad 0x7439d32e6a557747,0xdf73279239df5522,0xd0c954de5a9e42d9,0xa8506e8bb881c792\n"
".quad 0xa9810913c75524e5,0x3b2c84d9dabc8098,0x2c14da682986f85b,0x85aabaa1fbe6a8b5\n"
".quad 0x50f63c9cf2b6a3c2,0x9e692caabab6355d,0x597d4aea349658e6,0xa4ea5bb6cb5c4d52\n"
".quad 0x92ca6dbfe7a4b2c5,0x91fe5da2f7b8cc1a,0xb7c79c9ba557f0b8,0x8352c51d943dbe2d\n"
".quad 0x39efe8d36dcf5308,0x99c203e450b7efdf,0xdf3fb5cc1959f3b9,0x3ee20cfb0b30341f\n"
".quad 0x60ed651fcf6ef58c,0x65081409ee3100d8,0x5096abe57a62b383,0x5f3ded51bce53713\n"
".quad 0xf61a8dda3c999482,0xed6f789a173d50f1,0x7a53f388d4c2a95e,0xffb997c409ceaa9d\n"
".quad 0x84dc760ed5d1fcfa,0x63b076a1075de622,0xcff0131607630867,0x6e65a763a785060e\n"
".quad 0x3b0d83b5547f3ecf,0x0e9d8ad53b0aa1ed,0x33714be6d3b0d749,0x5b963cdf2c1b473b\n"
".quad 0xa15d6ed42b893b21,0xe4e713b035a220f6,0x6b6551ecb6461460,0xa1fd114cec767470\n"
".quad 0xec7663f06b855103,0x0d70aa2b2e1182b4,0xe81d72429d9eca6e,0xd6c0eca29d8ec1da\n"
".quad 0x733b2d749169d8ac,0x8b9db3d1cecc8ead,0xb457e24ec856e6f5,0xb77ab85515a2bf5b\n"
".quad 0xb2e1185185939d62,0x29d9ec35e0d70aa2,0x60a706b85592e138,0x35c2ac9709c94ecf\n"
".quad 0xb0dcc64a767afcf8,0xa763af4ba350aeb2,0xa4834ec56e9d8534,0xd1d476032599d96b\n"
".quad 0x342a46b2d281ac4f,0xb24ace97add9d2f1,0x246a0149c4fc0d73,0xeb83e0d74aaa5d27\n"
".quad 0x06ba5552e938a9f9,0xaa9749c54fcf5b17,0x662a7e7ad07835d2,0xac83a3512eaab7f7\n"
".quad 0x7bdf70e01a2aa7e3,0x9d99f96ba48d4fc3,0x42c35df04c9f990e,0xd6dcbcb89a5e5c48\n"
".quad 0x62b0a1af155565e5,0x2d2f938aeaac159d,0xb4c04e6a8e3b0f48,0xd30939aa58ec3d22\n"
".quad 0x354f3d87c2c6c255,0xa63b0f48ed5804a3,0x8554c578500a78a6,0x132a6543aa996be4\n"
".quad 0x254c866e6e16ced0,0xeaa1ac8955b7267e,0xacbcd6559c54c0e1,0x14a770fd10cc84e1\n"
".quad 0x1d87a4d19949c359,0xc6cc5535903f3953,0x35986f39533d8292,0xb2e629aa63b0f49e\n"
".quad 0x3532d7c91245ea5b,0x61ac48265e56044f,0xb8e9f13414d35b18,0x11aa8da0896466bd\n"
".quad 0x44b3413962780b4e,0x12cd04e591bab6d0,0x4b341396472adb41,0xb0234e591dab6d04\n"
".quad 0xbfb8b647aadac964,0xab96be48123d52dc,0x3dc2bc0985e3104e,0x4ffc90d5701da926\n"
".quad 0xae06c4b51c9057b7,0x4734938ea280b4e2,0x1cd24e3922ab6d24,0x734938e48eadb491\n"
".quad 0x02f4e3924ab6d244,0xa58be496adacd64f,0xb96be481d25a96ef,0xae0ec0572ae565ea\n"
".quad 0xd2a924ab90ed4a08,0x93d46d244f24d5ed,0x279a49cf0f405a70,0x9e69273c9455b692\n"
".quad 0x79a49cf25356da48,0x41ca73c9555b6922,0x27698a5756d66b20,0x7343d024ae95d5c0\n"
".quad 0x695cc0ac8a0d5cb4,0xe256c886a7e8f038,0x1b5154296d7bf24f,0x4e1cfc097995c34a\n"
".quad 0x381ad8ec3d2582d4,0x606b63b0f49e0b51,0x6dd2c6d4551dcd44,0xa3f9d25d731d5b1d\n"
".quad 0x3fe28eead86c3d24,0xc35f2478496d2bf2,0x0d745711ff507756,0x42e218bf248e4142\n"
".quad 0x3485c41dc97d5bf2,0x6461861e5e654be8,0xdc97d3b487c41dcd,0xa76913883b9ac8c1\n"
".quad 0xacaa27359183b92f,0x3f460ab67ad1458d,0xc5156c761e914270,0x90109412fa57e48f\n"
".quad 0x5c48fd413923f5a2,0xcf4b523a21883339,0x104e4c2adf925710,0xc3072f32a6141b59\n"
".quad 0xc29db59104e6b230,0x4edac8926b2704e4,0x6d64493593927261,0x924e0828c93930a7\n"
".quad 0x49fc593930a76b55,0xd96be48b0930a57e,0xc106142b893fa92a,0x7e4a5c4ad910d4e7\n"
".quad 0x98d06d64493931ab,0x249ac9c30c2cbcca,0x4d64e49c98d3b6b2,0xb2714e4c69db5911\n"
".quad 0x18a72634edac88a6,0x2634ed6ab229c10d,0xa82634afc95f8aa7,0xc6aab6509a4e9970\n"
".quad 0xd485b482e095c4af,0x33ab7e4b5c4af912,0xc4ca99d06d844539,0x6d844d36138a3e00\n"
".quad 0xc2269b09cd3933a7,0x134d84e69c99d3b6,0x822a334e4ce9db61,0x174e4ce9dad964d3\n"
".quad 0x46abe5228178d2ff,0x2b897f8dd57cb5f2,0x57c896a61917056e,0x2ae9c9a55b0a62e2\n"
".quad 0xed58313aab71436d,0x7c761e90466d2735,0x29d9201219b49c35,0xdb4aa67119cb8e4d\n"
".quad 0xe339972be7aa7c58,0x8b8a6af8ec3d238c,0xf96be48526952c29,0x11051b2d898ba86a\n"
".quad 0xfb4cbc4af912d4ed,0x8d9436d2ad9cf69b,0x66d272cce50313aa,0x9b49cb57c761e925\n"
".quad 0x6d272d5f1d87a4d5,0xabe7a9d658db4ab6,0xbe3b0f49eb0494e5,0x2249ad4b0a65e2da\n"
".quad 0x0be265ea3abe5af9,0x8e218c3ce448e132,0x1b7111ce766dfda6,0xe271c5b0199c26f5\n"
".quad 0x89c726f56db888e6,0x271c9bd5b6e2239b,0x9c726f56db888e6e,0x5c9bd5b5c2c8e09a\n"
".quad 0x7c9024dea5853471,0x8ea5f134753d632d,0xa6be25beaca4ae70,0x351b7913ce718dfd\n"
".quad 0xe6f273d510199c27,0xc2752e27356dbc89,0x58cf5154b189d491,0x14b189e491c2792e\n"
".quad 0xf491c27d2e58cf51,0xd972d8c750d4a609,0xb5f240e9cd4b0cad,0xc21117c4d7d40d8c\n"
".quad 0x69bb8964ddd50daf,0xd546de440b9b297f,0x91bc9c0924066709,0x2e58cf5048b18a2c\n"
".quad 0x5008b18a3491c28d,0x8a3c91c28f2e58cf,0xc2912e58cf4fc8b1,0xe28fe4ea9d8a44d3\n"
".quad 0x4eb740e9d52b0a6e,0xcbe26ee347f26eeb,0xb92ce45b52c100f3,0xc0aa3f99f17f7d09\n"
".quad 0x22fc0ed4ca79e50d,0xace1b150937ce046,0x29d8a8cd3c2a32e7,0x62a534f0a94b9e4f\n"
".quad 0x9c93c2a72e793ca7,0x938f40bc9e53bd0a,0x2d7c91e1d3ca563a,0x58df0be271e34567\n"
".quad 0xece1156722da5375,0xf850dc4aa2f27d56,0x79c48c30c3cd4ea6,0xcb39e9b616315b92\n"
".quad 0xae16315c92785725,0x5d92785765cb39e9,0x57a5cb39e9a61631,0x38e99e14c15e9278\n"
".quad 0x1c3a7d4aece1552b,0x49a74ea4ace5af92,0x9c8b6e52b37c9949,0x224bc9fd5bb384d5\n"
".quad 0x1860e6a654fe8371,0x9671da61cd24e24e,0x092c62cd24f0b34b,0xcf24f0b3cb9673d3\n"
".quad 0xb44b9673d2f92c62,0x71d2e92982d124f0,0x5874fe95d9c2e956,0x934efd4559cb5f24\n"
".quad 0x59c8b694dcd62d62,0x1222bca055bb3843,0xe186166a65502837,0x7a58c58c5be48e24\n"
".quad 0x8c5be49e16f972ce,0x9e16f972ce7a56c5,0x72ce7a54c58c5be4,0x52c5305be49e16f9\n"
".quad 0xa052bb38536ace3a,0xd71bab396be4830e,0xab939a058a0ca4d3,0x5e50aaddac25acf6\n"
".quad 0x403732a8541b9113,0x658c5d648e44e690,0x649e175972d67a4e,0x5972d67a4c658c5d\n"
".quad 0x7a4a658c5d649e17,0x305d649e175972d6,0xbb585b1ad63a4865,0xa1ad65af9234a154\n"
".quad 0xa50b0b118159a7de,0x7f6a501d5b280ea9,0x230286e6553793a1,0x48e64e1becb06e75\n"
".quad 0x972d67a44058c5ea,0xa42058c5ea49e17a,0xc5ea49e17a972d67,0xe17a972d67a40058\n"
".quad 0xad63a3e05305ea49,0x214a1d4b12940745,0x959a80ea5ad65af9,0xb283ead8dda0b0ee\n"
".quad 0x732ab944af76b09e,0x1cd5d0373a8ee943,0xd1cd2c62ff247327,0x62ff24f0bfcb96b3\n"
".quad 0xf0bfcb96b3d1bd2c,0xff2e28956cc2ff24,0xc74674a60bfc93c2,0x44944a976b0be75a\n"
".quad 0x566a0f8df5acb5f2,0x6ca1babe60c2c314,0xdd089e51abddbc20,0x139e3380e4e146a8\n"
".quad 0x79e8bd163185923a,0x16318592786165cb,0x92786165cb79e8b5,0x65cb79e8ad163185\n"
".quad 0xe8a514c185927861,0xa354b129fb8e5b78,0x50dc686de5af9204,0x27aa1ba60e1372b3\n"
".quad 0x9c8a457bb7841dca,0x5d01c9d44dca193f,0x78efc8e681752703,0x96318a927862a5cb\n"
".quad 0x927862a5cb79e88b,0xa5cb79e88396318a,0x687b94c18a920462,0x48a976f0a38e1b79\n"
".quad 0x9ea0e1b786be481d,0x5b96f19c872169a8,0x3a55fdc2a1c96f23,0xc9d4390a19461c81\n"
".quad 0x63e48175230c301d,0x1f2e06de3a1a858c,0xc74310b18c7c9023,0x318f920463e5c0db\n"
".quad 0x8c7cb81b78e85a16,0x6f1d0a429831f240,0xfd7852685dbc2885,0x671a2b7947663a65\n"
".quad 0xea899a038244b4d4,0x26a9bfb51fc4728f,0x9cbc04896329a390,0xd258b2398d8dff33\n"
".quad 0x592046565cb98ec3,0x565cb99e83896319,0x9e83096319592046,0x4c19592046565cb9\n"
".quad 0xe4a3f8b2b98e8289,0xbdf2668f174a9742,0x3e2c5fc2380f8bec,0x204bcb7f69bf88e0\n"
".quad 0xce343281f1632059,0x05c58c6bf11ce398,0x1afc408d7e71ce7a,0x235f9c739e80f163\n"
".quad 0x1ce7a01c58c6bf10,0xfe1cc1afc408d7e7,0xfdc386e72aa738ef,0xada583ae9d6039e3\n"
".quad 0x4b47c24158000ada,0x31b633e6d14f68f6,0xff35ed05af1ed4e4,0xeef1b11e2e5f22fd\n"
".quad 0xd83836ba771f1e35,0xf24310939431c863,0xd3c609cfc85d0ca7,0x737e478b7c5e6feb\n"
".quad 0x64e061dd94ad519f,0x51b3af216c169702,0xc7ce426bd92fcb3e,0x806c5c817b0096a5\n"
".quad 0xa941b11212d804d5,0x454a2d4c5396c027,0xb5bf94de5491d081,0x18e5352d973c4088\n"
".quad 0x54a286db7fcf7e9c,0x5cc769a435094014,0xc8b3d97cf51f2d3c,0x2737bd747b0bccc4\n"
".quad 0x974922e2752143d2,0x021dd5a49416872a,0x1befece9eba000b7,0xcb9f8e31cfe76286\n"
".quad 0x4c7a60ec8cd6c48b,0xcb84e8689d17ab6c,0xa2fd6d8a3ce80990,0x6bba3c1b709d8f13\n"
".quad 0x94017a4f82b4db62,0xf524b1305e9817c4,0x2e4b85e858bd1762,0x3acad36d8974e809\n"
".quad 0xc04bc7396d2245e9,0x8912b882cbd490f4,0x2f52329305b5386b,0x1198972ea44aea0b\n"
".quad 0x48517bcedb915bd0,0xb522b5301163ce5d,0x8af4b9752157505d,0xa91aba82dcc10360\n"
".quad 0x7505dc8a3ae4396b,0xd02383f533975235,0x99972ea46aea0bd5,0x20d75059aec11c10\n"
".quad 0x9aec13c11303b975,0x83913397520d7505,0xaea45aea0bb5d827,0xb5c3b8f6944cc5af\n"
".quad 0x672c7dbb6bfa552b,0x31764417c5bfe5ee,0x9713894ed45b1f4b,0xebeb458ee366255e\n"
".quad 0x19ba6225b82a9b9c,0xcead6eb6b7930ca9,0x487a0aee8af4e52e,0x5d88c415a013047c\n"
".quad 0xd56037c97ec1a56b,0x7c259fd570f3ea92,0x87c56465ff49a971,0x948bccb8b7bbfbbb\n"
".quad 0xfbbfdf421ffb719d,0xfd7c3e9f0fd7ebe1,0xfb85efe3faf0f770,0xfcffa7eca9fdd3ee\n"
".quad 0xe3fbbf8fe1fddff7,0xd58dbdde9b7aff5f,0x18451de5c48ec62b,0x54323a07dbb19216\n"
".quad 0xf74b7fde6f0fc906,0x18bce1d1473fe55b,0x01d3071b8575ed01,0x502fcc07ae670d4a\n"
".quad 0xc99ed5941d3069b8,0x18ecaadb1a07d02f,0x87c1cc1c34a0175c,0xb02ed3b0ba5547f3\n"
".quad 0xaa6a245b8d11d744,0x3a9c0929142a94b8,0xcf55808f0bd0641b,0x0ae35149d2560245\n"
".quad 0x451a735bd21f0537,0xca701cc56d89ee2e,0xc4cef0e108e2e6e4,0x5fed03774c61aad4\n"
".quad 0x2e78026480e75d52,0x10d2af77b792e152,0x69d5b4d2493204d0,0x9df76af8e0ace402\n"
".quad 0x2b5b2f4a2bc85fb4,0xd501c246c7fb848c,0x481ad540ec20914a,0x7da5b24ffefa9f48\n"
".quad 0xeff7fcb5f0dfe104,0xfaff767f2f53e5e4,0x01ffecf679941621,0x00000000109d07ec\n"
".text");

extern "C" {

extern const unsigned long long fatbinData[25064];

}


extern "C" {

static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 4 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c" 2 3
static void __device_stub__Z27MonteCarloOneBlockPerOptionP17curandStateXORWOWi(curandState *, int);
static void __device_stub__Z14rngSetupStatesP17curandStateXORWOWyy(curandState *, unsigned long long, unsigned long long);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_52_tmpxft_00007afa_00000000_6_MonteCarlo_kernel_cpp1_ii_69b259ed(void) __attribute__((__constructor__));
static void __device_stub__Z27MonteCarloOneBlockPerOptionP17curandStateXORWOWi(curandState *__par0, int __par1){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(curandState *, int))MonteCarloOneBlockPerOption)); (void)cudaLaunch(((char *)((void ( *)(curandState *, int))MonteCarloOneBlockPerOption))); };}
# 62 "MonteCarlo_kernel.cu"
static void MonteCarloOneBlockPerOption( curandState *__cuda_0,int __cuda_1)
# 65 "MonteCarlo_kernel.cu"
{__device_stub__Z27MonteCarloOneBlockPerOptionP17curandStateXORWOWi( __cuda_0,__cuda_1);
# 113 "MonteCarlo_kernel.cu"
}
# 1 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c"
static void __device_stub__Z14rngSetupStatesP17curandStateXORWOWyy( curandState *__par0, unsigned long long __par1, unsigned long long __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(curandState *, unsigned long long, unsigned long long))rngSetupStates)); (void)cudaLaunch(((char *)((void ( *)(curandState *, unsigned long long, unsigned long long))rngSetupStates))); }; }
# 115 "MonteCarlo_kernel.cu"
static void rngSetupStates( curandState *__cuda_0,unsigned long long __cuda_1,unsigned long long __cuda_2)
# 119 "MonteCarlo_kernel.cu"
{__device_stub__Z14rngSetupStatesP17curandStateXORWOWyy( __cuda_0,__cuda_1,__cuda_2);
# 126 "MonteCarlo_kernel.cu"
}
# 1 "/tmp/tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T225) { { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T225; }; __cudaRegisterFunction(__T225, (const char*)((void ( *)(curandState *, unsigned long long, unsigned long long))rngSetupStates), (char*)"_Z14rngSetupStatesP17curandStateXORWOWyy", "_Z14rngSetupStatesP17curandStateXORWOWyy", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T225, (const char*)((void ( *)(curandState *, int))MonteCarloOneBlockPerOption), (char*)"_Z27MonteCarloOneBlockPerOptionP17curandStateXORWOWi", "_Z27MonteCarloOneBlockPerOptionP17curandStateXORWOWi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterVar(__T225, (char*)&precalc_xorwow_matrix, (char*)"precalc_xorwow_matrix", "precalc_xorwow_matrix", 0, 25600, 0, 0); __cudaRegisterVar(__T225, (char*)&precalc_xorwow_offset_matrix, (char*)"precalc_xorwow_offset_matrix", "precalc_xorwow_offset_matrix", 0, 25600, 0, 0); __cudaRegisterVar(__T225, (char*)&mrg32k3aM1, (char*)"mrg32k3aM1", "mrg32k3aM1", 0, 4608, 0, 0); __cudaRegisterVar(__T225, (char*)&mrg32k3aM2, (char*)"mrg32k3aM2", "mrg32k3aM2", 0, 4608, 0, 0); __cudaRegisterVar(__T225, (char*)&mrg32k3aM1SubSeq, (char*)"mrg32k3aM1SubSeq", "mrg32k3aM1SubSeq", 0, 4032, 0, 0); __cudaRegisterVar(__T225, (char*)&mrg32k3aM2SubSeq, (char*)"mrg32k3aM2SubSeq", "mrg32k3aM2SubSeq", 0, 4032, 0, 0); __cudaRegisterVar(__T225, (char*)&mrg32k3aM1Seq, (char*)"mrg32k3aM1Seq", "mrg32k3aM1Seq", 0, 4608, 0, 0); __cudaRegisterVar(__T225, (char*)&mrg32k3aM2Seq, (char*)"mrg32k3aM2Seq", "mrg32k3aM2Seq", 0, 4608, 0, 0); __cudaRegisterVar(__T225, (char*)&__cr_lgamma_table, (char*)"__cr_lgamma_table", "__cr_lgamma_table", 0, 72, 1, 0); __cudaRegisterVar(__T225, (char*)&d_OptionData, (char*)"d_OptionData", "d_OptionData", 0, 8192, 1, 0); __cudaRegisterVar(__T225, (char*)&d_CallValue, (char*)"d_CallValue", "d_CallValue", 0, 4096, 0, 0); }
static void __sti____cudaRegisterAll_52_tmpxft_00007afa_00000000_6_MonteCarlo_kernel_cpp1_ii_69b259ed(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil); }
# 2 "tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c" 2
# 1 "tmpxft_00007afa_00000000-3_MonteCarlo_kernel.cudafe1.stub.c"
